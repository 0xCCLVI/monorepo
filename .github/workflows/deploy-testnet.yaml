name: Deploy AWS Resources to Testnet

on:
  push:
    paths:
      - 'ops/**'
      - '.github/workflows/deploy-testnet.yaml'
    branches:
      - amarok
  pull_request:
    paths:
      - 'ops/**'
      - '.github/workflows/deploy-testnet.yaml'
    branches:
      - amarok


jobs:
  terraform-infra:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: eu-central-1

      - name: Terraform Init
        id: init
        working-directory: ./ops/infra
        run: terraform init

      - name: Terraform Deploy Infra
        id: apply
        working-directory: ./ops/infra
        run: |
          terraform apply -auto-approve

  terraform-services:
    env:
      TF_VAR_full_image_name_router: "ghcr.io/connext/router:sha-011c975"
      TF_VAR_full_image_name_sequencer: "ghcr.io/connext/sequencer:sha-011c975"
      TF_VAR_mnemonic: ${{ secrets.MNEMONIC_TESTNET }}
      TF_VAR_admin_token_router: ${{ secrets.ADMIN_TOKEN_ROUTER_TESTNET }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [terraform-infra]

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: eu-central-1

      - name: Terraform fmt
        id: fmt
        working-directory: ./ops/testnet
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        working-directory: ./ops/testnet
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: ./ops/testnet
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ./ops/testnet
        run: |
          terraform plan -no-color
        continue-on-error: true

      - name: Terraform Docker Image onto AWS
        id: apply
        working-directory: ./ops/testnet
        run: |
          terraform apply -auto-approve
