{
  "address": "0xafe9c1e6bC7E7459712C5a85343a2eb78C001E71",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetA",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetB",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seedA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seedB",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "assetOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seedA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seedB",
          "type": "uint256"
        }
      ],
      "name": "setupPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "assetIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetOut",
          "type": "address"
        }
      ],
      "name": "swapExact",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc56ec1faf966ff88b6d6daf30f2e2d25453395ef3b346fdef2c34370056b5d5e",
  "receipt": {
    "to": null,
    "from": "0x155B15a7e9Ff0e34cEaF2439589D5C661ADC9493",
    "contractAddress": "0xafe9c1e6bC7E7459712C5a85343a2eb78C001E71",
    "transactionIndex": 16,
    "gasUsed": "571067",
    "logsBloom": "0x
    "blockHash": "0xe244e55ce401d0e6585f0f3e89a219c3f770cbcd9c598fed82df24ad0f7a393f",
    "transactionHash": "0xc56ec1faf966ff88b6d6daf30f2e2d25453395ef3b346fdef2c34370056b5d5e",
    "logs": [],
    "blockNumber": 10225298,
    "cumulativeGasUsed": "1889223",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "caf1f8d2ea867a65dab9e8d70d6fd700",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetA\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seedA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seedB\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"assetOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seedA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seedB\",\"type\":\"uint256\"}],\"name\":\"setupPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetOut\",\"type\":\"address\"}],\"name\":\"swapExact\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestStableSwap.sol\":\"TestStableSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/interfaces/IStableSwap.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.11;\\n\\n// TODO: need a correct interface here\\ninterface IStableSwap {\\n  function swapExact(uint256 amountIn, address assetIn, address assetOut) external payable returns (uint256);\\n}\\n\",\"keccak256\":\"0xb77abeb9c9718c3614be80345700526d2ba59382e11bd7ceaff0bf081c49e13e\",\"license\":\"UNLICENSED\"},\"contracts/test/TestStableSwap.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.11;\\n\\nimport \\\"../interfaces/IStableSwap.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract TestStableSwap is IStableSwap {\\n\\n  constructor() {}\\n\\n  event PoolCreated(\\n    address assetA,\\n    address assetB,\\n    uint256 seedA,\\n    uint256 seedB\\n  );\\n\\n  event Swapped(\\n    address assetIn,\\n    address assetOut,\\n    uint256 amountIn,\\n    uint256 amountOut\\n  );\\n\\n  // Hold mapping of swaps\\n  mapping(address => address) poolAssets;\\n\\n  function swapExact(uint256 amountIn, address assetIn, address assetOut) external payable returns (uint256) {\\n    // make sure pool is setup\\n    require(poolAssets[assetIn] == assetOut, \\\"!setup\\\");\\n\\n    // make sure theres enough balance\\n    bool assetOutIsNative = assetOut == address(0);\\n    if (assetOutIsNative) {\\n      require(address(this).balance >= amountIn, \\\"!bal\\\");\\n    } else {\\n      require(IERC20(assetOut).balanceOf(address(this)) >= amountIn, \\\"!bal\\\");\\n    }\\n\\n    // transfer in (simple 1:1)\\n    if (assetIn == address(0)) {\\n      require(msg.value == amountIn, \\\"!val\\\");\\n    } else {\\n      SafeERC20.safeTransferFrom(IERC20(assetIn), msg.sender, address(this), amountIn);\\n    }\\n\\n    // transfer out (simple 1:1)\\n    if (assetOutIsNative) {\\n      Address.sendValue(payable(msg.sender), amountIn);\\n    } else {\\n      SafeERC20.safeTransfer(IERC20(assetOut), msg.sender, amountIn);\\n    }\\n\\n    // emit\\n    emit Swapped(\\n      assetIn,\\n      assetOut,\\n      amountIn,\\n      amountIn\\n    );\\n\\n    return amountIn;\\n  }\\n\\n  function setupPool(address assetA, address assetB, uint256 seedA, uint256 seedB) external payable {\\n    // Save pools\\n    poolAssets[assetA] = assetB;\\n\\n    poolAssets[assetB] = assetA;\\n\\n    // Transfer funds to contract\\n    if (assetA == address(0)) {\\n      require(msg.value == seedA, \\\"!seedA\\\");\\n    } else {\\n      SafeERC20.safeTransferFrom(IERC20(assetA), msg.sender, address(this), seedA);\\n    }\\n\\n    if (assetB == address(0)) {\\n      require(msg.value == seedB, \\\"!seedB\\\");\\n    } else {\\n      SafeERC20.safeTransferFrom(IERC20(assetB), msg.sender, address(this), seedB);\\n    }\\n\\n    emit PoolCreated(\\n      assetA,\\n      assetB,\\n      seedA,\\n      seedB\\n    );\\n  }\\n\\n  receive() external payable {}\\n\\n  fallback() external payable {}\\n}\",\"keccak256\":\"0x9d1b89e948bf9d9bb2cdc31473b8e365b913988918ebca0f1c41c1017a24117a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061095e806100206000396000f3fe60806040526004361061002a5760003560e01c8063c05b327514610033578063d5914c451461004657005b3661003157005b005b6100316100413660046107f4565b61006b565b610059610054366004610836565b6101aa565b60405190815260200160405180910390f35b6001600160a01b0380851660008181526020819052604080822080549488166001600160a01b0319958616811790915582529020805490921681179091556100ef578134146100ea5760405162461bcd60e51b815260206004820152600660248201526521736565644160d01b60448201526064015b60405180910390fd5b6100fb565b6100fb843330856103c6565b6001600160a01b038316610146578034146101415760405162461bcd60e51b815260206004820152600660248201526510b9b2b2b22160d11b60448201526064016100e1565b610152565b610152833330846103c6565b604080516001600160a01b03808716825285166020820152908101839052606081018290527fd569a23a8cff45c641c5d5e4fb55b5e15e918f9acf0fc42b4909adc31f5f806c9060800160405180910390a150505050565b6001600160a01b0382811660009081526020819052604081205490918381169116146102015760405162461bcd60e51b815260206004820152600660248201526502173657475760d41b60448201526064016100e1565b6001600160a01b038216158015610250578447101561024b5760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6102f1565b6040516370a0823160e01b815230600482015285906001600160a01b038516906370a0823190602401602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610872565b10156102f15760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6001600160a01b03841661033c578434146103375760405162461bcd60e51b81526004016100e190602080825260049082015263085d985b60e21b604082015260600190565b610348565b610348843330886103c6565b801561035d576103583386610437565b610368565b610368833387610555565b604080516001600160a01b03808716825285166020820152908101869052606081018690527fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb9060800160405180910390a1849150505b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610585565b50505050565b804710156104875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100e1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b50509050806105505760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100e1565b505050565b6040516001600160a01b03831660248201526044810182905261055090849063a9059cbb60e01b906064016103fa565b60006105da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106579092919063ffffffff16565b80519091501561055057808060200190518101906105f8919061088b565b6105505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100e1565b6060610666848460008561066e565b949350505050565b6060824710156106cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100e1565b6001600160a01b0385163b6107265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100e1565b600080866001600160a01b0316858760405161074291906108d9565b60006040518083038185875af1925050503d806000811461077f576040519150601f19603f3d011682016040523d82523d6000602084013e610784565b606091505b509150915061079482828661079f565b979650505050505050565b606083156107ae5750816103bf565b8251156107be5782518084602001fd5b8160405162461bcd60e51b81526004016100e191906108f5565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806000806080858703121561080a57600080fd5b610813856107d8565b9350610821602086016107d8565b93969395505050506040820135916060013590565b60008060006060848603121561084b57600080fd5b8335925061085b602085016107d8565b9150610869604085016107d8565b90509250925092565b60006020828403121561088457600080fd5b5051919050565b60006020828403121561089d57600080fd5b815180151581146103bf57600080fd5b60005b838110156108c85781810151838201526020016108b0565b838111156104315750506000910152565b600082516108eb8184602087016108ad565b9190910192915050565b60208152600082518060208401526109148160408501602087016108ad565b601f01601f1916919091016040019291505056fea26469706673582212209381edb5260df5480e9c37ea900968db9a53d45f6aece144dca734248717e86f64736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061002a5760003560e01c8063c05b327514610033578063d5914c451461004657005b3661003157005b005b6100316100413660046107f4565b61006b565b610059610054366004610836565b6101aa565b60405190815260200160405180910390f35b6001600160a01b0380851660008181526020819052604080822080549488166001600160a01b0319958616811790915582529020805490921681179091556100ef578134146100ea5760405162461bcd60e51b815260206004820152600660248201526521736565644160d01b60448201526064015b60405180910390fd5b6100fb565b6100fb843330856103c6565b6001600160a01b038316610146578034146101415760405162461bcd60e51b815260206004820152600660248201526510b9b2b2b22160d11b60448201526064016100e1565b610152565b610152833330846103c6565b604080516001600160a01b03808716825285166020820152908101839052606081018290527fd569a23a8cff45c641c5d5e4fb55b5e15e918f9acf0fc42b4909adc31f5f806c9060800160405180910390a150505050565b6001600160a01b0382811660009081526020819052604081205490918381169116146102015760405162461bcd60e51b815260206004820152600660248201526502173657475760d41b60448201526064016100e1565b6001600160a01b038216158015610250578447101561024b5760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6102f1565b6040516370a0823160e01b815230600482015285906001600160a01b038516906370a0823190602401602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610872565b10156102f15760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6001600160a01b03841661033c578434146103375760405162461bcd60e51b81526004016100e190602080825260049082015263085d985b60e21b604082015260600190565b610348565b610348843330886103c6565b801561035d576103583386610437565b610368565b610368833387610555565b604080516001600160a01b03808716825285166020820152908101869052606081018690527fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb9060800160405180910390a1849150505b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610585565b50505050565b804710156104875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100e1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b50509050806105505760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100e1565b505050565b6040516001600160a01b03831660248201526044810182905261055090849063a9059cbb60e01b906064016103fa565b60006105da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106579092919063ffffffff16565b80519091501561055057808060200190518101906105f8919061088b565b6105505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100e1565b6060610666848460008561066e565b949350505050565b6060824710156106cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100e1565b6001600160a01b0385163b6107265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100e1565b600080866001600160a01b0316858760405161074291906108d9565b60006040518083038185875af1925050503d806000811461077f576040519150601f19603f3d011682016040523d82523d6000602084013e610784565b606091505b509150915061079482828661079f565b979650505050505050565b606083156107ae5750816103bf565b8251156107be5782518084602001fd5b8160405162461bcd60e51b81526004016100e191906108f5565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806000806080858703121561080a57600080fd5b610813856107d8565b9350610821602086016107d8565b93969395505050506040820135916060013590565b60008060006060848603121561084b57600080fd5b8335925061085b602085016107d8565b9150610869604085016107d8565b90509250925092565b60006020828403121561088457600080fd5b5051919050565b60006020828403121561089d57600080fd5b815180151581146103bf57600080fd5b60005b838110156108c85781810151838201526020016108b0565b838111156104315750506000910152565b600082516108eb8184602087016108ad565b9190910192915050565b60208152600082518060208401526109148160408501602087016108ad565b601f01601f1916919091016040019291505056fea26469706673582212209381edb5260df5480e9c37ea900968db9a53d45f6aece144dca734248717e86f64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 17897,
        "contract": "contracts/test/TestStableSwap.sol:TestStableSwap",
        "label": "poolAssets",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}