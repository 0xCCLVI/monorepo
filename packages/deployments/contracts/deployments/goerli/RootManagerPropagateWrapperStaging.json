{
  "address": "0xd186F83a918A5602f044c407730E6957D60F1273",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rootManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__onlyOwner_notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__onlyProposed_notProposedOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__proposeNewOwner_invalidProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__proposeNewOwner_noOwnershipChange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__renounceOwnership_delayNotElapsed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__renounceOwnership_invalidProposal",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposedOwnable__renounceOwnership_noProposal",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "FundsDeducted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "FundsReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposedOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "rootManager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldRootManager",
          "type": "address"
        }
      ],
      "name": "RootManagerChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptProposedOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_connectors",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_fees",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_encodedData",
          "type": "bytes[]"
        }
      ],
      "name": "propagate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newlyProposed",
          "type": "address"
        }
      ],
      "name": "proposeNewOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounced",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rootManager",
      "outputs": [
        {
          "internalType": "contract IRootManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rootManager",
          "type": "address"
        }
      ],
      "name": "setRootManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbd5b4e2f66fde96f34f8b7d49bb5a79b3f83da46d22a337ab5ad73ef5765b18e",
  "receipt": {
    "to": null,
    "from": "0x54BAA998771639628ffC0206c3b916c466b79c89",
    "contractAddress": "0xd186F83a918A5602f044c407730E6957D60F1273",
    "transactionIndex": 87,
    "gasUsed": "726935",
    "logsBloom": "0x00000000000000000000000000000000000010000000000000800000000040000000000000000000000000000000000004000000000000200000000000000000000000000000000000000000000000000401000000000000000000000000000000000000020000000000000000000800000000000000000000000000000000400000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000010000000000000000000000000000000000000000000000000000080000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x04b173233df3c463d5d079b2982c0e6e24544fb8f9f6a3fb0aee9d26f57bd883",
    "transactionHash": "0xbd5b4e2f66fde96f34f8b7d49bb5a79b3f83da46d22a337ab5ad73ef5765b18e",
    "logs": [
      {
        "transactionIndex": 87,
        "blockNumber": 7960096,
        "transactionHash": "0xbd5b4e2f66fde96f34f8b7d49bb5a79b3f83da46d22a337ab5ad73ef5765b18e",
        "address": "0xd186F83a918A5602f044c407730E6957D60F1273",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000054baa998771639628ffc0206c3b916c466b79c89"
        ],
        "data": "0x",
        "logIndex": 275,
        "blockHash": "0x04b173233df3c463d5d079b2982c0e6e24544fb8f9f6a3fb0aee9d26f57bd883"
      },
      {
        "transactionIndex": 87,
        "blockNumber": 7960096,
        "transactionHash": "0xbd5b4e2f66fde96f34f8b7d49bb5a79b3f83da46d22a337ab5ad73ef5765b18e",
        "address": "0xd186F83a918A5602f044c407730E6957D60F1273",
        "topics": [
          "0x3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487"
        ],
        "data": "0x0000000000000000000000003d18bdcf71325b5eeca87f41e631e73755bd25f80000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 276,
        "blockHash": "0x04b173233df3c463d5d079b2982c0e6e24544fb8f9f6a3fb0aee9d26f57bd883"
      }
    ],
    "blockNumber": 7960096,
    "cumulativeGasUsed": "16924426",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3d18bdcF71325b5EeCa87F41e631E73755Bd25F8"
  ],
  "numDeployments": 1,
  "solcInputHash": "1f467203f3254f7bc6438ece86adb35a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ProposedOwnable__acceptProposedOwner_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"FundsDeducted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"FundsReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRootManager\",\"type\":\"address\"}],\"name\":\"RootManagerChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_connectors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fees\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_encodedData\",\"type\":\"bytes[]\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rootManager\",\"outputs\":[{\"internalType\":\"contract IRootManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rootManager\",\"type\":\"address\"}],\"name\":\"setRootManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_rootManager\":\"The address of the RootManager on this domain.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"constructor\":{\"notice\":\"Creates a new RootManagerPropagateWrapper instance.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/RootManagerPropagateWrapper.sol\":\"RootManagerPropagateWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/RootManagerPropagateWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity 0.8.17;\\n\\nimport {ProposedOwnable} from \\\"../shared/ProposedOwnable.sol\\\";\\n\\nimport {IRootManager} from \\\"./interfaces/IRootManager.sol\\\";\\n\\ncontract RootManagerPropagateWrapper is ProposedOwnable {\\n  // ============ Events ============\\n\\n  event FundsReceived(uint256 amount, uint256 balance);\\n\\n  event FundsDeducted(uint256 amount, uint256 balance);\\n\\n  event RootManagerChanged(address rootManager, address oldRootManager);\\n\\n  // ============ Properties ============\\n\\n  IRootManager public rootManager;\\n\\n  // ============ Constructor ============\\n\\n  /**\\n   * @notice Creates a new RootManagerPropagateWrapper instance.\\n   * @param _rootManager The address of the RootManager on this domain.\\n   */\\n  constructor(address _rootManager) ProposedOwnable() {\\n    _setOwner(msg.sender);\\n\\n    require(_rootManager != address(0), \\\"!zero rootManager\\\");\\n    rootManager = IRootManager(_rootManager);\\n    emit RootManagerChanged(_rootManager, address(0));\\n  }\\n\\n  // ============ Admin Functions ============\\n\\n  function setRootManager(address _rootManager) external onlyOwner {\\n    require(_rootManager != address(0), \\\"!zero rootManager\\\");\\n    address oldRootManager = address(rootManager);\\n    rootManager = IRootManager(_rootManager);\\n    emit RootManagerChanged(_rootManager, oldRootManager);\\n  }\\n\\n  function withdraw() external onlyOwner {\\n    uint256 balance = address(this).balance;\\n    payable(msg.sender).transfer(balance);\\n    emit FundsDeducted(balance, address(this).balance);\\n  }\\n\\n  // ============ External Functions ============\\n\\n  function propagate(\\n    address[] calldata _connectors,\\n    uint256[] calldata _fees,\\n    bytes[] memory _encodedData\\n  ) external {\\n    uint256 sum = 0;\\n    uint256 length = _connectors.length;\\n    for (uint32 i; i < length; ) {\\n      sum += _fees[i];\\n      unchecked {\\n        ++i;\\n      }\\n    }\\n\\n    rootManager.propagate{value: sum}(_connectors, _fees, _encodedData);\\n    emit FundsDeducted(sum, address(this).balance);\\n  }\\n\\n  receive() external payable {\\n    emit FundsReceived(msg.value, address(this).balance);\\n  }\\n}\\n\",\"keccak256\":\"0x6093a1813898f82733c17d18e45b156dc4d7603a3b17124b515ccf62dfb2d4e2\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/messaging/interfaces/IRootManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT OR Apache-2.0\\npragma solidity 0.8.17;\\n\\ninterface IRootManager {\\n  /**\\n   * @notice This is called by relayers to generate + send the mixed root from mainnet via AMB to\\n   * spoke domains.\\n   * @dev This must read information for the root from the registered AMBs.\\n   */\\n  function propagate(\\n    address[] calldata _connectors,\\n    uint256[] calldata _fees,\\n    bytes[] memory _encodedData\\n  ) external payable;\\n\\n  /**\\n   * @notice Called by the connectors for various domains on the hub to aggregate their latest\\n   * inbound root.\\n   * @dev This must read information for the root from the registered AMBs\\n   */\\n  function aggregate(uint32 _domain, bytes32 _outbound) external;\\n}\\n\",\"keccak256\":\"0xa895dfaa4baad37a636e7e7e7da72a0a4badfd2d3d8256f975e5101cd5a98236\",\"license\":\"MIT OR Apache-2.0\"},\"contracts/shared/ProposedOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.17;\\n\\nimport {IProposedOwnable} from \\\"./interfaces/IProposedOwnable.sol\\\";\\n\\n/**\\n * @title ProposedOwnable\\n * @notice Contract module which provides a basic access control mechanism,\\n * where there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed via a two step process:\\n * 1. Call `proposeOwner`\\n * 2. Wait out the delay period\\n * 3. Call `acceptOwner`\\n *\\n * @dev This module is used through inheritance. It will make available the\\n * modifier `onlyOwner`, which can be applied to your functions to restrict\\n * their use to the owner.\\n *\\n * @dev The majority of this code was taken from the openzeppelin Ownable\\n * contract\\n *\\n */\\nabstract contract ProposedOwnable is IProposedOwnable {\\n  // ========== Custom Errors ===========\\n\\n  error ProposedOwnable__onlyOwner_notOwner();\\n  error ProposedOwnable__onlyProposed_notProposedOwner();\\n  error ProposedOwnable__proposeNewOwner_invalidProposal();\\n  error ProposedOwnable__proposeNewOwner_noOwnershipChange();\\n  error ProposedOwnable__renounceOwnership_noProposal();\\n  error ProposedOwnable__renounceOwnership_delayNotElapsed();\\n  error ProposedOwnable__renounceOwnership_invalidProposal();\\n  error ProposedOwnable__acceptProposedOwner_delayNotElapsed();\\n\\n  // ============ Properties ============\\n\\n  address private _owner;\\n\\n  address private _proposed;\\n  uint256 private _proposedOwnershipTimestamp;\\n\\n  uint256 private constant _delay = 7 days;\\n\\n  // ======== Getters =========\\n\\n  /**\\n   * @notice Returns the address of the current owner.\\n   */\\n  function owner() public view virtual returns (address) {\\n    return _owner;\\n  }\\n\\n  /**\\n   * @notice Returns the address of the proposed owner.\\n   */\\n  function proposed() public view virtual returns (address) {\\n    return _proposed;\\n  }\\n\\n  /**\\n   * @notice Returns the address of the proposed owner.\\n   */\\n  function proposedTimestamp() public view virtual returns (uint256) {\\n    return _proposedOwnershipTimestamp;\\n  }\\n\\n  /**\\n   * @notice Returns the delay period before a new owner can be accepted.\\n   */\\n  function delay() public view virtual returns (uint256) {\\n    return _delay;\\n  }\\n\\n  /**\\n   * @notice Throws if called by any account other than the owner.\\n   */\\n  modifier onlyOwner() {\\n    if (_owner != msg.sender) revert ProposedOwnable__onlyOwner_notOwner();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Throws if called by any account other than the proposed owner.\\n   */\\n  modifier onlyProposed() {\\n    if (_proposed != msg.sender) revert ProposedOwnable__onlyProposed_notProposedOwner();\\n    _;\\n  }\\n\\n  /**\\n   * @notice Indicates if the ownership has been renounced() by\\n   * checking if current owner is address(0)\\n   */\\n  function renounced() public view returns (bool) {\\n    return _owner == address(0);\\n  }\\n\\n  // ======== External =========\\n\\n  /**\\n   * @notice Sets the timestamp for an owner to be proposed, and sets the\\n   * newly proposed owner as step 1 in a 2-step process\\n   */\\n  function proposeNewOwner(address newlyProposed) public virtual onlyOwner {\\n    // Contract as source of truth\\n    if (_proposed == newlyProposed && newlyProposed != address(0))\\n      revert ProposedOwnable__proposeNewOwner_invalidProposal();\\n\\n    // Sanity check: reasonable proposal\\n    if (_owner == newlyProposed) revert ProposedOwnable__proposeNewOwner_noOwnershipChange();\\n\\n    _setProposed(newlyProposed);\\n  }\\n\\n  /**\\n   * @notice Renounces ownership of the contract after a delay\\n   */\\n  function renounceOwnership() public virtual onlyOwner {\\n    // Ensure there has been a proposal cycle started\\n    if (_proposedOwnershipTimestamp == 0) revert ProposedOwnable__renounceOwnership_noProposal();\\n\\n    // Ensure delay has elapsed\\n    if ((block.timestamp - _proposedOwnershipTimestamp) <= _delay)\\n      revert ProposedOwnable__renounceOwnership_delayNotElapsed();\\n\\n    // Require proposed is set to 0\\n    if (_proposed != address(0)) revert ProposedOwnable__renounceOwnership_invalidProposal();\\n\\n    // Emit event, set new owner, reset timestamp\\n    _setOwner(_proposed);\\n  }\\n\\n  /**\\n   * @notice Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function acceptProposedOwner() public virtual onlyProposed {\\n    // NOTE: no need to check if _owner == _proposed, because the _proposed\\n    // is 0-d out and this check is implicitly enforced by modifier\\n\\n    // NOTE: no need to check if _proposedOwnershipTimestamp > 0 because\\n    // the only time this would happen is if the _proposed was never\\n    // set (will fail from modifier) or if the owner == _proposed (checked\\n    // above)\\n\\n    // Ensure delay has elapsed\\n    if ((block.timestamp - _proposedOwnershipTimestamp) <= _delay)\\n      revert ProposedOwnable__acceptProposedOwner_delayNotElapsed();\\n\\n    // Emit event, set new owner, reset timestamp\\n    _setOwner(_proposed);\\n  }\\n\\n  // ======== Internal =========\\n\\n  function _setOwner(address newOwner) internal {\\n    address oldOwner = _owner;\\n    _owner = newOwner;\\n    _proposedOwnershipTimestamp = 0;\\n    _proposed = address(0);\\n    emit OwnershipTransferred(oldOwner, newOwner);\\n  }\\n\\n  function _setProposed(address newlyProposed) private {\\n    _proposedOwnershipTimestamp = block.timestamp;\\n    _proposed = newlyProposed;\\n    emit OwnershipProposed(newlyProposed);\\n  }\\n}\\n\",\"keccak256\":\"0x0d037478c106eb6a609894104404ff65c747a5979150413b88dd630612de6e80\",\"license\":\"UNLICENSED\"},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.17;\\n\\n/**\\n * @title IProposedOwnable\\n * @notice Defines a minimal interface for ownership with a two step proposal and acceptance\\n * process\\n */\\ninterface IProposedOwnable {\\n  /**\\n   * @dev This emits when change in ownership of a contract is proposed.\\n   */\\n  event OwnershipProposed(address indexed proposedOwner);\\n\\n  /**\\n   * @dev This emits when ownership of a contract changes.\\n   */\\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n  /**\\n   * @notice Get the address of the owner\\n   * @return owner_ The address of the owner.\\n   */\\n  function owner() external view returns (address owner_);\\n\\n  /**\\n   * @notice Get the address of the proposed owner\\n   * @return proposed_ The address of the proposed.\\n   */\\n  function proposed() external view returns (address proposed_);\\n\\n  /**\\n   * @notice Set the address of the proposed owner of the contract\\n   * @param newlyProposed The proposed new owner of the contract\\n   */\\n  function proposeNewOwner(address newlyProposed) external;\\n\\n  /**\\n   * @notice Set the address of the proposed owner of the contract\\n   */\\n  function acceptProposedOwner() external;\\n}\\n\",\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ca5380380610ca583398101604081905261002f91610142565b610038336100e3565b6001600160a01b0381166100865760405162461bcd60e51b815260206004820152601160248201527010bd32b937903937b7ba26b0b730b3b2b960791b604482015260640160405180910390fd5b600380546001600160a01b0319166001600160a01b03831690811790915560408051918252600060208301527f3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487910160405180910390a150610172565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561015457600080fd5b81516001600160a01b038116811461016b57600080fd5b9392505050565b610b24806101816000396000f3fe6080604052600436106100ab5760003560e01c8063b1f8100d11610064578063b1f8100d146101a7578063c5b350df146101c7578063d1851c92146101dc578063d232c220146101fa578063db20563514610223578063f0a67eba1461024357600080fd5b80633ccfd60b146100ef5780633cf52ffb14610106578063412e12db1461012a5780636a42b8f81461014a578063715018a6146101605780638da5cb5b1461017557600080fd5b366100ea57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b3480156100fb57600080fd5b50610104610263565b005b34801561011257600080fd5b506002545b6040519081526020015b60405180910390f35b34801561013657600080fd5b506101046101453660046107cf565b6102f9565b34801561015657600080fd5b5062093a80610117565b34801561016c57600080fd5b506101046103f5565b34801561018157600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610121565b3480156101b357600080fd5b506101046101c236600461095e565b6104b4565b3480156101d357600080fd5b5061010461055c565b3480156101e857600080fd5b506001546001600160a01b031661018f565b34801561020657600080fd5b506000546040516001600160a01b03909116158152602001610121565b34801561022f57600080fd5b5060035461018f906001600160a01b031681565b34801561024f57600080fd5b5061010461025e36600461095e565b6105b7565b6000546001600160a01b0316331461028e576040516311a8a1bb60e31b815260040160405180910390fd5b6040514790339082156108fc029083906000818181858888f193505050501580156102bd573d6000803e3d6000fd5b50604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a150565b600084815b818163ffffffff1610156103405785858263ffffffff1681811061032457610324610980565b905060200201358361033691906109ac565b92506001016102fe565b5060035460405163412e12db60e01b81526001600160a01b039091169063412e12db90849061037b908b908b908b908b908b90600401610a47565b6000604051808303818588803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b1894500191506103e49050565b60405180910390a150505050505050565b6000546001600160a01b03163314610420576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361044357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426104559190610adb565b11610473576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561049d576040516323295ef960e01b815260040160405180910390fd5b6001546104b2906001600160a01b031661068f565b565b6000546001600160a01b031633146104df576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561050457506001600160a01b03811615155b15610522576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361055057604051634a2fb73f60e11b815260040160405180910390fd5b610559816106ee565b50565b6001546001600160a01b03163314610587576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426105999190610adb565b1161049d5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146105e2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166106305760405162461bcd60e51b815260206004820152601160248201527010bd32b937903937b7ba26b0b730b3b2b960791b604482015260640160405180910390fd5b600380546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052917f3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60008083601f84011261074e57600080fd5b50813567ffffffffffffffff81111561076657600080fd5b6020830191508360208260051b850101111561078157600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107c7576107c7610788565b604052919050565b6000806000806000606086880312156107e757600080fd5b67ffffffffffffffff80873511156107fe57600080fd5b61080b888835890161073c565b909650945060208701358181111561082257600080fd5b61082e89828a0161073c565b90955093505060408701358181111561084657600080fd5b8701601f8101891361085757600080fd5b80358281111561086957610869610788565b61087860208260051b0161079e565b8082825260208201915060208360051b85010192508b83111561089a57600080fd5b602084015b8381101561092f5785813511156108b557600080fd5b803585018d603f8201126108c857600080fd5b6020810135878111156108dd576108dd610788565b6108f0601f8201601f191660200161079e565b8181528f604083850101111561090557600080fd5b8160408401602083013760006020838301015280865250505060208301925060208101905061089f565b5080955050505050509295509295909350565b80356001600160a01b038116811461095957600080fd5b919050565b60006020828403121561097057600080fd5b61097982610942565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109bf576109bf610996565b92915050565b6000815180845260208085019450848260051b86018286016000805b86811015610a39578484038a5282518051808652835b81811015610a12578281018901518782018a015288016109f7565b5085810188018490529a87019a601f01601f191690940186019350918501916001016109e1565b509198975050505050505050565b6060808252810185905260008660808301825b88811015610a88576001600160a01b03610a7384610942565b16825260209283019290910190600101610a5a565b5083810360208501528581526001600160fb1b03861115610aa857600080fd5b8560051b9150818760208301370182810360209081016040850152610acf908201856109c5565b98975050505050505050565b818103818111156109bf576109bf61099656fea264697066735822122004ecc894008d8e3a0eba05f02b7f394cc056ccbcd2313604dacf5dc96629c50e64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c8063b1f8100d11610064578063b1f8100d146101a7578063c5b350df146101c7578063d1851c92146101dc578063d232c220146101fa578063db20563514610223578063f0a67eba1461024357600080fd5b80633ccfd60b146100ef5780633cf52ffb14610106578063412e12db1461012a5780636a42b8f81461014a578063715018a6146101605780638da5cb5b1461017557600080fd5b366100ea57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b3480156100fb57600080fd5b50610104610263565b005b34801561011257600080fd5b506002545b6040519081526020015b60405180910390f35b34801561013657600080fd5b506101046101453660046107cf565b6102f9565b34801561015657600080fd5b5062093a80610117565b34801561016c57600080fd5b506101046103f5565b34801561018157600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610121565b3480156101b357600080fd5b506101046101c236600461095e565b6104b4565b3480156101d357600080fd5b5061010461055c565b3480156101e857600080fd5b506001546001600160a01b031661018f565b34801561020657600080fd5b506000546040516001600160a01b03909116158152602001610121565b34801561022f57600080fd5b5060035461018f906001600160a01b031681565b34801561024f57600080fd5b5061010461025e36600461095e565b6105b7565b6000546001600160a01b0316331461028e576040516311a8a1bb60e31b815260040160405180910390fd5b6040514790339082156108fc029083906000818181858888f193505050501580156102bd573d6000803e3d6000fd5b50604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a150565b600084815b818163ffffffff1610156103405785858263ffffffff1681811061032457610324610980565b905060200201358361033691906109ac565b92506001016102fe565b5060035460405163412e12db60e01b81526001600160a01b039091169063412e12db90849061037b908b908b908b908b908b90600401610a47565b6000604051808303818588803b15801561039457600080fd5b505af11580156103a8573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b1894500191506103e49050565b60405180910390a150505050505050565b6000546001600160a01b03163314610420576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361044357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426104559190610adb565b11610473576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561049d576040516323295ef960e01b815260040160405180910390fd5b6001546104b2906001600160a01b031661068f565b565b6000546001600160a01b031633146104df576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561050457506001600160a01b03811615155b15610522576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361055057604051634a2fb73f60e11b815260040160405180910390fd5b610559816106ee565b50565b6001546001600160a01b03163314610587576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426105999190610adb565b1161049d5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146105e2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166106305760405162461bcd60e51b815260206004820152601160248201527010bd32b937903937b7ba26b0b730b3b2b960791b604482015260640160405180910390fd5b600380546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052917f3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60008083601f84011261074e57600080fd5b50813567ffffffffffffffff81111561076657600080fd5b6020830191508360208260051b850101111561078157600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107c7576107c7610788565b604052919050565b6000806000806000606086880312156107e757600080fd5b67ffffffffffffffff80873511156107fe57600080fd5b61080b888835890161073c565b909650945060208701358181111561082257600080fd5b61082e89828a0161073c565b90955093505060408701358181111561084657600080fd5b8701601f8101891361085757600080fd5b80358281111561086957610869610788565b61087860208260051b0161079e565b8082825260208201915060208360051b85010192508b83111561089a57600080fd5b602084015b8381101561092f5785813511156108b557600080fd5b803585018d603f8201126108c857600080fd5b6020810135878111156108dd576108dd610788565b6108f0601f8201601f191660200161079e565b8181528f604083850101111561090557600080fd5b8160408401602083013760006020838301015280865250505060208301925060208101905061089f565b5080955050505050509295509295909350565b80356001600160a01b038116811461095957600080fd5b919050565b60006020828403121561097057600080fd5b61097982610942565b9392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156109bf576109bf610996565b92915050565b6000815180845260208085019450848260051b86018286016000805b86811015610a39578484038a5282518051808652835b81811015610a12578281018901518782018a015288016109f7565b5085810188018490529a87019a601f01601f191690940186019350918501916001016109e1565b509198975050505050505050565b6060808252810185905260008660808301825b88811015610a88576001600160a01b03610a7384610942565b16825260209283019290910190600101610a5a565b5083810360208501528581526001600160fb1b03861115610aa857600080fd5b8560051b9150818760208301370182810360209081016040850152610acf908201856109c5565b98975050505050505050565b818103818111156109bf576109bf61099656fea264697066735822122004ecc894008d8e3a0eba05f02b7f394cc056ccbcd2313604dacf5dc96629c50e64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_rootManager": "The address of the RootManager on this domain."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "acceptProposedOwner()": {
        "notice": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "constructor": {
        "notice": "Creates a new RootManagerPropagateWrapper instance."
      },
      "delay()": {
        "notice": "Returns the delay period before a new owner can be accepted."
      },
      "owner()": {
        "notice": "Returns the address of the current owner."
      },
      "proposeNewOwner(address)": {
        "notice": "Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process"
      },
      "proposed()": {
        "notice": "Returns the address of the proposed owner."
      },
      "proposedTimestamp()": {
        "notice": "Returns the address of the proposed owner."
      },
      "renounceOwnership()": {
        "notice": "Renounces ownership of the contract after a delay"
      },
      "renounced()": {
        "notice": "Indicates if the ownership has been renounced() by checking if current owner is address(0)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 49135,
        "contract": "contracts/messaging/RootManagerPropagateWrapper.sol:RootManagerPropagateWrapper",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 49137,
        "contract": "contracts/messaging/RootManagerPropagateWrapper.sol:RootManagerPropagateWrapper",
        "label": "_proposed",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 49139,
        "contract": "contracts/messaging/RootManagerPropagateWrapper.sol:RootManagerPropagateWrapper",
        "label": "_proposedOwnershipTimestamp",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 37950,
        "contract": "contracts/messaging/RootManagerPropagateWrapper.sol:RootManagerPropagateWrapper",
        "label": "rootManager",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IRootManager)47041"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IRootManager)47041": {
        "encoding": "inplace",
        "label": "contract IRootManager",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}