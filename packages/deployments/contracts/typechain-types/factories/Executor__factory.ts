/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Executor, ExecutorInterface } from "../Executor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isContract",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getConnext",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161099938038061099983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610909610090600039600081816048015260a901526109096000f3fe6080604052600436106100295760003560e01c8063975740c61461002e578063a81a368d14610077575b600080fd5b34801561003a57600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b61008a610085366004610694565b610099565b60405161006e93929190610796565b6000806060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101055760405162461bcd60e51b8152602060048201526007602482015266234f433a30323760c81b60448201526064015b60405180910390fd5b6001600160a01b038716158061012057610120888a89610224565b600060606001600160a01b038b163b158015906101a8578b6001600160a01b03168461014d57600061014f565b8a5b8a8a60405161015f9291906107c2565b60006040518083038185875af1925050503d806000811461019c576040519150601f19603f3d011682016040523d82523d6000602084013e6101a1565b606091505b5090935091505b821580156101b4575083155b156101c4576101c48b8d8c61030f565b8b6001600160a01b03168d7fba8945310c2d5b346d3320f14e4072113b27427d9442cd033665c6f70244a1a28d8d8d8d888a8960405161020a97969594939291906107d2565b60405180910390a3919c919b509950975050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102999190610843565b6102a3919061085c565b6040516001600160a01b03851660248201526044810182905290915061030990859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610422565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610843565b9050818110156103e75760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016100fc565b6040516001600160a01b0384166024820152828203604482018190529061041b90869063095ea7b360e01b906064016102d2565b5050505050565b6000610477826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104f99092919063ffffffff16565b8051909150156104f457808060200190518101906104959190610882565b6104f45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100fc565b505050565b60606105088484600085610512565b90505b9392505050565b6060824710156105735760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100fc565b6001600160a01b0385163b6105ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100fc565b600080866001600160a01b031685876040516105e691906108a4565b60006040518083038185875af1925050503d8060008114610623576040519150601f19603f3d011682016040523d82523d6000602084013e610628565b606091505b5091509150610638828286610643565b979650505050505050565b6060831561065257508161050b565b8251156106625782518084602001fd5b8160405162461bcd60e51b81526004016100fc91906108c0565b6001600160a01b038116811461069157600080fd5b50565b60008060008060008060a087890312156106ad57600080fd5b8635955060208701356106bf8161067c565b945060408701356106cf8161067c565b935060608701359250608087013567ffffffffffffffff808211156106f357600080fd5b818901915089601f83011261070757600080fd5b81358181111561071657600080fd5b8a602082850101111561072857600080fd5b6020830194508093505050509295509295509295565b60005b83811015610759578181015183820152602001610741565b838111156103095750506000910152565b6000815180845261078281602086016020860161073e565b601f01601f19169290920160200192915050565b831515815282151560208201526060604082015260006107b9606083018461076a565b95945050505050565b8183823760009101908152919050565b6001600160a01b03881681526020810187905260c0604082018190528101859052848660e0830137600060e086830101526000601f19601f870116820160e083820301606084015261082760e082018761076a565b9415156080840152505090151560a09091015295945050505050565b60006020828403121561085557600080fd5b5051919050565b6000821982111561087d57634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561089457600080fd5b8151801515811461050b57600080fd5b600082516108b681846020870161073e565b9190910192915050565b60208152600061050b602083018461076a56fea264697066735822122071973be53b56d3872e78f9017f90ec920d3b06a9fbc38727edfe31eb165af57f64736f6c634300080b0033";

type ExecutorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: ExecutorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class Executor__factory extends ContractFactory {
  constructor(...args: ExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Executor";
  }

  deploy(_connext: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<Executor> {
    return super.deploy(_connext, overrides || {}) as Promise<Executor>;
  }
  getDeployTransaction(
    _connext: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_connext, overrides || {});
  }
  attach(address: string): Executor {
    return super.attach(address) as Executor;
  }
  connect(signer: Signer): Executor__factory {
    return super.connect(signer) as Executor__factory;
  }
  static readonly contractName: "Executor";
  public readonly contractName: "Executor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorInterface {
    return new utils.Interface(_abi) as ExecutorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Executor {
    return new Contract(address, _abi, signerOrProvider) as Executor;
  }
}
