/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBridgeMessage,
  TestBridgeMessageInterface,
} from "../TestBridgeMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFormatDetailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenIds",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_idType",
        type: "uint8",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_actionType",
        type: "uint8",
      },
    ],
    name: "testFormatMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[3]",
        name: "_domain",
        type: "uint32[3]",
      },
      {
        internalType: "bytes32[3]",
        name: "_id",
        type: "bytes32[3]",
      },
    ],
    name: "testFormatTokenIds",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint256[3]",
        name: "_amts",
        type: "uint256[3]",
      },
      {
        internalType: "bytes32[3]",
        name: "_details",
        type: "bytes32[3]",
      },
    ],
    name: "testFormatTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsFastTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_t",
        type: "uint8",
      },
    ],
    name: "testIsValidAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testIsValidMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMessageType",
    outputs: [
      {
        internalType: "enum BridgeMessage.Types",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMustBeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "idx",
        type: "uint8",
      },
    ],
    name: "testSplitTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_batch",
        type: "bytes",
      },
    ],
    name: "testSplitTransfer",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256[3]",
        name: "",
        type: "uint256[3]",
      },
      {
        internalType: "bytes32[3]",
        name: "",
        type: "bytes32[3]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ad6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063932cbc9811610071578063932cbc981461017e578063957b15d214610191578063b81726a2146101a4578063ded2f006146101b7578063dfd9d1db146101f5578063f9dd616a1461020857600080fd5b806312bdd731146100b957806334ceb4a6146100e25780636c18a185146101025780637d5bf43d146101275780638213d910146101485780638cdce7e21461016b575b600080fd5b6100cc6100c736600461145f565b61021b565b6040516100d991906114aa565b60405180910390f35b6100f56100f0366004611522565b610242565b6040516100d99190611603565b61011561011036600461145f565b610267565b6040516100d996959493929190611616565b61013a6101353660046116b2565b610355565b6040519081526020016100d9565b61015b610156366004611735565b61036a565b60405190151581526020016100d9565b61015b61017936600461145f565b610390565b61015b61018c36600461145f565b6103ab565b6100f561019f366004611783565b6103cb565b61015b6101b236600461145f565b6103da565b6101ca6101c5366004611806565b6103f2565b6040805163ffffffff909416845260208401929092526001600160a01b0316908201526060016100d9565b6100f561020336600461184b565b610447565b6100f561021636600461145f565b610490565b600080610227836104ac565b905061023b61023684836104cf565b6104ea565b9392505050565b606061025e6102538686868661050b565b62ffffff1916610598565b95945050505050565b600080600080610275611375565b61027d611375565b600061028a8860056104cf565b90506000610297826105e1565b905060006102a4836105f5565b905060006102b18461060a565b905060006102be8561061d565b90506102c8611375565b6102d0611375565b60005b60038160ff16101561033f576102ec888260ff16610632565b838260ff1660038110610301576103016118d0565b60200201526103138860ff8316610667565b828260ff1660038110610328576103286118d0565b602002015280610337816118fc565b9150506102d3565b50949d939c50919a509850965090945092505050565b6000610362848484610691565b949350505050565b600061023b61038b83600681111561038457610384611494565b85906104cf565b6106cd565b6000806103a060045b84906104cf565b905061023b816106f6565b6000806103b7836104ac565b905061023b6103c684836104cf565b610703565b606061023b6102538484610733565b6000806103e76003610399565b905061023b816107a6565b600080808061040460065b87906104cf565b90506000610415828760ff166107b3565b90506000610426838860ff166107e8565b90506000610437848960ff1661081f565b9299919850919650945050505050565b606060006104608460068111156103fd576103fd611494565b905060006104798460068111156103fd576103fd611494565b90506104858282610854565b979650505050505050565b6060600061049e6002610399565b905061023b61025382610928565b6000816024815181106104c1576104c16118d0565b016020015160f81c92915050565b81516000906020840161025e64ffffffffff85168284610941565b600060d882901c60ff16600681111561050557610505611494565b92915050565b6000600561058e816105786000848a8a898460200201518b600060200201518b600160200201518d600160200201518d600260200201518f600260200201516040516020016105629998979695949392919061191c565b60408051601f19818403018152919052906104cf565b6301000000600160d81b031660d89190911b1790565b9695505050505050565b60606000806105b08460181c6001600160601b031690565b6001600160601b0316905060405191508192506105d08483602001610985565b508181016020016040529052919050565b600061050562ffffff198316826001610add565b600061050562ffffff19831660016020610b0d565b600061050562ffffff198316600d610c66565b600061050562ffffff19831660216020610b0d565b600061023b610642836040611980565b61064d90604161199f565b61065890602061199f565b62ffffff198516906020610add565b600061023b610677836040611980565b61068290604161199f565b62ffffff198516906020610b0d565b6000835184845185856040516020016106ae9594939291906119b7565b6040516020818303038152906040528051906020012090509392505050565b60006106d8826107a6565b806106e757506106e7826106f6565b80610505575061050582610c74565b6000610505826004610c7d565b6000601882901c6001600160601b031661010161072260246003611980565b61072c919061199f565b1492915050565b81518151602080850151818501516040808801518188015191516001600160e01b031960e098891b811696820196909652602481019690965292861b841660448601526048850191909152931b166068820152606c81019190915260009061023b90600690610578908490608c01610562565b6000610505826003610c7d565b60008260066107ca815b62ffffff19841690610cdc565b5061025e6107d9602486611980565b62ffffff198716906004610add565b60008260066107f6816107bd565b5061025e610805602486611980565b61081090600461199f565b62ffffff198716906020610b0d565b600082600661082d816107bd565b5061025e61083c856020611980565b61084790601061199f565b62ffffff19871690610c66565b6060826006610862816107bd565b5061086c846106cd565b6108a75760405162461bcd60e51b815260206004820152600760248201526610b0b1ba34b7b760c91b60448201526064015b60405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905085816000815181106108dc576108dc6118d0565b602002602001019062ffffff1916908162ffffff191681525050848160018151811061090a5761090a6118d0565b62ffffff199092166020928302919091019091015261058e81610db5565b600061050561093683610e0a565b62ffffff1916610e3c565b60008061094e838561199f565b905060405181111561095e575060005b806109705762ffffff1991505061023b565b5050606092831b9190911790911b1760181b90565b600062ffffff1980841614156109ee5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161089e565b6109f783610e97565b610a575760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161089e565b6000610a6c8460181c6001600160601b031690565b6001600160601b031690506000610a8c8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115610aac5760206060fd5b8285848460045afa5061058e610ac28760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000610aea826020611a17565b610af5906008611a3a565b60ff16610b03858585610b0d565b901c949350505050565b600060ff8216610b1f5750600061023b565b610b328460181c6001600160601b031690565b6001600160601b0316610b4860ff84168561199f565b1115610bac57610b93610b648560781c6001600160601b031690565b6001600160601b0316610b808660181c6001600160601b031690565b6001600160601b0316858560ff16610ed5565b60405162461bcd60e51b815260040161089e9190611603565b60208260ff161115610c265760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161089e565b600882026000610c3f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600061023b83836014610add565b60006105058260055b6000816006811115610c9157610c91611494565b60ff16610c9d846105e1565b60ff1614801561023b5750816006811115610cba57610cba611494565b610cc3846104ea565b6006811115610cd457610cd4611494565b149392505050565b6000610ce88383610fff565b610dae576000610d07610cfb8560d81c90565b64ffffffffff16611022565b9150506000610d1c8464ffffffffff16611022565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b815260040161089e9190611603565b5090919050565b6040516060906000610dca84602084016110d0565b90506000610de18260181c6001600160601b031690565b6001600160601b031690506000610df783611163565b9184525082016020016040525092915050565b6000610e1582610703565b15610e32576301000000600160d81b038216600160d91b17610505565b62ffffff19610505565b6000610e4782610e97565b610e935760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c656400000000000000604482015260640161089e565b5090565b6000610ea38260d81c90565b64ffffffffff1664ffffffffff1415610ebe57506000919050565b6000610ec983611179565b60405110199392505050565b60606000610ee286611022565b9150506000610ef086611022565b9150506000610efe86611022565b9150506000610f0c86611022565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60008164ffffffffff166110138460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115611077576000611041826008611a3a565b60ff1685901c9050611052816111b2565b61ffff16841793508160ff1660101461106d57601084901b93505b5060001901611028565b50600f5b60ff8160ff1610156110ca576000611094826008611a3a565b60ff1685901c90506110a5816111b2565b61ffff16831792508160ff166000146110c057601083901b92505b506000190161107b565b50915091565b6000604051828111156110e35760206060fd5b506000805b8451811015611150576000858281518110611105576111056118d0565b6020026020010151905061111b81848701610985565b5061112f8160181c6001600160601b031690565b6001600160601b03168301925050808061114890611a63565b9150506110e8565b50606083901b811760181b949350505050565b600061116e826111e4565b610505906020611980565b600061118e8260181c6001600160601b031690565b6111a18360781c6001600160601b031690565b016001600160601b03169050919050565b60006111c460048360ff16901c611219565b60ff1661ffff919091161760081b6111db82611219565b60ff1617919050565b600060206111fb8360181c6001600160601b031690565b61120f906001600160601b0316602061199f565b6105059190611a7e565b600060f08083179060ff821614156112345750603092915050565b8060ff1660f114156112495750603192915050565b8060ff1660f2141561125e5750603292915050565b8060ff1660f314156112735750603392915050565b8060ff1660f414156112885750603492915050565b8060ff1660f5141561129d5750603592915050565b8060ff1660f614156112b25750603692915050565b8060ff1660f714156112c75750603792915050565b8060ff1660f814156112dc5750603892915050565b8060ff1660f914156112f15750603992915050565b8060ff1660fa14156113065750606192915050565b8060ff1660fb141561131b5750606292915050565b8060ff1660fc14156113305750606392915050565b8060ff1660fd14156113455750606492915050565b8060ff1660fe141561135a5750606592915050565b8060ff1660ff141561136f5750606692915050565b50919050565b60405180606001604052806003906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156113cc576113cc611393565b60405290565b600082601f8301126113e357600080fd5b813567ffffffffffffffff808211156113fe576113fe611393565b604051601f8301601f19908116603f0116810190828211818310171561142657611426611393565b8160405283815286602085880101111561143f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561147157600080fd5b813567ffffffffffffffff81111561148857600080fd5b610362848285016113d2565b634e487b7160e01b600052602160045260246000fd5b60208101600783106114cc57634e487b7160e01b600052602160045260246000fd5b91905290565b600082601f8301126114e357600080fd5b6114eb6113a9565b8060608401858111156114fd57600080fd5b845b818110156115175780358452602093840193016114ff565b509095945050505050565b600080600080610100858703121561153957600080fd5b84359350602080860135935086605f87011261155457600080fd5b61155c6113a9565b8060a088018981111561156e57600080fd5b604089015b8181101561158a5780358452928401928401611573565b508195506115988a826114d2565b94505050505092959194509250565b60005b838110156115c25781810151838201526020016115aa565b838111156115d1576000848401525b50505050565b600081518084526115ef8160208601602086016115a7565b601f01601f19169290920160200192915050565b60208152600061023b60208301846115d7565b60ff8716815260208082018790526001600160a01b038616604083015260608201859052610140820190608083018560005b600381101561166557815183529183019190830190600101611648565b50505060e083018460005b600381101561168d57815183529183019190830190600101611670565b50505050979650505050505050565b803560ff811681146116ad57600080fd5b919050565b6000806000606084860312156116c757600080fd5b833567ffffffffffffffff808211156116df57600080fd5b6116eb878388016113d2565b9450602086013591508082111561170157600080fd5b5061170e868287016113d2565b92505061171d6040850161169c565b90509250925092565b8035600781106116ad57600080fd5b6000806040838503121561174857600080fd5b823567ffffffffffffffff81111561175f57600080fd5b61176b858286016113d2565b92505061177a60208401611726565b90509250929050565b60008060c0838503121561179657600080fd5b83601f8401126117a557600080fd5b6117ad6113a9565b8060608501868111156117bf57600080fd5b855b818110156117ec57803563ffffffff811681146117de5760008081fd5b8452602093840193016117c1565b508194506117fa87826114d2565b93505050509250929050565b6000806040838503121561181957600080fd5b823567ffffffffffffffff81111561183057600080fd5b61183c858286016113d2565b92505061177a6020840161169c565b6000806000806080858703121561186157600080fd5b843567ffffffffffffffff8082111561187957600080fd5b611885888389016113d2565b9550602087013591508082111561189b57600080fd5b506118a8878288016113d2565b9350506118b760408601611726565b91506118c560608601611726565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff811415611913576119136118e6565b60010192915050565b600060078b1061193c57634e487b7160e01b600052602160045260246000fd5b5060f89990991b89526001890197909752602188019590955260418701939093526061860191909152608185015260a184015260c183015260e18201526101010190565b600081600019048311821515161561199a5761199a6118e6565b500290565b600082198211156119b2576119b26118e6565b500190565b858152600085516119cf816020850160208a016115a7565b808301905085602082015284516119ed8160408401602089016115a7565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b600060ff821660ff841680821015611a3157611a316118e6565b90039392505050565b600060ff821660ff84168160ff0481118215151615611a5b57611a5b6118e6565b029392505050565b6000600019821415611a7757611a776118e6565b5060010190565b600082611a9b57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d8eaa0237767ee9bf8a4b474c86bc326f854899d3a702fcbfac7764c8ed89a1064736f6c634300080b0033";

type TestBridgeMessageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBridgeMessageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBridgeMessage__factory extends ContractFactory {
  constructor(...args: TestBridgeMessageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestBridgeMessage";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBridgeMessage> {
    return super.deploy(overrides || {}) as Promise<TestBridgeMessage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestBridgeMessage {
    return super.attach(address) as TestBridgeMessage;
  }
  connect(signer: Signer): TestBridgeMessage__factory {
    return super.connect(signer) as TestBridgeMessage__factory;
  }
  static readonly contractName: "TestBridgeMessage";
  public readonly contractName: "TestBridgeMessage";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBridgeMessageInterface {
    return new utils.Interface(_abi) as TestBridgeMessageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBridgeMessage {
    return new Contract(address, _abi, signerOrProvider) as TestBridgeMessage;
  }
}
