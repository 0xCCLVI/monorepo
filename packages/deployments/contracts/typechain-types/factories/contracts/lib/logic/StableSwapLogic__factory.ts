/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StableSwapLogic,
  StableSwapLogicInterface,
} from "../../../../contracts/lib/logic/StableSwapLogic";

const _abi = [
  {
    inputs: [],
    name: "EMPTY_BYTES",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61079961003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c8063036945b714610045578063c78e2b411461007b575b600080fd5b6100656040518060400160405280601d815260200162ffffff1981525081565b60405161007291906105fd565b60405180910390f35b81801561008757600080fd5b5061009b610096366004610638565b6100b8565b604080519283526001600160a01b03909116602083015201610072565b602085015160009081906100d0575081905082610201565b86516020880151604051631626cf1960e21b815263ffffffff909216600483015260248201526000906001600160a01b0387169063589b3c6490604401602060405180830381865afa15801561012a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014e91906106ef565b9050846001600160a01b0316816001600160a01b031614156101765783859250925050610201565b61018185888661020b565b60405163d5914c4560e01b8152600481018590526001600160a01b038681166024830152828116604483015288169063d5914c45906064016020604051808303816000875af11580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc919061070c565b925090505b9550959350505050565b8015806102855750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561025f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610283919061070c565b155b6102f55760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b17905261034790849061034c565b505050565b60006103a1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661041e9092919063ffffffff16565b80519091501561034757808060200190518101906103bf9190610725565b6103475760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102ec565b606061042d8484600085610437565b90505b9392505050565b6060824710156104985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102ec565b6001600160a01b0385163b6104ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ec565b600080866001600160a01b0316858760405161050b9190610747565b60006040518083038185875af1925050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b509150915061055d828286610568565b979650505050505050565b60608315610577575081610430565b8251156105875782518084602001fd5b8160405162461bcd60e51b81526004016102ec91906105fd565b60005b838110156105bc5781810151838201526020016105a4565b838111156105cb576000848401525b50505050565b600081518084526105e98160208601602086016105a1565b601f01601f19169290920160200192915050565b60208152600061043060208301846105d1565b6001600160a01b038116811461062557600080fd5b50565b803561063381610610565b919050565b600080600080600085870360c081121561065157600080fd5b604081121561065f57600080fd5b506040516040810181811067ffffffffffffffff8211171561069157634e487b7160e01b600052604160045260246000fd5b604052863563ffffffff811681146106a857600080fd5b81526020878101359082015294506106c260408701610628565b93506106d060608701610628565b92506106de60808701610628565b9497939650919460a0013592915050565b60006020828403121561070157600080fd5b815161043081610610565b60006020828403121561071e57600080fd5b5051919050565b60006020828403121561073757600080fd5b8151801515811461043057600080fd5b600082516107598184602087016105a1565b919091019291505056fea2646970667358221220c1d42bea3419e5d8cb5c709ebea7092cc75e81540fbcd2a7b3ce8a5190d692e864736f6c634300080b0033";

type StableSwapLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StableSwapLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StableSwapLogic__factory extends ContractFactory {
  constructor(...args: StableSwapLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StableSwapLogic> {
    return super.deploy(overrides || {}) as Promise<StableSwapLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StableSwapLogic {
    return super.attach(address) as StableSwapLogic;
  }
  override connect(signer: Signer): StableSwapLogic__factory {
    return super.connect(signer) as StableSwapLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StableSwapLogicInterface {
    return new utils.Interface(_abi) as StableSwapLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StableSwapLogic {
    return new Contract(address, _abi, signerOrProvider) as StableSwapLogic;
  }
}
