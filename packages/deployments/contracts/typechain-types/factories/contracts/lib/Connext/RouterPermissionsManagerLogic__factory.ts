/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RouterPermissionsManagerLogic,
  RouterPermissionsManagerLogicInterface,
} from "../../../../contracts/lib/Connext/RouterPermissionsManagerLogic";

const _abi = [
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__acceptProposedRouterOwner_notElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__onlyProposedRouterOwner_notProposedRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__onlyProposedRouterOwner_notRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__onlyRouterOwner_notRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__proposeRouterOwner_badRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__proposeRouterOwner_notNewOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__removeRouter_notAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__removeRouter_routerEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__setRouterRecipient_notNewRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__setupRouter_amountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RouterPermissionsManagerLogic__setupRouter_routerEmpty",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "RouterOwnerAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevProposed",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newProposed",
        type: "address",
      },
    ],
    name: "RouterOwnerProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevRecipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RouterRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterRemoved",
    type: "event",
  },
];

const _bytecode =
  "0x61083b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c8063151a998c1461005b5780634d46ca761461007d578063a7e4839f1461009d578063fabfe9ff146100bd575b600080fd5b81801561006757600080fd5b5061007b6100763660046106d6565b6100dd565b005b81801561008957600080fd5b5061007b610098366004610718565b610218565b8180156100a957600080fd5b5061007b6100b8366004610751565b6103d8565b8180156100c957600080fd5b5061007b6100d836600461079e565b6104e4565b6001600160a01b0380861660009081526020858152604080832054918690529091205461010f928892811691166105aa565b600061011b8685610634565b6001600160a01b038716600090815260208490526040902054909150859061014390426107e0565b1161016157604051630702f26f60e41b815260040160405180910390fd5b6001600160a01b03808716600090815260208581526040808320549188905290912080546001600160a01b0319169190921690811790915580156101c6576001600160a01b038716600090815260208590526040902080546001600160a01b03191690555b6001600160a01b038088166000818152602086905260408082208290555184841693861692917fd73892e8827a6025d74a01fca72a8e0d9e2c04080272e728f8861410c7d3c2d191a450505050505050565b6001600160a01b03841661023f5760405163eef8139760e01b815260040160405180910390fd5b6001600160a01b03841660009081526020849052604090205460ff1661027857604051635c69321160e11b815260040160405180910390fd5b6001600160a01b03841660008181526020858152604091829020805460ff1916905590513381527fbee3e974bb6a6f44f20096ede047c191eef60322e65e4ee4bd3392230a8716d5910160405180910390a26001600160a01b0380851660009081526020849052604090205416801561034d576040516000906001600160a01b0383811691908816907fd73892e8827a6025d74a01fca72a8e0d9e2c04080272e728f8861410c7d3c2d1908490a46001600160a01b038516600090815260208490526040902080546001600160a01b03191690555b6001600160a01b038086166000908152602084905260409020541680156103d0576040516000906001600160a01b0383811691908916907f31f32ebf07b0ac7fe173f7b7f3f943020d9bdc6dbfbdcdae01bd45ea78d953d7908490a46001600160a01b038616600090815260208490526040902080546001600160a01b03191690555b505050505050565b6001600160a01b038086166000908152602085905260409020546103fe91879116610667565b836001600160a01b03166104128685610634565b6001600160a01b0316141561043a5760405163dfb10e3160e01b815260040160405180910390fd5b6001600160a01b03808616600090815260208490526040902054811690851681141561047957604051630c76d9b960e41b815260040160405180910390fd5b6001600160a01b0386811660008181526020868152604080832080546001600160a01b0319168b871690811790915591879052808320429055519093851692917fee0158b57adc03901d8b16c48cd10c33ca1283ee96c6e0d30f817ceba74dc4a191a4505050505050565b6001600160a01b0380851660009081526020849052604090205461050a91869116610667565b6001600160a01b0380851660009081526020839052604090205481169084168114156105495760405163e0cd59cd60e01b815260040160405180910390fd5b6001600160a01b0385811660008181526020859052604080822080546001600160a01b03191689861690811790915590519093851692917f31f32ebf07b0ac7fe173f7b7f3f943020d9bdc6dbfbdcdae01bd45ea78d953d791a45050505050565b6001600160a01b03811661060b576001600160a01b0382161580156105d75750336001600160a01b038416145b806105ea57506001600160a01b03821633145b6106065760405162a74d6f60e71b815260040160405180910390fd5b505050565b336001600160a01b038216146106065760405163171d2e7560e01b815260040160405180910390fd5b6001600160a01b03808316600090815260208390526040812054909116801561065d578061065f565b835b949350505050565b6001600160a01b0381161580156106865750336001600160a01b038316145b8061069957506001600160a01b03811633145b6106b657604051636cd71d6f60e11b815260040160405180910390fd5b5050565b80356001600160a01b03811681146106d157600080fd5b919050565b600080600080600060a086880312156106ee57600080fd5b6106f7866106ba565b97602087013597506040870135966060810135965060800135945092505050565b6000806000806080858703121561072e57600080fd5b610737856106ba565b966020860135965060408601359560600135945092505050565b600080600080600060a0868803121561076957600080fd5b610772866106ba565b9450610780602087016106ba565b94979496505050506040830135926060810135926080909101359150565b600080600080608085870312156107b457600080fd5b6107bd856106ba565b93506107cb602086016106ba565b93969395505050506040820135916060013590565b60008282101561080057634e487b7160e01b600052601160045260246000fd5b50039056fea26469706673582212206e68a3aa08e0039e8a94f6611618038999ef8fc0561aa00e7de05160c0ef6a2a64736f6c634300080b0033";

type RouterPermissionsManagerLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RouterPermissionsManagerLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RouterPermissionsManagerLogic__factory extends ContractFactory {
  constructor(...args: RouterPermissionsManagerLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RouterPermissionsManagerLogic> {
    return super.deploy(
      overrides || {}
    ) as Promise<RouterPermissionsManagerLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RouterPermissionsManagerLogic {
    return super.attach(address) as RouterPermissionsManagerLogic;
  }
  override connect(signer: Signer): RouterPermissionsManagerLogic__factory {
    return super.connect(signer) as RouterPermissionsManagerLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RouterPermissionsManagerLogicInterface {
    return new utils.Interface(_abi) as RouterPermissionsManagerLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RouterPermissionsManagerLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RouterPermissionsManagerLogic;
  }
}
