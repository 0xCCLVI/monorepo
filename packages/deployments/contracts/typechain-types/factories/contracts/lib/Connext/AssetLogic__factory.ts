/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AssetLogic,
  AssetLogicInterface,
} from "../../../../contracts/lib/Connext/AssetLogic";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__transferAssetFromContract_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__transferAssetToContract_ethWithErcTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__transferAssetToContract_notAmount",
    type: "error",
  },
];

const _bytecode =
  "0x61064e61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c2ba76251461003a575b600080fd5b81801561004657600080fd5b5061005a6100553660046104fb565b61007d565b604080516001600160a01b03909316835260208301919091520160405180910390f35b600080836001600160a01b03861661010b578434146100af5760405163ae5ac49360e01b815260040160405180910390fd5b836001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156100ea57600080fd5b505af11580156100fe573d6000803e3d6000fd5b505050505083955061021b565b6040516370a0823160e01b81523060048201526000906001600160a01b038816906370a0823190602401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610176919061053d565b905034156101975760405163aea6686d60e01b815260040160405180910390fd5b6101a387333089610224565b6040516370a0823160e01b815230600482015281906001600160a01b038916906370a0823190602401602060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d919061053d565b6102179190610556565b9150505b94959350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261027e908590610284565b50505050565b60006102d9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166103609092919063ffffffff16565b80519091501561035b57808060200190518101906102f7919061057b565b61035b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b606061036f8484600085610379565b90505b9392505050565b6060824710156103da5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610352565b6001600160a01b0385163b6104315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610352565b600080866001600160a01b0316858760405161044d91906105c9565b60006040518083038185875af1925050503d806000811461048a576040519150601f19603f3d011682016040523d82523d6000602084013e61048f565b606091505b509150915061049f8282866104aa565b979650505050505050565b606083156104b9575081610372565b8251156104c95782518084602001fd5b8160405162461bcd60e51b815260040161035291906105e5565b6001600160a01b03811681146104f857600080fd5b50565b60008060006060848603121561051057600080fd5b833561051b816104e3565b9250602084013591506040840135610532816104e3565b809150509250925092565b60006020828403121561054f57600080fd5b5051919050565b60008282101561057657634e487b7160e01b600052601160045260246000fd5b500390565b60006020828403121561058d57600080fd5b8151801515811461037257600080fd5b60005b838110156105b85781810151838201526020016105a0565b8381111561027e5750506000910152565b600082516105db81846020870161059d565b9190910192915050565b602081526000825180602084015261060481604085016020870161059d565b601f01601f1916919091016040019291505056fea2646970667358221220147771aaa57b8ec3d3f1d5d0651fd3476284162c756cc9c4fed355ef8bbb002364736f6c634300080b0033";

type AssetLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetLogic__factory extends ContractFactory {
  constructor(...args: AssetLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetLogic> {
    return super.deploy(overrides || {}) as Promise<AssetLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetLogic {
    return super.attach(address) as AssetLogic;
  }
  override connect(signer: Signer): AssetLogic__factory {
    return super.connect(signer) as AssetLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetLogicInterface {
    return new utils.Interface(_abi) as AssetLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetLogic {
    return new Contract(address, _abi, signerOrProvider) as AssetLogic;
  }
}
