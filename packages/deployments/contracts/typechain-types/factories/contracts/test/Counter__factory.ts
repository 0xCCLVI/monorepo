/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Counter,
  CounterInterface,
} from "../../../contracts/test/Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "executor",
    outputs: [
      {
        internalType: "contract IExecutor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "setExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b506000805460ff19169055610b2b8061002f6000396000f3fe60806040526004361061007b5760003560e01c8063c34c08e51161004e578063c34c08e5146101c7578063d09de08a146101ff578063d2eee78a14610214578063d3072d82146102275761007b565b806306661abd1461012b5780631c3c0ea8146101545780636813d787146101915780639e5faafc146101bf575b60025467016345785d8a00006001600160a01b03909116311061012957600254604051638468104760e01b81526001600160a01b03909116906384681047906100df90612b679067016345785d8a000090309060009062ffffff199060040161087c565b6000604051808303816000875af11580156100fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101269190810190610910565b50505b005b34801561013757600080fd5b5061014160015481565b6040519081526020015b60405180910390f35b34801561016057600080fd5b5061012961016f3660046109ef565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b34801561019d57600080fd5b506101296101ac366004610a0a565b6000805460ff1916911515919091179055565b610129610251565b3480156101d357600080fd5b506002546101e7906001600160a01b031681565b6040516001600160a01b03909116815260200161014b565b34801561020b57600080fd5b506101296102f8565b610129610222366004610a27565b610369565b34801561023357600080fd5b506000546102419060ff1681565b604051901515815260200161014b565b67016345785d8a000034101561026657600080fd5b600254604051638468104760e01b81526001600160a01b03909116906384681047906102ad90612b679067016345785d8a000090309060009062ffffff199060040161087c565b6000604051808303816000875af11580156102cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f49190810190610910565b5050565b60005460ff16156103505760405162461bcd60e51b815260206004820152601f60248201527f696e6372656d656e743a2073686f756c6452657665727420697320747275650060448201526064015b60405180910390fd5b60018060008282546103629190610a63565b9091555050565b6001600160a01b0383166103d7578034146103d25760405162461bcd60e51b8152602060048201526024808201527f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60448201526313d5539560e21b6064820152608401610347565b610431565b34156104255760405162461bcd60e51b815260206004820152601e60248201527f696e6372656d656e74416e6453656e643a204554485f574954485f45524300006044820152606401610347565b61043183333084610449565b6104396102f8565b6104448383836104ba565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104b49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526104de565b50505050565b6001600160a01b038316156104d4576104448383836105b0565b61044482826105e0565b6000610533826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106f99092919063ffffffff16565b80519091501561044457808060200190518101906105519190610a89565b6104445760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610347565b6040516001600160a01b03831660248201526044810182905261044490849063a9059cbb60e01b9060640161047d565b804710156106305760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610347565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461067d576040519150601f19603f3d011682016040523d82523d6000602084013e610682565b606091505b50509050806104445760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610347565b60606107088484600085610712565b90505b9392505050565b6060824710156107735760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610347565b6001600160a01b0385163b6107ca5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610347565b600080866001600160a01b031685876040516107e69190610aa6565b60006040518083038185875af1925050503d8060008114610823576040519150601f19603f3d011682016040523d82523d6000602084013e610828565b606091505b5091509150610838828286610843565b979650505050505050565b6060831561085257508161070b565b8251156108625782518084602001fd5b8160405162461bcd60e51b81526004016103479190610ac2565b94855260208501939093526001600160a01b03918216604085015216606083015262ffffff1916608082015260c060a0820181905260009082015260e00190565b80151581146108cb57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b838110156108ff5781810151838201526020016108e7565b838111156104b45750506000910152565b6000806040838503121561092357600080fd5b825161092e816108bd565b602084015190925067ffffffffffffffff8082111561094c57600080fd5b818501915085601f83011261096057600080fd5b815181811115610972576109726108ce565b604051601f8201601f19908116603f0116810190838211818310171561099a5761099a6108ce565b816040528281528860208487010111156109b357600080fd5b6109c48360208301602088016108e4565b80955050505050509250929050565b80356001600160a01b03811681146109ea57600080fd5b919050565b600060208284031215610a0157600080fd5b61070b826109d3565b600060208284031215610a1c57600080fd5b813561070b816108bd565b600080600060608486031215610a3c57600080fd5b610a45846109d3565b9250610a53602085016109d3565b9150604084013590509250925092565b60008219821115610a8457634e487b7160e01b600052601160045260246000fd5b500190565b600060208284031215610a9b57600080fd5b815161070b816108bd565b60008251610ab88184602087016108e4565b9190910192915050565b6020815260008251806020840152610ae18160408501602087016108e4565b601f01601f1916919091016040019291505056fea2646970667358221220df752839e12312a76dab9d8400268d98f43d5388687969853497c30c6adfb0b764736f6c634300080b0033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  override connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
