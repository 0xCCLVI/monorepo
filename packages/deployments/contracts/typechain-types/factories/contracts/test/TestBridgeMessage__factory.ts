/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBridgeMessage,
  TestBridgeMessageInterface,
} from "../../../contracts/test/TestBridgeMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFormatDetailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_idType",
        type: "uint8",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_actionType",
        type: "uint8",
      },
    ],
    name: "testFormatMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "testFormatTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_enableFast",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "_externalId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_externalHash",
        type: "bytes32",
      },
    ],
    name: "testFormatTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsFastTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_t",
        type: "uint8",
      },
    ],
    name: "testIsValidAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testIsValidMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMessageType",
    outputs: [
      {
        internalType: "enum BridgeMessage.Types",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMustBeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testSplitMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
    ],
    name: "testSplitTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transfer",
        type: "bytes",
      },
    ],
    name: "testSplitTransfer",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611953806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638cdce7e21161008c578063cd9aeee611610066578063cd9aeee61461022b578063d70e2f391461024b578063dfd9d1db1461025e578063f9dd616a1461027157600080fd5b80638cdce7e2146101f2578063932cbc9814610205578063b81726a21461021857600080fd5b806312bdd731146100d45780631b083da5146100fd57806348528b0c1461013b5780636c18a1851461015c5780637d5bf43d146101ae5780638213d910146101cf575b600080fd5b6100e76100e2366004611473565b610284565b6040516100f491906114be565b60405180910390f35b61011061010b366004611473565b6102ab565b6040805163ffffffff909416845260208401929092526001600160a01b0316908201526060016100f4565b61014e610149366004611473565b6102f1565b6040516100f4929190611542565b61016f61016a366004611473565b610349565b6040805160ff909716875260208701959095526001600160a01b03909316938501939093526060840152608083019190915260a082015260c0016100f4565b6101c16101bc366004611567565b6103c1565b6040519081526020016100f4565b6101e26101dd3660046115f9565b6103d6565b60405190151581526020016100f4565b6101e2610200366004611473565b6103f5565b6101e2610213366004611473565b610410565b6101e2610226366004611473565b610430565b61023e610239366004611647565b610448565b6040516100f4919061167c565b61023e61025936600461168f565b610462565b61023e61026c3660046116e7565b610480565b61023e61027f366004611473565b6104c5565b600080610290836104e1565b90506102a461029f8483610504565b610528565b9392505050565b60008080806102bb856001610504565b905060006102c882610549565b905060006102d583610574565b905060006102e284610596565b92989197509195509350505050565b606080600061030360025b8590610504565b90506000610310826105b6565b9050600061031d836105da565b905061032e62ffffff198316610632565b61033d62ffffff198316610632565b94509450505050915091565b600080808080808061035c886004610504565b905060006103698261067b565b905060006103768361068f565b90506000610383846106a4565b90506000610390856106b7565b9050600061039d866106cc565b905060006103aa876106e1565b959e949d50929b5090995097509195509350505050565b60006103ce8484846106f6565b949350505050565b60006102a46103f08360048111156102fc576102fc6114a8565b610732565b60008061040560045b8490610504565b90506102a481610748565b60008061041c836104e1565b90506102a461042b8483610504565b610755565b60008061043d60036103fe565b90506102a481610778565b60606102a46104578484610785565b62ffffff1916610632565b60606104756104578888888888886107e1565b979650505050505050565b606060006104a0846004811115610499576104996114a8565b8790610504565b905060006104b9846004811115610499576104996114a8565b90506104758282610836565b606060006104d360026103fe565b90506102a46104578261090a565b6000816024815181106104f6576104f661176c565b016020015160f81c92915050565b81516000906020840161051f64ffffffffff85168284610923565b95945050505050565b600060d882901c60ff166004811115610543576105436114a8565b92915050565b6000816001610560815b62ffffff19841690610967565b506103ce62ffffff19851660006004610a40565b600081600161058281610553565b506103ce62ffffff19851660046020610a70565b60008160016105a481610553565b506103ce62ffffff1985166010610bc9565b60008160026105c481610553565b506103ce62ffffff198516600060246001610bd7565b60008160026105e881610553565b5060006106036024601887901c6001600160601b0316611798565b9050600061061086610c47565b60ff16905061062862ffffff19871660248484610bd7565b9695505050505050565b606060008061064a8460181c6001600160601b031690565b6001600160601b03169050604051915081925061066a8483602001610c5c565b508181016020016040529052919050565b600061054362ffffff198316826001610a40565b600061054362ffffff19831660016020610a70565b600061054362ffffff198316600d610bc9565b600061054362ffffff19831660216020610a40565b600061054362ffffff19831660616020610a70565b600061054362ffffff19831660816020610a70565b6000835184845185856040516020016107139594939291906117af565b6040516020818303038152906040528051906020012090509392505050565b600061073d82610778565b806105435750610543825b6000610543826004610db4565b6000601882901c6001600160601b031661077160a1602461180f565b1492915050565b6000610543826003610db4565b60006102a460016040516001600160e01b031960e087901b166020820152602481018590526107cb906000906044015b60408051601f1981840301815291905290610504565b6301000000600160d81b031660d89190911b1790565b600080846107f05760036107f3565b60045b905061082a81600481111561080a5761080a6114a8565b6107cb6000848c8c8c8b8b6040516020016107b596959493929190611827565b98975050505050505050565b606082600161084481610553565b5061084e84610732565b6108895760405162461bcd60e51b815260206004820152600760248201526610b0b1ba34b7b760c91b60448201526064015b60405180910390fd5b60408051600280825260608201835260009260208301908036833701905050905085816000815181106108be576108be61176c565b602002602001019062ffffff1916908162ffffff19168152505084816001815181106108ec576108ec61176c565b62ffffff199092166020928302919091019091015261062881610e13565b600061054361091883610e68565b62ffffff1916610e9a565b600080610930838561180f565b9050604051811115610940575060005b806109525762ffffff199150506102a4565b5050606092831b9190911790911b1760181b90565b60006109738383610ef5565b610a395760006109926109868560d81c90565b64ffffffffff16610f18565b91505060006109a78464ffffffffff16610f18565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b8152600401610880919061167c565b5090919050565b6000610a4d826020611875565b610a58906008611898565b60ff16610a66858585610a70565b901c949350505050565b600060ff8216610a82575060006102a4565b610a958460181c6001600160601b031690565b6001600160601b0316610aab60ff84168561180f565b1115610b0f57610af6610ac78560781c6001600160601b031690565b6001600160601b0316610ae38660181c6001600160601b031690565b6001600160601b0316858560ff16610fc6565b60405162461bcd60e51b8152600401610880919061167c565b60208260ff161115610b895760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610880565b600882026000610ba28660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60006102a483836014610a40565b600080610bed8660781c6001600160601b031690565b6001600160601b03169050610c01866110f0565b84610c0c878461180f565b610c16919061180f565b1115610c295762ffffff199150506103ce565b610c33858261180f565b90506106288364ffffffffff168286610923565b600061054362ffffff19831660246001610a40565b600062ffffff198084161415610cc55760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610880565b610cce83611129565b610d2e5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610880565b6000610d438460181c6001600160601b031690565b6001600160601b031690506000610d638560781c6001600160601b031690565b6001600160601b031690506000604051905084811115610d835760206060fd5b8285848460045afa50610628610d998760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816004811115610dc857610dc86114a8565b60ff16610dd48461067b565b60ff161480156102a45750816004811115610df157610df16114a8565b610dfa84610528565b6004811115610e0b57610e0b6114a8565b149392505050565b6040516060906000610e288460208401611167565b90506000610e3f8260181c6001600160601b031690565b6001600160601b031690506000610e55836111f7565b9184525082016020016040525092915050565b6000610e7382610755565b15610e90576301000000600160d81b038216600160d91b17610543565b62ffffff19610543565b6000610ea582611129565b610ef15760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c6564000000000000006044820152606401610880565b5090565b60008164ffffffffff16610f098460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115610f6d576000610f37826008611898565b60ff1685901c9050610f488161120d565b61ffff16841793508160ff16601014610f6357601084901b93505b5060001901610f1e565b50600f5b60ff8160ff161015610fc0576000610f8a826008611898565b60ff1685901c9050610f9b8161120d565b61ffff16831792508160ff16600014610fb657601083901b92505b5060001901610f71565b50915091565b60606000610fd386610f18565b9150506000610fe186610f18565b9150506000610fef86610f18565b9150506000610ffd86610f18565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60006111058260181c6001600160601b031690565b6111188360781c6001600160601b031690565b016001600160601b03169050919050565b60006111358260d81c90565b64ffffffffff1664ffffffffff141561115057506000919050565b600061115b836110f0565b60405110199392505050565b60006040518281111561117a5760206060fd5b506000805b84518110156111e757600085828151811061119c5761119c61176c565b602002602001015190506111b281848701610c5c565b506111c68160181c6001600160601b031690565b6001600160601b0316830192505080806111df906118c1565b91505061117f565b50606083901b811760181b6103ce565b60006112028261123f565b6105439060206118dc565b600061121f60048360ff16901c611274565b60ff1661ffff919091161760081b61123682611274565b60ff1617919050565b600060206112568360181c6001600160601b031690565b61126a906001600160601b0316602061180f565b61054391906118fb565b600060f08083179060ff8216141561128f5750603092915050565b8060ff1660f114156112a45750603192915050565b8060ff1660f214156112b95750603292915050565b8060ff1660f314156112ce5750603392915050565b8060ff1660f414156112e35750603492915050565b8060ff1660f514156112f85750603592915050565b8060ff1660f6141561130d5750603692915050565b8060ff1660f714156113225750603792915050565b8060ff1660f814156113375750603892915050565b8060ff1660f9141561134c5750603992915050565b8060ff1660fa14156113615750606192915050565b8060ff1660fb14156113765750606292915050565b8060ff1660fc141561138b5750606392915050565b8060ff1660fd14156113a05750606492915050565b8060ff1660fe14156113b55750606592915050565b8060ff1660ff14156113ca5750606692915050565b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126113f757600080fd5b813567ffffffffffffffff80821115611412576114126113d0565b604051601f8301601f19908116603f0116810190828211818310171561143a5761143a6113d0565b8160405283815286602085880101111561145357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561148557600080fd5b813567ffffffffffffffff81111561149c57600080fd5b6103ce848285016113e6565b634e487b7160e01b600052602160045260246000fd5b60208101600583106114e057634e487b7160e01b600052602160045260246000fd5b91905290565b60005b838110156115015781810151838201526020016114e9565b83811115611510576000848401525b50505050565b6000815180845261152e8160208601602086016114e6565b601f01601f19169290920160200192915050565b6040815260006115556040830185611516565b828103602084015261051f8185611516565b60008060006060848603121561157c57600080fd5b833567ffffffffffffffff8082111561159457600080fd5b6115a0878388016113e6565b945060208601359150808211156115b657600080fd5b506115c3868287016113e6565b925050604084013560ff811681146115da57600080fd5b809150509250925092565b8035600581106115f457600080fd5b919050565b6000806040838503121561160c57600080fd5b823567ffffffffffffffff81111561162357600080fd5b61162f858286016113e6565b92505061163e602084016115e5565b90509250929050565b6000806040838503121561165a57600080fd5b823563ffffffff8116811461166e57600080fd5b946020939093013593505050565b6020815260006102a46020830184611516565b60008060008060008060c087890312156116a857600080fd5b863595506020870135945060408701359350606087013580151581146116cd57600080fd5b9598949750929560808101359460a0909101359350915050565b600080600080608085870312156116fd57600080fd5b843567ffffffffffffffff8082111561171557600080fd5b611721888389016113e6565b9550602087013591508082111561173757600080fd5b50611744878288016113e6565b935050611753604086016115e5565b9150611761606086016115e5565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156117aa576117aa611782565b500390565b858152600085516117c7816020850160208a016114e6565b808301905085602082015284516117e58160408401602089016114e6565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6000821982111561182257611822611782565b500190565b60006005881061184757634e487b7160e01b600052602160045260246000fd5b5060f89690961b86526001860194909452602185019290925260418401526061830152608182015260a10190565b600060ff821660ff84168082101561188f5761188f611782565b90039392505050565b600060ff821660ff84168160ff04811182151516156118b9576118b9611782565b029392505050565b60006000198214156118d5576118d5611782565b5060010190565b60008160001904831182151516156118f6576118f6611782565b500290565b60008261191857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c7f87c551e01b53dce44ca48bffc5d209b21394f403644814f5f0075f38940d764736f6c634300080b0033";

type TestBridgeMessageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBridgeMessageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBridgeMessage__factory extends ContractFactory {
  constructor(...args: TestBridgeMessageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBridgeMessage> {
    return super.deploy(overrides || {}) as Promise<TestBridgeMessage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestBridgeMessage {
    return super.attach(address) as TestBridgeMessage;
  }
  override connect(signer: Signer): TestBridgeMessage__factory {
    return super.connect(signer) as TestBridgeMessage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBridgeMessageInterface {
    return new utils.Interface(_abi) as TestBridgeMessageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBridgeMessage {
    return new Contract(address, _abi, signerOrProvider) as TestBridgeMessage;
  }
}
