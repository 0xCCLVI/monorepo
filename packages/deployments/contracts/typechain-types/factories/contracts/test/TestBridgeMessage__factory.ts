/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestBridgeMessage,
  TestBridgeMessageInterface,
} from "../../../contracts/test/TestBridgeMessage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "testFormatDetailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_idType",
        type: "uint8",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_actionType",
        type: "uint8",
      },
    ],
    name: "testFormatMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
    ],
    name: "testFormatTokenId",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_to",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_enableFast",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "_externalHash",
        type: "bytes32",
      },
    ],
    name: "testFormatTransfer",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsFastTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
    ],
    name: "testIsTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_action",
        type: "bytes",
      },
      {
        internalType: "enum BridgeMessage.Types",
        name: "_t",
        type: "uint8",
      },
    ],
    name: "testIsValidAction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testIsValidMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMessageType",
    outputs: [
      {
        internalType: "enum BridgeMessage.Types",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testMustBeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "testSplitMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_tokenId",
        type: "bytes",
      },
    ],
    name: "testSplitTokenId",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_transfer",
        type: "bytes",
      },
    ],
    name: "testSplitTransfer",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611929806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638213d9101161008c578063b81726a211610066578063b81726a214610233578063cd9aeee614610246578063dfd9d1db14610259578063f9dd616a1461026c57600080fd5b80638213d910146101ea5780638cdce7e21461020d578063932cbc981461022057600080fd5b806312bdd731146100d45780631b083da5146100fd57806348528b0c1461013b57806364d7bacf1461015c5780636c18a1851461017c5780637d5bf43d146101c9575b600080fd5b6100e76100e2366004611381565b61027f565b6040516100f491906113cc565b60405180910390f35b61011061010b366004611381565b6102a6565b6040805163ffffffff909416845260208401929092526001600160a01b0316908201526060016100f4565b61014e610149366004611381565b6102ec565b6040516100f4929190611450565b61016f61016a366004611475565b610344565b6040516100f491906114c3565b61018f61018a366004611381565b61036b565b6040805160ff909616865260208601949094526001600160a01b03909216928401929092526060830191909152608082015260a0016100f4565b6101dc6101d73660046114d6565b6103d2565b6040519081526020016100f4565b6101fd6101f8366004611568565b6103e7565b60405190151581526020016100f4565b6101fd61021b366004611381565b610406565b6101fd61022e366004611381565b610421565b6101fd610241366004611381565b610441565b61016f6102543660046115b6565b610459565b61016f6102673660046115eb565b610468565b61016f61027a366004611381565b6104b8565b60008061028b836104d4565b905061029f61029a84836104f7565b61051b565b9392505050565b60008080806102b68560016104f7565b905060006102c38261053c565b905060006102d083610567565b905060006102dd84610589565b92989197509195509350505050565b60608060006102fe60025b85906104f7565b9050600061030b826105a9565b90506000610318836105cd565b905061032962ffffff19831661061b565b61033862ffffff19831661061b565b94509450505050915091565b60606103616103568787878787610664565b62ffffff191661061b565b9695505050505050565b6000808080808061037d8760046104f7565b9050600061038a826106d7565b90506000610397836106eb565b905060006103a484610700565b905060006103b185610713565b905060006103be86610728565b949c939b5091995097509195509350505050565b60006103df84848461073d565b949350505050565b600061029f6104018360048111156102f7576102f76113b6565b610779565b60008061041660045b84906104f7565b905061029f8161078f565b60008061042d836104d4565b905061029f61043c84836104f7565b61079c565b60008061044e600361040f565b905061029f816107bf565b606061029f61035684846107cc565b60606000610488846004811115610481576104816113b6565b87906104f7565b905060006104a1846004811115610481576104816113b6565b90506104ad8282610800565b979650505050505050565b606060006104c6600261040f565b905061029f610356826108d4565b6000816024815181106104e9576104e9611670565b016020015160f81c92915050565b81516000906020840161051264ffffffffff851682846108ed565b95945050505050565b600060d882901c60ff166004811115610536576105366113b6565b92915050565b6000816001610553815b62ffffff19841690610931565b506103df62ffffff19851660006004610a0a565b600081600161057581610546565b506103df62ffffff19851660046020610a3a565b600081600161059781610546565b506103df62ffffff1985166010610b93565b60008160026105b781610546565b506103df62ffffff198516600060246001610ba1565b60008160026105db81610546565b5060006105f66024601887901c6001600160601b031661169c565b9050600061060386610c11565b60ff16905061036162ffffff19871660248484610ba1565b60606000806106338460181c6001600160601b031690565b6001600160601b0316905060405191508192506106538483602001610c26565b508181016020016040529052919050565b60008083610673576003610676565b60045b90506104ad81600481111561068d5761068d6113b6565b6106c16000848b8b8b8a6040516020016106ab9594939291906116b3565b60408051601f19818403018152919052906104f7565b6301000000600160d81b031660d89190911b1790565b600061053662ffffff198316826001610a0a565b600061053662ffffff19831660016020610a3a565b600061053662ffffff198316600d610b93565b600061053662ffffff19831660216020610a0a565b600061053662ffffff19831660616020610a3a565b60008351848451858560405160200161075a9594939291906116fc565b6040516020818303038152906040528051906020012090509392505050565b6000610784826107bf565b806105365750610536825b6000610536826004610d7e565b6000601882901c6001600160601b03166107b86081602461175c565b1492915050565b6000610536826003610d7e565b600061029f60016040516001600160e01b031960e087901b166020820152602481018590526106c1906000906044016106ab565b606082600161080e81610546565b5061081884610779565b6108535760405162461bcd60e51b815260206004820152600760248201526610b0b1ba34b7b760c91b60448201526064015b60405180910390fd5b604080516002808252606082018352600092602083019080368337019050509050858160008151811061088857610888611670565b602002602001019062ffffff1916908162ffffff19168152505084816001815181106108b6576108b6611670565b62ffffff199092166020928302919091019091015261036181610ddd565b60006105366108e283610e32565b62ffffff1916610e64565b6000806108fa838561175c565b905060405181111561090a575060005b8061091c5762ffffff1991505061029f565b5050606092831b9190911790911b1760181b90565b600061093d8383610ebf565b610a0357600061095c6109508560d81c90565b64ffffffffff16610ee2565b91505060006109718464ffffffffff16610ee2565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b815260040161084a91906114c3565b5090919050565b6000610a17826020611774565b610a22906008611797565b60ff16610a30858585610a3a565b901c949350505050565b600060ff8216610a4c5750600061029f565b610a5f8460181c6001600160601b031690565b6001600160601b0316610a7560ff84168561175c565b1115610ad957610ac0610a918560781c6001600160601b031690565b6001600160601b0316610aad8660181c6001600160601b031690565b6001600160601b0316858560ff16610f90565b60405162461bcd60e51b815260040161084a91906114c3565b60208260ff161115610b535760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161084a565b600882026000610b6c8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600061029f83836014610a0a565b600080610bb78660781c6001600160601b031690565b6001600160601b03169050610bcb86610ffe565b84610bd6878461175c565b610be0919061175c565b1115610bf35762ffffff199150506103df565b610bfd858261175c565b90506103618364ffffffffff1682866108ed565b600061053662ffffff19831660246001610a0a565b600062ffffff198084161415610c8f5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161084a565b610c9883611037565b610cf85760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161084a565b6000610d0d8460181c6001600160601b031690565b6001600160601b031690506000610d2d8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115610d4d5760206060fd5b8285848460045afa50610361610d638760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816004811115610d9257610d926113b6565b60ff16610d9e846106d7565b60ff1614801561029f5750816004811115610dbb57610dbb6113b6565b610dc48461051b565b6004811115610dd557610dd56113b6565b149392505050565b6040516060906000610df28460208401611075565b90506000610e098260181c6001600160601b031690565b6001600160601b031690506000610e1f83611105565b9184525082016020016040525092915050565b6000610e3d8261079c565b15610e5a576301000000600160d81b038216600160d91b17610536565b62ffffff19610536565b6000610e6f82611037565b610ebb5760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c656400000000000000604482015260640161084a565b5090565b60008164ffffffffff16610ed38460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115610f37576000610f01826008611797565b60ff1685901c9050610f128161111b565b61ffff16841793508160ff16601014610f2d57601084901b93505b5060001901610ee8565b50600f5b60ff8160ff161015610f8a576000610f54826008611797565b60ff1685901c9050610f658161111b565b61ffff16831792508160ff16600014610f8057601083901b92505b5060001901610f3b565b50915091565b60606000610f9d86610ee2565b9150506000610fab86610ee2565b9150506000610fb986610ee2565b9150506000610fc786610ee2565b91505083838383604051602001610fe194939291906117c0565b604051602081830303815290604052945050505050949350505050565b60006110138260181c6001600160601b031690565b6110268360781c6001600160601b031690565b016001600160601b03169050919050565b60006110438260d81c90565b64ffffffffff1664ffffffffff141561105e57506000919050565b600061106983610ffe565b60405110199392505050565b6000604051828111156110885760206060fd5b506000805b84518110156110f55760008582815181106110aa576110aa611670565b602002602001015190506110c081848701610c26565b506110d48160181c6001600160601b031690565b6001600160601b0316830192505080806110ed90611897565b91505061108d565b50606083901b811760181b6103df565b60006111108261114d565b6105369060206118b2565b600061112d60048360ff16901c611182565b60ff1661ffff919091161760081b61114482611182565b60ff1617919050565b600060206111648360181c6001600160601b031690565b611178906001600160601b0316602061175c565b61053691906118d1565b600060f08083179060ff8216141561119d5750603092915050565b8060ff1660f114156111b25750603192915050565b8060ff1660f214156111c75750603292915050565b8060ff1660f314156111dc5750603392915050565b8060ff1660f414156111f15750603492915050565b8060ff1660f514156112065750603592915050565b8060ff1660f6141561121b5750603692915050565b8060ff1660f714156112305750603792915050565b8060ff1660f814156112455750603892915050565b8060ff1660f9141561125a5750603992915050565b8060ff1660fa141561126f5750606192915050565b8060ff1660fb14156112845750606292915050565b8060ff1660fc14156112995750606392915050565b8060ff1660fd14156112ae5750606492915050565b8060ff1660fe14156112c35750606592915050565b8060ff1660ff14156112d85750606692915050565b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261130557600080fd5b813567ffffffffffffffff80821115611320576113206112de565b604051601f8301601f19908116603f01168101908282118183101715611348576113486112de565b8160405283815286602085880101111561136157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561139357600080fd5b813567ffffffffffffffff8111156113aa57600080fd5b6103df848285016112f4565b634e487b7160e01b600052602160045260246000fd5b60208101600583106113ee57634e487b7160e01b600052602160045260246000fd5b91905290565b60005b8381101561140f5781810151838201526020016113f7565b8381111561141e576000848401525b50505050565b6000815180845261143c8160208601602086016113f4565b601f01601f19169290920160200192915050565b6040815260006114636040830185611424565b82810360208401526105128185611424565b600080600080600060a0868803121561148d57600080fd5b853594506020860135935060408601359250606086013580151581146114b257600080fd5b949793965091946080013592915050565b60208152600061029f6020830184611424565b6000806000606084860312156114eb57600080fd5b833567ffffffffffffffff8082111561150357600080fd5b61150f878388016112f4565b9450602086013591508082111561152557600080fd5b50611532868287016112f4565b925050604084013560ff8116811461154957600080fd5b809150509250925092565b80356005811061156357600080fd5b919050565b6000806040838503121561157b57600080fd5b823567ffffffffffffffff81111561159257600080fd5b61159e858286016112f4565b9250506115ad60208401611554565b90509250929050565b600080604083850312156115c957600080fd5b823563ffffffff811681146115dd57600080fd5b946020939093013593505050565b6000806000806080858703121561160157600080fd5b843567ffffffffffffffff8082111561161957600080fd5b611625888389016112f4565b9550602087013591508082111561163b57600080fd5b50611648878288016112f4565b93505061165760408601611554565b915061166560608601611554565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156116ae576116ae611686565b500390565b6000600587106116d357634e487b7160e01b600052602160045260246000fd5b5060f89590951b8552600185019390935260218401919091526041830152606182015260810190565b85815260008551611714816020850160208a016113f4565b808301905085602082015284516117328160408401602089016113f4565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6000821982111561176f5761176f611686565b500190565b600060ff821660ff84168082101561178e5761178e611686565b90039392505050565b600060ff821660ff84168160ff04811182151516156117b8576117b8611686565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201610361565b60006000198214156118ab576118ab611686565b5060010190565b60008160001904831182151516156118cc576118cc611686565b500290565b6000826118ee57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122062fdf42af80782b7d71a53d1fec6135b45b0c951e79bd4c97a95b6fb6a2185b864736f6c634300080b0033";

type TestBridgeMessageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestBridgeMessageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestBridgeMessage__factory extends ContractFactory {
  constructor(...args: TestBridgeMessageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestBridgeMessage> {
    return super.deploy(overrides || {}) as Promise<TestBridgeMessage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestBridgeMessage {
    return super.attach(address) as TestBridgeMessage;
  }
  override connect(signer: Signer): TestBridgeMessage__factory {
    return super.connect(signer) as TestBridgeMessage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestBridgeMessageInterface {
    return new utils.Interface(_abi) as TestBridgeMessageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestBridgeMessage {
    return new Contract(address, _abi, signerOrProvider) as TestBridgeMessage;
  }
}
