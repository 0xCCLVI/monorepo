/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExecutorTest,
  ExecutorTestInterface,
} from "../../../../../../contracts/test/forge/interpreters/Executor.t.sol/ExecutorTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NATIVE_ASSET",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stdstore",
    outputs: [
      {
        internalType: "bytes4",
        name: "_sig",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_depth",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_set",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testGetConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOrigin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOriginRevertOnEmpty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOriginSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOriginSenderRevertOnEmpty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60008054600160ff199091168117909155600a8054306001600160a01b031991821617909155600b805490911682179055600c80546001600160c01b0319167503e8000000000000000000000000000000000000000217905560a052602060805260c06040527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600d5534801561009557600080fd5b506126a4806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063ba414fa611610071578063ba414fa61461015b578063bf53253b1461017d578063c020a3b414610185578063d2e64f551461018d578063dcaba38c14610195578063fa7626d41461019d57600080fd5b80630a9254e4146100ae5780632e8bde39146100b857806330991384146100c05780633a76846314610120578063aae5b43514610153575b600080fd5b6100b66101aa565b005b6100b661025d565b6004546005546006546007546100e29360e01b92916001600160a01b03169084565b604080516001600160e01b0319909516855260208501939093526001600160a01b039091169183019190915260608201526080015b60405180910390f35b61013b737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b039091168152602001610117565b6100b66103ec565b60005461016d90610100900460ff1681565b6040519015158152602001610117565b61013b600081565b6100b6610477565b6100b661057c565b6100b66105a1565b60005461016d9060ff1681565b600a546040516001600160a01b03909116906101c5906109c0565b6001600160a01b039091168152602001604051809103906000f0801580156101f1573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691909117905560405161021e906109cd565b604051809103906000f08015801561023a573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160206024820181905260006044808401829052845180850390910181526064909301909352810180516001600160e01b0316630a0e302160e11b179052600c549091906102c490600160a01b810463ffffffff16906001600160a01b0316610722565b600854600d546009546040516278a6d160e61b81529394506000936001600160a01b0393841693631e29b4409361030b939092879290911690829089908b90600401610a36565b6000604051808303816000875af115801561032a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103529190810190610aa4565b50905061035e81610751565b600954604080516349c5af9960e11b815290516103e7926001600160a01b03169163938b5f329160048083019260209291908290030181865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190610b6c565b600c5463ffffffff91821691600160a01b909104166107d1565b505050565b60085460408051634baba06360e11b815290516000926001600160a01b03169163975740c69160048083019260209291908290030181865afa158015610436573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045a9190610b99565b600a549091506104749082906001600160a01b03166108cc565b50565b604051602060248201526000604482018190529063434050c960e01b906064015b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352600854600d5460095483518085018552601d815262ffffff199681019690965292516278a6d160e61b81529395506000946001600160a01b0392831694631e29b440946105249488939116918391908a90600401610a36565b6000604051808303816000875af1158015610543573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056b9190810190610aa4565b5090506105788115610751565b5050565b6040516020602482015260006044820181905290630a0e302160e11b90606401610498565b6040805160206024820181905260006044808401829052845180850390910181526064909301909352810180516001600160e01b031663434050c960e01b179052600c5490919061060890600160a01b810463ffffffff16906001600160a01b0316610722565b600854600d546009546040516278a6d160e61b81529394506000936001600160a01b0393841693631e29b4409361064f939092879290911690829089908b90600401610a36565b6000604051808303816000875af115801561066e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106969190810190610aa4565b5090506106a281610751565b60095460408051632b59241f60e01b815290516103e7926001600160a01b031691632b59241f9160048083019260209291908290030181865afa1580156106ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107119190610b99565b600c546001600160a01b03166108cc565b60606001838360405160200161073a93929190610bc2565b604051602081830303815290604052905092915050565b80610474577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516107b59060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16104746000805461ff001916610100179055565b808214610578577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516108429060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516108799190610c1d565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516108b09190610c55565b60405180910390a16105786000805461ff001916610100179055565b806001600160a01b0316826001600160a01b031614610578577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516109529060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516109899190610c7f565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516108b09190610cc3565b61160580610cee83390190565b61037c806122f383390190565b60005b838110156109f55781810151838201526020016109dd565b83811115610a04576000848401525b50505050565b60008151808452610a228160208601602086016109da565b601f01601f19169290920160200192915050565b868152602081018690526001600160a01b0385811660408301528416606082015260c060808201819052600090610a6f90830185610a0a565b82810360a0840152610a818185610a0a565b9998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610ab757600080fd5b82518015158114610ac757600080fd5b602084015190925067ffffffffffffffff80821115610ae557600080fd5b818501915085601f830112610af957600080fd5b815181811115610b0b57610b0b610a8e565b604051601f8201601f19908116603f01168101908382118183101715610b3357610b33610a8e565b81604052828152886020848701011115610b4c57600080fd5b610b5d8360208301602088016109da565b80955050505050509250929050565b600060208284031215610b7e57600080fd5b815163ffffffff81168114610b9257600080fd5b9392505050565b600060208284031215610bab57600080fd5b81516001600160a01b0381168114610b9257600080fd5b600060028510610be257634e487b7160e01b600052602160045260246000fd5b5060f89390931b835260e09190911b6001600160e01b031916600183015260601b6bffffffffffffffffffffffff1916600582015260190190565b604081526000610c4760408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b604081526000610c4760408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000610ca960408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000610ca960408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60e0604052601d60a081905262ffffff1960c090815262000024916000919062000067565b503480156200003257600080fd5b50604051620016053803806200160583398101604081905262000055916200010d565b6001600160a01b03166080526200017c565b82805462000075906200013f565b90600052602060002090601f016020900481019282620000995760008555620000e4565b82601f10620000b457805160ff1916838001178555620000e4565b82800160010185558215620000e4579182015b82811115620000e4578251825591602001919060010190620000c7565b50620000f2929150620000f6565b5090565b5b80821115620000f25760008155600101620000f7565b6000602082840312156200012057600080fd5b81516001600160a01b03811681146200013857600080fd5b9392505050565b600181811c908216806200015457607f821691505b602082108114156200017657634e487b7160e01b600052602260045260246000fd5b50919050565b6080516114676200019e6000396000818160d4015261010701526114676000f3fe60806040526004361061003f5760003560e01c80631e29b440146100445780632b59241f1461006e578063938b5f321461009b578063975740c6146100c5575b600080fd5b610057610052366004611103565b6100f8565b604051610065929190611270565b60405180910390f35b34801561007a57600080fd5b506100836102ef565b6040516001600160a01b039091168152602001610065565b3480156100a757600080fd5b506100b0610396565b60405163ffffffff9091168152602001610065565b3480156100d157600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610083565b60006060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101635760405162461bcd60e51b8152602060048201526007602482015266234f433a30323760c81b60448201526064015b60405180910390fd5b6001600160a01b038616158061017e5761017e87898b6103b4565b600060606001600160a01b038a163b6101c55760405162461bcd60e51b81526020600482015260096024820152680858dbdb9d1c9858dd60ba1b604482015260640161015a565b87516101d89060009060208b0190610ffc565b50896001600160a01b0316836101ef5760006101f1565b8b5b888860405161020192919061128b565b60006040518083038185875af1925050503d806000811461023e576040519150601f19603f3d011682016040523d82523d6000602084013e610243565b606091505b5060408051808201909152601d80825262ffffff1960209092019182529294509092506102739160009190610ffc565b5081158015610280575082155b1561029057610290898b8d61049f565b896001600160a01b03168c7f627b4985667a94d1a70c70277b9471eed68009d6f9c3ae5d25fa799fd3f0398d8b8e8c8c8c888a6040516102d6979695949392919061129b565b60405180910390a3909b909a5098505050505050505050565b6000806103856000805461030290611318565b80601f016020809104026020016040519081016040528092919081815260200182805461032e90611318565b801561037b5780601f106103505761010080835404028352916020019161037b565b820191906000526020600020905b81548152906001019060200180831161035e57829003601f168201915b50505050506105b2565b9050610390816105cc565b91505090565b6000806103a96000805461030290611318565b9050610390816105fd565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610429919061134d565b610433919061137c565b6040516001600160a01b03851660248201526044810182905290915061049990859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261061f565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610513919061134d565b9050818110156105775760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b606482015260840161015a565b6040516001600160a01b038416602482015282820360448201819052906105ab90869063095ea7b360e01b90606401610462565b5050505050565b60006105c66105c183836106f6565b61071a565b92915050565b60008160016105e3815b62ffffff19841690610733565b506105f562ffffff198516600561080c565b949350505050565b600081600161060b816105d6565b506105f562ffffff19851660016004610821565b6000610674826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108519092919063ffffffff16565b8051909150156106f157808060200190518101906106929190611394565b6106f15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161015a565b505050565b81516000906020840161071164ffffffffff85168284610860565b95945050505050565b60006105c6610728836108a4565b62ffffff19166108de565b600061073f8383610939565b61080557600061075e6107528560d81c90565b64ffffffffff1661095c565b91505060006107738464ffffffffff1661095c565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b815260040161015a91906113b6565b5090919050565b600061081a83836014610821565b9392505050565b600061082e8260206113c9565b6108399060086113ec565b60ff16610847858585610a0a565b901c949350505050565b60606105f58484600085610b63565b60008061086d838561137c565b905060405181111561087d575060005b8061088f5762ffffff1991505061081a565b5050606092831b9190911790911b1760181b90565b60006001600160601b03601883901c16601914156108d4576301000000600160d81b038216600160d81b176105c6565b62ffffff196105c6565b60006108e982610c94565b6109355760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c656400000000000000604482015260640161015a565b5090565b60008164ffffffffff1661094d8460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff1611156109b157600061097b8260086113ec565b60ff1685901c905061098c81610cd2565b61ffff16841793508160ff166010146109a757601084901b93505b5060001901610962565b50600f5b60ff8160ff161015610a045760006109ce8260086113ec565b60ff1685901c90506109df81610cd2565b61ffff16831792508160ff166000146109fa57601083901b92505b50600019016109b5565b50915091565b600060ff8216610a1c5750600061081a565b610a2f8460181c6001600160601b031690565b6001600160601b0316610a4560ff84168561137c565b1115610aa957610a90610a618560781c6001600160601b031690565b6001600160601b0316610a7d8660181c6001600160601b031690565b6001600160601b0316858560ff16610d04565b60405162461bcd60e51b815260040161015a91906113b6565b60208260ff161115610b235760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161015a565b600882026000610b3c8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b606082471015610bc45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161015a565b6001600160a01b0385163b610c1b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161015a565b600080866001600160a01b03168587604051610c379190611415565b60006040518083038185875af1925050503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b5091509150610c89828286610e2e565b979650505050505050565b6000610ca08260d81c90565b64ffffffffff1664ffffffffff1415610cbb57506000919050565b6000610cc683610e67565b60405110199392505050565b6000610ce460048360ff16901c610ea0565b60ff1661ffff919091161760081b610cfb82610ea0565b60ff1617919050565b60606000610d118661095c565b9150506000610d1f8661095c565b9150506000610d2d8661095c565b9150506000610d3b8661095c565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60608315610e3d57508161081a565b825115610e4d5782518084602001fd5b8160405162461bcd60e51b815260040161015a91906113b6565b6000610e7c8260181c6001600160601b031690565b610e8f8360781c6001600160601b031690565b016001600160601b03169050919050565b600060f08083179060ff82161415610ebb5750603092915050565b8060ff1660f11415610ed05750603192915050565b8060ff1660f21415610ee55750603292915050565b8060ff1660f31415610efa5750603392915050565b8060ff1660f41415610f0f5750603492915050565b8060ff1660f51415610f245750603592915050565b8060ff1660f61415610f395750603692915050565b8060ff1660f71415610f4e5750603792915050565b8060ff1660f81415610f635750603892915050565b8060ff1660f91415610f785750603992915050565b8060ff1660fa1415610f8d5750606192915050565b8060ff1660fb1415610fa25750606292915050565b8060ff1660fc1415610fb75750606392915050565b8060ff1660fd1415610fcc5750606492915050565b8060ff1660fe1415610fe15750606592915050565b8060ff1660ff1415610ff65750606692915050565b50919050565b82805461100890611318565b90600052602060002090601f01602090048101928261102a5760008555611070565b82601f1061104357805160ff1916838001178555611070565b82800160010185558215611070579182015b82811115611070578251825591602001919060010190611055565b506109359291505b808211156109355760008155600101611078565b6001600160a01b03811681146110a157600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60008083601f8401126110cc57600080fd5b50813567ffffffffffffffff8111156110e457600080fd5b6020830191508360208285010111156110fc57600080fd5b9250929050565b600080600080600080600060c0888a03121561111e57600080fd5b873596506020880135955060408801356111378161108c565b945060608801356111478161108c565b9350608088013567ffffffffffffffff8082111561116457600080fd5b818a0191508a601f83011261117857600080fd5b81358181111561118a5761118a6110a4565b604051601f8201601f19908116603f011681019083821181831017156111b2576111b26110a4565b816040528281528d60208487010111156111cb57600080fd5b8260208601602083013760006020848301015280975050505060a08a01359150808211156111f857600080fd5b506112058a828b016110ba565b989b979a50959850939692959293505050565b60005b8381101561123357818101518382015260200161121b565b838111156104995750506000910152565b6000815180845261125c816020860160208601611218565b601f01601f19169290920160200192915050565b82151581526040602082015260006105f56040830184611244565b8183823760009101908152919050565b60018060a01b038816815286602082015260c0604082015260006112c260c0830188611244565b828103606084015285815285876020830137600060208783010152601f19601f8701168101905060208382030160808401526113016020820186611244565b91505082151560a083015298975050505050505050565b600181811c9082168061132c57607f821691505b60208210811415610ff657634e487b7160e01b600052602260045260246000fd5b60006020828403121561135f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561138f5761138f611366565b500190565b6000602082840312156113a657600080fd5b8151801515811461081a57600080fd5b60208152600061081a6020830184611244565b600060ff821660ff8416808210156113e3576113e3611366565b90039392505050565b600060ff821660ff84168160ff048111821515161561140d5761140d611366565b029392505050565b60008251611427818460208701611218565b919091019291505056fea26469706673582212206f451bf530ffbd079ee54d9860b951b6643692225e2d2d0d47cba8f223eb566d64736f6c634300080b003360806040526000805460ff1916600117905534801561001d57600080fd5b5061034f8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063434050c911610066578063434050c91461015b578063938b5f3214610163578063ba414fa61461017a578063bf53253b1461019c578063fa7626d4146101a457600080fd5b8063141c6042146100985780632b59241f146100ba57806330991384146100e55780633a76846314610140575b600080fd5b6100a06101b1565b60405163ffffffff90911681526020015b60405180910390f35b6008546100cd906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b6004546005546006546007546101079360e01b92916001600160a01b03169084565b604080516001600160e01b0319909516855260208501939093526001600160a01b039091169183019190915260608201526080016100b1565b6100cd737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6100cd61023a565b6008546100a090600160a01b900463ffffffff1681565b60005461018c90610100900460ff1681565b60405190151581526020016100b1565b6100cd600081565b60005461018c9060ff1681565b6000336001600160a01b031663938b5f326040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021791906102c3565b600860146101000a81548163ffffffff021916908363ffffffff16021790555090565b6000336001600160a01b0316632b59241f6040518163ffffffff1660e01b81526004016020604051808303816000875af115801561027c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a091906102f0565b600880546001600160a01b0319166001600160a01b039290921691909117905590565b6000602082840312156102d557600080fd5b815163ffffffff811681146102e957600080fd5b9392505050565b60006020828403121561030257600080fd5b81516001600160a01b03811681146102e957600080fdfea2646970667358221220532d51c84c7f0424ea8a5c26c9e78bde2f829af0ce0990e8e5f44aaa208b699e64736f6c634300080b0033a2646970667358221220f205d1af963d0e2e4ab2bbada38f4dadc065f88704e4ffd826a6c2b349326d8964736f6c634300080b0033";

type ExecutorTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutorTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExecutorTest__factory extends ContractFactory {
  constructor(...args: ExecutorTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExecutorTest> {
    return super.deploy(overrides || {}) as Promise<ExecutorTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExecutorTest {
    return super.attach(address) as ExecutorTest;
  }
  override connect(signer: Signer): ExecutorTest__factory {
    return super.connect(signer) as ExecutorTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorTestInterface {
    return new utils.Interface(_abi) as ExecutorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExecutorTest {
    return new Contract(address, _abi, signerOrProvider) as ExecutorTest;
  }
}
