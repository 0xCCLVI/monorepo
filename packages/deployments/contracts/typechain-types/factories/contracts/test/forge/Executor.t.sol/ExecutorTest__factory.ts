/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExecutorTest,
  ExecutorTestInterface,
} from "../../../../../contracts/test/forge/Executor.t.sol/ExecutorTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NATIVE_ASSET",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stdstore",
    outputs: [
      {
        internalType: "bytes4",
        name: "_sig",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "_depth",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_set",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testExecuteNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testGetConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOriginSenderRevertOnEmpty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6000805460ff19166001908117909155600a80546001600160a01b03199081163017909155600b80549091168217905560a052602060805260c06040527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600c5534801561006c57600080fd5b50611d898061007c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063aae5b43511610066578063aae5b43514610135578063ba414fa61461013d578063bf53253b1461015f578063c020a3b414610167578063fa7626d41461016f57600080fd5b80630a9254e41461009857806330991384146100a25780633a768463146101025780638fdd01cb146100a0575b600080fd5b6100a061017c565b005b6004546005546006546007546100c49360e01b92916001600160a01b03169084565b604080516001600160e01b0319909516855260208501939093526001600160a01b039091169183019190915260608201526080015b60405180910390f35b61011d737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100f9565b6100a061022f565b60005461014f90610100900460ff1681565b60405190151581526020016100f9565b61011d600081565b6100a06102ba565b60005461014f9060ff1681565b600a546040516001600160a01b039091169061019790610570565b6001600160a01b039091168152602001604051809103906000f0801580156101c3573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516101f09061057d565b604051809103906000f08015801561020c573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b0392909216919091179055565b60085460408051634baba06360e11b815290516000926001600160a01b03169163975740c69160048083019260209291908290030181865afa158015610279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029d919061058a565b600a549091506102b79082906001600160a01b0316610414565b50565b604080516020602482018190526000604480840191909152835180840390910181526064909201835281810180516001600160e01b0316636f8f94f760e11b17905282518084018452600b81526a2170726f7065727469657360a81b91810191909152915163f28dceb360e01b81529091737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39161035391600401610616565b600060405180830381600087803b15801561036d57600080fd5b505af1158015610381573d6000803e3d6000fd5b5050600854600c54600954604051638468104760e01b81526001600160a01b039384169550638468104794506103c8936000921690829062ffffff19908990600401610629565b6000604051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261040f9190810190610690565b505050565b806001600160a01b0316826001600160a01b03161461056c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161049a9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a161056c6000805461ff001916610100179055565b5050565b6113008061075983390190565b6102fb80611a5983390190565b60006020828403121561059c57600080fd5b81516001600160a01b03811681146105b357600080fd5b9392505050565b60005b838110156105d55781810151838201526020016105bd565b838111156105e4576000848401525b50505050565b600081518084526106028160208601602086016105ba565b601f01601f19169290920160200192915050565b6020815260006105b360208301846105ea565b868152602081018690526001600160a01b0385811660408301528416606082015262ffffff198316608082015260c060a0820181905260009061066e908301846105ea565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156106a357600080fd5b825180151581146106b357600080fd5b602084015190925067ffffffffffffffff808211156106d157600080fd5b818501915085601f8301126106e557600080fd5b8151818111156106f7576106f761067a565b604051601f8201601f19908116603f0116810190838211818310171561071f5761071f61067a565b8160405282815288602084870101111561073857600080fd5b6107498360208301602088016105ba565b8095505050505050925092905056fe60a0604052600080546001600160e81b0319166001600160e81b0317905534801561002957600080fd5b5060405161130038038061130083398101604081905261004891610059565b6001600160a01b0316608052610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b6080516112566100aa6000396000818160d0015261014d01526112566000f3fe60806040526004361061003f5760003560e01c80632b59241f146100445780638468104714610076578063938b5f3214610097578063975740c6146100c1575b600080fd5b34801561005057600080fd5b506100596100f4565b6040516001600160a01b0390911681526020015b60405180910390f35b610089610084366004610f39565b61013e565b60405161006d929190611058565b3480156100a357600080fd5b506100ac61033e565b60405163ffffffff909116815260200161006d565b3480156100cd57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610059565b6000805460181b62ffffff19908116141561012a5760405162461bcd60e51b815260040161012190611073565b60405180910390fd5b6000546101399060181b61037a565b905090565b60006060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101a45760405162461bcd60e51b8152602060048201526007602482015266234f433a30323760c81b6044820152606401610121565b6001600160a01b03861615806101bf576101bf87898b6103ab565b600060606001600160a01b038a163b158015906102c05760006101e962ffffff198b811690610496565b159050801561022e576101fb8a6104ef565b6102175760405162461bcd60e51b815260040161012190611073565b600080546001600160e81b03191660188c901c1790555b8b6001600160a01b031685610244576000610246565b8d5b8a8a604051610256929190611098565b60006040518083038185875af1925050503d8060008114610293576040519150601f19603f3d011682016040523d82523d6000602084013e610298565b606091505b50909450925080156102be57600080546001600160e81b0319166001600160e81b031790555b505b821580156102cc575083155b156102dc576102dc8a8c8e61051b565b8a6001600160a01b03168d7f32387f16e663a0bb215292b00070e6c9b95f1eb4bf3249b7d32149082bdab00a8c8f8d8d8d898b8a6040516103249897969594939291906110a8565b60405180910390a350909b909a5098505050505050505050565b6000805460181b62ffffff19908116141561036b5760405162461bcd60e51b815260040161012190611073565b6000546101399060181b61062e565b6000816001610391815b62ffffff19841690610650565b506103a362ffffff1985166005610729565b949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa1580156103fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610420919061113c565b61042a919061116b565b6040516001600160a01b03851660248201526044810182905290915061049090859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610737565b50505050565b600062ffffff1983811690831614806104e857506104b48260d81c90565b64ffffffffff166104c58460d81c90565b64ffffffffff161480156104e857506104dd8261080e565b6104e68461080e565b145b9392505050565b60006104fc826001610857565b801561051557506001600160601b03601883901c166019145b92915050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e90604401602060405180830381865afa15801561056b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058f919061113c565b9050818110156105f35760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b6064820152608401610121565b6040516001600160a01b0384166024820152828203604482018190529061062790869063095ea7b360e01b90606401610459565b5050505050565b600081600161063c81610384565b506103a362ffffff19851660056004610882565b600061065c83836108b2565b61072257600061067b61066f8560d81c90565b64ffffffffff166108d5565b91505060006106908464ffffffffff166108d5565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b81526004016101219190611183565b5090919050565b60006104e883836014610882565b600061078c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109839092919063ffffffff16565b80519091501561080957808060200190518101906107aa9190611196565b6108095760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610121565b505050565b6000806108248360781c6001600160601b031690565b6001600160601b0316905060006108448460181c6001600160601b031690565b6001600160601b03169091209392505050565b600081600181111561086b5761086b611126565b60ff1661087784610992565b60ff16149392505050565b600061088f8260206111b8565b61089a9060086111db565b60ff166108a88585856109a6565b901c949350505050565b60008164ffffffffff166108c68460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff16111561092a5760006108f48260086111db565b60ff1685901c905061090581610aff565b61ffff16841793508160ff1660101461092057601084901b93505b50600019016108db565b50600f5b60ff8160ff16101561097d5760006109478260086111db565b60ff1685901c905061095881610aff565b61ffff16831792508160ff1660001461097357601083901b92505b506000190161092e565b50915091565b60606103a38484600085610b31565b600061051562ffffff198316826001610882565b600060ff82166109b8575060006104e8565b6109cb8460181c6001600160601b031690565b6001600160601b03166109e160ff84168561116b565b1115610a4557610a2c6109fd8560781c6001600160601b031690565b6001600160601b0316610a198660181c6001600160601b031690565b6001600160601b0316858560ff16610c62565b60405162461bcd60e51b81526004016101219190611183565b60208260ff161115610abf5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610121565b600882026000610ad88660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000610b1160048360ff16901c610d8c565b60ff1661ffff919091161760081b610b2882610d8c565b60ff1617919050565b606082471015610b925760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610121565b6001600160a01b0385163b610be95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610121565b600080866001600160a01b03168587604051610c059190611204565b60006040518083038185875af1925050503d8060008114610c42576040519150601f19603f3d011682016040523d82523d6000602084013e610c47565b606091505b5091509150610c57828286610ee8565b979650505050505050565b60606000610c6f866108d5565b9150506000610c7d866108d5565b9150506000610c8b866108d5565b9150506000610c99866108d5565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b600060f08083179060ff82161415610da75750603092915050565b8060ff1660f11415610dbc5750603192915050565b8060ff1660f21415610dd15750603292915050565b8060ff1660f31415610de65750603392915050565b8060ff1660f41415610dfb5750603492915050565b8060ff1660f51415610e105750603592915050565b8060ff1660f61415610e255750603692915050565b8060ff1660f71415610e3a5750603792915050565b8060ff1660f81415610e4f5750603892915050565b8060ff1660f91415610e645750603992915050565b8060ff1660fa1415610e795750606192915050565b8060ff1660fb1415610e8e5750606292915050565b8060ff1660fc1415610ea35750606392915050565b8060ff1660fd1415610eb85750606492915050565b8060ff1660fe1415610ecd5750606592915050565b8060ff1660ff1415610ee25750606692915050565b50919050565b60608315610ef75750816104e8565b825115610f075782518084602001fd5b8160405162461bcd60e51b81526004016101219190611183565b6001600160a01b0381168114610f3657600080fd5b50565b600080600080600080600060c0888a031215610f5457600080fd5b87359650602088013595506040880135610f6d81610f21565b94506060880135610f7d81610f21565b9350608088013562ffffff1981168114610f9657600080fd5b925060a088013567ffffffffffffffff80821115610fb357600080fd5b818a0191508a601f830112610fc757600080fd5b813581811115610fd657600080fd5b8b6020828501011115610fe857600080fd5b60208301945080935050505092959891949750929550565b60005b8381101561101b578181015183820152602001611003565b838111156104905750506000910152565b60008151808452611044816020860160208601611000565b601f01601f19169290920160200192915050565b82151581526040602082015260006103a3604083018461102c565b6020808252600b908201526a2170726f7065727469657360a81b604082015260600190565b8183823760009101908152919050565b6001600160a01b03891681526020810188905262ffffff198716604082015260e060608201819052810185905260006101008688828501376000838801820152601f8701601f19168301838103820160808501526111088183018861102c565b95151560a085015250505090151560c0909101529695505050505050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561114e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561117e5761117e611155565b500190565b6020815260006104e8602083018461102c565b6000602082840312156111a857600080fd5b815180151581146104e857600080fd5b600060ff821660ff8416808210156111d2576111d2611155565b90039392505050565b600060ff821660ff84168160ff04811182151516156111fc576111fc611155565b029392505050565b60008251611216818460208701611000565b919091019291505056fea2646970667358221220baf85b05b149c27e5d1579da1a7109a7e01a9693dce6f27961de5a713f43b73564736f6c634300080b003360806040526000805460ff1916600117905534801561001d57600080fd5b506102ce8061002d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba414fa61161005b578063ba414fa61461011d578063bf53253b1461013f578063df1f29ee14610147578063fa7626d41461016457600080fd5b806330991384146100825780633a768463146100e257806346c50a4414610115575b600080fd5b6004546005546006546007546100a49360e01b92916001600160a01b03169084565b604080516001600160e01b0319909516855260208501939093526001600160a01b039091169183019190915260608201526080015b60405180910390f35b6100fd737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020016100d9565b6100fd610171565b60005461012f90610100900460ff1681565b60405190151581526020016100d9565b6100fd600081565b61014f6101dc565b60405163ffffffff90911681526020016100d9565b60005461012f9060ff1681565b6000336001600160a01b0316632b59241f6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610242565b905090565b6000336001600160a01b031663938b5f326040518163ffffffff1660e01b81526004016020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610272565b60006020828403121561025457600080fd5b81516001600160a01b038116811461026b57600080fd5b9392505050565b60006020828403121561028457600080fd5b815163ffffffff8116811461026b57600080fdfea26469706673582212205f620e9b47a7f587f6ce9f7faa8e20cbd32f3abc230e6dec8771acff811a54af64736f6c634300080b0033a26469706673582212205c7c27a54eca0cff0609bc3896d58df9d5f86f12595da283e9b8b16be27112ed64736f6c634300080b0033";

type ExecutorTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutorTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExecutorTest__factory extends ContractFactory {
  constructor(...args: ExecutorTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExecutorTest> {
    return super.deploy(overrides || {}) as Promise<ExecutorTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExecutorTest {
    return super.attach(address) as ExecutorTest;
  }
  override connect(signer: Signer): ExecutorTest__factory {
    return super.connect(signer) as ExecutorTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorTestInterface {
    return new utils.Interface(_abi) as ExecutorTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExecutorTest {
    return new Contract(address, _abi, signerOrProvider) as ExecutorTest;
  }
}
