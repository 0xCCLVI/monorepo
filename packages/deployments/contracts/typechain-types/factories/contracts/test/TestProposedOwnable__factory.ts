/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestProposedOwnable,
  TestProposedOwnableInterface,
} from "../../../contracts/test/TestProposedOwnable";

const _abi = [
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__acceptProposedOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeAssetOwnershipRenunciation_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__proposeRouterOwnershipRenunciation_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceAssetOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableUpgradeable__renounceRouterOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "AssetOwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssetOwnershipRenunciationProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "RouterOwnershipRenounced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RouterOwnershipRenunciationProposed",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetOwnershipTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isAssetOwnershipRenounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRouterOwnershipRenounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAssetOwnershipRenunciation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeRouterOwnershipRenunciation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceAssetOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceRouterOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerOwnershipTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newValue",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a72806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063d1851c9211610071578063d1851c92146101f1578063d232c22014610202578063e47602f71461021b578063e8be0dfc14610223578063fe4b84df1461022b57600080fd5b80638da5cb5b1461019b578063b1f8100d146101c6578063c0c17baf146101d9578063c1a04959146101e1578063c5b350df146101e957600080fd5b806355241077116100f457806355241077146101675780636a41633a1461017a5780636a42b8f814610182578063715018a61461018b5780638741eac51461019357600080fd5b80632004ef451461012657806320965255146101435780633855b467146101555780633cf52ffb1461015f575b600080fd5b61012e61023e565b60405190151581526020015b60405180910390f35b6038545b60405190815260200161013a565b61015d610264565b005b600254610147565b61015d610175366004610983565b603855565b600654610147565b62093a80610147565b61015d610315565b61015d6103d5565b6000546201000090046001600160a01b03165b6040516001600160a01b03909116815260200161013a565b61015d6101d436600461099c565b610432565b61015d6104e7565b600454610147565b61015d610596565b6001546001600160a01b03166101ae565b61012e6000546201000090046001600160a01b03161590565b61015d610629565b61012e610686565b61015d610239366004610983565b6106aa565b600080546201000090046001600160a01b0316158061025f575060035460ff165b905090565b6000546201000090046001600160a01b0316331461029557604051630cd5bd6f60e21b815260040160405180910390fd5b60055460ff16156102b957604051634e3d8db760e11b815260040160405180910390fd5b6006546102d957604051631c2ed13b60e01b815260040160405180910390fd5b62093a80600654426102eb91906109cc565b1161030957604051635aeaa22f60e11b815260040160405180910390fd5b6103136001610776565b565b6000546201000090046001600160a01b0316331461034657604051630cd5bd6f60e21b815260040160405180910390fd5b60025461036657604051632a2d7bdb60e11b815260040160405180910390fd5b62093a806002544261037891906109cc565b116103965760405163136ae5ad60e01b815260040160405180910390fd5b6001546001600160a01b0316156103c0576040516301a8692360e11b815260040160405180910390fd5b600154610313906001600160a01b03166107c3565b6000546201000090046001600160a01b0316331461040657604051630cd5bd6f60e21b815260040160405180910390fd5b60055460ff161561042a5760405163382242c360e01b815260040160405180910390fd5b610313610823565b6000546201000090046001600160a01b0316331461046357604051630cd5bd6f60e21b815260040160405180910390fd5b6001546001600160a01b03828116911614801561048857506001600160a01b03811615155b156104a657604051635334dcf560e01b815260040160405180910390fd5b6000546001600160a01b03828116620100009092041614156104db576040516304d9ae9160e21b815260040160405180910390fd5b6104e48161085f565b50565b6000546201000090046001600160a01b0316331461051857604051630cd5bd6f60e21b815260040160405180910390fd5b60035460ff161561053c5760405163cd0cbe2b60e01b815260040160405180910390fd5b60045461055c57604051636da7f42560e01b815260040160405180910390fd5b62093a806004544261056e91906109cc565b1161058c5760405163288a062560e21b815260040160405180910390fd5b61031360016108ad565b6001546001600160a01b031633146105c1576040516340a61e4d60e01b815260040160405180910390fd5b6001546000546201000090046001600160a01b03908116911614156105f9576040516315cb454d60e21b815260040160405180910390fd5b62093a806002544261060b91906109cc565b116103c05760405163970af82d60e01b815260040160405180910390fd5b6000546201000090046001600160a01b0316331461065a57604051630cd5bd6f60e21b815260040160405180910390fd5b60035460ff161561067e5760405163b1134ca960e01b815260040160405180910390fd5b6103136108f3565b600080546201000090046001600160a01b0316158061025f57505060055460ff1690565b600054610100900460ff166106c55760005460ff16156106c9565b303b155b6107315760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610753576000805461ffff19166101011790555b61075b610929565b60388290558015610772576000805461ff00191690555b5050565b6005805460ff191682151590811790915560006006556040519081527f868d89ead22a5d10f456845ac0014901d9af7203e71cf0892d70d9dc262c2fb9906020015b60405180910390a150565b600080546001600160a01b038381166201000081810262010000600160b01b03198516178555600285905560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b4260068190556040519081527fa78fdca214e4619ef34a695316d423f5b0d8274bc919d29733bf8f92ec8cbb7a906020015b60405180910390a1565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6003805460ff191682151590811790915560006004556040519081527f243ebbb2f905234bbf0556bb38e1f7c23b09ffd2e441a16e58b844eb2ab7a397906020016107b8565b4260048190556040519081527fa52048c5f468d21a62e4644ac4db19bcaa1a20f0cf37d163ba49c7217d35feb890602001610855565b600054610100900460ff166109505760405162461bcd60e51b8152600401610728906109f1565b610313600054610100900460ff1661097a5760405162461bcd60e51b8152600401610728906109f1565b610313336107c3565b60006020828403121561099557600080fd5b5035919050565b6000602082840312156109ae57600080fd5b81356001600160a01b03811681146109c557600080fd5b9392505050565b6000828210156109ec57634e487b7160e01b600052601160045260246000fd5b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220fcbdb870c8e6e4ec4e301369bc06b1439180863ec14a7b7f09586e1592ad807a64736f6c634300080b0033";

type TestProposedOwnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestProposedOwnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestProposedOwnable__factory extends ContractFactory {
  constructor(...args: TestProposedOwnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestProposedOwnable> {
    return super.deploy(overrides || {}) as Promise<TestProposedOwnable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestProposedOwnable {
    return super.attach(address) as TestProposedOwnable;
  }
  override connect(signer: Signer): TestProposedOwnable__factory {
    return super.connect(signer) as TestProposedOwnable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestProposedOwnableInterface {
    return new utils.Interface(_abi) as TestProposedOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestProposedOwnable {
    return new Contract(address, _abi, signerOrProvider) as TestProposedOwnable;
  }
}
