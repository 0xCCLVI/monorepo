/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RelayerProxyHub,
  RelayerProxyHubInterface,
} from "../../../../../contracts/core/connext/helpers/RelayerProxyHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "RelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldRootManager",
        type: "address",
      },
    ],
    name: "RootManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_messageFees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootManager",
    outputs: [
      {
        internalType: "contract IRootManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
    ],
    name: "setRootManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200233d3803806200233d833981016040819052620000349162000503565b60016003558484848462000048336200009f565b620000538462000104565b6200005e83620001ba565b62000069826200026c565b62000074816200031e565b6200007f82620003d0565b5050505062000094816200047d60201b60201c565b505050505062000573565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6006546001600160a01b03908116908216819003620001545760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b60448201526064015b60405180910390fd5b604080516001600160a01b038085168252831660208201527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a150600680546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03908116908216819003620002065760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b60448201526064016200014b565b604080516001600160a01b038085168252831660208201527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a150600780546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03908116908216819003620002b85760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b60448201526064016200014b565b604080516001600160a01b038085168252831660208201527f18f08848c5694a025f9966c34ff2367f32a1a8275663b282ee01f4338b045490910160405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b039081169082168190036200036a5760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b60448201526064016200014b565b604080516001600160a01b038085168252831660208201527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a150600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526008602052604090205460ff1615620004235760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b60448201526064016200014b565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b600954604080516001600160a01b03808516825290921660208301527f3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b0381168114620004fe57600080fd5b919050565b600080600080600060a086880312156200051c57600080fd5b6200052786620004e6565b94506200053760208701620004e6565b93506200054760408701620004e6565b92506200055760608701620004e6565b91506200056760808701620004e6565b90509295509295909350565b611dba80620005836000396000f3fe6080604052600436106101855760003560e01c80639f645a03116100d1578063d232c2201161008a578063dd39f00d11610064578063dd39f00d14610497578063de4b0548146104b7578063e79457f1146104d7578063f0a67eba146104f757600080fd5b8063d232c22014610438578063d9ef0bee14610457578063db2056351461047757600080fd5b80639f645a0314610385578063a42dce80146103a5578063b1f8100d146103c5578063c415b95c146103e5578063c5b350df14610405578063d1851c921461041a57600080fd5b80636a42b8f81161013e5780638da5cb5b116101185780638da5cb5b146103075780638efed127146103255780639a2652db146103455780639cadce001461036557600080fd5b80636a42b8f8146102a45780636eba787f146102ba578063715018a6146102f257600080fd5b80632f55b98d146101c95780633ccfd60b1461020e5780633cf52ffb146102255780634d6f2013146102445780635e21966a1461026457806360f0a5ac1461028457600080fd5b366101c457604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b3480156101d557600080fd5b506101f96101e43660046113d4565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561021a57600080fd5b50610223610517565b005b34801561023157600080fd5b506002545b604051908152602001610205565b34801561025057600080fd5b5061022361025f3660046113d4565b610588565b34801561027057600080fd5b5061022361027f3660046113d4565b6105f0565b34801561029057600080fd5b5061022361029f3660046113d4565b61064b565b3480156102b057600080fd5b5062093a80610236565b3480156102c657600080fd5b506004546102da906001600160a01b031681565b6040516001600160a01b039091168152602001610205565b3480156102fe57600080fd5b506102236106a6565b34801561031357600080fd5b506000546001600160a01b03166102da565b34801561033157600080fd5b506102366103403660046113f6565b610758565b34801561035157600080fd5b50610223610360366004611543565b61081d565b34801561037157600080fd5b506007546102da906001600160a01b031681565b34801561039157600080fd5b506102236103a03660046113d4565b610911565b3480156103b157600080fd5b506102236103c03660046113d4565b61096c565b3480156103d157600080fd5b506102236103e03660046113d4565b6109c7565b3480156103f157600080fd5b506005546102da906001600160a01b031681565b34801561041157600080fd5b50610223610a68565b34801561042657600080fd5b506001546001600160a01b03166102da565b34801561044457600080fd5b506000546001600160a01b0316156101f9565b34801561046357600080fd5b5061022361047236600461165d565b610ad8565b34801561048357600080fd5b506009546102da906001600160a01b031681565b3480156104a357600080fd5b506102236104b23660046113d4565b610bb8565b3480156104c357600080fd5b506006546102da906001600160a01b031681565b3480156104e357600080fd5b506102236104f23660046116ab565b610c13565b34801561050357600080fd5b506102236105123660046113d4565b610ccf565b6000546001600160a01b03163314610542576040516311a8a1bb60e31b815260040160405180910390fd5b61054a610d2a565b476105553382610d83565b60408051828152476020820152600080516020611d65833981519152910160405180910390a1506105866001600355565b565b6000546001600160a01b031633146105b3576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166105e35760405162461bcd60e51b81526004016105da90611723565b60405180910390fd5b6105ec82610e9c565b5050565b6000546001600160a01b0316331461061b576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106425760405162461bcd60e51b81526004016105da90611723565b6105ec82610f32565b6000546001600160a01b03163314610676576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661069d5760405162461bcd60e51b81526004016105da90611723565b6105ec82610fc8565b6000546001600160a01b031633146106d1576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426106e39190611758565b11610701576040516324e0285f60e21b815260040160405180910390fd5b60025460000361072457604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561074e576040516323295ef960e01b815260040160405180910390fd5b6105866000611071565b3360009081526008602052604081205460ff166107875760405162461bcd60e51b81526004016105da9061176b565b61078f610d2a565b6006546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d2906107bf90869060040161190d565b6020604051808303816000875af11580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611b00565b905061080d826110d6565b6108176001600355565b92915050565b600085815b818163ffffffff1610156108645786868263ffffffff1681811061084857610848611b19565b905060200201358361085a9190611b2f565b9250600101610822565b5060095460405163412e12db60e01b81526001600160a01b039091169063412e12db90849061089f908c908c908c908c908c90600401611bd0565b6000604051808303818588803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b505060408051868152476020820152600080516020611d6583398151915294500191506108f69050565b60405180910390a1610907836110d6565b5050505050505050565b6000546001600160a01b0316331461093c576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109635760405162461bcd60e51b81526004016105da90611723565b6105ec82611130565b6000546001600160a01b03163314610997576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109be5760405162461bcd60e51b81526004016105da90611723565b6105ec826111c6565b6000546001600160a01b031633146109f2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a10575060025415155b15610a2e576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a5c57604051634a2fb73f60e11b815260040160405180910390fd5b610a658161125c565b50565b6001546001600160a01b03163314610a93576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610aa59190611758565b11610ac3576040516324e0285f60e21b815260040160405180910390fd5b600154610586906001600160a01b0316611071565b3360009081526008602052604090205460ff16610b075760405162461bcd60e51b81526004016105da9061176b565b610b0f610d2a565b600754604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610b41908790600401611c64565b6000604051808303818588803b158015610b5a57600080fd5b505af1158015610b6e573d6000803e3d6000fd5b505060408051868152476020820152600080516020611d658339815191529450019150610b989050565b60405180910390a1610ba9816110d6565b610bb36001600355565b505050565b6000546001600160a01b03163314610be3576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610c0a5760405162461bcd60e51b81526004016105da90611723565b6105ec826112aa565b3360009081526008602052604090205460ff16610c425760405162461bcd60e51b81526004016105da9061176b565b610c4a610d2a565b60075460405163508a109b60e01b81526001600160a01b039091169063508a109b90610c829089908990899089908990600401611c81565b600060405180830381600087803b158015610c9c57600080fd5b505af1158015610cb0573d6000803e3d6000fd5b50505050610cbd816110d6565b610cc76001600355565b505050505050565b6000546001600160a01b03163314610cfa576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610d215760405162461bcd60e51b81526004016105da90611723565b6105ec8261134f565b600260035403610d7c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105da565b6002600355565b80471015610dd35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105da565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e20576040519150601f19603f3d011682016040523d82523d6000602084013e610e25565b606091505b5050905080610bb35760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105da565b6006546001600160a01b03908116908216819003610ecc5760405162461bcd60e51b81526004016105da90611d43565b604080516001600160a01b038085168252831660208201527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a150600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03908116908216819003610f625760405162461bcd60e51b81526004016105da90611d43565b604080516001600160a01b038085168252831660208201527f18f08848c5694a025f9966c34ff2367f32a1a8275663b282ee01f4338b045490910160405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526008602052604090205460ff166110195760405162461bcd60e51b815260206004820152600660248201526508585919195960d21b60448201526064016105da565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6004546001600160a01b03163303611103576005546110fe906001600160a01b031682610d83565b61110d565b61110d3382610d83565b60408051828152476020820152600080516020611d658339815191529101611066565b6007546001600160a01b039081169082168190036111605760405162461bcd60e51b81526004016105da90611d43565b604080516001600160a01b038085168252831660208201527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a150600780546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b039081169082168190036111f65760405162461bcd60e51b81526004016105da90611d43565b604080516001600160a01b038085168252831660208201527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a150600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6001600160a01b03811660009081526008602052604090205460ff16156112fb5760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b60448201526064016105da565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611066565b600954604080516001600160a01b03808516825290921660208301527f3124eaf4f16c6ddd81951200c6d8f65d5800753bef06584bd672c8b22c76b487910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b03811681146113cf57600080fd5b919050565b6000602082840312156113e657600080fd5b6113ef826113b8565b9392505050565b6000806040838503121561140957600080fd5b823567ffffffffffffffff81111561142057600080fd5b830160a0818603121561143257600080fd5b946020939093013593505050565b60008083601f84011261145257600080fd5b50813567ffffffffffffffff81111561146a57600080fd5b6020830191508360208260051b850101111561148557600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156114cb576114cb61148c565b604052919050565b600082601f8301126114e457600080fd5b813567ffffffffffffffff8111156114fe576114fe61148c565b611511601f8201601f19166020016114a2565b81815284602083860101111561152657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806000806080878903121561155c57600080fd5b67ffffffffffffffff808835111561157357600080fd5b6115808989358a01611440565b90975095506020888101358281111561159857600080fd5b6115a48b828c01611440565b9097509550506040890135828111156115bc57600080fd5b8901601f81018b136115cd57600080fd5b8035838111156115df576115df61148c565b8060051b6115ee8482016114a2565b918252828101840191848101908e84111561160857600080fd5b85850192505b8383101561164257868335111561162457600080fd5b6116338f8785358801016114d3565b8252918501919085019061160e565b80985050505050505050606087013590509295509295509295565b60008060006060848603121561167257600080fd5b833567ffffffffffffffff81111561168957600080fd5b611695868287016114d3565b9660208601359650604090950135949350505050565b60008060008060008061048087890312156116c557600080fd5b863567ffffffffffffffff8111156116dc57600080fd5b6116e889828a01611440565b9097509550506020870135935061044087018881111561170757600080fd5b9598949750929560408101953594610460909101359350915050565b602080825260059082015264656d70747960d81b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561081757610817611742565b60208082526008908201526710b932b630bcb2b960c11b604082015260600190565b803563ffffffff811681146113cf57600080fd5b803580151581146113cf57600080fd5b6000808335601e198436030181126117c857600080fd5b830160208101925035905067ffffffffffffffff8111156117e857600080fd5b80360382131561148557600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e1984360301811261183757600080fd5b830160208101925035905067ffffffffffffffff81111561185757600080fd5b8060051b360382131561148557600080fd5b8183526000602080850194508260005b858110156118a5576001600160a01b03611892836113b8565b1687529582019590820190600101611879565b509495945050505050565b81835260006020808501808196508560051b810191508460005b878110156119005782840389526118e182886117b1565b6118ec8682846117f7565b9a87019a95505050908401906001016118ca565b5091979650505050505050565b602081526000823561019e1984360301811261192857600080fd5b60a06020840152830161194b60c084016119418361178d565b63ffffffff169052565b6119576020820161178d565b63ffffffff1660e084015261196e6040820161178d565b6101006119828186018363ffffffff169052565b61198e606084016113b8565b91506101206119a7818701846001600160a01b03169052565b6119b3608085016113b8565b92506101406119cc818801856001600160a01b03169052565b6119d860a086016117a1565b93506101606119ea8189018615159052565b6119f760c08701876117b1565b95506101a061018081818c0152611a136102608c0189856117f7565b975060e0890135828c0152611a29878a016113b8565b6001600160a01b03166101c08c0152948801356101e08b015250509085013561020088015284013561022087015283013561024086015250611a6e6020860186611820565b9250601f1980868403016040870152611a88838584611869565b9350611a976040880188611820565b9350915080868503016060870152611ab08484846118b0565b9350611abe606088016113b8565b6001600160a01b03811660808801529250611adc60808801886117b1565b93509150808685030160a087015250611af68383836117f7565b9695505050505050565b600060208284031215611b1257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b8082018082111561081757610817611742565b6000815180845260005b81811015611b6857602081850181015186830182015201611b4c565b506000602082860101526020601f19601f83011685010191505092915050565b600081518084526020808501808196508360051b8101915082860160005b85811015611900578284038952611bbe848351611b42565b98850198935090840190600101611ba6565b6060808252810185905260008660808301825b88811015611c11576001600160a01b03611bfc846113b8565b16825260209283019290910190600101611be3565b5083810360208501528581526001600160fb1b03861115611c3157600080fd5b8560051b9150818760208301370182810360209081016040850152611c5890820185611b88565b98975050505050505050565b6020815260006113ef6020830184611b42565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a811015611d175786840361047f190185528235368d900361043e19018112611cc8578283fd5b8c01610440611cd782806117b1565b828852611ce783890182846117f7565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101611ca1565b5050508092505050846020830152611d326040830185611c77565b826104408301529695505050505050565b602080825260079082015266216368616e676560c81b60408201526060019056fe9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18a2646970667358221220fb03ed58b6fb030137d42db05dc3db3063465b8e800227ad95d37d2da9795c5564736f6c63430008110033";

type RelayerProxyHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxyHub__factory extends ContractFactory {
  constructor(...args: RelayerProxyHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxyHub> {
    return super.deploy(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _rootManager,
      overrides || {}
    ) as Promise<RelayerProxyHub>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _rootManager,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxyHub {
    return super.attach(address) as RelayerProxyHub;
  }
  override connect(signer: Signer): RelayerProxyHub__factory {
    return super.connect(signer) as RelayerProxyHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyHubInterface {
    return new utils.Interface(_abi) as RelayerProxyHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxyHub {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxyHub;
  }
}
