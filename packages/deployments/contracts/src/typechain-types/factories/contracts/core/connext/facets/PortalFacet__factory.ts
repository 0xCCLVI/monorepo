/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PortalFacet,
  PortalFacetInterface,
} from "../../../../../contracts/core/connext/facets/PortalFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__getTokenIndexFromStableSwapPool_notExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_feeOnTransferNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_nativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortalFor_invalidAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortalFor_zeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortal_assetNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortal_insufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__setAavePortalFee_invalidFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AavePortalRepayment",
    type: "event",
  },
  {
    inputs: [],
    name: "aavePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aavePortalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "getAavePortalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "getAavePortalFeeDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "originDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "canonicalDomain",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bridgedAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "canonicalId",
            type: "bytes32",
          },
        ],
        internalType: "struct TransferInfo",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_backingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxIn",
        type: "uint256",
      },
    ],
    name: "repayAavePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "originDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "canonicalDomain",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bridgedAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "canonicalId",
            type: "bytes32",
          },
        ],
        internalType: "struct TransferInfo",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_portalAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_backingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    name: "repayAavePortalFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aavePool",
        type: "address",
      },
    ],
    name: "setAavePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_aavePortalFeeNumerator",
        type: "uint256",
      },
    ],
    name: "setAavePortalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fd7806100206000396000f3fe60806040526004361061007b5760003560e01c8063a03e4bc31161004e578063a03e4bc314610115578063b3f62fcb1461013d578063d1e5f31c1461015d578063ef1eb0c11461018a57600080fd5b806309d7ba5414610080578063349f937c146100c05780633bd30d34146100e257806375d3237114610102575b600080fd5b34801561008c57600080fd5b506100ad61009b366004611a29565b60009081526024602052604090205490565b6040519081526020015b60405180910390f35b3480156100cc57600080fd5b506100e06100db366004611a5e565b61019f565b005b3480156100ee57600080fd5b506100e06100fd366004611a29565b610223565b6100e0610110366004611a92565b6102ad565b34801561012157600080fd5b506022546040516001600160a01b0390911681526020016100b7565b34801561014957600080fd5b506100e0610158366004611aef565b6103bc565b34801561016957600080fd5b506100ad610178366004611a29565b60009081526025602052604090205490565b34801561019657600080fd5b506023546100ad565b336101a8610513565b6001600160a01b0316141580156101e357506003336000908152601b602052604090205460ff1660038111156101e0576101e0611b43565b14155b1561020157604051637b32c26b60e01b815260040160405180910390fd5b602280546001600160a01b0319166001600160a01b0392909216919091179055565b3361022c610513565b6001600160a01b03161415801561026757506003336000908152601b602052604090205460ff16600381111561026457610264611b43565b14155b1561028557604051637b32c26b60e01b815260040160405180910390fd5b6127108111156102a85760405163f48157d160e01b815260040160405180910390fd5b602355565b601d54600119016102d157604051637ce54e2d60e11b815260040160405180910390fd5b6002601d556000600b816102f96101808801356102f460608a0160408b01611b6d565b61052f565b81526020810191909152604001600020546001600160a01b0316905080158015906103365750806001600160a01b0316846001600160a01b031614155b15610354576040516339bcb9bb60e11b815260040160405180910390fd5b600061036761036287611c71565b610572565b905060006103758486611d7d565b905080600003610398576040516330d5e3e360e11b815260040160405180910390fd5b6103a283826105a2565b6103ae838686856106f3565b50506001601d555050505050565b601d54600119016103e057604051637ce54e2d60e11b815260040160405180910390fd5b6002601d5560006104006101808601356102f46060880160408901611b6d565b60008181526006602052604090205490915060ff166104325760405163b074ae7360e01b815260040160405180910390fd5b60006104538261018088013561044e60608a0160408b01611b6d565b610827565b336000908152600f602090815260408083206001600160a01b03851684529091529020549091508381101561049b5760405163badaeb5960e01b815260040160405180910390fd5b60006104a961036289611c71565b90506000806104c386866104bd8b8d611d7d565b8a61083e565b90925090506104d28285611d90565b336000908152600f602090815260408083206001600160a01b038a168452909152902055610502818a8a866106f3565b50506001601d555050505050505050565b600061051d61088e565b600401546001600160a01b0316919050565b6000828260405160200161055392919091825263ffffffff16602082015260400190565b6040516020818303038152906040528051906020012090505b92915050565b6000816040516020016105859190611df3565b604051602081830303815290604052805190602001209050919050565b806000036105ae575050565b6001600160a01b0382166105d557604051632a38b13360e01b815260040160405180910390fd5b6040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190611eed565b90506106596001600160a01b0383163330866108bc565b6040516370a0823160e01b8152306004820152839082906001600160a01b038516906370a0823190602401602060405180830381865afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190611eed565b6106cf9190611d90565b146106ed57604051630e40773560e21b815260040160405180910390fd5b50505050565b60008181526024602052604081208054859290610711908490611d90565b909155505060008181526025602052604081208054849290610734908490611d90565b90915550506022546001600160a01b031661075185826000610927565b61076585826107608688611d7d565b610a46565b60405163d65dc7a160e01b81526001600160a01b038681166004830152602482018690526044820185905282169063d65dc7a190606401600060405180830381600087803b1580156107b657600080fd5b505af11580156107ca573d6000803e3d6000fd5b5050604080516001600160a01b0389168152602081018890529081018690523360608201528492507f54b01a5ae4ec60eeeef60570103ba1a5de0999725219c02b2baf1b706625bb08915060800160405180910390a25050505050565b60006108368484846000610af8565b949350505050565b6000848152600b6020526040812054819081906001600160a01b0390811690871681036108715785935091506108859050565b61087e8888838989610b36565b9350935050505b94509492505050565b60008061056c60017fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c611d90565b6040516001600160a01b03808516602483015283166044820152606481018290526106ed9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610c9d565b8015806109a15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611eed565b155b610a115760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610a4190849063095ea7b360e01b906064016108f0565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb9190611eed565b610ac59190611d7d565b6040516001600160a01b0385166024820152604481018290529091506106ed90859063095ea7b360e01b906064016108f0565b600481015460009063ffffffff90811690841603610b17575082610836565b506000938452600c01602052505060409020546001600160a01b031690565b6000858152601f6020526040812081908190610b5181610d6f565b15610b8357610b77610b638a8a610d8c565b610b6d8b8a610d8c565b8391908989610e0a565b87935093505050610c93565b60008981526005830160205260408120546001600160a01b039081169182918b91610bb2918316908490610927565b610bc66001600160a01b038216838a610a46565b60006001600160a01b038416635428c1178b8e8e8d610be7610e1042611d7d565b6040516001600160e01b031960e088901b16815260048101959095526001600160a01b0393841660248601529290911660448401526064830152608482015260a4016020604051808303816000875af1158015610c48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6c9190611eed565b9050610c836001600160a01b038316846000610927565b9650899550610c93945050505050565b9550959350505050565b6000610cf2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111139092919063ffffffff16565b805190915015610a415780806020019051810190610d109190611f06565b610a415760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a08565b600c81015460009060ff1615801561056c57505060080154151590565b6000828152602080805260408083206001600160a01b03851680855290835281842054868552601f9093529083206008018054849360ff1692919083908110610dd757610dd7611f23565b6000918252602090912001546001600160a01b0316146108365760405163054e442960e41b815260040160405180910390fd5b600c85015460009060ff1615610e525760405162461bcd60e51b815260206004820152600d60248201526c191a5cd8589b1959081c1bdbdb609a1b6044820152606401610a08565b85600a018460ff1681548110610e6a57610e6a611f23565b9060005260206000200154831115610ebd5760405162461bcd60e51b81526020600482015260166024820152756d6f7265207468616e20706f6f6c2062616c616e636560501b6044820152606401610a08565b600080600088600a01805480602002602001604051908101604052809291908181526020018280548015610f1057602002820191906000526020600020905b815481526020019060010190808311610efc575b50505050509050610f248989898985611122565b909350915084831115610f665760405162461bcd60e51b815260206004820152600a6024820152690c8f0407c40dac2f088f60b31b6044820152606401610a08565b6000896009018960ff1681548110610f8057610f80611f23565b90600052602060002001546402540be4008b6006015485610fa19190611f39565b610fab9190611f50565b610fb59190611f50565b90508084838b60ff1681518110610fce57610fce611f23565b6020026020010151610fe09190611d7d565b610fea9190611d90565b8a600a018a60ff168154811061100257611002611f23565b906000526020600020018190555086828960ff168151811061102657611026611f23565b60200260200101516110389190611d90565b8a600a018960ff168154811061105057611050611f23565b60009182526020909120015580156110b557808a600b018a60ff168154811061107b5761107b611f23565b90600052602060002001546110909190611d7d565b8a600b018a60ff16815481106110a8576110a8611f23565b6000918252602090912001555b895460408051868152602081018a905260ff8c8116828401528b16606082015290513392917f28d4cf2d5709da3b474b5f05cfd7083faffd601f9500d1f8439b8a13ec7df320919081900360800190a3509198975050505050505050565b6060610836848460008561136d565b6000808460ff168660ff160361117a5760405162461bcd60e51b815260206004820152601760248201527f636f6d7061726520746f6b656e20746f20697473656c660000000000000000006044820152606401610a08565b6000876009018054806020026020016040519081016040528092919081815260200182805480156111ca57602002820191906000526020600020905b8154815260200190600101908083116111b6575b5050505050905060006111dd8583611448565b905080518860ff161080156111f5575080518760ff16105b6112365760405162461bcd60e51b8152602060048201526012602482015271696e646578206f7574206f662072616e676560701b6044820152606401610a08565b60006112418a611553565b9050600061124f838361155e565b9050838960ff168151811061126657611266611f23565b6020026020010151886112799190611f39565b838a60ff168151811061128e5761128e611f23565b60200260200101516112a09190611d90565b838a60ff16815181106112b5576112b5611f23565b60200260200101818152505060006112cf838c868561170b565b9050838b60ff16815181106112e6576112e6611f23565b60200260200101518160016112fb9190611d7d565b6113059190611d90565b96506402540be4008c600501548861131d9190611f39565b6113279190611f50565b9550848b60ff168151811061133e5761133e611f23565b602002602001015186886113529190611d7d565b61135c9190611f50565b965050505050509550959350505050565b6060824710156113ce5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a08565b600080866001600160a01b031685876040516113ea9190611f72565b60006040518083038185875af1925050503d8060008114611427576040519150601f19603f3d011682016040523d82523d6000602084013e61142c565b606091505b509150915061143d878383876118fa565b979650505050505050565b815181516060919081146114955760405162461bcd60e51b81526020600482015260146024820152736d69736d61746368206d756c7469706c6965727360601b6044820152606401610a08565b60008167ffffffffffffffff8111156114b0576114b0611b88565b6040519080825280602002602001820160405280156114d9578160200160208202803683370190505b50905060005b8281101561154a578481815181106114f9576114f9611f23565b602002602001015186828151811061151357611513611f23565b60200260200101516115259190611f39565b82828151811061153757611537611f23565b60209081029190910101526001016114df565b50949350505050565b600061056c82611973565b815160009081805b8281101561159d5785818151811061158057611580611f23565b6020026020010151826115939190611d7d565b9150600101611566565b50806000036115b15760009250505061056c565b600081816115bf8588611f39565b905060005b6101008110156116cc578260005b8781101561161d57878b82815181106115ed576115ed611f23565b60200260200101516115ff9190611f39565b6116098684611f39565b6116139190611f50565b91506001016115d2565b508394508087600161162f9190611d7d565b6116399190611f39565b6064856116468287611d90565b6116509190611f39565b61165a9190611f50565b6116649190611d7d565b8461166f8984611f39565b606461167b8a88611f39565b6116859190611f50565b61168f9190611d7d565b6116999190611f39565b6116a39190611f50565b93506116af84866119bc565b156116c3578397505050505050505061056c565b506001016115c4565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610a08565b815160009060ff851681116117545760405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606401610a08565b82600080611762848a611f39565b905060005b848110156117e4578860ff1681146117dc5787818151811061178b5761178b611f23565b60200260200101518361179e9190611d7d565b9250848882815181106117b3576117b3611f23565b60200260200101516117c59190611f39565b6117cf8886611f39565b6117d99190611f50565b93505b600101611767565b506117ef8482611f39565b60646117fb8886611f39565b6118059190611f39565b61180f9190611f50565b925060008161181f606489611f39565b6118299190611f50565b6118339084611d7d565b9050600087815b6101008110156118b15781925089848360026118569190611f39565b6118609190611d7d565b61186a9190611d90565b876118758480611f39565b61187f9190611d7d565b6118899190611f50565b915061189582846119bc565b156118a95750965061083695505050505050565b60010161183a565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610a08565b60608315611969578251600003611962576001600160a01b0385163b6119625760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a08565b5081610836565b61083683836119d3565b60048101546002820154600183015490919080831480159061199457508142105b156119b5576000846003015490508083038142038502428503840201049350505b5050919050565b600060016119ca84846119fd565b11159392505050565b8151156119e35781518083602001fd5b8060405162461bcd60e51b8152600401610a089190611f8e565b600081831115611a1857611a118284611d90565b905061056c565b611a228383611d90565b9392505050565b600060208284031215611a3b57600080fd5b5035919050565b80356001600160a01b0381168114611a5957600080fd5b919050565b600060208284031215611a7057600080fd5b611a2282611a42565b60006101a08284031215611a8c57600080fd5b50919050565b60008060008060808587031215611aa857600080fd5b843567ffffffffffffffff811115611abf57600080fd5b611acb87828801611a79565b945050611ada60208601611a42565b93969395505050506040820135916060013590565b60008060008060808587031215611b0557600080fd5b843567ffffffffffffffff811115611b1c57600080fd5b611b2887828801611a79565b97602087013597506040870135966060013595509350505050565b634e487b7160e01b600052602160045260246000fd5b803563ffffffff81168114611a5957600080fd5b600060208284031215611b7f57600080fd5b611a2282611b59565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715611bc257611bc2611b88565b60405290565b8015158114611bd657600080fd5b50565b8035611a5981611bc8565b600082601f830112611bf557600080fd5b813567ffffffffffffffff80821115611c1057611c10611b88565b604051601f8301601f19908116603f01168101908282118183101715611c3857611c38611b88565b81604052838152866020858801011115611c5157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101a08236031215611c8457600080fd5b611c8c611b9e565b611c9583611b59565b8152611ca360208401611b59565b6020820152611cb460408401611b59565b6040820152611cc560608401611a42565b6060820152611cd660808401611a42565b6080820152611ce760a08401611bd9565b60a082015260c083013567ffffffffffffffff811115611d0657600080fd5b611d1236828601611be4565b60c08301525060e083013560e0820152610100611d30818501611a42565b9082015261012083810135908201526101408084013590820152610160808401359082015261018092830135928101929092525090565b634e487b7160e01b600052601160045260246000fd5b8082018082111561056c5761056c611d67565b8181038181111561056c5761056c611d67565b60005b83811015611dbe578181015183820152602001611da6565b50506000910152565b60008151808452611ddf816020860160208601611da3565b601f01601f19169290920160200192915050565b60208152611e0a60208201835163ffffffff169052565b60006020830151611e23604084018263ffffffff169052565b50604083015163ffffffff811660608401525060608301516001600160a01b03811660808401525060808301516001600160a01b03811660a08401525060a083015180151560c08401525060c08301516101a08060e0850152611e8a6101c0850183611dc7565b60e086015161010086810191909152860151909250610120611eb6818701836001600160a01b03169052565b8601516101408681019190915286015161016080870191909152860151610180808701919091529095015193019290925250919050565b600060208284031215611eff57600080fd5b5051919050565b600060208284031215611f1857600080fd5b8151611a2281611bc8565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761056c5761056c611d67565b600082611f6d57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611f84818460208701611da3565b9190910192915050565b602081526000611a226020830184611dc756fea2646970667358221220baae666f317a4715ef70c2520170a27aadcd46dfe67909c4b9df64baa1d910ab64736f6c63430008110033";

type PortalFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PortalFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PortalFacet__factory extends ContractFactory {
  constructor(...args: PortalFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PortalFacet> {
    return super.deploy(overrides || {}) as Promise<PortalFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PortalFacet {
    return super.attach(address) as PortalFacet;
  }
  override connect(signer: Signer): PortalFacet__factory {
    return super.connect(signer) as PortalFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PortalFacetInterface {
    return new utils.Interface(_abi) as PortalFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PortalFacet {
    return new Contract(address, _abi, signerOrProvider) as PortalFacet;
  }
}
