/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PortalFacet,
  PortalFacetInterface,
} from "../../../../../contracts/core/connext/facets/PortalFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__getTokenIndexFromStableSwapPool_notExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_feeOnTransferNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_nativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notAllowlisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortalFor_invalidAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortalFor_zeroAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortal_assetNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__repayAavePortal_insufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "PortalFacet__setAavePortalFee_invalidFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AavePortalRepayment",
    type: "event",
  },
  {
    inputs: [],
    name: "aavePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aavePortalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "getAavePortalDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
    ],
    name: "getAavePortalFeeDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "originDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "canonicalDomain",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bridgedAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "canonicalId",
            type: "bytes32",
          },
        ],
        internalType: "struct TransferInfo",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_backingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxIn",
        type: "uint256",
      },
    ],
    name: "repayAavePortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "originDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "destinationDomain",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "canonicalDomain",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bool",
            name: "receiveLocal",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "slippage",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "originSender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "bridgedAmt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "normalizedIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "canonicalId",
            type: "bytes32",
          },
        ],
        internalType: "struct TransferInfo",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_portalAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_backingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeAmount",
        type: "uint256",
      },
    ],
    name: "repayAavePortalFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aavePool",
        type: "address",
      },
    ],
    name: "setAavePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_aavePortalFeeNumerator",
        type: "uint256",
      },
    ],
    name: "setAavePortalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fdf806100206000396000f3fe60806040526004361061007b5760003560e01c8063a03e4bc31161004e578063a03e4bc314610115578063b3f62fcb1461013d578063d1e5f31c1461015d578063ef1eb0c11461018a57600080fd5b806309d7ba5414610080578063349f937c146100c05780633bd30d34146100e257806375d3237114610102575b600080fd5b34801561008c57600080fd5b506100ad61009b366004611a31565b60009081526024602052604090205490565b6040519081526020015b60405180910390f35b3480156100cc57600080fd5b506100e06100db366004611a66565b61019f565b005b3480156100ee57600080fd5b506100e06100fd366004611a31565b61024c565b6100e0610110366004611a9a565b6102ff565b34801561012157600080fd5b506022546040516001600160a01b0390911681526020016100b7565b34801561014957600080fd5b506100e0610158366004611af7565b61040e565b34801561016957600080fd5b506100ad610178366004611a31565b60009081526025602052604090205490565b34801561019657600080fd5b506023546100ad565b336101d17fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6001600160a01b03161415801561020c57506003336000908152601b602052604090205460ff16600381111561020957610209611b4b565b14155b1561022a57604051637b32c26b60e01b815260040160405180910390fd5b602280546001600160a01b0319166001600160a01b0392909216919091179055565b3361027e7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6001600160a01b0316141580156102b957506003336000908152601b602052604090205460ff1660038111156102b6576102b6611b4b565b14155b156102d757604051637b32c26b60e01b815260040160405180910390fd5b6127108111156102fa5760405163f48157d160e01b815260040160405180910390fd5b602355565b601d546001190161032357604051637ce54e2d60e11b815260040160405180910390fd5b6002601d556000600b8161034b61018088013561034660608a0160408b01611b75565b610565565b81526020810191909152604001600020546001600160a01b0316905080158015906103885750806001600160a01b0316846001600160a01b031614155b156103a6576040516339bcb9bb60e11b815260040160405180910390fd5b60006103b96103b487611c79565b6105a8565b905060006103c78486611d85565b9050806000036103ea576040516330d5e3e360e11b815260040160405180910390fd5b6103f483826105d8565b61040083868685610729565b50506001601d555050505050565b601d546001190161043257604051637ce54e2d60e11b815260040160405180910390fd5b6002601d5560006104526101808601356103466060880160408901611b75565b60008181526006602052604090205490915060ff166104845760405163b074ae7360e01b815260040160405180910390fd5b60006104a5826101808801356104a060608a0160408b01611b75565b61085d565b336000908152600f602090815260408083206001600160a01b0385168452909152902054909150838110156104ed5760405163badaeb5960e01b815260040160405180910390fd5b60006104fb6103b489611c79565b9050600080610515868661050f8b8d611d85565b8a610874565b90925090506105248285611d98565b336000908152600f602090815260408083206001600160a01b038a168452909152902055610554818a8a86610729565b50506001601d555050505050505050565b6000828260405160200161058992919091825263ffffffff16602082015260400190565b6040516020818303038152906040528051906020012090505b92915050565b6000816040516020016105bb9190611dfb565b604051602081830303815290604052805190602001209050919050565b806000036105e4575050565b6001600160a01b03821661060b57604051632a38b13360e01b815260040160405180910390fd5b6040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190611ef5565b905061068f6001600160a01b0383163330866108c4565b6040516370a0823160e01b8152306004820152839082906001600160a01b038516906370a0823190602401602060405180830381865afa1580156106d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fb9190611ef5565b6107059190611d98565b1461072357604051630e40773560e21b815260040160405180910390fd5b50505050565b60008181526024602052604081208054859290610747908490611d98565b90915550506000818152602560205260408120805484929061076a908490611d98565b90915550506022546001600160a01b03166107878582600061092f565b61079b85826107968688611d85565b610a4e565b60405163d65dc7a160e01b81526001600160a01b038681166004830152602482018690526044820185905282169063d65dc7a190606401600060405180830381600087803b1580156107ec57600080fd5b505af1158015610800573d6000803e3d6000fd5b5050604080516001600160a01b0389168152602081018890529081018690523360608201528492507f54b01a5ae4ec60eeeef60570103ba1a5de0999725219c02b2baf1b706625bb08915060800160405180910390a25050505050565b600061086c8484846000610b00565b949350505050565b6000848152600b6020526040812054819081906001600160a01b0390811690871681036108a75785935091506108bb9050565b6108b48888838989610b3e565b9350935050505b94509492505050565b6040516001600160a01b03808516602483015283166044820152606481018290526107239085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610ca5565b8015806109a95750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610983573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a79190611ef5565b155b610a195760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b038316602482015260448101829052610a4990849063095ea7b360e01b906064016108f8565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac39190611ef5565b610acd9190611d85565b6040516001600160a01b03851660248201526044810182905290915061072390859063095ea7b360e01b906064016108f8565b600481015460009063ffffffff90811690841603610b1f57508261086c565b506000938452600c01602052505060409020546001600160a01b031690565b6000858152601f6020526040812081908190610b5981610d77565b15610b8b57610b7f610b6b8a8a610d94565b610b758b8a610d94565b8391908989610e12565b87935093505050610c9b565b60008981526005830160205260408120546001600160a01b039081169182918b91610bba91831690849061092f565b610bce6001600160a01b038216838a610a4e565b60006001600160a01b038416635428c1178b8e8e8d610bef610e1042611d85565b6040516001600160e01b031960e088901b16815260048101959095526001600160a01b0393841660248601529290911660448401526064830152608482015260a4016020604051808303816000875af1158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190611ef5565b9050610c8b6001600160a01b03831684600061092f565b9650899550610c9b945050505050565b9550959350505050565b6000610cfa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661111b9092919063ffffffff16565b805190915015610a495780806020019051810190610d189190611f0e565b610a495760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a10565b600c81015460009060ff161580156105a257505060080154151590565b6000828152602080805260408083206001600160a01b03851680855290835281842054868552601f9093529083206008018054849360ff1692919083908110610ddf57610ddf611f2b565b6000918252602090912001546001600160a01b03161461086c5760405163054e442960e41b815260040160405180910390fd5b600c85015460009060ff1615610e5a5760405162461bcd60e51b815260206004820152600d60248201526c191a5cd8589b1959081c1bdbdb609a1b6044820152606401610a10565b85600a018460ff1681548110610e7257610e72611f2b565b9060005260206000200154831115610ec55760405162461bcd60e51b81526020600482015260166024820152756d6f7265207468616e20706f6f6c2062616c616e636560501b6044820152606401610a10565b600080600088600a01805480602002602001604051908101604052809291908181526020018280548015610f1857602002820191906000526020600020905b815481526020019060010190808311610f04575b50505050509050610f2c898989898561112a565b909350915084831115610f6e5760405162461bcd60e51b815260206004820152600a6024820152690c8f0407c40dac2f088f60b31b6044820152606401610a10565b6000896009018960ff1681548110610f8857610f88611f2b565b90600052602060002001546402540be4008b6006015485610fa99190611f41565b610fb39190611f58565b610fbd9190611f58565b90508084838b60ff1681518110610fd657610fd6611f2b565b6020026020010151610fe89190611d85565b610ff29190611d98565b8a600a018a60ff168154811061100a5761100a611f2b565b906000526020600020018190555086828960ff168151811061102e5761102e611f2b565b60200260200101516110409190611d98565b8a600a018960ff168154811061105857611058611f2b565b60009182526020909120015580156110bd57808a600b018a60ff168154811061108357611083611f2b565b90600052602060002001546110989190611d85565b8a600b018a60ff16815481106110b0576110b0611f2b565b6000918252602090912001555b895460408051868152602081018a905260ff8c8116828401528b16606082015290513392917f28d4cf2d5709da3b474b5f05cfd7083faffd601f9500d1f8439b8a13ec7df320919081900360800190a3509198975050505050505050565b606061086c8484600085611375565b6000808460ff168660ff16036111825760405162461bcd60e51b815260206004820152601760248201527f636f6d7061726520746f6b656e20746f20697473656c660000000000000000006044820152606401610a10565b6000876009018054806020026020016040519081016040528092919081815260200182805480156111d257602002820191906000526020600020905b8154815260200190600101908083116111be575b5050505050905060006111e58583611450565b905080518860ff161080156111fd575080518760ff16105b61123e5760405162461bcd60e51b8152602060048201526012602482015271696e646578206f7574206f662072616e676560701b6044820152606401610a10565b60006112498a61155b565b905060006112578383611566565b9050838960ff168151811061126e5761126e611f2b565b6020026020010151886112819190611f41565b838a60ff168151811061129657611296611f2b565b60200260200101516112a89190611d98565b838a60ff16815181106112bd576112bd611f2b565b60200260200101818152505060006112d7838c8685611713565b9050838b60ff16815181106112ee576112ee611f2b565b60200260200101518160016113039190611d85565b61130d9190611d98565b96506402540be4008c60050154886113259190611f41565b61132f9190611f58565b9550848b60ff168151811061134657611346611f2b565b6020026020010151868861135a9190611d85565b6113649190611f58565b965050505050509550959350505050565b6060824710156113d65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a10565b600080866001600160a01b031685876040516113f29190611f7a565b60006040518083038185875af1925050503d806000811461142f576040519150601f19603f3d011682016040523d82523d6000602084013e611434565b606091505b509150915061144587838387611902565b979650505050505050565b8151815160609190811461149d5760405162461bcd60e51b81526020600482015260146024820152736d69736d61746368206d756c7469706c6965727360601b6044820152606401610a10565b60008167ffffffffffffffff8111156114b8576114b8611b90565b6040519080825280602002602001820160405280156114e1578160200160208202803683370190505b50905060005b828110156115525784818151811061150157611501611f2b565b602002602001015186828151811061151b5761151b611f2b565b602002602001015161152d9190611f41565b82828151811061153f5761153f611f2b565b60209081029190910101526001016114e7565b50949350505050565b60006105a28261197b565b815160009081805b828110156115a55785818151811061158857611588611f2b565b60200260200101518261159b9190611d85565b915060010161156e565b50806000036115b9576000925050506105a2565b600081816115c78588611f41565b905060005b6101008110156116d4578260005b8781101561162557878b82815181106115f5576115f5611f2b565b60200260200101516116079190611f41565b6116118684611f41565b61161b9190611f58565b91506001016115da565b50839450808760016116379190611d85565b6116419190611f41565b60648561164e8287611d98565b6116589190611f41565b6116629190611f58565b61166c9190611d85565b846116778984611f41565b60646116838a88611f41565b61168d9190611f58565b6116979190611d85565b6116a19190611f41565b6116ab9190611f58565b93506116b784866119c4565b156116cb57839750505050505050506105a2565b506001016115cc565b5060405162461bcd60e51b81526020600482015260136024820152724420646f6573206e6f7420636f6e766572676560681b6044820152606401610a10565b815160009060ff8516811161175c5760405162461bcd60e51b815260206004820152600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606401610a10565b8260008061176a848a611f41565b905060005b848110156117ec578860ff1681146117e45787818151811061179357611793611f2b565b6020026020010151836117a69190611d85565b9250848882815181106117bb576117bb611f2b565b60200260200101516117cd9190611f41565b6117d78886611f41565b6117e19190611f58565b93505b60010161176f565b506117f78482611f41565b60646118038886611f41565b61180d9190611f41565b6118179190611f58565b9250600081611827606489611f41565b6118319190611f58565b61183b9084611d85565b9050600087815b6101008110156118b957819250898483600261185e9190611f41565b6118689190611d85565b6118729190611d98565b8761187d8480611f41565b6118879190611d85565b6118919190611f58565b915061189d82846119c4565b156118b15750965061086c95505050505050565b600101611842565b5060405162461bcd60e51b815260206004820152601e60248201527f417070726f78696d6174696f6e20646964206e6f7420636f6e766572676500006044820152606401610a10565b6060831561197157825160000361196a576001600160a01b0385163b61196a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a10565b508161086c565b61086c83836119db565b60048101546002820154600183015490919080831480159061199c57508142105b156119bd576000846003015490508083038142038502428503840201049350505b5050919050565b600060016119d28484611a05565b11159392505050565b8151156119eb5781518083602001fd5b8060405162461bcd60e51b8152600401610a109190611f96565b600081831115611a2057611a198284611d98565b90506105a2565b611a2a8383611d98565b9392505050565b600060208284031215611a4357600080fd5b5035919050565b80356001600160a01b0381168114611a6157600080fd5b919050565b600060208284031215611a7857600080fd5b611a2a82611a4a565b60006101a08284031215611a9457600080fd5b50919050565b60008060008060808587031215611ab057600080fd5b843567ffffffffffffffff811115611ac757600080fd5b611ad387828801611a81565b945050611ae260208601611a4a565b93969395505050506040820135916060013590565b60008060008060808587031215611b0d57600080fd5b843567ffffffffffffffff811115611b2457600080fd5b611b3087828801611a81565b97602087013597506040870135966060013595509350505050565b634e487b7160e01b600052602160045260246000fd5b803563ffffffff81168114611a6157600080fd5b600060208284031215611b8757600080fd5b611a2a82611b61565b634e487b7160e01b600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715611bca57611bca611b90565b60405290565b8015158114611bde57600080fd5b50565b8035611a6181611bd0565b600082601f830112611bfd57600080fd5b813567ffffffffffffffff80821115611c1857611c18611b90565b604051601f8301601f19908116603f01168101908282118183101715611c4057611c40611b90565b81604052838152866020858801011115611c5957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006101a08236031215611c8c57600080fd5b611c94611ba6565b611c9d83611b61565b8152611cab60208401611b61565b6020820152611cbc60408401611b61565b6040820152611ccd60608401611a4a565b6060820152611cde60808401611a4a565b6080820152611cef60a08401611be1565b60a082015260c083013567ffffffffffffffff811115611d0e57600080fd5b611d1a36828601611bec565b60c08301525060e083013560e0820152610100611d38818501611a4a565b9082015261012083810135908201526101408084013590820152610160808401359082015261018092830135928101929092525090565b634e487b7160e01b600052601160045260246000fd5b808201808211156105a2576105a2611d6f565b818103818111156105a2576105a2611d6f565b60005b83811015611dc6578181015183820152602001611dae565b50506000910152565b60008151808452611de7816020860160208601611dab565b601f01601f19169290920160200192915050565b60208152611e1260208201835163ffffffff169052565b60006020830151611e2b604084018263ffffffff169052565b50604083015163ffffffff811660608401525060608301516001600160a01b03811660808401525060808301516001600160a01b03811660a08401525060a083015180151560c08401525060c08301516101a08060e0850152611e926101c0850183611dcf565b60e086015161010086810191909152860151909250610120611ebe818701836001600160a01b03169052565b8601516101408681019190915286015161016080870191909152860151610180808701919091529095015193019290925250919050565b600060208284031215611f0757600080fd5b5051919050565b600060208284031215611f2057600080fd5b8151611a2a81611bd0565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176105a2576105a2611d6f565b600082611f7557634e487b7160e01b600052601260045260246000fd5b500490565b60008251611f8c818460208701611dab565b9190910192915050565b602081526000611a2a6020830184611dcf56fea264697066735822122060af3cf70528474796a9c196de07fd6d9e6dd0716ec5835e24db7cd071fdabb364736f6c63430008110033";

type PortalFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PortalFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PortalFacet__factory extends ContractFactory {
  constructor(...args: PortalFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PortalFacet> {
    return super.deploy(overrides || {}) as Promise<PortalFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PortalFacet {
    return super.attach(address) as PortalFacet;
  }
  override connect(signer: Signer): PortalFacet__factory {
    return super.connect(signer) as PortalFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PortalFacetInterface {
    return new utils.Interface(_abi) as PortalFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PortalFacet {
    return new Contract(address, _abi, signerOrProvider) as PortalFacet;
  }
}
