/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  InboxFacet,
  InboxFacetInterface,
} from "../../../../../contracts/core/connext/facets/InboxFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__handle_notTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__onlyRemoteRouter_notRemote",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__onlyReplica_notReplica",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__reconcile_alreadyReconciled",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__reconcile_noPortalRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "InboxFacet__reconcile_notConnext",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "originAndNonce",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidityProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "originDomain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "local",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "routers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "Reconciled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_origin",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_sender",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "handle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611442806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ab2dc3f514610030575b600080fd5b61004361003e36600461115a565b610045565b005b61004e3361013c565b61006b5760405163761c560f60e11b815260040160405180910390fd5b838261007782826101b1565b610094576040516346b4a0e960e01b815260040160405180910390fd5b60006100ae6100a385836101db565b62ffffff19166101ff565b905060006100c162ffffff198316610218565b905060006100d462ffffff19841661024d565b90506100e562ffffff1982166102a5565b61010257604051632af392f960e11b815260040160405180910390fd5b6000806101118b8b86866102b2565b9150915061012f6101278462ffffff19166104c4565b8c84846104d9565b5050505050505050505050565b602a54604051635190bc5360e01b81526001600160a01b0383811660048301526000921690635190bc5390602401602060405180830381865afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab9190611236565b92915050565b63ffffffff8216600090815260146020526040812054821480156101d457508115155b9392505050565b8151600090602084016101f664ffffffffff85168284610779565b95945050505050565b60006101ab61020d836107c0565b62ffffff19166107f2565b600081600261022f815b62ffffff19841690610852565b5061024562ffffff19851660006024600161092b565b949350505050565b600081600261025b81610222565b5060006102766024601887901c6001600160601b0316611284565b905060006102838661099b565b60ff16905061029b62ffffff1987166024848461092b565b9695505050505050565b60006101ab8260036109b0565b600080806102dc6102c862ffffff198716610a0f565b6102d762ffffff198816610a31565b610a53565b905060006102ef62ffffff198616610a61565b90508060000361036f57306001600160a01b03831667ffffffff0000000060208b901b1663ffffffff8a161760408051600081526020810186905267ffffffffffffffff92909216917f9f9a97db84f39202ca3b409b63f7ccf7d3fd810e176573c7483088b6f181bbbb910160405180910390a4509150600090506104bb565b61037882610a76565b61044b576040516340c10f1960e01b8152306004820152602481018290526001600160a01b038316906340c10f1990604401600060405180830381600087803b1580156103c457600080fd5b505af11580156103d8573d6000803e3d6000fd5b50505050816001600160a01b031663cc2ab7c76103fa8762ffffff1916610a83565b6040518263ffffffff1660e01b815260040161041891815260200190565b600060405180830381600087803b15801561043257600080fd5b505af1158015610446573d6000803e3d6000fd5b505050505b306001600160a01b03831667ffffffff0000000060208b901b1663ffffffff8a161760408051600081526020810186905267ffffffffffffffff92909216917f9f9a97db84f39202ca3b409b63f7ccf7d3fd810e176573c7483088b6f181bbbb910160405180910390a490925090505b94509492505050565b60006101ab62ffffff19831660416020610a94565b6000848152600b602052604090205460ff161561050957604051638f6bc06f60e01b815260040160405180910390fd5b6000848152600b60209081526040808320805460ff19166001179055600c82528083208054825181850281018501909352808352919290919083018282801561057b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161055d575b505050600088815260286020908152604080832054602790925282205494955090936105aa935090915061129b565b825190915081158015906105bf575080600114155b156105dd5760405163d3bd901560e01b815260040160405180910390fd5b80156107235760006105ef82866112c9565b905060005b6105ff600184611284565b81101561068757816000600d016000878481518110610620576106206112dd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000896001600160a01b03166001600160a01b03168152602001908152602001600020600082825461067a919061129b565b90915550506001016105f4565b50600061069483876112f3565b61069e908361129b565b905080600d6000876106b1600188611284565b815181106106c1576106c16112dd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000896001600160a01b03166001600160a01b03168152602001908152602001600020600082825461071b919061129b565b909155505050505b846001600160a01b03168663ffffffff16887f30bf44531c04b96173a40012c90db840a147cf7d50a3e160f5227f1af2faa3a086883360405161076893929190611307565b60405180910390a450505050505050565b600080610786838561129b565b9050604051811115610796575060005b806000036107ab5762ffffff199150506101d4565b5050606092831b9190911790911b1760181b90565b60006107cb82610bf0565b156107e8576301000000600160d81b038216600160d91b176101ab565b62ffffff196101ab565b60006107fd82610c13565b61084e5760405162461bcd60e51b815260206004820152601960248201527f56616c696469747920617373657274696f6e206661696c65640000000000000060448201526064015b60405180910390fd5b5090565b600061085e8383610c50565b61092457600061087d6108718560d81c90565b64ffffffffff16610c73565b91505060006108928464ffffffffff16610c73565b6040517f5479706520617373657274696f6e206661696c65642e20476f7420307800000060208201526001600160b01b031960b086811b8216603d8401526c05c408af0e0cac6e8cac84060f609b1b604784015283901b16605482015290925060009150605e0160405160208183030381529060405290508060405162461bcd60e51b8152600401610845919061136b565b5090919050565b6000806109418660781c6001600160601b031690565b6001600160601b0316905061095586610d21565b84610960878461129b565b61096a919061129b565b111561097d5762ffffff19915050610245565b610987858261129b565b905061029b8364ffffffffff168286610779565b60006101ab62ffffff19831660246001610d5a565b60008160038111156109c4576109c4611258565b60ff166109d084610d8a565b60ff161480156101d457508160038111156109ed576109ed611258565b6109f684610d9e565b6003811115610a0757610a07611258565b149392505050565b6000816001610a1d81610222565b5061024562ffffff19851660046020610a94565b6000816001610a3f81610222565b5061024562ffffff19851660006004610d5a565b60006101d483836000610db9565b60006101ab62ffffff19831660016020610d5a565b60006101ab826000610e0a565b60006101ab62ffffff198316602160205b60008160ff16600003610aa9575060006101d4565b610abc8460181c6001600160601b031690565b6001600160601b0316610ad260ff84168561129b565b1115610b3657610b1d610aee8560781c6001600160601b031690565b6001600160601b0316610b0a8660181c6001600160601b031690565b6001600160601b0316858560ff16610e40565b60405162461bcd60e51b8152600401610845919061136b565b60208260ff161115610bb05760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610845565b600882026000610bc98660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000601882901c6001600160601b0316610c0c6062602461129b565b1492915050565b6000610c1f8260d81c90565b64ffffffffff1664ffffffffff03610c3957506000919050565b6000610c4483610d21565b60405110199392505050565b60008164ffffffffff16610c648460d81c90565b64ffffffffff16149392505050565b600080601f5b600f8160ff161115610cc8576000610c928260086113c0565b60ff1685901c9050610ca381610f6a565b61ffff16841793508160ff16601014610cbe57601084901b93505b5060001901610c79565b50600f5b60ff8160ff161015610d1b576000610ce58260086113c0565b60ff1685901c9050610cf681610f6a565b61ffff16831792508160ff16600014610d1157601083901b92505b5060001901610ccc565b50915091565b6000610d368260181c6001600160601b031690565b610d498360781c6001600160601b031690565b016001600160601b03169050919050565b6000610d678260206113e9565b610d729060086113c0565b60ff16610d80858585610a94565b901c949350505050565b60006101ab62ffffff198316826001610d5a565b600060d882901c60ff1660038111156101ab576101ab611258565b600481015460009063ffffffff90811690841603610dd85750826101d4565b81600a016000610de88686610f9c565b81526020810191909152604001600020546001600160a01b0316949350505050565b6001600160a01b038216600090815260088201602052604081205463ffffffff1615610e38575060006101ab565b50503b151590565b60606000610e4d86610c73565b9150506000610e5b86610c73565b9150506000610e6986610c73565b9150506000610e7786610c73565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b6000610f7c60048360ff16901c610fde565b60ff1661ffff919091161760081b610f9382610fde565b60ff1617919050565b60008282604051602001610fc092919091825263ffffffff16602082015260400190565b60405160208183030381529060405280519060200120905092915050565b600060f08083179060ff82169003610ff95750603092915050565b8060ff1660f10361100d5750603192915050565b8060ff1660f2036110215750603292915050565b8060ff1660f3036110355750603392915050565b8060ff1660f4036110495750603492915050565b8060ff1660f50361105d5750603592915050565b8060ff1660f6036110715750603692915050565b8060ff1660f7036110855750603792915050565b8060ff1660f8036110995750603892915050565b8060ff1660f9036110ad5750603992915050565b8060ff1660fa036110c15750606192915050565b8060ff1660fb036110d55750606292915050565b8060ff1660fc036110e95750606392915050565b8060ff1660fd036110fd5750606492915050565b8060ff1660fe036111115750606592915050565b8060ff1660ff036111255750606692915050565b50919050565b803563ffffffff8116811461113f57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561117057600080fd5b6111798561112b565b93506111876020860161112b565b925060408501359150606085013567ffffffffffffffff808211156111ab57600080fd5b818701915087601f8301126111bf57600080fd5b8135818111156111d1576111d1611144565b604051601f8201601f19908116603f011681019083821181831017156111f9576111f9611144565b816040528281528a602084870101111561121257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60006020828403121561124857600080fd5b815180151581146101d457600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156112965761129661126e565b500390565b600082198211156112ae576112ae61126e565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826112d8576112d86112b3565b500490565b634e487b7160e01b600052603260045260246000fd5b600082611302576113026112b3565b500690565b606080825284519082018190526000906020906080840190828801845b828110156113495781516001600160a01b031684529284019290840190600101611324565b50505090830194909452506001600160a01b0391909116604090910152919050565b600060208083528351808285015260005b818110156113985785810183015185820160400152820161137c565b818111156113aa576000604083870101525b50601f01601f1916929092016040019392505050565b600060ff821660ff84168160ff04811182151516156113e1576113e161126e565b029392505050565b600060ff821660ff8416808210156114035761140361126e565b9003939250505056fea26469706673582212200276396951c9981191c94fbf152c5f1c77511098cefecc8c1e4114092e8539aa64736f6c634300080f0033";

type InboxFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InboxFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InboxFacet__factory extends ContractFactory {
  constructor(...args: InboxFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InboxFacet> {
    return super.deploy(overrides || {}) as Promise<InboxFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InboxFacet {
    return super.attach(address) as InboxFacet;
  }
  override connect(signer: Signer): InboxFacet__factory {
    return super.connect(signer) as InboxFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InboxFacetInterface {
    return new utils.Interface(_abi) as InboxFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InboxFacet {
    return new Contract(address, _abi, signerOrProvider) as InboxFacet;
  }
}
