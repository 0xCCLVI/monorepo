/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ProposedOwnableFacet,
  ProposedOwnableFacetInterface,
} from "../../../../../contracts/core/connext/facets/ProposedOwnableFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__acceptProposedOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleAdmin_alreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleRouter_alreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__assignRoleWatcher_alreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeAssetWhitelistRemoval_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__proposeRouterWhitelistRemoval_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeAssetWhitelist_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeAssetWhitelist_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeAssetWhitelist_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeRouterWhitelist_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeRouterWhitelist_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__removeRouterWhitelist_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnableFacet__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AssetWhitelistRemovalProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "AssetWhitelistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AssignAdminRole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "AssignRouterRole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "AssignWatcherRole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "RouterWhitelistRemovalProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "renounced",
        type: "bool",
      },
    ],
    name: "RouterWhitelistRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetWhitelistRemoved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetWhitelistTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "assignRoleAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "assignRoleRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcher",
        type: "address",
      },
    ],
    name: "assignRoleWatcher",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAssetWhitelistRemoval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeRouterWhitelistRemoval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_role",
        type: "address",
      },
    ],
    name: "queryRole",
    outputs: [
      {
        internalType: "enum Role",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeAssetWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeRouterWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerWhitelistRemoved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "routerWhitelistTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ee3806100206000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639150bb06116100b8578063c5b350df1161007c578063c5b350df1461022b578063c91cb56a14610233578063d1851c921461026c578063d232c2201461027d578063e2b31fc714610285578063f2d8d74a1461028d57600080fd5b80639150bb06146101d7578063a59c8c64146101ea578063a9943b1b146101f2578063b1f8100d14610205578063bb271a271461021857600080fd5b80633f4ba83a1161010a5780633f4ba83a1461018f5780636a42b8f8146101975780636e26deba1461019f578063715018a6146101a75780638456cb59146101af5780638da5cb5b146101b757600080fd5b806311f7ea6d146101475780632c6c579c14610163578063357aac781461016d5780633863f874146101755780633cf52ffb14610187575b600080fd5b60175460ff165b60405190151581526020015b60405180910390f35b61016b610298565b005b61016b610328565b6018545b60405190815260200161015a565b601454610179565b61016b6103b6565b602954610179565b601654610179565b61016b61044d565b61016b61050c565b6101bf6105a6565b6040516001600160a01b03909116815260200161015a565b61016b6101e5366004610e1a565b6105b5565b61016b6106bf565b61016b610200366004610e1a565b6107a0565b61016b610213366004610e1a565b6108a3565b61016b610226366004610e1a565b61095b565b61016b610a5e565b61025f610241366004610e1a565b6001600160a01b031660009081526019602052604090205460ff1690565b60405161015a9190610e60565b6013546001600160a01b03166101bf565b61014e610af2565b61016b610b0c565b60155460ff1661014e565b336102a1610bed565b6001600160a01b0316141580156102dc575060033360009081526019602052604090205460ff1660038111156102d9576102d9610e4a565b14155b156102fa57604051637b32c26b60e01b815260040160405180910390fd5b60155460ff161561031e57604051633934404160e01b815260040160405180910390fd5b610326610c1b565b565b33610331610bed565b6001600160a01b03161415801561036c575060033360009081526019602052604090205460ff16600381111561036957610369610e4a565b14155b1561038a57604051637b32c26b60e01b815260040160405180910390fd5b60175460ff16156103ae5760405163a3515c1f60e01b815260040160405180910390fd5b610326610c57565b336103bf610bed565b6001600160a01b0316141580156103fa575060033360009081526019602052604090205460ff1660038111156103f7576103f7610e4a565b14155b1561041857604051637b32c26b60e01b815260040160405180910390fd5b6023805460ff191690556040517fa45f47fdea8a1efdd9029a5691c7f759c32b7c698632b563573e155625d1693390600090a1565b33610456610bed565b6001600160a01b03161461047d576040516314e74a2560e21b815260040160405180910390fd5b6014546000036104a057604051630fde518360e11b815260040160405180910390fd5b6029546014546104b09042610e88565b116104cd576040516202943360e61b815260040160405180910390fd5b6013546001600160a01b0316156104f7576040516351d346a960e01b815260040160405180910390fd5b601354610326906001600160a01b0316610c8d565b33610515610bed565b6001600160a01b031614158015610550575060023360009081526019602052604090205460ff16600381111561054d5761054d610e4a565b14155b1561056e5760405163bae4c01f60e01b815260040160405180910390fd5b6023805460ff191660011790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b60006105b0610bed565b905090565b336105be610bed565b6001600160a01b0316141580156105f9575060013360009081526019602052604090205460ff1660038111156105f6576105f6610e4a565b14155b15610617576040516360237f6b60e11b815260040160405180910390fd5b60016001600160a01b03821660009081526019602052604090205460ff16600381111561064657610646610e4a565b036106645760405163012ea61160e21b815260040160405180910390fd5b6001600160a01b038116600081815260196020908152604091829020805460ff1916600117905590519182527f957a3648868c176cb26eacae1d3b2491bc9e1f9f70693a11d36ea431bc2f777191015b60405180910390a150565b336106c8610bed565b6001600160a01b031614158015610703575060033360009081526019602052604090205460ff16600381111561070057610700610e4a565b14155b1561072157604051637b32c26b60e01b815260040160405180910390fd5b60155460ff16156107455760405163c4fcf53b60e01b815260040160405180910390fd5b6016546000036107685760405163a7f043cd60e01b815260040160405180910390fd5b6029546016546107789042610e88565b1161079657604051630f94fc2560e21b815260040160405180910390fd5b6103266001610cab565b336107a9610bed565b6001600160a01b0316141580156107e4575060033360009081526019602052604090205460ff1660038111156107e1576107e1610e4a565b14155b1561080257604051637b32c26b60e01b815260040160405180910390fd5b60026001600160a01b03821660009081526019602052604090205460ff16600381111561083157610831610e4a565b0361084f5760405163958887ed60e01b815260040160405180910390fd5b6001600160a01b038116600081815260196020908152604091829020805460ff1916600217905590519182527f10f42e075fb7cfd72c5de9382ab7db9ce6c5169d50dea48e7ccefa2b5c5d8a2a91016106b4565b336108ac610bed565b6001600160a01b0316146108d3576040516314e74a2560e21b815260040160405180910390fd5b6013546001600160a01b0382811691161480156108f857506001600160a01b03811615155b1561091657604051630274ac4360e21b815260040160405180910390fd5b806001600160a01b03166109286105a6565b6001600160a01b03160361094f57604051631f677f5160e01b815260040160405180910390fd5b61095881610cf1565b50565b33610964610bed565b6001600160a01b03161415801561099f575060033360009081526019602052604090205460ff16600381111561099c5761099c610e4a565b14155b156109bd57604051637b32c26b60e01b815260040160405180910390fd5b60036001600160a01b03821660009081526019602052604090205460ff1660038111156109ec576109ec610e4a565b03610a0a5760405163561c426960e01b815260040160405180910390fd5b6001600160a01b038116600081815260196020908152604091829020805460ff1916600317905590519182527f3cd728ebedcdc6fb2b94d980d69ef14e1b25c2a84ad10828c5f0b9420d9d75e591016106b4565b6013546001600160a01b03163314610a8957604051631b54eee360e11b815260040160405180910390fd5b6013546001600160a01b0316610a9d6105a6565b6001600160a01b031603610ac4576040516355cc507960e01b815260040160405180910390fd5b602954601454610ad49042610e88565b116104f7576040516301e60c7360e51b815260040160405180910390fd5b600080610afd6105a6565b6001600160a01b031614905090565b33610b15610bed565b6001600160a01b031614158015610b50575060033360009081526019602052604090205460ff166003811115610b4d57610b4d610e4a565b14155b15610b6e57604051637b32c26b60e01b815260040160405180910390fd5b60175460ff1615610b9257604051630608cb0760e41b815260040160405180910390fd5b601854600003610bb557604051634bb4e70d60e01b815260040160405180910390fd5b602954601854610bc59042610e88565b11610be3576040516320502ec760e21b815260040160405180910390fd5b6103266001610d3f565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b4260168190556040519081527f3fb93cd2d7b177a05cdfd1945eefab6bd66ff1c9935d36b3d3906f8f63b4b7cc906020015b60405180910390a1565b4260188190556040519081527f33b2ecb6423e15093e362932044a5d4b879d34959f073bcc4a2f622a4a48d77a90602001610c4d565b6000601455601380546001600160a01b031916905561095881610d85565b6015805460ff191682151590811790915560006016556040519081527f4304b1b406eaf3fee0619669a5059495538ebbc3000c03d3ff6ccbc266f25e3c906020016106b4565b42601455601380546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6017805460ff191682151590811790915560006018556040519081527f6d2bda5daaba704b44ef68f2d7e8da6da754a843400bb7b37ae88b41864b7fd5906020016106b4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c132080546001600160a01b031981166001600160a01b038481169182179093556040517fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b600060208284031215610e2c57600080fd5b81356001600160a01b0381168114610e4357600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b6020810160048310610e8257634e487b7160e01b600052602160045260246000fd5b91905290565b600082821015610ea857634e487b7160e01b600052601160045260246000fd5b50039056fea2646970667358221220aaadde926dcf16bfc21494ad285725c79f78eaca7d8501d759b0167dc4231f6164736f6c634300080f0033";

type ProposedOwnableFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProposedOwnableFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProposedOwnableFacet__factory extends ContractFactory {
  constructor(...args: ProposedOwnableFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProposedOwnableFacet> {
    return super.deploy(overrides || {}) as Promise<ProposedOwnableFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProposedOwnableFacet {
    return super.attach(address) as ProposedOwnableFacet;
  }
  override connect(signer: Signer): ProposedOwnableFacet__factory {
    return super.connect(signer) as ProposedOwnableFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProposedOwnableFacetInterface {
    return new utils.Interface(_abi) as ProposedOwnableFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProposedOwnableFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProposedOwnableFacet;
  }
}
