/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type { LPToken, LPTokenInterface } from "../../../../../contracts/core/connext/helpers/LPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611254806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063ba9a7a5614610258578063dd62ed3e14610261578063f2fde38b1461027457600080fd5b8063715018a6146101f457806379cc6790146101fc5780638da5cb5b1461020f57806395d89b411461022a57600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a35780634cd88b76146101b857806370a08231146101cb57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610287565b6040516101309190610e23565b60405180910390f35b61014c610147366004610e8d565b610319565b6040519015158152602001610130565b6035545b604051908152602001610130565b61014c61017c366004610eb7565b610333565b60405160128152602001610130565b61014c61019e366004610e8d565b610357565b6101b66101b1366004610e8d565b610379565b005b61014c6101c6366004610f96565b6103f4565b6101606101d9366004610ffa565b6001600160a01b031660009081526033602052604090205490565b6101b6610520565b6101b661020a366004610e8d565b610534565b6065546040516001600160a01b039091168152602001610130565b61012361058f565b61014c610240366004610e8d565b61059e565b61014c610253366004610e8d565b610619565b6101606103e881565b61016061026f36600461101c565b610627565b6101b6610282366004610ffa565b610652565b6060603680546102969061104f565b80601f01602080910402602001604051908101604052809291908181526020018280546102c29061104f565b801561030f5780601f106102e45761010080835404028352916020019161030f565b820191906000526020600020905b8154815290600101906020018083116102f257829003601f168201915b5050505050905090565b6000336103278185856106cb565b60019150505b92915050565b6000336103418582856107ef565b61034c858585610869565b506001949350505050565b60003361032781858561036a8383610627565b610374919061109f565b6106cb565b610381610a42565b806000036103cf5760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206d696e7420360541b60448201526064015b60405180910390fd5b6035546000036103e6576103e660016103e8610a9c565b6103f08282610a9c565b5050565b60008054610100900460ff16158080156104155750600054600160ff909116105b8061042f5750303b15801561042f575060005460ff166001145b6104925760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c6565b6000805460ff1916600117905580156104b5576000805461ff0019166101001790555b6104bd610b87565b6104c78484610bae565b6104cf610bf3565b600191508015610519576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b610528610a42565b6105326000610c1f565b565b61053c610a42565b806000036105855760405162461bcd60e51b815260206004820152601660248201527504c50546f6b656e3a2063616e6e6f74206275726e20360541b60448201526064016103c6565b6103f08282610c71565b6060603780546102969061104f565b600033816105ac8286610627565b90508381101561060c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103c6565b61034c82868684036106cb565b600033610327818585610869565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61065a610a42565b6001600160a01b0381166106bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c6565b6106c881610c1f565b50565b6001600160a01b03831661072d5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103c6565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103c6565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107fb8484610627565b9050600019811461086357818110156108565760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103c6565b61086384848484036106cb565b50505050565b6001600160a01b0383166108cd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103c6565b6001600160a01b03821661092f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103c6565b61093a838383610dcb565b6001600160a01b038316600090815260336020526040902054818110156109b25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103c6565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906109e990849061109f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3591815260200190565b60405180910390a3610863565b6065546001600160a01b031633146105325760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c6565b6001600160a01b038216610af25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103c6565b610afe60008383610dcb565b8060356000828254610b10919061109f565b90915550506001600160a01b03821660009081526033602052604081208054839290610b3d90849061109f565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600054610100900460ff166105325760405162461bcd60e51b81526004016103c6906110b2565b600054610100900460ff16610bd55760405162461bcd60e51b81526004016103c6906110b2565b6036610be1838261114b565b506037610bee828261114b565b505050565b600054610100900460ff16610c1a5760405162461bcd60e51b81526004016103c6906110b2565b610532335b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610cd15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103c6565b610cdd82600083610dcb565b6001600160a01b03821660009081526033602052604090205481811015610d515760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103c6565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610d8090849061120b565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b306001600160a01b03831603610bee5760405162461bcd60e51b815260206004820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c66000060448201526064016103c6565b600060208083528351808285015260005b81811015610e5057858101830151858201604001528201610e34565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610e8857600080fd5b919050565b60008060408385031215610ea057600080fd5b610ea983610e71565b946020939093013593505050565b600080600060608486031215610ecc57600080fd5b610ed584610e71565b9250610ee360208501610e71565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f1a57600080fd5b813567ffffffffffffffff80821115610f3557610f35610ef3565b604051601f8301601f19908116603f01168101908282118183101715610f5d57610f5d610ef3565b81604052838152866020858801011115610f7657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610fa957600080fd5b823567ffffffffffffffff80821115610fc157600080fd5b610fcd86838701610f09565b93506020850135915080821115610fe357600080fd5b50610ff085828601610f09565b9150509250929050565b60006020828403121561100c57600080fd5b61101582610e71565b9392505050565b6000806040838503121561102f57600080fd5b61103883610e71565b915061104660208401610e71565b90509250929050565b600181811c9082168061106357607f821691505b60208210810361108357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561032d5761032d611089565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b601f821115610bee57600081815260208120601f850160051c810160208610156111245750805b601f850160051c820191505b8181101561114357828155600101611130565b505050505050565b815167ffffffffffffffff81111561116557611165610ef3565b61117981611173845461104f565b846110fd565b602080601f8311600181146111ae57600084156111965750858301515b600019600386901b1c1916600185901b178555611143565b600085815260208120601f198616915b828110156111dd578886015182559484019460019091019084016111be565b50858210156111fb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8181038181111561032d5761032d61108956fea2646970667358221220585214ceaee4ddc83fa69e386344a88c33095b52ad8ceb6daf89cb86536ab71d64736f6c63430008110033";

type LPTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: LPTokenConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<LPToken> {
    return super.deploy(overrides || {}) as Promise<LPToken>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPToken {
    return super.attach(address) as LPToken;
  }
  override connect(signer: Signer): LPToken__factory {
    return super.connect(signer) as LPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new utils.Interface(_abi) as LPTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): LPToken {
    return new Contract(address, _abi, signerOrProvider) as LPToken;
  }
}
