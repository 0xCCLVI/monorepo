/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  PolygonL2Connector,
  PolygonL2ConnectorInterface,
} from "../../../../../../contracts/core/messaging/connectors/PolygonConnector.sol/PolygonL2Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract Connector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002cf338038062002cf38339810160408190526200003591620002b7565b858888888888888888878063ffffffff16600003620000855760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000ca5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064016200007c565b6001600160a01b038516620001115760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016200007c565b6200011c3362000226565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064016200007c565b613a98811015620001e55760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007c565b61012091909152610140525050602c80546001600160a01b0319166001600160a01b03969096169590951790945550620003449a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200029a57600080fd5b919050565b80516001600160a01b03811681146200029a57600080fd5b600080600080600080600080610100898b031215620002d557600080fd5b620002e08962000285565b9750620002f060208a0162000285565b96506200030060408a016200029f565b95506200031060608a016200029f565b94506200032060808a016200029f565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e05161010051610120516101405161292a620003c96000396000818161027f0152610f190152600081816105bc01528181610f3a0152610fc101526000610312015260006103ec015260006105950152600081816103b201528181610c870152610e1b0152600081816104760152610530015261292a6000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638da5cb5b11610146578063cc394283116100c3578063db1b765911610087578063db1b7659146105de578063ebf0c717146105f1578063ee250e06146105f9578063f38a267b14610602578063fa31de0114610625578063fd54b2281461063857600080fd5b8063cc3942831461055a578063d1851c921461056d578063d232c2201461057e578063d69f9d6114610590578063d88beda2146105b757600080fd5b8063b46300ec1161010a578063b46300ec146104ea578063b697f531146104f2578063b95a200114610505578063c2fb26a61461052b578063c5b350df1461055257600080fd5b80638da5cb5b1461049a5780639a7c4b71146104ab5780639fa92f9d146104be578063b1f8100d146104c4578063b2f87643146104d757600080fd5b806352a9674b116101df5780636a42b8f8116101a35780636a42b8f81461042a578063715018a6146104335780637f1e9cb01461043b57806382646a581461044e57806388837094146104615780638d3638f41461047457600080fd5b806352a9674b146103ad5780635bd11efc146103d45780635f61e3ec146103e75780636188af0e1461040e57806365eaf11b1461042157600080fd5b80633490334a116102265780633490334a1461030d5780633cf52ffb14610349578063450d11f0146103515780634ff746f61461037c5780635190bc531461039157600080fd5b806306661abd1461026357806325e3beda1461027a578063272efc69146102a157806329460bd0146102d45780632bbd59ca146102dd575b600080fd5b6023545b6040519081526020015b60405180910390f35b6102677f000000000000000000000000000000000000000000000000000000000000000081565b6102c46102af3660046121d6565b60296020526000908152604090205460ff1681565b6040519015158152602001610271565b61026760255481565b6103006102eb3660046121f1565b602b6020526000908152604090205460ff1681565b6040516102719190612220565b6103347f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610271565b600254610267565b602c54610364906001600160a01b031681565b6040516001600160a01b039091168152602001610271565b61038f61038a3660046122eb565b610642565b005b6102c461039f3660046121d6565b6001600160a01b0316301490565b6103347f000000000000000000000000000000000000000000000000000000000000000081565b61038f6103e23660046121d6565b610687565b6103647f000000000000000000000000000000000000000000000000000000000000000081565b61038f61041c366004612320565b61071b565b61026760275481565b62093a80610267565b61038f610776565b602d54610364906001600160a01b031681565b61038f61045c3660046122eb565b610835565b61038f61046f3660046121d6565b61086f565b7f0000000000000000000000000000000000000000000000000000000000000000610334565b6000546001600160a01b0316610364565b61038f6104b9366004612380565b6108fd565b30610364565b61038f6104d23660046121d6565b6109a2565b61038f6104e53660046121d6565b610a4a565b61038f610ac6565b61038f6105003660046121d6565b610af2565b61033461051336600461241b565b602a6020526000908152604090205463ffffffff1681565b6103347f000000000000000000000000000000000000000000000000000000000000000081565b61038f610b71565b602454610364906001600160a01b031681565b6001546001600160a01b0316610364565b6000546001600160a01b0316156102c4565b6103647f000000000000000000000000000000000000000000000000000000000000000081565b6102677f000000000000000000000000000000000000000000000000000000000000000081565b6102c46105ec3660046121d6565b610bcc565b610267610bd7565b61026760265481565b6102c46106103660046121f1565b60286020526000908152604090205460ff1681565b61038f610633366004612436565b610be8565b6023546102679081565b61064b81610d2b565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161067c9291906124e5565b60405180910390a150565b6000546001600160a01b031633146106b2576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b61072d83805190602001208383610d77565b6107675760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064015b60405180910390fd5b61077083610e05565b50505050565b6000546001600160a01b031633146107a1576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107c457604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107d69190612525565b116107f4576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561081e576040516323295ef960e01b815260040160405180910390fd5b600154610833906001600160a01b03166110ee565b565b61083e8161114d565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161067c9291906124e5565b602d546001600160a01b0316156108db5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161075e565b602d80546001600160a01b0319166001600160a01b0392909216919091179055565b602c546001600160a01b031633146109615760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b606482015260840161075e565b610770848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061118d92505050565b6000546001600160a01b031633146109cd576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156109f257506001600160a01b03811615155b15610a10576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a3e57604051634a2fb73f60e11b815260040160405180910390fd5b610a4781611209565b50565b6000546001600160a01b03163314610a75576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad910161067c565b610833602754604051602001610ade91815260200190565b60405160208183030381529060405261114d565b6000546001600160a01b03163314610b1d576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d87910161067c565b6001546001600160a01b03163314610b9c576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610bae9190612525565b1161081e5760405163d39c12bb60e01b815260040160405180910390fd5b600060015b92915050565b6000610be36003611257565b905090565b3360009081526029602052604090205460ff16610c365760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161075e565b63ffffffff8084166000908152602a602052604090205416610c5981600161253c565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610cb07f0000000000000000000000000000000000000000000000000000000000000000338488888861126a565b80516020820120909150610cc56003826112a2565b610ccd610bd7565b6027557f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610cfd60235490565b610d079190612525565b60275485604051610d1b9493929190612564565b60405180910390a1505050505050565b8051602014610d665760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161075e565b610a47610d7282612589565b602655565b6000806000858152602b602052604090205460ff166002811115610d9d57610d9d61220a565b14610de05760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161075e565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b600080610e1283826113bf565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610e4a62ffffff1983166113e3565b63ffffffff1614610e8c5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161075e565b6000610e9d62ffffff1983166113f8565b905060016000828152602b602052604090205460ff166002811115610ec457610ec461220a565b14610efb5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161075e565b6000818152602b60205260409020805460ff19166002179055610f5e7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006125ad565b5a1015610f965760405162461bcd60e51b815260040161075e906020808252600490820152632167617360e01b604082015260600190565b6000610fa762ffffff198416611441565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061100462ffffff198916611452565b61101362ffffff198a16611466565b61102262ffffff198b1661147b565b61103f61103462ffffff198d16611490565b62ffffff19166114be565b60405160240161105294939291906125c5565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d94508385111561109b578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110d9939291906125f4565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a476000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061150792505050565b602d5482906001600160a01b038083169116146112005760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b606482015260840161075e565b61077082610d2b565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610bd182611265611536565b6119f7565b606086868686868660405160200161128796959493929190612615565b60405160208183030381529060405290509695505050505050565b60016112b060206002612753565b6112ba9190612525565b8260200154106112ff5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161075e565b600182602001600082825461131491906125ad565b9091555050602082015460005b60208110156113b1578160011660010361135057828482602081106113485761134861275f565b015550505050565b8381602081106113625761136261275f565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261139d9190612775565b9150806113a981612797565b915050611321565b506113ba6127b0565b505050565b8151600090602084016113da64ffffffffff85168284611ac9565b95945050505050565b6000610bd162ffffff19831660286004611b10565b60008061140e8360781c6001600160601b031690565b6001600160601b03169050600061142e8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610bd161144f83611b40565b90565b6000610bd162ffffff198316826004611b10565b6000610bd162ffffff19831660246004611b10565b6000610bd162ffffff19831660046020611b51565b6000610bd1604c6114ae81601886901c6001600160601b0316612525565b62ffffff19851691906000611cad565b60606000806114d68460181c6001600160601b031690565b6001600160601b0316905060405191508192506114f68483602001611d29565b508181016020016040529052919050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b0368160405161067c91906127c6565b61153e61219b565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611ac157600182821c166000868360208110611a2457611a2461275f565b0154905081600103611a61576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611aac565b84868460208110611a7457611a7461275f565b6020020151604051602001611a93929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611ab990612797565b915050611a01565b505092915050565b600080611ad683856125ad565b9050604051811115611ae6575060005b80600003611afb5762ffffff19915050610dfe565b5050606092831b9190911790911b1760181b90565b6000611b1d8260206127d9565b611b289060086127fc565b60ff16611b36858585611b51565b901c949350505050565b6000610bd162ffffff198316602c60205b60008160ff16600003611b6657506000610dfe565b611b798460181c6001600160601b031690565b6001600160601b0316611b8f60ff8416856125ad565b1115611bf357611bda611bab8560781c6001600160601b031690565b6001600160601b0316611bc78660181c6001600160601b031690565b6001600160601b0316858560ff16611e8a565b60405162461bcd60e51b815260040161075e91906127c6565b60208260ff161115611c6d5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161075e565b600882026000611c868660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611cc38660781c6001600160601b031690565b6001600160601b03169050611cd786611ef8565b84611ce287846125ad565b611cec91906125ad565b1115611cff5762ffffff19915050611d21565b611d0985826125ad565b9050611d1d8364ffffffffff168286611ac9565b9150505b949350505050565b600062ffffff1980841603611d915760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161075e565b611d9a83611f31565b611dfa5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161075e565b6000611e0f8460181c6001600160601b031690565b6001600160601b031690506000611e2f8560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611e4f5760206060fd5b8285848460045afa50611e80611e658760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611e9786611f6e565b9150506000611ea586611f6e565b9150506000611eb386611f6e565b9150506000611ec186611f6e565b91505083838383604051602001611edb949392919061281d565b604051602081830303815290604052945050505050949350505050565b6000611f0d8260181c6001600160601b031690565b611f208360781c6001600160601b031690565b016001600160601b03169050919050565b6000611f3d8260d81c90565b64ffffffffff1664ffffffffff03611f5757506000919050565b6000611f6283611ef8565b60405110199392505050565b600080601f5b600f8160ff161115611fc3576000611f8d8260086127fc565b60ff1685901c9050611f9e8161201c565b61ffff16841793508160ff16601014611fb957601084901b93505b5060001901611f74565b50600f5b60ff8160ff161015612016576000611fe08260086127fc565b60ff1685901c9050611ff18161201c565b61ffff16831792508160ff1660001461200c57601083901b92505b5060001901611fc7565b50915091565b600061202e60048360ff16901c61204e565b60ff1661ffff919091161760081b6120458261204e565b60ff1617919050565b600060f08083179060ff821690036120695750603092915050565b8060ff1660f10361207d5750603192915050565b8060ff1660f2036120915750603292915050565b8060ff1660f3036120a55750603392915050565b8060ff1660f4036120b95750603492915050565b8060ff1660f5036120cd5750603592915050565b8060ff1660f6036120e15750603692915050565b8060ff1660f7036120f55750603792915050565b8060ff1660f8036121095750603892915050565b8060ff1660f90361211d5750603992915050565b8060ff1660fa036121315750606192915050565b8060ff1660fb036121455750606292915050565b8060ff1660fc036121595750606392915050565b8060ff1660fd0361216d5750606492915050565b8060ff1660fe036121815750606592915050565b8060ff1660ff036121955750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b80356001600160a01b03811681146121d157600080fd5b919050565b6000602082840312156121e857600080fd5b610dfe826121ba565b60006020828403121561220357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061224257634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261226f57600080fd5b813567ffffffffffffffff8082111561228a5761228a612248565b604051601f8301601f19908116603f011681019082821181831017156122b2576122b2612248565b816040528381528660208588010111156122cb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156122fd57600080fd5b813567ffffffffffffffff81111561231457600080fd5b611d218482850161225e565b6000806000610440848603121561233657600080fd5b833567ffffffffffffffff81111561234d57600080fd5b6123598682870161225e565b93505061042084018581111561236e57600080fd5b60208501925080359150509250925092565b6000806000806060858703121561239657600080fd5b843593506123a6602086016121ba565b9250604085013567ffffffffffffffff808211156123c357600080fd5b818701915087601f8301126123d757600080fd5b8135818111156123e657600080fd5b8860208285010111156123f857600080fd5b95989497505060200194505050565b803563ffffffff811681146121d157600080fd5b60006020828403121561242d57600080fd5b610dfe82612407565b60008060006060848603121561244b57600080fd5b61245484612407565b925060208401359150604084013567ffffffffffffffff81111561247757600080fd5b6124838682870161225e565b9150509250925092565b60005b838110156124a8578181015183820152602001612490565b838111156107705750506000910152565b600081518084526124d181602086016020860161248d565b601f01601f19169290920160200192915050565b6040815260006124f860408301856124b9565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125375761253761250f565b500390565b600063ffffffff80831681851680830382111561255b5761255b61250f565b01949350505050565b848152836020820152826040820152608060608201526000611e8060808301846124b9565b805160208083015191908110156121955760001960209190910360031b1b16919050565b600082198211156125c0576125c061250f565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611e8060808301846124b9565b83815282151560208201526060604082015260006113da60608301846124b9565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161265d81604c85016020870161248d565b91909101604c01979650505050505050565b600181815b808511156126aa5781600019048211156126905761269061250f565b8085161561269d57918102915b93841c9390800290612674565b509250929050565b6000826126c157506001610bd1565b816126ce57506000610bd1565b81600181146126e457600281146126ee5761270a565b6001915050610bd1565b60ff8411156126ff576126ff61250f565b50506001821b610bd1565b5060208310610133831016604e8410600b841016171561272d575081810a610bd1565b612737838361266f565b806000190482111561274b5761274b61250f565b029392505050565b6000610dfe83836126b2565b634e487b7160e01b600052603260045260246000fd5b60008261279257634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016127a9576127a961250f565b5060010190565b634e487b7160e01b600052600160045260246000fd5b602081526000610dfe60208301846124b9565b600060ff821660ff8416808210156127f3576127f361250f565b90039392505050565b600060ff821660ff84168160ff048111821515161561274b5761274b61250f565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611e8056fea26469706673582212208a3fb924152681b79e2c721ffb938d81e63b9f7883b62ccf964a323f047c0fa964736f6c634300080f0033";

type PolygonL2ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonL2ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonL2Connector__factory extends ContractFactory {
  constructor(...args: PolygonL2ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonL2Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<PolygonL2Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): PolygonL2Connector {
    return super.attach(address) as PolygonL2Connector;
  }
  override connect(signer: Signer): PolygonL2Connector__factory {
    return super.connect(signer) as PolygonL2Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonL2ConnectorInterface {
    return new utils.Interface(_abi) as PolygonL2ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonL2Connector {
    return new Contract(address, _abi, signerOrProvider) as PolygonL2Connector;
  }
}
