/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RoutersFacet,
  RoutersFacetInterface,
} from "../../../../../contracts/core/connext/facets/RoutersFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__handleIncomingAsset_nativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__handleOutgoingAsset_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "AssetLogic__transferAssetToContract_feeOnTransferNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__acceptProposedRouterOwner_notElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__addLiquidityForRouter_amountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__addLiquidityForRouter_badAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__addLiquidityForRouter_badRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__addLiquidityForRouter_routerEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__approveRouterForPortal_alreadyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__approveRouterForPortal_notAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__onlyProposedRouterOwner_notProposedRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__onlyProposedRouterOwner_notRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__onlyRouterOwner_notRouterOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__proposeRouterOwner_badRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__proposeRouterOwner_notNewOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouterLiquidityFor_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouterLiquidity_amountIsZero",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouterLiquidity_insufficientFunds",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouterLiquidity_recipientEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouter_notAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__removeRouter_routerEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setLiquidityFeeNumerator_tooLarge",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setLiquidityFeeNumerator_tooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setMaxRoutersPerTransfer_invalidMaxRoutersPerTransfer",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setRouterRecipient_notNewRecipient",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setupRouter_alreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__setupRouter_routerEmpty",
    type: "error",
  },
  {
    inputs: [],
    name: "RoutersFacet__unapproveRouterForPortal_notApproved",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidityFeeNumerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LiquidityFeeNumeratorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "maxRoutersPerTransfer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MaxRoutersPerTransferUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterApprovedForPortal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "local",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterLiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "local",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterLiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "RouterOwnerAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevProposed",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newProposed",
        type: "address",
      },
    ],
    name: "RouterOwnerProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevRecipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RouterRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RouterUnapprovedForPortal",
    type: "event",
  },
  {
    inputs: [],
    name: "LIQUIDITY_FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDITY_FEE_NUMERATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "acceptProposedRouterOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_local",
        type: "address",
      },
    ],
    name: "addRouterLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_local",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "addRouterLiquidityFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "approveRouterForPortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getProposedRouterOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getProposedRouterOwnerTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getRouterApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getRouterApprovalForPortal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getRouterOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "getRouterRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxRoutersPerTransfer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "proposed",
        type: "address",
      },
    ],
    name: "proposeRouterOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "removeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_local",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "removeRouterLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_local",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "removeRouterLiquidityFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
    ],
    name: "routerBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numerator",
        type: "uint256",
      },
    ],
    name: "setLiquidityFeeNumerator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMaxRouters",
        type: "uint256",
      },
    ],
    name: "setMaxRoutersPerTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setRouterRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setupRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "unapproveRouterForPortal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d86806100206000396000f3fe6080604052600436106101405760003560e01c806354064594116100b65780639bf6d8751161006f5780639bf6d875146103f4578063c6bf691d14610409578063da3a892f14610442578063e9160f3e14610462578063eb492f4414610482578063ffaf3f1a146104a257600080fd5b80635406459414610328578063582c78d21461033b5780636ae0b1541461035b578063829047161461037b5780638770e6821461039b578063899962a1146103d457600080fd5b8063197c139d11610108578063197c139d1461022957806322a3c007146102495780632d3f9ef6146102695780633b688da61461027c57806341258b5c146102cd5780634b72c5da1461031357600080fd5b806304376ff4146101455780630951d6d81461016757806309935b8f1461018b57806312d57170146101ab5780631407093b146101e0575b600080fd5b34801561015157600080fd5b50610165610160366004611a84565b6104c2565b005b34801561017357600080fd5b506001545b6040519081526020015b60405180910390f35b34801561019757600080fd5b506101656101a6366004611a84565b610588565b3480156101b757600080fd5b506101786101c6366004611a84565b6001600160a01b0316600090815260208052604090205490565b3480156101ec57600080fd5b506102196101fb366004611a84565b6001600160a01b03166000908152601b602052604090205460ff1690565b6040519015158152602001610182565b34801561023557600080fd5b50610165610244366004611aa1565b610744565b34801561025557600080fd5b50610165610264366004611af4565b6107e2565b610165610277366004611b2d565b610928565b34801561028857600080fd5b506102b5610297366004611a84565b6001600160a01b039081166000908152601f60205260409020541690565b6040516001600160a01b039091168152602001610182565b3480156102d957600080fd5b506101786102e8366004611af4565b6001600160a01b039182166000908152600c6020908152604080832093909416825291909152205490565b34801561031f57600080fd5b50612710610178565b610165610336366004611b6f565b61098a565b34801561034757600080fd5b50610165610356366004611b94565b6109eb565b34801561036757600080fd5b50610165610376366004611a84565b610ab7565b34801561038757600080fd5b50610165610396366004611b94565b610ce5565b3480156103a757600080fd5b506102196103b6366004611a84565b6001600160a01b03166000908152601c602052604090205460ff1690565b3480156103e057600080fd5b506101656103ef366004611b2d565b610d7e565b34801561040057600080fd5b50601054610178565b34801561041557600080fd5b506102b5610424366004611a84565b6001600160a01b039081166000908152601d60205260409020541690565b34801561044e57600080fd5b5061016561045d366004611a84565b610dd7565b34801561046e57600080fd5b506102b561047d366004611a84565b610ee6565b34801561048e57600080fd5b5061016561049d366004611bad565b610f18565b3480156104ae57600080fd5b506101656104bd366004611af4565b6110d3565b336104cb6111d5565b6001600160a01b0316146104f2576040516314e74a2560e21b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604090205460ff1661052b57604051635d3abc4360e11b815260040160405180910390fd5b6001600160a01b0381166000818152601c6020908152604091829020805460ff19169055815192835233908301527f903522f09b29fa2102f5d8d8b181ac8edb4cfaf5d705076e4ab95117f6bb02ad91015b60405180910390a150565b6001600160a01b038082166000908152601f602052604090205482911680610611576001600160a01b038083166000908152601e602052604090205416801580156105db5750336001600160a01b038416145b806105ee57506001600160a01b03811633145b61060b5760405163f72e7a4760e01b815260040160405180910390fd5b5061063a565b336001600160a01b0382161461063a57604051630c2baa6160e41b815260040160405180910390fd5b600061064584610ee6565b6001600160a01b038516600090815260208052604090205490915062093a809061066f9042611bf3565b1161068d576040516376b2ad0760e01b815260040160405180910390fd5b6001600160a01b038085166000908152601f6020908152604080832054601e90925290912080546001600160a01b0319169190921690811790915580156106f5576001600160a01b0385166000908152601f6020526040902080546001600160a01b03191690555b6001600160a01b0380861660008181526020805260408082208290555184841693861692917fd73892e8827a6025d74a01fca72a8e0d9e2c04080272e728f8861410c7d3c2d191a45050505050565b6021546001190161076857604051637ce54e2d60e11b815260040160405180910390fd5b600260215560245460ff161561079157604051633ee5b89360e01b815260040160405180910390fd5b61079a81610ee6565b6001600160a01b0316336001600160a01b0316146107cb5760405163f3dc2d1960e01b815260040160405180910390fd5b6107d784848484611203565b505060016021555050565b6001600160a01b038083166000908152601e6020526040902054839116801580156108155750336001600160a01b038316145b8061082857506001600160a01b03811633145b6108455760405163407c584960e01b815260040160405180910390fd5b826001600160a01b031661085885610ee6565b6001600160a01b03160361087f57604051630e49614b60e31b815260040160405180910390fd5b6001600160a01b038085166000908152601f6020526040902054811690841681036108bd57604051631b2163f160e31b815260040160405180910390fd5b6001600160a01b038581166000818152601f6020908152604080832080546001600160a01b0319168a8716908117909155918052808320429055519093851692917fee0158b57adc03901d8b16c48cd10c33ca1283ee96c6e0d30f817ceba74dc4a191a45050505050565b6021546001190161094c57604051637ce54e2d60e11b815260040160405180910390fd5b600260215560245460ff161561097557604051633ee5b89360e01b815260040160405180910390fd5b610980838383611351565b5050600160215550565b602154600119016109ae57604051637ce54e2d60e11b815260040160405180910390fd5b600260215560245460ff16156109d757604051633ee5b89360e01b815260040160405180910390fd5b6109e2828233611351565b50506001602155565b336109f46111d5565b6001600160a01b031614610a1b576040516314e74a2560e21b815260040160405180910390fd5b6127106064610a2b82605f611c0a565b610a359190611c29565b821015610a555760405163b74bfc8360e01b815260040160405180910390fd5b80821115610a7657604051637347083360e11b815260040160405180910390fd5b6001829055604080518381523360208201527feb6222a0b32216f861511e9aba88faa9549b749c2e0ad47df4e288565de5ceae910160405180910390a15050565b33610ac06111d5565b6001600160a01b031614610ae7576040516314e74a2560e21b815260040160405180910390fd5b6001600160a01b038116610b0e5760405163128df0bf60e21b815260040160405180910390fd5b6001600160a01b0381166000908152601b602052604090205460ff16610b4757604051633fb36f5d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152601b6020908152604091829020805460ff1916905590513381527fbee3e974bb6a6f44f20096ede047c191eef60322e65e4ee4bd3392230a8716d5910160405180910390a26001600160a01b038082166000908152601e6020526040902054168015610c1e576040516000906001600160a01b0383811691908516907fd73892e8827a6025d74a01fca72a8e0d9e2c04080272e728f8861410c7d3c2d1908490a46001600160a01b0382166000908152601e6020526040902080546001600160a01b03191690555b6001600160a01b038083166000908152601d6020526040902054168015610ca1576040516000906001600160a01b0383811691908616907f31f32ebf07b0ac7fe173f7b7f3f943020d9bdc6dbfbdcdae01bd45ea78d953d7908490a46001600160a01b0383166000908152601d6020526040902080546001600160a01b03191690555b50506001600160a01b03166000908152601f6020908152604080832080546001600160a01b0319169055818052808320839055601c9091529020805460ff19169055565b33610cee6111d5565b6001600160a01b031614610d15576040516314e74a2560e21b815260040160405180910390fd5b801580610d23575060105481145b15610d4157604051630d9f9fad60e01b815260040160405180910390fd5b604080518281523360208201527fa7fe33308fb33ae6f3259e3c7c954ae3d6cd7f428cd17f653413c2cdc691666d910160405180910390a1601055565b60215460011901610da257604051637ce54e2d60e11b815260040160405180910390fd5b600260215560245460ff1615610dcb57604051633ee5b89360e01b815260040160405180910390fd5b61098083838333611203565b33610de06111d5565b6001600160a01b031614610e07576040516314e74a2560e21b815260040160405180910390fd5b6001600160a01b0381166000908152601b602052604090205460ff16158015610e355750610e3361154c565b155b15610e53576040516375befccb60e01b815260040160405180910390fd5b6001600160a01b0381166000908152601c602052604090205460ff1615610e8d5760405163c896c2d960e01b815260040160405180910390fd5b6001600160a01b0381166000818152601c6020908152604091829020805460ff19166001179055815192835233908301527fc428fad4df337e27be8199c35a79ca103e8d00538a69b0f9701fb2bdf7d6c84c910161057d565b6001600160a01b038082166000908152601e60205260408120549091168015610f0f5780610f11565b825b9392505050565b33610f216111d5565b6001600160a01b031614610f48576040516314e74a2560e21b815260040160405180910390fd5b6001600160a01b038316610f6f5760405163e0239aa960e01b815260040160405180910390fd5b6001600160a01b0383166000908152601b602052604090205460ff1615610fa95760405163201b2fd160e11b815260040160405180910390fd5b6001600160a01b0383166000818152601b6020908152604091829020805460ff1916600117905590513381527fbc68405e644da2aaf25623ce2199da82c6dfd2e1de102b400eba6a091704d4f4910160405180910390a26001600160a01b03821615611067576001600160a01b038381166000818152601e602052604080822080546001600160a01b0319169487169485179055519091907fd73892e8827a6025d74a01fca72a8e0d9e2c04080272e728f8861410c7d3c2d1908390a45b6001600160a01b038116156110ce576001600160a01b038381166000818152601d602052604080822080546001600160a01b0319169486169485179055519091907f31f32ebf07b0ac7fe173f7b7f3f943020d9bdc6dbfbdcdae01bd45ea78d953d7908390a45b505050565b6001600160a01b038083166000908152601e6020526040902054839116801580156111065750336001600160a01b038316145b8061111957506001600160a01b03811633145b6111365760405163407c584960e01b815260040160405180910390fd5b6001600160a01b038085166000908152601d60205260409020548116908416810361117457604051631b0043f560e31b815260040160405180910390fd5b6001600160a01b038581166000818152601d602052604080822080546001600160a01b03191689861690811790915590519093851692917f31f32ebf07b0ac7fe173f7b7f3f943020d9bdc6dbfbdcdae01bd45ea78d953d791a45050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6001600160a01b038181166000908152601d602052604090205416801561122a578061122c565b825b90506001600160a01b0381166112555760405163516101e760e11b815260040160405180910390fd5b846000036112765760405163606ab7a160e11b815260040160405180910390fd5b6001600160a01b038083166000908152600c6020908152604080832093881683529290522054858110156112bd57604051630a1e6d4d60e01b815260040160405180910390fd5b6001600160a01b038084166000908152600c6020908152604080832093891683529290522086820390556112f2858388611573565b604080516001600160a01b0384811682528781166020830152918101889052336060820152908416907f63cea637caf2479bad0e90a93268f6d8a1ad69961b1ee8112586091e09ae0ec3906080015b60405180910390a2505050505050565b6001600160a01b038116611378576040516339773cbf60e21b815260040160405180910390fd5b8260000361139957604051632a24141960e01b815260040160405180910390fd5b6005546040516378a9bb4360e11b81526001600160a01b03848116600483015260009283926401000000009091049091169063f1537686906024016040805180830381865afa1580156113f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114149190611c4b565b91509150600061142482846115b2565b905061142e61154c565b15801561145457506001600160a01b0384166000908152601b602052604090205460ff16155b1561147257604051631464c65f60e31b815260040160405180910390fd5b61147a6115f4565b158015611496575060008181526007602052604090205460ff16155b156114b457604051633b6cdacf60e21b815260040160405180910390fd5b6114be8587611619565b6001600160a01b038085166000908152600c60209081526040808320938916835292905290812080548892906114f5908490611c82565b9091555050604080516001600160a01b03878116825260208201849052918101889052336060820152908516907fcc3100122c1752fe0f6bfa5503175bc53eb00b5f2d774e81efedcd2b10a6d24b90608001611341565b6000806115576111d5565b6001600160a01b0316148061156e575060175460ff165b905090565b8060000361158057505050565b6001600160a01b0383166115a757604051633a48ca7b60e11b815260040160405180910390fd5b6110ce83838361165a565b600082826040516020016115d692919091825263ffffffff16602082015260400190565b60405160208183030381529060405280519060200120905092915050565b6000806115ff6111d5565b6001600160a01b0316148061156e57505060195460ff1690565b80600003611625575050565b6001600160a01b03821661164c57604051632a38b13360e01b815260040160405180910390fd5b61165682826116bd565b5050565b6040516001600160a01b0383166024820152604481018290526110ce90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526117d6565b806000036116c9575050565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015611710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117349190611c9a565b9050611742833330856118ad565b6040516370a0823160e01b8152306004820152829082906001600160a01b038616906370a0823190602401602060405180830381865afa15801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ae9190611c9a565b6117b89190611bf3565b146110ce57604051631a39afd960e11b815260040160405180910390fd5b600061182b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118eb9092919063ffffffff16565b8051909150156110ce57808060200190518101906118499190611cb3565b6110ce5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b6040516001600160a01b03808516602483015283166044820152606481018290526118e59085906323b872dd60e01b90608401611686565b50505050565b60606118fa8484600085611902565b949350505050565b6060824710156119635760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016118a4565b6001600160a01b0385163b6119ba5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016118a4565b600080866001600160a01b031685876040516119d69190611d01565b60006040518083038185875af1925050503d8060008114611a13576040519150601f19603f3d011682016040523d82523d6000602084013e611a18565b606091505b5091509150611a28828286611a33565b979650505050505050565b60608315611a42575081610f11565b825115611a525782518084602001fd5b8160405162461bcd60e51b81526004016118a49190611d1d565b6001600160a01b0381168114611a8157600080fd5b50565b600060208284031215611a9657600080fd5b8135610f1181611a6c565b60008060008060808587031215611ab757600080fd5b843593506020850135611ac981611a6c565b92506040850135611ad981611a6c565b91506060850135611ae981611a6c565b939692955090935050565b60008060408385031215611b0757600080fd5b8235611b1281611a6c565b91506020830135611b2281611a6c565b809150509250929050565b600080600060608486031215611b4257600080fd5b833592506020840135611b5481611a6c565b91506040840135611b6481611a6c565b809150509250925092565b60008060408385031215611b8257600080fd5b823591506020830135611b2281611a6c565b600060208284031215611ba657600080fd5b5035919050565b600080600060608486031215611bc257600080fd5b8335611bcd81611a6c565b92506020840135611b5481611a6c565b634e487b7160e01b600052601160045260246000fd5b600082821015611c0557611c05611bdd565b500390565b6000816000190483118215151615611c2457611c24611bdd565b500290565b600082611c4657634e487b7160e01b600052601260045260246000fd5b500490565b60008060408385031215611c5e57600080fd5b825163ffffffff81168114611c7257600080fd5b6020939093015192949293505050565b60008219821115611c9557611c95611bdd565b500190565b600060208284031215611cac57600080fd5b5051919050565b600060208284031215611cc557600080fd5b81518015158114610f1157600080fd5b60005b83811015611cf0578181015183820152602001611cd8565b838111156118e55750506000910152565b60008251611d13818460208701611cd5565b9190910192915050565b6020815260008251806020840152611d3c816040850160208701611cd5565b601f01601f1916919091016040019291505056fea2646970667358221220faafee6a5ebedec99421133f95880add05fbd0866ccc4e4b00cfd0fd6e88417b64736f6c634300080f0033";

type RoutersFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RoutersFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RoutersFacet__factory extends ContractFactory {
  constructor(...args: RoutersFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RoutersFacet> {
    return super.deploy(overrides || {}) as Promise<RoutersFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RoutersFacet {
    return super.attach(address) as RoutersFacet;
  }
  override connect(signer: Signer): RoutersFacet__factory {
    return super.connect(signer) as RoutersFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoutersFacetInterface {
    return new utils.Interface(_abi) as RoutersFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoutersFacet {
    return new Contract(address, _abi, signerOrProvider) as RoutersFacet;
  }
}
