/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ConnextPoolLiquidity,
  ConnextPoolLiquidityInterface,
} from "../../../../contracts/core/xreceivers/ConnextPoolLiquidity";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "received",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "deposited",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositedAmount",
        type: "uint256",
      },
    ],
    name: "CrossLiquidityAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_transferId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_callData",
        type: "bytes",
      },
    ],
    name: "xReceive",
    outputs: [
      {
        internalType: "bytes",
        name: "ret",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161121238038061121283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61117f806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063de4b05481461003b578063fd614f411461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e610079366004610bcc565b61008b565b6040516100629190610cfb565b6000546060906001600160a01b031633146100d85760405162461bcd60e51b81526020600482015260086024820152670858dbdb9b995e1d60c21b60448201526064015b60405180910390fd5b6000828060200190518101906100ee9190610d0e565b90506001600160a01b0381166101335760405162461bcd60e51b815260206004820152600a602482015269085c9958da5c1a595b9d60b21b60448201526064016100cf565b6000871161016d5760405162461bcd60e51b815260206004820152600760248201526608585b5bdd5b9d60ca1b60448201526064016100cf565b6001600160a01b0386166101ac5760405162461bcd60e51b815260206004820152600660248201526508585cdcd95d60d21b60448201526064016100cf565b60006101b7876102a0565b600080546040516345a4058960e11b81526004810184905292935090916001600160a01b0390911690638b480b1290602401602060405180830381865afa158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610d0e565b9050600061023b838b8b8588610329565b604080518281526001600160a01b038c811660208301529181018d905291925080841691908616908d907f9b731db8fdcbf0cc692e6926b213a26c4369370881734468b17d5033f0ae7ea29060600160405180910390a4505050509695505050505050565b600080546040516378a9bb4360e11b81526001600160a01b0384811660048301528392169063f1537686906024016040805180830381865afa1580156102ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030e9190610d2b565b905061032281602001518260000151610575565b9392505050565b6040516370a0823160e01b815230600482015260009081906001600160a01b038516906370a0823190602401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610d83565b905060006103a58888886105b8565b60008054604051633b65172960e11b815292935090916001600160a01b03909116906376ca2e52906103e0908c908690600190600401610dd7565b602060405180830381865afa1580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190610d83565b60005490915061043e906001600160a01b0389811691168a610752565b6000546001600160a01b0316638d3654578a848461045d426001610e18565b6040518563ffffffff1660e01b815260040161047c9493929190610e2b565b6020604051808303816000875af115801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf9190610d83565b50600080546104db916001600160a01b038a8116921690610752565b6040516370a0823160e01b815230600482015260009084906001600160a01b038a16906370a0823190602401602060405180830381865afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190610d83565b6105529190610e57565b90506105686001600160a01b038916878361089f565b9998505050505050505050565b6000828260405160200161059992919091825263ffffffff16602082015260400190565b6040516020818303038152906040528051906020012090505b92915050565b60008054604051632d91a51560e01b815260048101869052606092916001600160a01b031690632d91a51590602401600060405180830381865afa158015610604573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261062c9190810190610f7d565b61010001515190506000811161066c5760405162461bcd60e51b8152602060048201526005602482015264085c1bdbdb60da1b60448201526064016100cf565b60008167ffffffffffffffff81111561068757610687610b5b565b6040519080825280602002602001820160405280156106b0578160200160208202803683370190505b5060005460405163ad94911b60e01b8152600481018990526001600160a01b03878116602483015292935087928492169063ad94911b90604401602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b91906110d9565b60ff168151811061073e5761073e6110fc565b602090810291909101015295945050505050565b8015806107cc5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156107a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ca9190610d83565b155b6108375760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016100cf565b6040516001600160a01b03831660248201526044810182905261089a90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526108cf565b505050565b6040516001600160a01b03831660248201526044810182905261089a90849063a9059cbb60e01b90606401610863565b6000610924826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109a19092919063ffffffff16565b80519091501561089a57808060200190518101906109429190611112565b61089a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100cf565b60606109b084846000856109b8565b949350505050565b606082471015610a195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100cf565b600080866001600160a01b03168587604051610a35919061112d565b60006040518083038185875af1925050503d8060008114610a72576040519150601f19603f3d011682016040523d82523d6000602084013e610a77565b606091505b5091509150610a8887838387610a93565b979650505050505050565b60608315610b02578251600003610afb576001600160a01b0385163b610afb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100cf565b50816109b0565b6109b08383815115610b175781518083602001fd5b8060405162461bcd60e51b81526004016100cf9190610cfb565b6001600160a01b0381168114610b4657600080fd5b50565b63ffffffff81168114610b4657600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516101c0810167ffffffffffffffff81118282101715610b9557610b95610b5b565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610bc457610bc4610b5b565b604052919050565b60008060008060008060c08789031215610be557600080fd5b8635955060208088013595506040880135610bff81610b31565b94506060880135610c0f81610b31565b93506080880135610c1f81610b49565b925060a088013567ffffffffffffffff80821115610c3c57600080fd5b818a0191508a601f830112610c5057600080fd5b813581811115610c6257610c62610b5b565b610c74601f8201601f19168501610b9b565b91508082528b84828501011115610c8a57600080fd5b80848401858401376000848284010152508093505050509295509295509295565b60005b83811015610cc6578181015183820152602001610cae565b50506000910152565b60008151808452610ce7816020860160208601610cab565b601f01601f19169290920160200192915050565b6020815260006103226020830184610ccf565b600060208284031215610d2057600080fd5b815161032281610b31565b600060408284031215610d3d57600080fd5b6040516040810181811067ffffffffffffffff82111715610d6057610d60610b5b565b6040528251610d6e81610b49565b81526020928301519281019290925250919050565b600060208284031215610d9557600080fd5b5051919050565b600081518084526020808501945080840160005b83811015610dcc57815187529582019590820190600101610db0565b509495945050505050565b838152606060208201526000610df06060830185610d9c565b90508215156040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156105b2576105b2610e02565b848152608060208201526000610e446080830186610d9c565b6040830194909452506060015292915050565b818103818111156105b2576105b2610e02565b8051610e7581610b31565b919050565b600067ffffffffffffffff821115610e9457610e94610b5b565b5060051b60200190565b600082601f830112610eaf57600080fd5b81516020610ec4610ebf83610e7a565b610b9b565b82815260059290921b84018101918181019086841115610ee357600080fd5b8286015b84811015610f07578051610efa81610b31565b8352918301918301610ee7565b509695505050505050565b600082601f830112610f2357600080fd5b81516020610f33610ebf83610e7a565b82815260059290921b84018101918181019086841115610f5257600080fd5b8286015b84811015610f075780518352918301918301610f56565b80518015158114610e7557600080fd5b600060208284031215610f8f57600080fd5b815167ffffffffffffffff80821115610fa757600080fd5b908301906101c08286031215610fbc57600080fd5b610fc4610b71565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261101060e08401610e6a565b60e0820152610100808401518381111561102957600080fd5b61103588828701610e9e565b828401525050610120808401518381111561104f57600080fd5b61105b88828701610f12565b828401525050610140808401518381111561107557600080fd5b61108188828701610f12565b828401525050610160808401518381111561109b57600080fd5b6110a788828701610f12565b82840152505061018091506110bd828401610f6d565b918101919091526101a091820151918101919091529392505050565b6000602082840312156110eb57600080fd5b815160ff8116811461032257600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561112457600080fd5b61032282610f6d565b6000825161113f818460208701610cab565b919091019291505056fea26469706673582212202b72fdcc5839d0df40c5846d9fef0c9661b09431bee75b9cb6529efc21bf3b5164736f6c63430008110033";

type ConnextPoolLiquidityConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnextPoolLiquidityConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnextPoolLiquidity__factory extends ContractFactory {
  constructor(...args: ConnextPoolLiquidityConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnextPoolLiquidity> {
    return super.deploy(
      _connext,
      overrides || {}
    ) as Promise<ConnextPoolLiquidity>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_connext, overrides || {});
  }
  override attach(address: string): ConnextPoolLiquidity {
    return super.attach(address) as ConnextPoolLiquidity;
  }
  override connect(signer: Signer): ConnextPoolLiquidity__factory {
    return super.connect(signer) as ConnextPoolLiquidity__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnextPoolLiquidityInterface {
    return new utils.Interface(_abi) as ConnextPoolLiquidityInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnextPoolLiquidity {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ConnextPoolLiquidity;
  }
}
