/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "connext",
            type: "address",
          },
          {
            internalType: "address",
            name: "spokeConnector",
            type: "address",
          },
          {
            internalType: "address",
            name: "gelatoRelayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "keep3r",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "proposeAggregateRootCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalizeCooldown",
            type: "uint256",
          },
        ],
        internalType: "struct RelayerProxy.ConstructorParams",
        name: "_params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__addRelayer_relayerAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__definedAddress_empty",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__finalizeCooledDown_notCooledDown",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__isWorkableBySender_notWorkable",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__onlyRelayer_notRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__proposeAggregateRootCooledDown_notCooledDown",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__removeRelayer_relayerNotAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__validateAndPayWithCredits_notKeep3r",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "RelayerProxy__validateProposeSignature_notProposer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "finalizeCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFinalizeCooldown",
        type: "uint256",
      },
    ],
    name: "FinalizeCooldownChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposeAggregateRootCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposeAggregateRootCooldown",
        type: "uint256",
      },
    ],
    name: "ProposeAggregateRootCooldownChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_rootTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFinalizeAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProposeAggregateRootAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_rootTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAggregateRootCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_finalizeCooldown",
        type: "uint256",
      },
    ],
    name: "setFinalizeCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposeCooldown",
        type: "uint256",
      },
    ],
    name: "setProposeAggregateRootCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002805380380620028058339810160408190526200003491620004f9565b6001600355620000443362000151565b80516200005190620001b6565b602081015162000061906200021f565b6040810151620000719062000288565b60608101516200008190620002f1565b608081015162000091906200035a565b60a0810151620000a190620003c3565b60c0810151620000b19062000405565b6040810151620000c19062000447565b80602001516001600160a01b03166352a9674b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012a9190620005b7565b600860146101000a81548163ffffffff021916908363ffffffff16021790555050620005e6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b6009546040805183815260208101929092527f289d6927dc5ba66abb928c5be9d3aecd2baf7c8e89f1faec6a791b8b21589a5d910160405180910390a1600955565b600b546040805183815260208101929092527f2a1ca87adff1a64c5b6edc218dfd6b80208260b240fbc939ea43e07c2764f5ca910160405180910390a1600b55565b6001600160a01b0381166000908152600d602052604090205460ff16156200048257604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b80516001600160a01b0381168114620004f457600080fd5b919050565b600060e082840312156200050c57600080fd5b60405160e081016001600160401b03811182821017156200053d57634e487b7160e01b600052604160045260246000fd5b6040526200054b83620004dc565b81526200055b60208401620004dc565b60208201526200056e60408401620004dc565b60408201526200058160608401620004dc565b60608201526200059460808401620004dc565b608082015260a083015160a082015260c083015160c08201528091505092915050565b600060208284031215620005ca57600080fd5b815163ffffffff81168114620005df57600080fd5b9392505050565b61220f80620005f66000396000f3fe6080604052600436106101fd5760003560e01c80639cadce001161010d578063caabc4c2116100a0578063d9ef0bee1161006f578063d9ef0bee146105e0578063db40452214610600578063dd39f00d14610620578063de4b054814610640578063e79457f11461066057600080fd5b8063caabc4c21461056d578063d1851c921461058d578063d232c220146105ab578063d6412ecb146105ca57600080fd5b8063b4cef546116100dc578063b4cef546146104df578063c2fb26a6146104ff578063c415b95c14610538578063c5b350df1461055857600080fd5b80639cadce001461045f5780639f645a031461047f578063a42dce801461049f578063b1f8100d146104bf57600080fd5b8063634c7bb511610190578063716907a71161015f578063716907a7146103d55780638da5cb5b146103eb5780638e02f759146104095780638efed12714610429578063931c0e781461044957600080fd5b8063634c7bb5146103525780636a42b8f81461038a5780636eba787f146103a0578063715018a6146103c057600080fd5b80634d6f2013116101cc5780634d6f2013146102dc57806352910039146102fc5780635e21966a1461031257806360f0a5ac1461033257600080fd5b80632f55b98d146102415780633ccfd60b146102865780633cf52ffb1461029d5780634cc18e57146102bc57600080fd5b3661023c57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561024d57600080fd5b5061027161025c366004611a0d565b600d6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561029257600080fd5b5061029b610680565b005b3480156102a957600080fd5b506002545b60405190815260200161027d565b3480156102c857600080fd5b5061029b6102d7366004611a0d565b610703565b3480156102e857600080fd5b5061029b6102f7366004611a0d565b610763565b34801561030857600080fd5b506102ae60095481565b34801561031e57600080fd5b5061029b61032d366004611a0d565b6107bf565b34801561033e57600080fd5b5061029b61034d366004611a0d565b61081b565b34801561035e57600080fd5b50600654610372906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b34801561039657600080fd5b5062093a806102ae565b3480156103ac57600080fd5b50600454610372906001600160a01b031681565b3480156103cc57600080fd5b5061029b610877565b3480156103e157600080fd5b506102ae600b5481565b3480156103f757600080fd5b506000546001600160a01b0316610372565b34801561041557600080fd5b5061029b610424366004611a2f565b610929565b34801561043557600080fd5b506102ae610444366004611a5b565b6109e0565b34801561045557600080fd5b506102ae600c5481565b34801561046b57600080fd5b50600854610372906001600160a01b031681565b34801561048b57600080fd5b5061029b61049a366004611a0d565b610aa6565b3480156104ab57600080fd5b5061029b6104ba366004611a0d565b610b02565b3480156104cb57600080fd5b5061029b6104da366004611a0d565b610b5e565b3480156104eb57600080fd5b5061029b6104fa366004611aa5565b610bff565b34801561050b57600080fd5b5060085461052390600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161027d565b34801561054457600080fd5b50600554610372906001600160a01b031681565b34801561056457600080fd5b5061029b610c33565b34801561057957600080fd5b5061029b610588366004611b61565b610ca3565b34801561059957600080fd5b506001546001600160a01b0316610372565b3480156105b757600080fd5b506000546001600160a01b031615610271565b3480156105d657600080fd5b506102ae600a5481565b3480156105ec57600080fd5b5061029b6105fb366004611bb9565b610d9b565b34801561060c57600080fd5b5061029b61061b366004611aa5565b610e8e565b34801561062c57600080fd5b5061029b61063b366004611a0d565b610ec2565b34801561064c57600080fd5b50600754610372906001600160a01b031681565b34801561066c57600080fd5b5061029b61067b366004611c19565b610f1e565b6000546001600160a01b031633146106ab576040516311a8a1bb60e31b815260040160405180910390fd5b6106b3610fdb565b476106be3382611039565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a1506107016001600355565b565b6000546001600160a01b0316331461072e576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107565760405163b04f8dcf60e01b815260040160405180910390fd5b61075f82611152565b5050565b6000546001600160a01b0316331461078e576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107b65760405163b04f8dcf60e01b815260040160405180910390fd5b61075f826111bb565b6000546001600160a01b031633146107ea576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166108125760405163b04f8dcf60e01b815260040160405180910390fd5b61075f82611224565b6000546001600160a01b03163314610846576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661086e5760405163b04f8dcf60e01b815260040160405180910390fd5b61075f8261128d565b6000546001600160a01b031633146108a2576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426108b49190611cd1565b116108d2576040516324e0285f60e21b815260040160405180910390fd5b6002546000036108f557604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561091f576040516323295ef960e01b815260040160405180910390fd5b610701600061131e565b600b54600c546109399190611ce4565b42101561095957604051630c0e333560e11b815260040160405180910390fd5b610961610fdb565b600854604051638e02f75960e01b81526004810185905260248101849052604481018390526001600160a01b0390911690638e02f75990606401600060405180830381600087803b1580156109b557600080fd5b505af11580156109c9573d6000803e3d6000fd5b505050506109d76001600355565b505042600c5550565b336000908152600d602052604081205460ff16610a1057604051633cb4b93960e01b815260040160405180910390fd5b610a18610fdb565b6007546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d290610a48908690600401611e80565b6020604051808303816000875af1158015610a67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8b9190612073565b9050610a9682611383565b610aa06001600355565b92915050565b6000546001600160a01b03163314610ad1576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610af95760405163b04f8dcf60e01b815260040160405180910390fd5b61075f826113fa565b6000546001600160a01b03163314610b2d576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610b555760405163b04f8dcf60e01b815260040160405180910390fd5b61075f82611463565b6000546001600160a01b03163314610b89576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610ba7575060025415155b15610bc5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610bf357604051634a2fb73f60e11b815260040160405180910390fd5b610bfc816114cc565b50565b6000546001600160a01b03163314610c2a576040516311a8a1bb60e31b815260040160405180910390fd5b610bfc8161151a565b6001546001600160a01b03163314610c5e576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610c709190611cd1565b11610c8e576040516324e0285f60e21b815260040160405180910390fd5b600154610701906001600160a01b031661131e565b336000908152600d602052604090205460ff16610cd357604051633cb4b93960e01b815260040160405180910390fd5b600954600a54610ce39190611ce4565b421015610d035760405163923904d960e01b815260040160405180910390fd5b610d0b610fdb565b610d198484600a548561155c565b60085460405163111c183760e01b815260048101869052602481018590526001600160a01b039091169063111c183790604401600060405180830381600087803b158015610d6657600080fd5b505af1158015610d7a573d6000803e3d6000fd5b50505050610d8781611383565b610d916001600355565b505042600a555050565b336000908152600d602052604090205460ff16610dcb57604051633cb4b93960e01b815260040160405180910390fd5b610dd3610fdb565b600854604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610e0590879060040161208c565b6000604051808303818588803b158015610e1e57600080fd5b505af1158015610e32573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189450019150610e6e9050565b60405180910390a1610e7f81611383565b610e896001600355565b505050565b6000546001600160a01b03163314610eb9576040516311a8a1bb60e31b815260040160405180910390fd5b610bfc816116aa565b6000546001600160a01b03163314610eed576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610f155760405163b04f8dcf60e01b815260040160405180910390fd5b61075f826116ec565b336000908152600d602052604090205460ff16610f4e57604051633cb4b93960e01b815260040160405180910390fd5b610f56610fdb565b60085460405163508a109b60e01b81526001600160a01b039091169063508a109b90610f8e90899089908990899089906004016120e4565b600060405180830381600087803b158015610fa857600080fd5b505af1158015610fbc573d6000803e3d6000fd5b50505050610fc981611383565b610fd36001600355565b505050505050565b6002600354036110325760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600355565b804710156110895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401611029565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110d6576040519150601f19603f3d011682016040523d82523d6000602084013e6110db565b606091505b5050905080610e895760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401611029565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d602052604090205460ff166112c65760405163092a8e7160e41b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b8060000361138e5750565b6004546001600160a01b031633036113bb576005546113b6906001600160a01b031682611039565b6113c5565b6113c53382611039565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189101611313565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600b546040805183815260208101929092527f2a1ca87adff1a64c5b6edc218dfd6b80208260b240fbc939ea43e07c2764f5ca910160405180910390a1600b55565b600854604080516020810187905290810185905260608101849052600160a01b90910460e01b6001600160e01b031916608082015260009060840160405160208183030381529060405280519060200120905060006116128361160c846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9061177a565b600854604051632516d8ed60e11b81526001600160a01b038084166004830152929350911690634a2db1da90602401602060405180830381865afa15801561165e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168291906121a6565b610fd357604051634810638b60e01b81526001600160a01b0382166004820152602401611029565b6009546040805183815260208101929092527f289d6927dc5ba66abb928c5be9d3aecd2baf7c8e89f1faec6a791b8b21589a5d910160405180910390a1600955565b6001600160a01b0381166000908152600d602052604090205460ff161561172657604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611313565b6000806000611789858561179e565b91509150611796816117e3565b509392505050565b60008082516041036117d45760208301516040840151606085015160001a6117c88782858561192d565b945094505050506117dc565b506000905060025b9250929050565b60008160048111156117f7576117f76121c3565b036117ff5750565b6001816004811115611813576118136121c3565b036118605760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401611029565b6002816004811115611874576118746121c3565b036118c15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401611029565b60038160048111156118d5576118d56121c3565b03610bfc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401611029565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561196457506000905060036119e8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156119b8573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119e1576000600192509250506119e8565b9150600090505b94509492505050565b80356001600160a01b0381168114611a0857600080fd5b919050565b600060208284031215611a1f57600080fd5b611a28826119f1565b9392505050565b600080600060608486031215611a4457600080fd5b505081359360208301359350604090920135919050565b60008060408385031215611a6e57600080fd5b823567ffffffffffffffff811115611a8557600080fd5b830160a08186031215611a9757600080fd5b946020939093013593505050565b600060208284031215611ab757600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611ae557600080fd5b813567ffffffffffffffff80821115611b0057611b00611abe565b604051601f8301601f19908116603f01168101908282118183101715611b2857611b28611abe565b81604052838152866020858801011115611b4157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611b7757600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611b9c57600080fd5b611ba887828801611ad4565b949793965093946060013593505050565b600080600060608486031215611bce57600080fd5b833567ffffffffffffffff811115611be557600080fd5b611bf186828701611ad4565b9660208601359650604090950135949350505050565b806104008101831015610aa057600080fd5b6000806000806000806104808789031215611c3357600080fd5b863567ffffffffffffffff80821115611c4b57600080fd5b818901915089601f830112611c5f57600080fd5b813581811115611c6e57600080fd5b8a60208260051b8501011115611c8357600080fd5b602092830198509650508701359350611c9f8860408901611c07565b9250610440870135915061046087013590509295509295509295565b634e487b7160e01b600052601160045260246000fd5b81810381811115610aa057610aa0611cbb565b80820180821115610aa057610aa0611cbb565b803563ffffffff81168114611a0857600080fd5b8015158114610bfc57600080fd5b8035611a0881611d0b565b6000808335601e19843603018112611d3b57600080fd5b830160208101925035905067ffffffffffffffff811115611d5b57600080fd5b8036038213156117dc57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112611daa57600080fd5b830160208101925035905067ffffffffffffffff811115611dca57600080fd5b8060051b36038213156117dc57600080fd5b8183526000602080850194508260005b85811015611e18576001600160a01b03611e05836119f1565b1687529582019590820190600101611dec565b509495945050505050565b81835260006020808501808196508560051b810191508460005b87811015611e73578284038952611e548288611d24565b611e5f868284611d6a565b9a87019a9550505090840190600101611e3d565b5091979650505050505050565b602081526000823561019e19843603018112611e9b57600080fd5b60a060208401528301611ebe60c08401611eb483611cf7565b63ffffffff169052565b611eca60208201611cf7565b63ffffffff1660e0840152611ee160408201611cf7565b610100611ef58186018363ffffffff169052565b611f01606084016119f1565b9150610120611f1a818701846001600160a01b03169052565b611f26608085016119f1565b9250610140611f3f818801856001600160a01b03169052565b611f4b60a08601611d19565b9350610160611f5d8189018615159052565b611f6a60c0870187611d24565b95506101a061018081818c0152611f866102608c018985611d6a565b975060e0890135828c0152611f9c878a016119f1565b6001600160a01b03166101c08c0152948801356101e08b015250509085013561020088015284013561022087015283013561024086015250611fe16020860186611d93565b9250601f1980868403016040870152611ffb838584611ddc565b935061200a6040880188611d93565b9350915080868503016060870152612023848484611e23565b9350612031606088016119f1565b6001600160a01b0381166080880152925061204f6080880188611d24565b93509150808685030160a087015250612069838383611d6a565b9695505050505050565b60006020828403121561208557600080fd5b5051919050565b600060208083528351808285015260005b818110156120b95785810183015185820160400152820161209d565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a81101561217a5786840361047f190185528235368d900361043e1901811261212b578283fd5b8c0161044061213a8280611d24565b82885261214a8389018284611d6a565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101612104565b505050809250505084602083015261219560408301856120da565b826104408301529695505050505050565b6000602082840312156121b857600080fd5b8151611a2881611d0b565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220736605b203f9b3aec5000713a5888670b7f2616468ff65ba369ea4c1d3e95b2364736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(_params, overrides || {}) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_params, overrides || {});
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
