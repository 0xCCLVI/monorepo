/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "connext",
            type: "address",
          },
          {
            internalType: "address",
            name: "spokeConnector",
            type: "address",
          },
          {
            internalType: "address",
            name: "gelatoRelayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "keep3r",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "proposeAggregateRootCooldown",
            type: "uint256",
          },
        ],
        internalType: "struct RelayerProxy.ConstructorParams",
        name: "_params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__addRelayer_relayerAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__definedAddress_empty",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__isWorkableBySender_notWorkable",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__onlyRelayer_notRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__proposeAggregateRootCooledDown_notCooledDown",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__removeRelayer_relayerNotAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__validateAndPayWithCredits_notKeep3r",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "RelayerProxy__validateProposeSignature_notProposer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposeAggregateRootCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposeAggregateRootCooldown",
        type: "uint256",
      },
    ],
    name: "ProposeAggregateRootCooldownChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProposeAggregateRootAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_rootTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAggregateRootCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620024fb380380620024fb8339810160408190526200003491620004a7565b6001600355620000443362000141565b80516200005190620001a6565b602081015162000061906200020f565b6040810151620000719062000278565b60608101516200008190620002e1565b608081015162000091906200034a565b60a0810151620000a190620003b3565b6040810151620000b190620003f5565b80602001516001600160a01b03166352a9674b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011a91906200055b565b600860146101000a81548163ffffffff021916908363ffffffff160217905550506200058a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b6009546040805183815260208101929092527f289d6927dc5ba66abb928c5be9d3aecd2baf7c8e89f1faec6a791b8b21589a5d910160405180910390a1600955565b6001600160a01b0381166000908152600b602052604090205460ff16156200043057604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b80516001600160a01b0381168114620004a257600080fd5b919050565b600060c08284031215620004ba57600080fd5b60405160c081016001600160401b0381118282101715620004eb57634e487b7160e01b600052604160045260246000fd5b604052620004f9836200048a565b815262000509602084016200048a565b60208201526200051c604084016200048a565b60408201526200052f606084016200048a565b606082015262000542608084016200048a565b608082015260a083015160a08201528091505092915050565b6000602082840312156200056e57600080fd5b815163ffffffff811681146200058357600080fd5b9392505050565b611f61806200059a6000396000f3fe6080604052600436106101c65760003560e01c80639cadce00116100f7578063caabc4c211610095578063d9ef0bee11610064578063d9ef0bee1461053d578063dd39f00d1461055d578063de4b05481461057d578063e79457f11461059d57600080fd5b8063caabc4c2146104ca578063d1851c92146104ea578063d232c22014610508578063d6412ecb1461052757600080fd5b8063b1f8100d116100d1578063b1f8100d1461043c578063c2fb26a61461045c578063c415b95c14610495578063c5b350df146104b557600080fd5b80639cadce00146103dc5780639f645a03146103fc578063a42dce801461041c57600080fd5b806360f0a5ac116101645780636eba787f1161013e5780636eba787f14610369578063715018a6146103895780638da5cb5b1461039e5780638efed127146103bc57600080fd5b806360f0a5ac146102fb578063634c7bb51461031b5780636a42b8f81461035357600080fd5b80634cc18e57116101a05780634cc18e57146102855780634d6f2013146102a557806352910039146102c55780635e21966a146102db57600080fd5b80632f55b98d1461020a5780633ccfd60b1461024f5780633cf52ffb1461026657600080fd5b3661020557604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561021657600080fd5b5061023a6102253660046117a7565b600b6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561025b57600080fd5b506102646105bd565b005b34801561027257600080fd5b506002545b604051908152602001610246565b34801561029157600080fd5b506102646102a03660046117a7565b610640565b3480156102b157600080fd5b506102646102c03660046117a7565b6106a0565b3480156102d157600080fd5b5061027760095481565b3480156102e757600080fd5b506102646102f63660046117a7565b6106fc565b34801561030757600080fd5b506102646103163660046117a7565b610758565b34801561032757600080fd5b5060065461033b906001600160a01b031681565b6040516001600160a01b039091168152602001610246565b34801561035f57600080fd5b5062093a80610277565b34801561037557600080fd5b5060045461033b906001600160a01b031681565b34801561039557600080fd5b506102646107b4565b3480156103aa57600080fd5b506000546001600160a01b031661033b565b3480156103c857600080fd5b506102776103d73660046117c9565b610866565b3480156103e857600080fd5b5060085461033b906001600160a01b031681565b34801561040857600080fd5b506102646104173660046117a7565b61092c565b34801561042857600080fd5b506102646104373660046117a7565b610988565b34801561044857600080fd5b506102646104573660046117a7565b6109e4565b34801561046857600080fd5b5060085461048090600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610246565b3480156104a157600080fd5b5060055461033b906001600160a01b031681565b3480156104c157600080fd5b50610264610a85565b3480156104d657600080fd5b506102646104e53660046118b6565b610af5565b3480156104f657600080fd5b506001546001600160a01b031661033b565b34801561051457600080fd5b506000546001600160a01b03161561023a565b34801561053357600080fd5b50610277600a5481565b34801561054957600080fd5b5061026461055836600461190e565b610bed565b34801561056957600080fd5b506102646105783660046117a7565b610ce0565b34801561058957600080fd5b5060075461033b906001600160a01b031681565b3480156105a957600080fd5b506102646105b836600461196e565b610d3c565b6000546001600160a01b031633146105e8576040516311a8a1bb60e31b815260040160405180910390fd5b6105f0610df9565b476105fb3382610e57565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a15061063e6001600355565b565b6000546001600160a01b0316331461066b576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106935760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82610f70565b5050565b6000546001600160a01b031633146106cb576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106f35760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82610fd9565b6000546001600160a01b03163314610727576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661074f5760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82611042565b6000546001600160a01b03163314610783576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107ab5760405163b04f8dcf60e01b815260040160405180910390fd5b61069c826110ab565b6000546001600160a01b031633146107df576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426107f19190611a26565b1161080f576040516324e0285f60e21b815260040160405180910390fd5b60025460000361083257604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561085c576040516323295ef960e01b815260040160405180910390fd5b61063e600061113c565b336000908152600b602052604081205460ff1661089657604051633cb4b93960e01b815260040160405180910390fd5b61089e610df9565b6007546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d2906108ce908690600401611bbf565b6020604051808303816000875af11580156108ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109119190611db2565b905061091c826111a1565b6109266001600355565b92915050565b6000546001600160a01b03163314610957576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661097f5760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82611218565b6000546001600160a01b031633146109b3576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109db5760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82611281565b6000546001600160a01b03163314610a0f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a2d575060025415155b15610a4b576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a7957604051634a2fb73f60e11b815260040160405180910390fd5b610a82816112ea565b50565b6001546001600160a01b03163314610ab0576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610ac29190611a26565b11610ae0576040516324e0285f60e21b815260040160405180910390fd5b60015461063e906001600160a01b031661113c565b336000908152600b602052604090205460ff16610b2557604051633cb4b93960e01b815260040160405180910390fd5b600954600a54610b359190611dcb565b421015610b555760405163923904d960e01b815260040160405180910390fd5b610b5d610df9565b610b6b8484600a5485611338565b60085460405163111c183760e01b815260048101869052602481018590526001600160a01b039091169063111c183790604401600060405180830381600087803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b50505050610bd9816111a1565b610be36001600355565b505042600a555050565b336000908152600b602052604090205460ff16610c1d57604051633cb4b93960e01b815260040160405180910390fd5b610c25610df9565b600854604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610c57908790600401611dde565b6000604051808303818588803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189450019150610cc09050565b60405180910390a1610cd1816111a1565b610cdb6001600355565b505050565b6000546001600160a01b03163314610d0b576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610d335760405163b04f8dcf60e01b815260040160405180910390fd5b61069c82611486565b336000908152600b602052604090205460ff16610d6c57604051633cb4b93960e01b815260040160405180910390fd5b610d74610df9565b60085460405163508a109b60e01b81526001600160a01b039091169063508a109b90610dac9089908990899089908990600401611e36565b600060405180830381600087803b158015610dc657600080fd5b505af1158015610dda573d6000803e3d6000fd5b50505050610de7816111a1565b610df16001600355565b505050505050565b600260035403610e505760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600355565b80471015610ea75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610e47565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ef4576040519150601f19603f3d011682016040523d82523d6000602084013e610ef9565b606091505b5050905080610cdb5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610e47565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600b602052604090205460ff166110e45760405163092a8e7160e41b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b806000036111ac5750565b6004546001600160a01b031633036111d9576005546111d4906001600160a01b031682610e57565b6111e3565b6111e33382610e57565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189101611131565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600854604080516020810187905290810185905260608101849052600160a01b90910460e01b6001600160e01b031916608082015260009060840160405160208183030381529060405280519060200120905060006113ee836113e8846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90611514565b600854604051632516d8ed60e11b81526001600160a01b038084166004830152929350911690634a2db1da90602401602060405180830381865afa15801561143a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145e9190611ef8565b610df157604051634810638b60e01b81526001600160a01b0382166004820152602401610e47565b6001600160a01b0381166000908152600b602052604090205460ff16156114c057604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611131565b60008060006115238585611538565b915091506115308161157d565b509392505050565b600080825160410361156e5760208301516040840151606085015160001a611562878285856116c7565b94509450505050611576565b506000905060025b9250929050565b600081600481111561159157611591611f15565b036115995750565b60018160048111156115ad576115ad611f15565b036115fa5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610e47565b600281600481111561160e5761160e611f15565b0361165b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610e47565b600381600481111561166f5761166f611f15565b03610a825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610e47565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116fe5750600090506003611782565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611752573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661177b57600060019250925050611782565b9150600090505b94509492505050565b80356001600160a01b03811681146117a257600080fd5b919050565b6000602082840312156117b957600080fd5b6117c28261178b565b9392505050565b600080604083850312156117dc57600080fd5b823567ffffffffffffffff8111156117f357600080fd5b830160a0818603121561180557600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261183a57600080fd5b813567ffffffffffffffff8082111561185557611855611813565b604051601f8301601f19908116603f0116810190828211818310171561187d5761187d611813565b8160405283815286602085880101111561189657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156118cc57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156118f157600080fd5b6118fd87828801611829565b949793965093946060013593505050565b60008060006060848603121561192357600080fd5b833567ffffffffffffffff81111561193a57600080fd5b61194686828701611829565b9660208601359650604090950135949350505050565b80610400810183101561092657600080fd5b600080600080600080610480878903121561198857600080fd5b863567ffffffffffffffff808211156119a057600080fd5b818901915089601f8301126119b457600080fd5b8135818111156119c357600080fd5b8a60208260051b85010111156119d857600080fd5b6020928301985096505087013593506119f4886040890161195c565b9250610440870135915061046087013590509295509295509295565b634e487b7160e01b600052601160045260246000fd5b8181038181111561092657610926611a10565b803563ffffffff811681146117a257600080fd5b8015158114610a8257600080fd5b80356117a281611a4d565b6000808335601e19843603018112611a7d57600080fd5b830160208101925035905067ffffffffffffffff811115611a9d57600080fd5b80360382131561157657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112611aec57600080fd5b830160208101925035905067ffffffffffffffff811115611b0c57600080fd5b8060051b360382131561157657600080fd5b8183526000602080850194508260005b85811015611b5a576001600160a01b03611b478361178b565b1687529582019590820190600101611b2e565b509495945050505050565b818352600060208085019450848460051b86018460005b87811015611bb2578383038952611b938288611a66565b611b9e858284611aac565b9a87019a9450505090840190600101611b7c565b5090979650505050505050565b602081526000823561019e19843603018112611bda57600080fd5b60a060208401528301611bfd60c08401611bf383611a39565b63ffffffff169052565b611c0960208201611a39565b63ffffffff1660e0840152611c2060408201611a39565b610100611c348186018363ffffffff169052565b611c406060840161178b565b9150610120611c59818701846001600160a01b03169052565b611c656080850161178b565b9250610140611c7e818801856001600160a01b03169052565b611c8a60a08601611a5b565b9350610160611c9c8189018615159052565b611ca960c0870187611a66565b95506101a061018081818c0152611cc56102608c018985611aac565b975060e0890135828c0152611cdb878a0161178b565b6001600160a01b03166101c08c0152948801356101e08b015250509085013561020088015284013561022087015283013561024086015250611d206020860186611ad5565b9250601f1980868403016040870152611d3a838584611b1e565b9350611d496040880188611ad5565b9350915080868503016060870152611d62848484611b65565b9350611d706060880161178b565b6001600160a01b03811660808801529250611d8e6080880188611a66565b93509150808685030160a087015250611da8838383611aac565b9695505050505050565b600060208284031215611dc457600080fd5b5051919050565b8082018082111561092657610926611a10565b600060208083528351808285015260005b81811015611e0b57858101830151858201604001528201611def565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a811015611ecc5786840361047f190185528235368d900361043e19018112611e7d578283fd5b8c01610440611e8c8280611a66565b828852611e9c8389018284611aac565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101611e56565b5050508092505050846020830152611ee76040830185611e2c565b826104408301529695505050505050565b600060208284031215611f0a57600080fd5b81516117c281611a4d565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220c59a1165b8abd34376fbe856ec884d8e58aa17bb651220285b713223f18feecf64736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(_params, overrides || {}) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_params, overrides || {});
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
