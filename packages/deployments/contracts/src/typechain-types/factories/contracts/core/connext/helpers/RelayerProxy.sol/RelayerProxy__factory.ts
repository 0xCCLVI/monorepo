/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "connext",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldConnext",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "connext",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spokeConnector",
        type: "address",
      },
    ],
    name: "Setup",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "spokeConnector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldSpokeConnector",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001634380380620016348339810160408190526200003491620001dc565b600160035562000044336200015a565b6001600160a01b038216620000905760405162461bcd60e51b815260206004820152600d60248201526c085e995c9bc818dbdb9b995e1d609a1b60448201526064015b60405180910390fd5b6001600160a01b038116620000e85760405162461bcd60e51b815260206004820152601560248201527f217a65726f2073706f6b6520636f6e6e6563746f720000000000000000000000604482015260640162000087565b600580546001600160a01b038481166001600160a01b03199283168117909355600680549185169190921681179091556040805192835260208301919091527f7b9f87d30f5aa7843f63a424dcd4f0856cb466f69ff4cfb316810c5cc5f753f3910160405180910390a1505062000214565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b80516001600160a01b0381168114620001d757600080fd5b919050565b60008060408385031215620001f057600080fd5b620001fb83620001bf565b91506200020b60208401620001bf565b90509250929050565b61141080620002246000396000f3fe60806040526004361061010d5760003560e01c80639cadce0011610095578063d1851c9211610064578063d1851c92146102fe578063d232c2201461031c578063dd39f00d1461033b578063de4b05481461035b578063e79457f11461037b57600080fd5b80639cadce00146102895780639f645a03146102a9578063b1f8100d146102c9578063c5b350df146102e957600080fd5b806360f0a5ac116100dc57806360f0a5ac146101ec5780636a42b8f81461020c578063715018a6146102225780638da5cb5b146102375780638efed1271461026957600080fd5b80632f55b98d146101515780633ccfd60b146101965780633cf52ffb146101ad5780634d6f2013146101cc57600080fd5b3661014c57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561015d57600080fd5b5061018161016c366004610e3a565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101a257600080fd5b506101ab61039b565b005b3480156101b957600080fd5b506002545b60405190815260200161018d565b3480156101d857600080fd5b506101ab6101e7366004610e3a565b61041e565b3480156101f857600080fd5b506101ab610207366004610e3a565b6104f4565b34801561021857600080fd5b5062093a806101be565b34801561022e57600080fd5b506101ab610619565b34801561024357600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161018d565b34801561027557600080fd5b506101be610284366004610e5c565b6106cb565b34801561029557600080fd5b50600654610251906001600160a01b031681565b3480156102b557600080fd5b506101ab6102c4366004610e3a565b6107e4565b3480156102d557600080fd5b506101ab6102e4366004610e3a565b6108b5565b3480156102f557600080fd5b506101ab610956565b34801561030a57600080fd5b506001546001600160a01b0316610251565b34801561032857600080fd5b506000546001600160a01b031615610181565b34801561034757600080fd5b506101ab610356366004610e3a565b6109c6565b34801561036757600080fd5b50600554610251906001600160a01b031681565b34801561038757600080fd5b506101ab610396366004610eb8565b610ae4565b6000546001600160a01b031633146103c6576040516311a8a1bb60e31b815260040160405180910390fd5b6103ce610bf4565b476103d93382610c4d565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a15061041c6001600355565b565b6000546001600160a01b03163314610449576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152600d60248201526c085e995c9bc818dbdb9b995e1d609a1b60448201526064015b60405180910390fd5b600580546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052917f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb291015b60405180910390a15050565b6000546001600160a01b0316331461051f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166105655760405162461bcd60e51b815260206004820152600d60248201526c10bd32b937903932b630bcb2b960991b604482015260640161048b565b6001600160a01b03811660009081526004602052604090205460ff166105c15760405162461bcd60e51b81526020600482015260116024820152701c995b185e595c881b9bdd081859191959607a1b604482015260640161048b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b6000546001600160a01b03163314610644576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361066757604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106799190610f5a565b11610697576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156106c1576040516323295ef960e01b815260040160405180910390fd5b61041c6000610d6b565b3360009081526004602052604081205460ff166107155760405162461bcd60e51b815260206004820152600860248201526710b932b630bcb2b960c11b604482015260640161048b565b61071d610bf4565b6005546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d29061074d908690600401611102565b6020604051808303816000875af115801561076c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079091906112f5565b905061079c3383610c4d565b604080518381524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a16107de6001600355565b92915050565b6000546001600160a01b0316331461080f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b03811661085d5760405162461bcd60e51b815260206004820152601560248201527410bd32b9379039b837b5b29031b7b73732b1ba37b960591b604482015260640161048b565b600680546001600160a01b038381166001600160a01b03198316811790935560408051938452911660208301819052917f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb291016104e8565b6000546001600160a01b031633146108e0576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108fe575060025415155b1561091c576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361094a57604051634a2fb73f60e11b815260040160405180910390fd5b61095381610dd0565b50565b6001546001600160a01b03163314610981576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426109939190610f5a565b116109b15760405163d39c12bb60e01b815260040160405180910390fd5b60015461041c906001600160a01b0316610d6b565b6000546001600160a01b031633146109f1576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116610a375760405162461bcd60e51b815260206004820152600d60248201526c10bd32b937903932b630bcb2b960991b604482015260640161048b565b6001600160a01b03811660009081526004602052604090205460ff1615610a905760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481859191959609a1b604482015260640161048b565b6001600160a01b038116600081815260046020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910161060e565b3360009081526004602052604090205460ff16610b2e5760405162461bcd60e51b815260206004820152600860248201526710b932b630bcb2b960c11b604482015260640161048b565b610b36610bf4565b60065460405163508a109b60e01b81526001600160a01b039091169063508a109b90610b6e9089908990899089908990600401611318565b600060405180830381600087803b158015610b8857600080fd5b505af1158015610b9c573d6000803e3d6000fd5b50505050610baa3382610c4d565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a1610bec6001600355565b505050505050565b600260035403610c465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161048b565b6002600355565b80471015610c9d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161048b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cea576040519150601f19603f3d011682016040523d82523d6000602084013e610cef565b606091505b5050905080610d665760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161048b565b505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b80356001600160a01b0381168114610e3557600080fd5b919050565b600060208284031215610e4c57600080fd5b610e5582610e1e565b9392505050565b60008060408385031215610e6f57600080fd5b823567ffffffffffffffff811115610e8657600080fd5b830160a08186031215610e9857600080fd5b946020939093013593505050565b8061040081018310156107de57600080fd5b6000806000806000806104808789031215610ed257600080fd5b863567ffffffffffffffff80821115610eea57600080fd5b818901915089601f830112610efe57600080fd5b813581811115610f0d57600080fd5b8a60208260051b8501011115610f2257600080fd5b602092830198509650508701359350610f3e8860408901610ea6565b9250610440870135915061046087013590509295509295509295565b818103818111156107de57634e487b7160e01b600052601160045260246000fd5b803563ffffffff81168114610e3557600080fd5b80358015158114610e3557600080fd5b6000808335601e19843603018112610fb657600080fd5b830160208101925035905067ffffffffffffffff811115610fd657600080fd5b803603821315610fe557600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e1984360301811261102c57600080fd5b830160208101925035905067ffffffffffffffff81111561104c57600080fd5b8060051b3603821315610fe557600080fd5b8183526000602080850194508260005b8581101561109a576001600160a01b0361108783610e1e565b168752958201959082019060010161106e565b509495945050505050565b81835260006020808501808196508560051b810191508460005b878110156110f55782840389526110d68288610f9f565b6110e1868284610fec565b9a87019a95505050908401906001016110bf565b5091979650505050505050565b602081526000823561019e1984360301811261111d57600080fd5b60a06020840152830161114060c0840161113683610f7b565b63ffffffff169052565b61114c60208201610f7b565b63ffffffff1660e084015261116360408201610f7b565b6101006111778186018363ffffffff169052565b61118360608401610e1e565b915061012061119c818701846001600160a01b03169052565b6111a860808501610e1e565b92506101406111c1818801856001600160a01b03169052565b6111cd60a08601610f8f565b93506101606111df8189018615159052565b6111ec60c0870187610f9f565b95506101a061018081818c01526112086102608c018985610fec565b975060e0890135828c015261121e878a01610e1e565b6001600160a01b03166101c08c0152948801356101e08b0152505090850135610200880152840135610220870152830135610240860152506112636020860186611015565b9250601f198086840301604087015261127d83858461105e565b935061128c6040880188611015565b93509150808685030160608701526112a58484846110a5565b93506112b360608801610e1e565b6001600160a01b038116608088015292506112d16080880188610f9f565b93509150808685030160a0870152506112eb838383610fec565b9695505050505050565b60006020828403121561130757600080fd5b5051919050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a8110156113ae5786840361047f190185528235368d900361043e1901811261135f578283fd5b8c0161044061136e8280610f9f565b82885261137e8389018284610fec565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101611338565b50505080925050508460208301526113c9604083018561130e565b82610440830152969550505050505056fea2646970667358221220913c65361eb0b9802fb71b28ccf8c2c9c39bc0d718e6a76692b2020e5e8afe2664736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(
      _connext,
      _spokeConnector,
      overrides || {}
    ) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
