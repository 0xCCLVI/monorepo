/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_priorityKeepers",
        type: "address[]",
      },
      {
        internalType: "uint32",
        name: "_priorityWindowSecs",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "keep3r",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldKeep3r",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "PriorityKeeperAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "keeper",
        type: "address",
      },
    ],
    name: "PriorityKeeperRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "secs",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "oldSecs",
        type: "uint32",
      },
    ],
    name: "PriorityWindowSecsChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "addKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priorityKeepers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priorityWindowSecs",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "removeKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_priorityWindowSecs",
        type: "uint32",
      },
    ],
    name: "setPriorityWindowSecs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023873803806200238783398101604081905262000034916200052a565b60016003556200004433620000ee565b6200004f8762000153565b6200005a86620001bc565b620000658562000225565b62000070846200028e565b6200007b83620002f7565b620000868562000360565b60005b8251811015620000d557620000c0838281518110620000ac57620000ac6200066f565b60200260200101516200041060201b60201c565b80620000cc8162000685565b91505062000089565b50620000e18162000470565b50505050505050620006ad565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526009602052604090205460ff1615620003b65760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b604482015260640160405180910390fd5b6001600160a01b038116600081815260096020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b6040516001600160a01b03821681527f1fb4a19bacf8930421014fddfb57715dd3d98e65429b801e1b3f2f0d43ca136f9060200160405180910390a16001600160a01b03166000908152600a60205260409020805460ff19166001179055565b6008546040805163ffffffff8085168252600160a01b90930490921660208301527fef1d0552fed38a98c600f2b4bd6701e928783d0723f82625200dc0aec44c969d910160405180910390a16008805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b80516001600160a01b0381168114620004fa57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805163ffffffff81168114620004fa57600080fd5b600080600080600080600060e0888a0312156200054657600080fd5b6200055188620004e2565b9650602062000562818a01620004e2565b96506200057260408a01620004e2565b95506200058260608a01620004e2565b94506200059260808a01620004e2565b60a08a01519094506001600160401b0380821115620005b057600080fd5b818b0191508b601f830112620005c557600080fd5b815181811115620005da57620005da620004ff565b8060051b604051601f19603f83011681018181108582111715620006025762000602620004ff565b60405291825284820192508381018501918e8311156200062157600080fd5b938501935b828510156200064a576200063a85620004e2565b8452938501939285019262000626565b8097505050505050506200066160c0890162000515565b905092959891949750929550565b634e487b7160e01b600052603260045260246000fd5b600060018201620006a657634e487b7160e01b600052601160045260246000fd5b5060010190565b611cca80620006bd6000396000f3fe6080604052600436106101d15760003560e01c80638da5cb5b116100f7578063c415b95c11610095578063d9ef0bee11610064578063d9ef0bee1461058c578063dd39f00d146105ac578063de4b0548146105cc578063e79457f1146105ec57600080fd5b8063c415b95c1461051a578063c5b350df1461053a578063d1851c921461054f578063d232c2201461056d57600080fd5b80639f645a03116100d15780639f645a031461048a578063a42dce80146104aa578063b1f8100d146104ca578063ba6fef61146104ea57600080fd5b80638da5cb5b1461042c5780638efed1271461044a5780639cadce001461046a57600080fd5b80634d6f20131161016f5780636a42b8f81161013e5780636a42b8f8146103c15780636eba787f146103d7578063715018a6146103f75780638d1b1ffc1461040c57600080fd5b80634d6f2013146103295780635e21966a1461034957806360f0a5ac14610369578063634c7bb51461038957600080fd5b80633cf52ffb116101ab5780633cf52ffb146102915780634032b72b146102b0578063457183c3146102d05780634cc18e571461030957600080fd5b806314ae9f2e146102155780632f55b98d146102375780633ccfd60b1461027c57600080fd5b3661021057604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561022157600080fd5b50610235610230366004611570565b61060c565b005b34801561024357600080fd5b50610267610252366004611570565b60096020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561028857600080fd5b50610235610674565b34801561029d57600080fd5b506002545b604051908152602001610273565b3480156102bc57600080fd5b506102356102cb366004611570565b6106f7565b3480156102dc57600080fd5b506008546102f490600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610273565b34801561031557600080fd5b50610235610324366004611570565b610752565b34801561033557600080fd5b50610235610344366004611570565b6107ad565b34801561035557600080fd5b50610235610364366004611570565b610808565b34801561037557600080fd5b50610235610384366004611570565b610863565b34801561039557600080fd5b506006546103a9906001600160a01b031681565b6040516001600160a01b039091168152602001610273565b3480156103cd57600080fd5b5062093a806102a2565b3480156103e357600080fd5b506004546103a9906001600160a01b031681565b34801561040357600080fd5b506102356108be565b34801561041857600080fd5b506102356104273660046115a6565b610970565b34801561043857600080fd5b506000546001600160a01b03166103a9565b34801561045657600080fd5b506102a26104653660046115c1565b6109a7565b34801561047657600080fd5b506008546103a9906001600160a01b031681565b34801561049657600080fd5b506102356104a5366004611570565b610a6c565b3480156104b657600080fd5b506102356104c5366004611570565b610ac7565b3480156104d657600080fd5b506102356104e5366004611570565b610b22565b3480156104f657600080fd5b50610267610505366004611570565b600a6020526000908152604090205460ff1681565b34801561052657600080fd5b506005546103a9906001600160a01b031681565b34801561054657600080fd5b50610235610bc0565b34801561055b57600080fd5b506001546001600160a01b03166103a9565b34801561057957600080fd5b506000546001600160a01b031615610267565b34801561059857600080fd5b506102356105a7366004611621565b610c30565b3480156105b857600080fd5b506102356105c7366004611570565b610d22565b3480156105d857600080fd5b506007546103a9906001600160a01b031681565b3480156105f857600080fd5b506102356106073660046116f7565b610d7d565b6000546001600160a01b03163314610637576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106675760405162461bcd60e51b815260040161065e90611799565b60405180910390fd5b61067082610e39565b5050565b6000546001600160a01b0316331461069f576040516311a8a1bb60e31b815260040160405180910390fd5b6106a7610e96565b476106b23382610eef565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a1506106f56001600355565b565b6000546001600160a01b03163314610722576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107495760405162461bcd60e51b815260040161065e90611799565b61067082611008565b6000546001600160a01b0316331461077d576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107a45760405162461bcd60e51b815260040161065e90611799565b61067082611068565b6000546001600160a01b031633146107d8576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107ff5760405162461bcd60e51b815260040161065e90611799565b610670826110d1565b6000546001600160a01b03163314610833576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661085a5760405162461bcd60e51b815260040161065e90611799565b6106708261113a565b6000546001600160a01b0316331461088e576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166108b55760405162461bcd60e51b815260040161065e90611799565b610670826111a3565b6000546001600160a01b031633146108e9576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426108fb91906117b8565b11610919576040516324e0285f60e21b815260040160405180910390fd5b60025460000361093c57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610966576040516323295ef960e01b815260040160405180910390fd5b6106f5600061124c565b6000546001600160a01b0316331461099b576040516311a8a1bb60e31b815260040160405180910390fd5b6109a4816112b1565b50565b3360009081526009602052604081205460ff166109d65760405162461bcd60e51b815260040161065e906117d9565b6109de610e96565b6007546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d290610a0e90869060040161196e565b6020604051808303816000875af1158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a519190611b61565b9050610a5c82611323565b610a666001600355565b92915050565b6000546001600160a01b03163314610a97576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610abe5760405162461bcd60e51b815260040161065e90611799565b6106708261138f565b6000546001600160a01b03163314610af2576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610b195760405162461bcd60e51b815260040161065e90611799565b610670826113f8565b6000546001600160a01b03163314610b4d576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610b6b575060025415155b15610b89576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610bb757604051634a2fb73f60e11b815260040160405180910390fd5b6109a481611461565b6001546001600160a01b03163314610beb576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610bfd91906117b8565b11610c1b576040516324e0285f60e21b815260040160405180910390fd5b6001546106f5906001600160a01b031661124c565b3360009081526009602052604090205460ff16610c5f5760405162461bcd60e51b815260040161065e906117d9565b610c67610e96565b600854604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610c99908790600401611b7a565b6000604051808303818588803b158015610cb257600080fd5b505af1158015610cc6573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189450019150610d029050565b60405180910390a1610d1381611323565b610d1d6001600355565b505050565b6000546001600160a01b03163314610d4d576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610d745760405162461bcd60e51b815260040161065e90611799565b610670826114af565b3360009081526009602052604090205460ff16610dac5760405162461bcd60e51b815260040161065e906117d9565b610db4610e96565b60085460405163508a109b60e01b81526001600160a01b039091169063508a109b90610dec9089908990899089908990600401611bd2565b600060405180830381600087803b158015610e0657600080fd5b505af1158015610e1a573d6000803e3d6000fd5b50505050610e2781611323565b610e316001600355565b505050505050565b6040516001600160a01b03821681527f287ecc83c92265f9c8e315a1adbe33e68db29f45ba48adeac21a97a4ef98db099060200160405180910390a16001600160a01b03166000908152600a60205260409020805460ff19169055565b600260035403610ee85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161065e565b6002600355565b80471015610f3f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161065e565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f8c576040519150601f19603f3d011682016040523d82523d6000602084013e610f91565b606091505b5050905080610d1d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161065e565b6040516001600160a01b03821681527f1fb4a19bacf8930421014fddfb57715dd3d98e65429b801e1b3f2f0d43ca136f9060200160405180910390a16001600160a01b03166000908152600a60205260409020805460ff19166001179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526009602052604090205460ff166111f45760405162461bcd60e51b815260206004820152600660248201526508585919195960d21b604482015260640161065e565b6001600160a01b038116600081815260096020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6008546040805163ffffffff8085168252600160a01b90930490921660208301527fef1d0552fed38a98c600f2b4bd6701e928783d0723f82625200dc0aec44c969d910160405180910390a16008805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b6004546001600160a01b031633036113505760055461134b906001600160a01b031682610eef565b61135a565b61135a3382610eef565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189101611241565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6001600160a01b03811660009081526009602052604090205460ff16156115005760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b604482015260640161065e565b6001600160a01b038116600081815260096020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611241565b80356001600160a01b038116811461156b57600080fd5b919050565b60006020828403121561158257600080fd5b61158b82611554565b9392505050565b803563ffffffff8116811461156b57600080fd5b6000602082840312156115b857600080fd5b61158b82611592565b600080604083850312156115d457600080fd5b823567ffffffffffffffff8111156115eb57600080fd5b830160a081860312156115fd57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561163657600080fd5b833567ffffffffffffffff8082111561164e57600080fd5b818601915086601f83011261166257600080fd5b8135818111156116745761167461160b565b604051601f8201601f19908116603f0116810190838211818310171561169c5761169c61160b565b816040528281528960208487010111156116b557600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b806104008101831015610a6657600080fd5b600080600080600080610480878903121561171157600080fd5b863567ffffffffffffffff8082111561172957600080fd5b818901915089601f83011261173d57600080fd5b81358181111561174c57600080fd5b8a60208260051b850101111561176157600080fd5b60209283019850965050870135935061177d88604089016116e5565b9250610440870135915061046087013590509295509295509295565b602080825260059082015264656d70747960d81b604082015260600190565b81810381811115610a6657634e487b7160e01b600052601160045260246000fd5b60208082526008908201526710b932b630bcb2b960c11b604082015260600190565b8035801515811461156b57600080fd5b6000808335601e1984360301811261182257600080fd5b830160208101925035905067ffffffffffffffff81111561184257600080fd5b80360382131561185157600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e1984360301811261189857600080fd5b830160208101925035905067ffffffffffffffff8111156118b857600080fd5b8060051b360382131561185157600080fd5b8183526000602080850194508260005b85811015611906576001600160a01b036118f383611554565b16875295820195908201906001016118da565b509495945050505050565b81835260006020808501808196508560051b810191508460005b87811015611961578284038952611942828861180b565b61194d868284611858565b9a87019a955050509084019060010161192b565b5091979650505050505050565b602081526000823561019e1984360301811261198957600080fd5b60a0602084015283016119ac60c084016119a283611592565b63ffffffff169052565b6119b860208201611592565b63ffffffff1660e08401526119cf60408201611592565b6101006119e38186018363ffffffff169052565b6119ef60608401611554565b9150610120611a08818701846001600160a01b03169052565b611a1460808501611554565b9250610140611a2d818801856001600160a01b03169052565b611a3960a086016117fb565b9350610160611a4b8189018615159052565b611a5860c087018761180b565b95506101a061018081818c0152611a746102608c018985611858565b975060e0890135828c0152611a8a878a01611554565b6001600160a01b03166101c08c0152948801356101e08b015250509085013561020088015284013561022087015283013561024086015250611acf6020860186611881565b9250601f1980868403016040870152611ae98385846118ca565b9350611af86040880188611881565b9350915080868503016060870152611b11848484611911565b9350611b1f60608801611554565b6001600160a01b03811660808801529250611b3d608088018861180b565b93509150808685030160a087015250611b57838383611858565b9695505050505050565b600060208284031215611b7357600080fd5b5051919050565b600060208083528351808285015260005b81811015611ba757858101830151858201604001528201611b8b565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a811015611c685786840361047f190185528235368d900361043e19018112611c19578283fd5b8c01610440611c28828061180b565b828852611c388389018284611858565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101611bf2565b5050508092505050846020830152611c836040830185611bc8565b82610440830152969550505050505056fea2646970667358221220cd98f9506ff80485dfea4f11cbd6c72a02e1d6bf94d11d8cf4f4b9d9ffa3426764736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _priorityKeepers: PromiseOrValue<string>[],
    _priorityWindowSecs: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _priorityKeepers,
      _priorityWindowSecs,
      overrides || {}
    ) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _priorityKeepers: PromiseOrValue<string>[],
    _priorityWindowSecs: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _priorityKeepers,
      _priorityWindowSecs,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
