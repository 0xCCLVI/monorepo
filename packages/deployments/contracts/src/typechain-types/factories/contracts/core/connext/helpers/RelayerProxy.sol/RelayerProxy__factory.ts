/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
      {
        internalType: "address",
        name: "_autonolas",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_autonolasPriority",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "RelayerProxy__addRelayer_relayerAdded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "RelayerProxy__definedAddress_empty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__isWorkableBySender_notWorkable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__onlyRelayer_notRelayer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "RelayerProxy__removeRelayer_relayerNotAdded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "RelayerProxy__validateAndPayWithCredits_notKeep3r",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "AutonolasChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "autonolas",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_autonolas",
        type: "address",
      },
    ],
    name: "setAutonolas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f9638038062001f9683398101604081905262000034916200043a565b600160035562000044336200009e565b6200004f8762000103565b6200005a866200016c565b6200006585620001d5565b62000070846200023e565b6200007b83620002a7565b620000868262000310565b620000918562000379565b50505050505050620004d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600954604080516001600160a01b03808516825290921660208301527f17da78d98886c3b8819430ab0693a44c32dfa6426a4db4601ce45bc4bc2385ec910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600a602052604090205460ff1615620003c357604051633d85ded560e11b81526001600160a01b038216600482015260240160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b80516001600160a01b03811681146200043557600080fd5b919050565b600080600080600080600060e0888a0312156200045657600080fd5b62000461886200041d565b965062000471602089016200041d565b955062000481604089016200041d565b945062000491606089016200041d565b9350620004a1608089016200041d565b9250620004b160a089016200041d565b915060c088015160ff81168114620004c857600080fd5b8091505092959891949750929550565b611aae80620004e86000396000f3fe6080604052600436106101a05760003560e01c80638efed127116100ec578063c5b350df1161008a578063d9ef0bee11610064578063d9ef0bee146104d2578063dd39f00d146104f2578063de4b054814610512578063e79457f11461053257600080fd5b8063c5b350df14610480578063d1851c9214610495578063d232c220146104b357600080fd5b80639f645a03116100c65780639f645a0314610400578063a42dce8014610420578063b1f8100d14610440578063c415b95c1461046057600080fd5b80638efed127146103a05780639c166c0b146103c05780639cadce00146103e057600080fd5b806360f0a5ac116101595780636eba787f116101335780636eba787f1461032d578063715018a61461034d57806389099717146103625780638da5cb5b1461038257600080fd5b806360f0a5ac146102bf578063634c7bb5146102df5780636a42b8f81461031757600080fd5b80632f55b98d146101e45780633ccfd60b146102295780633cf52ffb146102405780634cc18e571461025f5780634d6f20131461027f5780635e21966a1461029f57600080fd5b366101df57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b3480156101f057600080fd5b506102146101ff3660046113ad565b600a6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561023557600080fd5b5061023e610552565b005b34801561024c57600080fd5b506002545b604051908152602001610220565b34801561026b57600080fd5b5061023e61027a3660046113ad565b6105d5565b34801561028b57600080fd5b5061023e61029a3660046113ad565b610645565b3480156102ab57600080fd5b5061023e6102ba3660046113ad565b6106ac565b3480156102cb57600080fd5b5061023e6102da3660046113ad565b610713565b3480156102eb57600080fd5b506006546102ff906001600160a01b031681565b6040516001600160a01b039091168152602001610220565b34801561032357600080fd5b5062093a80610251565b34801561033957600080fd5b506004546102ff906001600160a01b031681565b34801561035957600080fd5b5061023e61077a565b34801561036e57600080fd5b5061023e61037d3660046113ad565b61082c565b34801561038e57600080fd5b506000546001600160a01b03166102ff565b3480156103ac57600080fd5b506102516103bb3660046113cf565b610893565b3480156103cc57600080fd5b506009546102ff906001600160a01b031681565b3480156103ec57600080fd5b506008546102ff906001600160a01b031681565b34801561040c57600080fd5b5061023e61041b3660046113ad565b61095b565b34801561042c57600080fd5b5061023e61043b3660046113ad565b6109c2565b34801561044c57600080fd5b5061023e61045b3660046113ad565b610a29565b34801561046c57600080fd5b506005546102ff906001600160a01b031681565b34801561048c57600080fd5b5061023e610aca565b3480156104a157600080fd5b506001546001600160a01b03166102ff565b3480156104bf57600080fd5b506000546001600160a01b031615610214565b3480156104de57600080fd5b5061023e6104ed36600461142f565b610b3a565b3480156104fe57600080fd5b5061023e61050d3660046113ad565b610c2f565b34801561051e57600080fd5b506007546102ff906001600160a01b031681565b34801561053e57600080fd5b5061023e61054d366004611505565b610c96565b6000546001600160a01b0316331461057d576040516311a8a1bb60e31b815260040160405180910390fd5b610585610d55565b476105903382610dae565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a1506105d36001600355565b565b6000546001600160a01b03163314610600576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661063857604051633a930fdf60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61064182610ec7565b5050565b6000546001600160a01b03163314610670576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106a357604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b61064182610f30565b6000546001600160a01b031633146106d7576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661070a57604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b61064182610f99565b6000546001600160a01b0316331461073e576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661077157604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b61064182611002565b6000546001600160a01b031633146107a5576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426107b791906115a7565b116107d5576040516324e0285f60e21b815260040160405180910390fd5b6002546000036107f857604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610822576040516323295ef960e01b815260040160405180910390fd5b6105d3600061109e565b6000546001600160a01b03163314610857576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661088a57604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b61064182611103565b336000908152600a602052604081205460ff166108c557604051630981f7d560e21b815233600482015260240161062f565b6108cd610d55565b6007546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d2906108fd908690600401611752565b6020604051808303816000875af115801561091c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109409190611945565b905061094b8261116c565b6109556001600355565b92915050565b6000546001600160a01b03163314610986576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109b957604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b610641826111d8565b6000546001600160a01b031633146109ed576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610a2057604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b61064182611241565b6000546001600160a01b03163314610a54576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a72575060025415155b15610a90576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610abe57604051634a2fb73f60e11b815260040160405180910390fd5b610ac7816112aa565b50565b6001546001600160a01b03163314610af5576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610b0791906115a7565b11610b25576040516324e0285f60e21b815260040160405180910390fd5b6001546105d3906001600160a01b031661109e565b336000908152600a602052604090205460ff16610b6c57604051630981f7d560e21b815233600482015260240161062f565b610b74610d55565b600854604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610ba690879060040161195e565b6000604051808303818588803b158015610bbf57600080fd5b505af1158015610bd3573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189450019150610c0f9050565b60405180910390a1610c208161116c565b610c2a6001600355565b505050565b6000546001600160a01b03163314610c5a576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610c8d57604051633a930fdf60e01b81526001600160a01b038216600482015260240161062f565b610641826112f8565b336000908152600a602052604090205460ff16610cc857604051630981f7d560e21b815233600482015260240161062f565b610cd0610d55565b60085460405163508a109b60e01b81526001600160a01b039091169063508a109b90610d0890899089908990899089906004016119b6565b600060405180830381600087803b158015610d2257600080fd5b505af1158015610d36573d6000803e3d6000fd5b50505050610d438161116c565b610d4d6001600355565b505050505050565b600260035403610da75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161062f565b6002600355565b80471015610dfe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161062f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e4b576040519150601f19603f3d011682016040523d82523d6000602084013e610e50565b606091505b5050905080610c2a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161062f565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600a602052604090205460ff16611046576040516309fbf0f560e31b81526001600160a01b038216600482015260240161062f565b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600954604080516001600160a01b03808516825290921660208301527f17da78d98886c3b8819430ab0693a44c32dfa6426a4db4601ce45bc4bc2385ec910160405180910390a1600980546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316330361119957600554611194906001600160a01b031682610dae565b6111a3565b6111a33382610dae565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189101611093565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6001600160a01b0381166000908152600a602052604090205460ff161561133d57604051633d85ded560e11b81526001600160a01b038216600482015260240161062f565b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611093565b80356001600160a01b03811681146113a857600080fd5b919050565b6000602082840312156113bf57600080fd5b6113c882611391565b9392505050565b600080604083850312156113e257600080fd5b823567ffffffffffffffff8111156113f957600080fd5b830160a0818603121561140b57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561144457600080fd5b833567ffffffffffffffff8082111561145c57600080fd5b818601915086601f83011261147057600080fd5b81358181111561148257611482611419565b604051601f8201601f19908116603f011681019083821181831017156114aa576114aa611419565b816040528281528960208487010111156114c357600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b80610400810183101561095557600080fd5b600080600080600080610480878903121561151f57600080fd5b863567ffffffffffffffff8082111561153757600080fd5b818901915089601f83011261154b57600080fd5b81358181111561155a57600080fd5b8a60208260051b850101111561156f57600080fd5b60209283019850965050870135935061158b88604089016114f3565b9250610440870135915061046087013590509295509295509295565b8181038181111561095557634e487b7160e01b600052601160045260246000fd5b803563ffffffff811681146113a857600080fd5b803580151581146113a857600080fd5b6000808335601e1984360301811261160357600080fd5b830160208101925035905067ffffffffffffffff81111561162357600080fd5b80360382131561163257600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e1984360301811261167957600080fd5b830160208101925035905067ffffffffffffffff81111561169957600080fd5b8060051b360382131561163257600080fd5b8183526000602080850194508260005b858110156116e7576001600160a01b036116d483611391565b16875295820195908201906001016116bb565b509495945050505050565b60008383855260208086019550808560051b8301018460005b8781101561174557848303601f1901895261172682886115ec565b611731858284611639565b9a86019a945050509083019060010161170b565b5090979650505050505050565b602081526000823561019e1984360301811261176d57600080fd5b60a06020840152830161179060c08401611786836115c8565b63ffffffff169052565b61179c602082016115c8565b63ffffffff1660e08401526117b3604082016115c8565b6101006117c78186018363ffffffff169052565b6117d360608401611391565b91506101206117ec818701846001600160a01b03169052565b6117f860808501611391565b9250610140611811818801856001600160a01b03169052565b61181d60a086016115dc565b935061016061182f8189018615159052565b61183c60c08701876115ec565b95506101a061018081818c01526118586102608c018985611639565b975060e0890135828c015261186e878a01611391565b6001600160a01b03166101c08c0152948801356101e08b0152505090850135610200880152840135610220870152830135610240860152506118b36020860186611662565b9250601f19808684030160408701526118cd8385846116ab565b93506118dc6040880188611662565b93509150808685030160608701526118f58484846116f2565b935061190360608801611391565b6001600160a01b0381166080880152925061192160808801886115ec565b93509150808685030160a08701525061193b838383611639565b9695505050505050565b60006020828403121561195757600080fd5b5051919050565b600060208083528351808285015260005b8181101561198b5785810183015185820160400152820161196f565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a811015611a4c5786840361047f190185528235368d900361043e190181126119fd578283fd5b8c01610440611a0c82806115ec565b828852611a1c8389018284611639565b925050506020610400818401828901376104209283013596909201959095529485019492909201916001016119d6565b5050508092505050846020830152611a6760408301856119ac565b82610440830152969550505050505056fea26469706673582212208a69e050d9d5e13fbc958bd2cb85c72d59778d5aacdbe6d3279114dd5d9069ea64736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _autonolas: PromiseOrValue<string>,
    _autonolasPriority: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _autonolas,
      _autonolasPriority,
      overrides || {}
    ) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _keep3r: PromiseOrValue<string>,
    _autonolas: PromiseOrValue<string>,
    _autonolasPriority: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      _keep3r,
      _autonolas,
      _autonolasPriority,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
