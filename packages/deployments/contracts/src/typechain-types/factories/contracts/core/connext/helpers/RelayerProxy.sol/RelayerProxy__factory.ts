/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "RelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dfe38038062001dfe833981016040819052620000349162000480565b6001600355620000443362000085565b6200004f84620000ea565b6200005a83620001a0565b620000658262000252565b620000708162000304565b6200007b82620003b6565b50505050620004dd565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6006546001600160a01b039081169082168190036200013a5760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b60448201526064015b60405180910390fd5b604080516001600160a01b038085168252831660208201527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a150600680546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b03908116908216819003620001ec5760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b604482015260640162000131565b604080516001600160a01b038085168252831660208201527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a150600780546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b039081169082168190036200029e5760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b604482015260640162000131565b604080516001600160a01b038085168252831660208201527f18f08848c5694a025f9966c34ff2367f32a1a8275663b282ee01f4338b045490910160405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03908116908216819003620003505760405162461bcd60e51b8152602060048201526007602482015266216368616e676560c81b604482015260640162000131565b604080516001600160a01b038085168252831660208201527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a150600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526008602052604090205460ff1615620004095760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b604482015260640162000131565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b80516001600160a01b03811681146200047b57600080fd5b919050565b600080600080608085870312156200049757600080fd5b620004a28562000463565b9350620004b26020860162000463565b9250620004c26040860162000463565b9150620004d26060860162000463565b905092959194509250565b61191180620004ed6000396000f3fe6080604052600436106101445760003560e01c80639cadce00116100b6578063d1851c921161006f578063d1851c92146103b9578063d232c220146103d7578063d9ef0bee146103f6578063dd39f00d14610416578063de4b054814610436578063e79457f11461045657600080fd5b80639cadce00146103045780639f645a0314610324578063a42dce8014610344578063b1f8100d14610364578063c415b95c14610384578063c5b350df146103a457600080fd5b806360f0a5ac1161010857806360f0a5ac146102435780636a42b8f8146102635780636eba787f14610279578063715018a6146102b15780638da5cb5b146102c65780638efed127146102e457600080fd5b80632f55b98d146101885780633ccfd60b146101cd5780633cf52ffb146101e45780634d6f2013146102035780635e21966a1461022357600080fd5b3661018357604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561019457600080fd5b506101b86101a33660046111b1565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101d957600080fd5b506101e2610476565b005b3480156101f057600080fd5b506002545b6040519081526020016101c4565b34801561020f57600080fd5b506101e261021e3660046111b1565b6104f9565b34801561022f57600080fd5b506101e261023e3660046111b1565b610561565b34801561024f57600080fd5b506101e261025e3660046111b1565b6105bc565b34801561026f57600080fd5b5062093a806101f5565b34801561028557600080fd5b50600454610299906001600160a01b031681565b6040516001600160a01b0390911681526020016101c4565b3480156102bd57600080fd5b506101e2610617565b3480156102d257600080fd5b506000546001600160a01b0316610299565b3480156102f057600080fd5b506101f56102ff3660046111d3565b6106c9565b34801561031057600080fd5b50600754610299906001600160a01b031681565b34801561033057600080fd5b506101e261033f3660046111b1565b61078e565b34801561035057600080fd5b506101e261035f3660046111b1565b6107e9565b34801561037057600080fd5b506101e261037f3660046111b1565b610844565b34801561039057600080fd5b50600554610299906001600160a01b031681565b3480156103b057600080fd5b506101e26108e5565b3480156103c557600080fd5b506001546001600160a01b0316610299565b3480156103e357600080fd5b506000546001600160a01b0316156101b8565b34801561040257600080fd5b506101e2610411366004611233565b610955565b34801561042257600080fd5b506101e26104313660046111b1565b610a47565b34801561044257600080fd5b50600654610299906001600160a01b031681565b34801561046257600080fd5b506101e2610471366004611309565b610aa2565b6000546001600160a01b031633146104a1576040516311a8a1bb60e31b815260040160405180910390fd5b6104a9610b5e565b476104b43382610bb7565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b18910160405180910390a1506104f76001600355565b565b6000546001600160a01b03163314610524576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166105545760405162461bcd60e51b815260040161054b906113ab565b60405180910390fd5b61055d82610cd0565b5050565b6000546001600160a01b0316331461058c576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166105b35760405162461bcd60e51b815260040161054b906113ab565b61055d82610d66565b6000546001600160a01b031633146105e7576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661060e5760405162461bcd60e51b815260040161054b906113ab565b61055d82610dfc565b6000546001600160a01b03163314610642576040516311a8a1bb60e31b815260040160405180910390fd5b62093a806002544261065491906113ca565b11610672576040516324e0285f60e21b815260040160405180910390fd5b60025460000361069557604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156106bf576040516323295ef960e01b815260040160405180910390fd5b6104f76000610ea5565b3360009081526008602052604081205460ff166106f85760405162461bcd60e51b815260040161054b906113eb565b610700610b5e565b6006546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d290610730908690600401611594565b6020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107739190611787565b905061077e82610f0a565b6107886001600355565b92915050565b6000546001600160a01b031633146107b9576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166107e05760405162461bcd60e51b815260040161054b906113ab565b61055d82610f76565b6000546001600160a01b03163314610814576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661083b5760405162461bcd60e51b815260040161054b906113ab565b61055d8261100c565b6000546001600160a01b0316331461086f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561088d575060025415155b156108ab576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036108d957604051634a2fb73f60e11b815260040160405180910390fd5b6108e2816110a2565b50565b6001546001600160a01b03163314610910576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261092291906113ca565b11610940576040516324e0285f60e21b815260040160405180910390fd5b6001546104f7906001600160a01b0316610ea5565b3360009081526008602052604090205460ff166109845760405162461bcd60e51b815260040161054b906113eb565b61098c610b5e565b600754604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c9084906109be9087906004016117a0565b6000604051808303818588803b1580156109d757600080fd5b505af11580156109eb573d6000803e3d6000fd5b5050604080518681524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189450019150610a279050565b60405180910390a1610a3881610f0a565b610a426001600355565b505050565b6000546001600160a01b03163314610a72576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610a995760405162461bcd60e51b815260040161054b906113ab565b61055d826110f0565b3360009081526008602052604090205460ff16610ad15760405162461bcd60e51b815260040161054b906113eb565b610ad9610b5e565b60075460405163508a109b60e01b81526001600160a01b039091169063508a109b90610b1190899089908990899089906004016117f8565b600060405180830381600087803b158015610b2b57600080fd5b505af1158015610b3f573d6000803e3d6000fd5b50505050610b4c81610f0a565b610b566001600355565b505050505050565b600260035403610bb05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161054b565b6002600355565b80471015610c075760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161054b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c54576040519150601f19603f3d011682016040523d82523d6000602084013e610c59565b606091505b5050905080610a425760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161054b565b6006546001600160a01b03908116908216819003610d005760405162461bcd60e51b815260040161054b906118ba565b604080516001600160a01b038085168252831660208201527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a150600680546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b03908116908216819003610d965760405162461bcd60e51b815260040161054b906118ba565b604080516001600160a01b038085168252831660208201527f18f08848c5694a025f9966c34ff2367f32a1a8275663b282ee01f4338b045490910160405180910390a150600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526008602052604090205460ff16610e4d5760405162461bcd60e51b815260206004820152600660248201526508585919195960d21b604482015260640161054b565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6004546001600160a01b03163303610f3757600554610f32906001600160a01b031682610bb7565b610f41565b610f413382610bb7565b604080518281524760208201527f9826a73d0fd7186bda6a15195ac17571869cab151bfe9a8fed3f9407fffe5b189101610e9a565b6007546001600160a01b03908116908216819003610fa65760405162461bcd60e51b815260040161054b906118ba565b604080516001600160a01b038085168252831660208201527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a150600780546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b0390811690821681900361103c5760405162461bcd60e51b815260040161054b906118ba565b604080516001600160a01b038085168252831660208201527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a150600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6001600160a01b03811660009081526008602052604090205460ff16156111415760405162461bcd60e51b8152602060048201526005602482015264185919195960da1b604482015260640161054b565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101610e9a565b80356001600160a01b03811681146111ac57600080fd5b919050565b6000602082840312156111c357600080fd5b6111cc82611195565b9392505050565b600080604083850312156111e657600080fd5b823567ffffffffffffffff8111156111fd57600080fd5b830160a0818603121561120f57600080fd5b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561124857600080fd5b833567ffffffffffffffff8082111561126057600080fd5b818601915086601f83011261127457600080fd5b8135818111156112865761128661121d565b604051601f8201601f19908116603f011681019083821181831017156112ae576112ae61121d565b816040528281528960208487010111156112c757600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b80610400810183101561078857600080fd5b600080600080600080610480878903121561132357600080fd5b863567ffffffffffffffff8082111561133b57600080fd5b818901915089601f83011261134f57600080fd5b81358181111561135e57600080fd5b8a60208260051b850101111561137357600080fd5b60209283019850965050870135935061138f88604089016112f7565b9250610440870135915061046087013590509295509295509295565b602080825260059082015264656d70747960d81b604082015260600190565b8181038181111561078857634e487b7160e01b600052601160045260246000fd5b60208082526008908201526710b932b630bcb2b960c11b604082015260600190565b803563ffffffff811681146111ac57600080fd5b803580151581146111ac57600080fd5b6000808335601e1984360301811261144857600080fd5b830160208101925035905067ffffffffffffffff81111561146857600080fd5b80360382131561147757600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e198436030181126114be57600080fd5b830160208101925035905067ffffffffffffffff8111156114de57600080fd5b8060051b360382131561147757600080fd5b8183526000602080850194508260005b8581101561152c576001600160a01b0361151983611195565b1687529582019590820190600101611500565b509495945050505050565b81835260006020808501808196508560051b810191508460005b878110156115875782840389526115688288611431565b61157386828461147e565b9a87019a9550505090840190600101611551565b5091979650505050505050565b602081526000823561019e198436030181126115af57600080fd5b60a0602084015283016115d260c084016115c88361140d565b63ffffffff169052565b6115de6020820161140d565b63ffffffff1660e08401526115f56040820161140d565b6101006116098186018363ffffffff169052565b61161560608401611195565b915061012061162e818701846001600160a01b03169052565b61163a60808501611195565b9250610140611653818801856001600160a01b03169052565b61165f60a08601611421565b93506101606116718189018615159052565b61167e60c0870187611431565b95506101a061018081818c015261169a6102608c01898561147e565b975060e0890135828c01526116b0878a01611195565b6001600160a01b03166101c08c0152948801356101e08b0152505090850135610200880152840135610220870152830135610240860152506116f560208601866114a7565b9250601f198086840301604087015261170f8385846114f0565b935061171e60408801886114a7565b9350915080868503016060870152611737848484611537565b935061174560608801611195565b6001600160a01b038116608088015292506117636080880188611431565b93509150808685030160a08701525061177d83838361147e565b9695505050505050565b60006020828403121561179957600080fd5b5051919050565b600060208083528351808285015260005b818110156117cd578581018301518582016040015282016117b1565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a81101561188e5786840361047f190185528235368d900361043e1901811261183f578283fd5b8c0161044061184e8280611431565b82885261185e838901828461147e565b92505050602061040081840182890137610420928301359690920195909552948501949290920191600101611818565b50505080925050508460208301526118a960408301856117ee565b826104408301529695505050505050565b602080825260079082015266216368616e676560c81b60408201526060019056fea264697066735822122056fdc95c4adb1dc6e97d8c96c718717fef4fe8ede2023064a7ca7bc1e521d0cf64736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      overrides || {}
    ) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _connext: PromiseOrValue<string>,
    _spokeConnector: PromiseOrValue<string>,
    _gelatoRelayer: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _connext,
      _spokeConnector,
      _gelatoRelayer,
      _feeCollector,
      overrides || {}
    );
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
