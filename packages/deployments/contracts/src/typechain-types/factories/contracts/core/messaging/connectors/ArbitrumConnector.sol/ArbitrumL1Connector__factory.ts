/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ArbitrumL1Connector,
  ArbitrumL1ConnectorInterface,
} from "../../../../../../contracts/core/messaging/connectors/ArbitrumConnector.sol/ArbitrumL1Connector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorProcessGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "DefaultGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract Connector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum Connector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorProcessGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "root",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    name: "setDefaultGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002df938038062002df983398101604081905262000035916200029b565b8888888888888888878063ffffffff16600003620000845760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064015b60405180910390fd5b63ffffffff9081166080528816620000c95760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b60448201526064016200007b565b6001600160a01b038516620001105760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016200007b565b6200011b336200020a565b63ffffffff88811660a0526001600160a01b0387811660c05286811660e05290881661010052602480546001600160a01b0319169186169190911790556025839055620cf850821015620001a15760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b60448201526064016200007b565b613a98811015620001e45760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b60448201526064016200007b565b6101209190915261014052505050602c9390935550620003329950505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805163ffffffff811681146200027e57600080fd5b919050565b80516001600160a01b03811681146200027e57600080fd5b60008060008060008060008060006101208a8c031215620002bb57600080fd5b620002c68a62000269565b9850620002d660208b0162000269565b9750620002e660408b0162000283565b9650620002f660608b0162000283565b95506200030660808b0162000283565b945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b60805160a05160c05160e051610100516101205161014051612a2d620003cc600039600081816102690152610da001526000818161056d01528181610dc10152610e480152600081816102fc01526110c5015260008181610398015261109e01526000818161054601526111d101526000818161035c01528181610b5a0152610ca201526000818161042701526104e10152612a2d6000f3fe608060405234801561001057600080fd5b50600436106102485760003560e01c8063a8ba212b1161013b578063d232c220116100b8578063ebf0c7171161007c578063ebf0c717146105ab578063ee250e06146105b3578063f38a267b146105bc578063fa31de01146105df578063fd54b228146105f257600080fd5b8063d232c2201461052f578063d69f9d6114610541578063d88beda214610568578063db1b76591461058f578063e7b4294c146105a257600080fd5b8063b95a2001116100ff578063b95a2001146104b6578063c2fb26a6146104dc578063c5b350df14610503578063cc3942831461050b578063d1851c921461051e57600080fd5b8063a8ba212b14610462578063b1f8100d14610475578063b2f8764314610488578063b46300ec1461049b578063b697f531146104a357600080fd5b80635f61e3ec116101c957806382646a581161018d57806382646a58146103ff5780638b42a40a146104125780638d3638f4146104255780638da5cb5b1461044b5780639fa92f9d1461045c57600080fd5b80635f61e3ec146103935780636188af0e146103d257806365eaf11b146103e55780636a42b8f8146103ee578063715018a6146103f757600080fd5b80633490334a116102105780633490334a146102f75780633cf52ffb146103335780635190bc531461033b57806352a9674b146103575780635bd11efc1461037e57600080fd5b806306661abd1461024d57806325e3beda14610264578063272efc691461028b57806329460bd0146102be5780632bbd59ca146102c7575b600080fd5b6023545b6040519081526020015b60405180910390f35b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6102ae6102993660046122b7565b60296020526000908152604090205460ff1681565b604051901515815260200161025b565b61025160255481565b6102ea6102d53660046122d4565b602b6020526000908152604090205460ff1681565b60405161025b9190612303565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161025b565b600254610251565b6102ae6103493660046122b7565b6001600160a01b0316301490565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b61039161038c3660046122b7565b6105fc565b005b6103ba7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161025b565b6103916103e03660046123ce565b610690565b61025160275481565b62093a80610251565b6103916106eb565b61039161040d36600461242e565b6107aa565b6103916104203660046122d4565b6107b6565b7f000000000000000000000000000000000000000000000000000000000000000061031e565b6000546001600160a01b03166103ba565b306103ba565b610391610470366004612463565b610822565b6103916104833660046122b7565b61086b565b6103916104963660046122b7565b610910565b610391610993565b6103916104b13660046122b7565b6109bf565b61031e6104c43660046124cc565b602a6020526000908152604090205463ffffffff1681565b61031e7f000000000000000000000000000000000000000000000000000000000000000081565b610391610a3e565b6024546103ba906001600160a01b031681565b6001546001600160a01b03166103ba565b6000546001600160a01b0316156102ae565b6103ba7f000000000000000000000000000000000000000000000000000000000000000081565b6102517f000000000000000000000000000000000000000000000000000000000000000081565b6102ae61059d3660046122b7565b610a99565b610251602c5481565b610251610aaa565b61025160265481565b6102ae6105ca3660046122d4565b60286020526000908152604090205460ff1681565b6103916105ed3660046124e7565b610abb565b6023546102519081565b6000546001600160a01b03163314610627576040516311a8a1bb60e31b815260040160405180910390fd5b602454604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1602480546001600160a01b0319166001600160a01b0392909216919091179055565b6106a283805190602001208383610bfe565b6106dc5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064015b60405180910390fd5b6106e583610c8c565b50505050565b6000546001600160a01b03163314610716576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361073957604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261074b9190612554565b11610769576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610793576040516323295ef960e01b815260040160405180910390fd5b6001546107a8906001600160a01b0316610f75565b565b6107b381610fd4565b50565b6000546001600160a01b031633146107e1576040516311a8a1bb60e31b815260040160405180910390fd5b602c5460408051918252602082018390527f577c2dd19d86f7555790e151b7455ad2b3897b5c6037646b19672da61a1a8734910160405180910390a1602c55565b61082c8282611005565b7fc96a5db6b3817fac2ff3f1738aef53c283692e03714a12cf99e740b7d5054c7582823360405161085f939291906125c3565b60405180910390a15050565b6000546001600160a01b03163314610896576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108bb57506001600160a01b03811615155b156108d9576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361090757604051634a2fb73f60e11b815260040160405180910390fd5b6107b38161117c565b6000546001600160a01b0316331461093b576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91015b60405180910390a150565b6107a86027546040516020016109ab91815260200190565b604051602081830303815290604052610fd4565b6000546001600160a01b031633146109ea576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610988565b6001546001600160a01b03163314610a69576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a7b9190612554565b116107935760405163d39c12bb60e01b815260040160405180910390fd5b6000610aa4826111ca565b92915050565b6000610ab66003611210565b905090565b3360009081526029602052604090205460ff16610b095760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106d3565b63ffffffff8084166000908152602a602052604090205416610b2c8160016125f8565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610b837f00000000000000000000000000000000000000000000000000000000000000003384888888611223565b80516020820120909150610b9860038261125b565b610ba0610aaa565b6027557f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610bd060235490565b610bda9190612554565b60275485604051610bee9493929190612620565b60405180910390a1505050505050565b6000806000858152602b602052604090205460ff166002811115610c2457610c246122ed565b14610c675760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106d3565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b600080610c998382611378565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610cd162ffffff19831661139c565b63ffffffff1614610d135760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106d3565b6000610d2462ffffff1983166113b1565b905060016000828152602b602052604090205460ff166002811115610d4b57610d4b6122ed565b14610d825760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106d3565b6000818152602b60205260409020805460ff19166002179055610de57f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612645565b5a1015610e1d5760405162461bcd60e51b81526004016106d3906020808252600490820152632167617360e01b604082015260600190565b6000610e2e62ffffff1984166113fa565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610e8b62ffffff19891661140b565b610e9a62ffffff198a1661141f565b610ea962ffffff198b16611434565b610ec6610ebb62ffffff198d16611449565b62ffffff1916611477565b604051602401610ed9949392919061265d565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115610f22578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051610f609392919061268c565b60405180910390a15050505050505050919050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516109889291906126ad565b60245461101a906001600160a01b03166111ca565b6110595760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106d3565b80516020146110945760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106d3565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166378ffd0a17f00000000000000000000000000000000000000000000000000000000000000006110ed846126d7565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561113157600080fd5b505af1158015611145573d6000803e3d6000fd5b505050507fc96a5db6b3817fac2ff3f1738aef53c283692e03714a12cf99e740b7d5054c7582823360405161085f939291906125c3565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006111f57f00000000000000000000000000000000000000000000000000000000000000006114c0565b6001600160a01b0316826001600160a01b0316149050919050565b6000610aa48261121e61161e565b611adf565b6060868686868686604051602001611240969594939291906126fb565b60405160208183030381529060405290509695505050505050565b600161126960206002612839565b6112739190612554565b8260200154106112b85760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b60448201526064016106d3565b60018260200160008282546112cd9190612645565b9091555050602082015460005b602081101561136a5781600116600103611309578284826020811061130157611301612845565b015550505050565b83816020811061131b5761131b612845565b01546040805160208101929092528101849052606001604051602081830303815290604052805190602001209250600282611356919061285b565b9150806113628161287d565b9150506112da565b50611373612896565b505050565b81516000906020840161139364ffffffffff85168284611bb1565b95945050505050565b6000610aa462ffffff19831660286004611bf8565b6000806113c78360781c6001600160601b031690565b6001600160601b0316905060006113e78460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610aa461140883611c28565b90565b6000610aa462ffffff198316826004611bf8565b6000610aa462ffffff19831660246004611bf8565b6000610aa462ffffff19831660046020611c39565b6000610aa4604c61146781601886901c6001600160601b0316612554565b62ffffff19851691906000611d95565b606060008061148f8460181c6001600160601b031690565b6001600160601b0316905060405191508192506114af8483602001611e11565b508181016020016040529052919050565b60006001600160a01b03821633146114eb5760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f91906128ac565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa15801561158c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b091906128ac565b90506001600160a01b038116610aa45760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b60648201526084016106d3565b611626612283565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611ba957600182821c166000868360208110611b0c57611b0c612845565b0154905081600103611b49576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611b94565b84868460208110611b5c57611b5c612845565b6020020151604051602001611b7b929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611ba19061287d565b915050611ae9565b505092915050565b600080611bbe8385612645565b9050604051811115611bce575060005b80600003611be35762ffffff19915050610c85565b5050606092831b9190911790911b1760181b90565b6000611c058260206128c9565b611c109060086128ec565b60ff16611c1e858585611c39565b901c949350505050565b6000610aa462ffffff198316602c60205b60008160ff16600003611c4e57506000610c85565b611c618460181c6001600160601b031690565b6001600160601b0316611c7760ff841685612645565b1115611cdb57611cc2611c938560781c6001600160601b031690565b6001600160601b0316611caf8660181c6001600160601b031690565b6001600160601b0316858560ff16611f72565b60405162461bcd60e51b81526004016106d3919061290d565b60208260ff161115611d555760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106d3565b600882026000611d6e8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611dab8660781c6001600160601b031690565b6001600160601b03169050611dbf86611fe0565b84611dca8784612645565b611dd49190612645565b1115611de75762ffffff19915050611e09565b611df18582612645565b9050611e058364ffffffffff168286611bb1565b9150505b949350505050565b600062ffffff1980841603611e795760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106d3565b611e8283612019565b611ee25760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106d3565b6000611ef78460181c6001600160601b031690565b6001600160601b031690506000611f178560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611f375760206060fd5b8285848460045afa50611f68611f4d8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611f7f86612056565b9150506000611f8d86612056565b9150506000611f9b86612056565b9150506000611fa986612056565b91505083838383604051602001611fc39493929190612920565b604051602081830303815290604052945050505050949350505050565b6000611ff58260181c6001600160601b031690565b6120088360781c6001600160601b031690565b016001600160601b03169050919050565b60006120258260d81c90565b64ffffffffff1664ffffffffff0361203f57506000919050565b600061204a83611fe0565b60405110199392505050565b600080601f5b600f8160ff1611156120ab5760006120758260086128ec565b60ff1685901c905061208681612104565b61ffff16841793508160ff166010146120a157601084901b93505b506000190161205c565b50600f5b60ff8160ff1610156120fe5760006120c88260086128ec565b60ff1685901c90506120d981612104565b61ffff16831792508160ff166000146120f457601083901b92505b50600019016120af565b50915091565b600061211660048360ff16901c612136565b60ff1661ffff919091161760081b61212d82612136565b60ff1617919050565b600060f08083179060ff821690036121515750603092915050565b8060ff1660f1036121655750603192915050565b8060ff1660f2036121795750603292915050565b8060ff1660f30361218d5750603392915050565b8060ff1660f4036121a15750603492915050565b8060ff1660f5036121b55750603592915050565b8060ff1660f6036121c95750603692915050565b8060ff1660f7036121dd5750603792915050565b8060ff1660f8036121f15750603892915050565b8060ff1660f9036122055750603992915050565b8060ff1660fa036122195750606192915050565b8060ff1660fb0361222d5750606292915050565b8060ff1660fc036122415750606392915050565b8060ff1660fd036122555750606492915050565b8060ff1660fe036122695750606592915050565b8060ff1660ff0361227d5750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b03811681146107b357600080fd5b6000602082840312156122c957600080fd5b8135610c85816122a2565b6000602082840312156122e657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061232557634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261235257600080fd5b813567ffffffffffffffff8082111561236d5761236d61232b565b604051601f8301601f19908116603f011681019082821181831017156123955761239561232b565b816040528381528660208588010111156123ae57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600061044084860312156123e457600080fd5b833567ffffffffffffffff8111156123fb57600080fd5b61240786828701612341565b93505061042084018581111561241c57600080fd5b60208501925080359150509250925092565b60006020828403121561244057600080fd5b813567ffffffffffffffff81111561245757600080fd5b611e0984828501612341565b6000806040838503121561247657600080fd5b8235612481816122a2565b9150602083013567ffffffffffffffff81111561249d57600080fd5b6124a985828601612341565b9150509250929050565b803563ffffffff811681146124c757600080fd5b919050565b6000602082840312156124de57600080fd5b610c85826124b3565b6000806000606084860312156124fc57600080fd5b612505846124b3565b925060208401359150604084013567ffffffffffffffff81111561252857600080fd5b61253486828701612341565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000828210156125665761256661253e565b500390565b60005b8381101561258657818101518382015260200161256e565b838111156106e55750506000910152565b600081518084526125af81602086016020860161256b565b601f01601f19169290920160200192915050565b600060018060a01b038086168352606060208401526125e56060840186612597565b9150808416604084015250949350505050565b600063ffffffff8083168185168083038211156126175761261761253e565b01949350505050565b848152836020820152826040820152608060608201526000611f686080830184612597565b600082198211156126585761265861253e565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611f686080830184612597565b83815282151560208201526060604082015260006113936060830184612597565b6040815260006126c06040830185612597565b905060018060a01b03831660208301529392505050565b8051602080830151919081101561227d5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161274381604c85016020870161256b565b91909101604c01979650505050505050565b600181815b808511156127905781600019048211156127765761277661253e565b8085161561278357918102915b93841c939080029061275a565b509250929050565b6000826127a757506001610aa4565b816127b457506000610aa4565b81600181146127ca57600281146127d4576127f0565b6001915050610aa4565b60ff8411156127e5576127e561253e565b50506001821b610aa4565b5060208310610133831016604e8410600b8410161715612813575081810a610aa4565b61281d8383612755565b80600019048211156128315761283161253e565b029392505050565b6000610c858383612798565b634e487b7160e01b600052603260045260246000fd5b60008261287857634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161288f5761288f61253e565b5060010190565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156128be57600080fd5b8151610c85816122a2565b600060ff821660ff8416808210156128e3576128e361253e565b90039392505050565b600060ff821660ff84168160ff04811182151516156128315761283161253e565b602081526000610c856020830184612597565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611f6856fea2646970667358221220bd024e41142ee1a02a51d0f4baa7731fe29d55e1b5cc35a02f1abd7f666ee03564736f6c634300080f0033";

type ArbitrumL1ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumL1ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumL1Connector__factory extends ContractFactory {
  constructor(...args: ArbitrumL1ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumL1Connector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _defaultGasPrice,
      overrides || {}
    ) as Promise<ArbitrumL1Connector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorProcessGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorProcessGas,
      _processGas,
      _reserveGas,
      _defaultGasPrice,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumL1Connector {
    return super.attach(address) as ArbitrumL1Connector;
  }
  override connect(signer: Signer): ArbitrumL1Connector__factory {
    return super.connect(signer) as ArbitrumL1Connector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumL1ConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumL1ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumL1Connector {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumL1Connector;
  }
}
