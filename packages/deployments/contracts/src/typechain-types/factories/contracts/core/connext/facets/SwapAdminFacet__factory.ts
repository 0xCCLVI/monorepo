/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapAdminFacet,
  SwapAdminFacetInterface,
} from "../../../../../contracts/core/connext/facets/SwapAdminFacet";

const _abi = [
  {
    inputs: [],
    name: "AssetLogic__handleOutgoingAsset_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_aExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_adminFeeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_alreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_decimalsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_duplicateTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_failedInitLpTokenClone",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_feeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_invalidPooledTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_zeroTokenAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct SwapUtils.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "initializeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
    ],
    name: "rampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "setSwapAdminFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "stopRampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "withdrawSwapAdminFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631963e4261461006757806343be5eaf1461007c57806347555ef61461008f57806372a30e08146100a25780639c8eab97146100b5578063a1a23c29146100c8575b600080fd5b61007a610075366004611509565b6100db565b005b61007a61008a366004611535565b61019d565b61007a61009d366004611734565b610256565b61007a6100b0366004611819565b6108d0565b61007a6100c3366004611535565b610981565b61007a6100d6366004611819565b610a32565b336100e4610b12565b6001600160a01b03161415801561011f57506003336000908152601b602052604090205460ff16600381111561011c5761011c611832565b14155b1561013d57604051637b32c26b60e01b815260040160405180910390fd5b6000838152601e60205260409020610156908383610b40565b60408051838152602081018390523381830152905184917f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f919081900360600190a2505050565b336101a6610b12565b6001600160a01b0316141580156101e157506003336000908152601b602052604090205460ff1660038111156101de576101de611832565b14155b156101ff57604051637b32c26b60e01b815260040160405180910390fd5b6000828152601e602052604090206102179082610dcd565b6040805182815233602082015283917f6d9b91502dc11e7c127e8e2d114c1f8026647ecb6b987c1baaadb706b5eb317691015b60405180910390a25050565b3361025f610b12565b6001600160a01b03161415801561029a57506003336000908152601b602052604090205460ff16600381111561029757610297611832565b14155b156102b857604051637b32c26b60e01b815260040160405180910390fd5b6000898152601e6020526040902060080154156102e8576040516376a1368960e11b815260040160405180910390fd5b600188511115806102fa575060208851115b156103185760405163502ef3af60e01b815260040160405180910390fd5b87518751811461033b5760405163d6e48e5d60e01b815260040160405180910390fd5b6000885167ffffffffffffffff81111561035757610357611557565b604051908082528060200260200182016040528015610380578160200160208202803683370190505b50905060005b8281101561059657801561044f5760008c8152601f602052604081208c519091908d90849081106103b9576103b9611848565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615158061043157508a81815181106103fa576103fa611848565b60200260200101516001600160a01b03168b60008151811061041e5761041e611848565b60200260200101516001600160a01b0316145b1561044f57604051632fa9e93b60e11b815260040160405180910390fd5b60006001600160a01b03168b828151811061046c5761046c611848565b60200260200101516001600160a01b03160361049b57604051634ce187ad60e11b815260040160405180910390fd5b601260ff168a82815181106104b2576104b2611848565b602002602001015160ff1611156104dc57604051637d4ada4560e11b815260040160405180910390fd5b8981815181106104ee576104ee611848565b602002602001015160126105029190611874565b6105109060ff16600a611977565b82828151811061052257610522611848565b602002602001018181525050806000601f0160008e815260200190815260200160002060008d848151811061055957610559611848565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff92909216919091179055600101610386565b50620f424086106105ba576040516306aedbfd60e01b815260040160405180910390fd5b6305f5e10085106105de57604051634fc2217d60e11b815260040160405180910390fd5b6402540be4008410610603576040516384b9a37f60e01b815260040160405180910390fd5b600061060e84610e45565b60405163266c45bb60e11b81529091506001600160a01b03821690634cd88b769061063f908c908c906004016119d3565b6020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190611a01565b61069f5760405163276cd8b960e01b815260040160405180910390fd5b60006040518061018001604052808e815260200160648a6106c09190611a23565b81526020016106d060648b611a23565b81526020016000815260200160008152602001888152602001878152602001836001600160a01b031681526020018d81526020018481526020018d5167ffffffffffffffff81111561072457610724611557565b60405190808252806020026020018201604052801561074d578160200160208202803683370190505b5081526020018d5167ffffffffffffffff81111561076d5761076d611557565b604051908082528060200260200182016040528015610796578160200160208202803683370190505b50905260008e8152601e602090815260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e08301516007830180546001600160a01b0319166001600160a01b039092169190911790556101008301518051939450849361082c9260088501920190611454565b5061012082015180516108499160098401916020909101906114b9565b50610140820151805161086691600a8401916020909101906114b9565b50610160820151805161088391600b8401916020909101906114b9565b509050508c7f4c5d883e86afc82dc0f918cfc013e437aa458ec41475884857ba8daec50d24cb82336040516108b9929190611aae565b60405180910390a250505050505050505050505050565b336108d9610b12565b6001600160a01b03161415801561091457506003336000908152601b602052604090205460ff16600381111561091157610911611832565b14155b1561093257604051637b32c26b60e01b815260040160405180910390fd5b6000818152601e6020526040902061094990610edf565b60405133815281907f86ce75679135e270f845c02bcb49ef6fb50464cb322dcc30096cccd13d2597df9060200160405180910390a250565b3361098a610b12565b6001600160a01b0316141580156109c557506003336000908152601b602052604090205460ff1660038111156109c2576109c2611832565b14155b156109e357604051637b32c26b60e01b815260040160405180910390fd5b6000828152601e602052604090206109fb9082610fa0565b6040805182815233602082015283917f46eefbb271e4103912d3c227656de8afc0849f4c8cba4b2a1e38b660361e0463910161024a565b33610a3b610b12565b6001600160a01b031614158015610a7657506003336000908152601b602052604090205460ff166003811115610a7357610a73611832565b14155b15610a9457604051637b32c26b60e01b815260040160405180910390fd5b601d5460011901610ab857604051637ce54e2d60e11b815260040160405180910390fd5b6002601d556000818152601e60205260409020610ad59033611019565b60405133815281907f2e6c35653408399a9853c5e5f81b67018cba78568bfd76dd46f93c825cbfb95d9060200160405180910390a2506001601d55565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6003830154610b529062015180611baf565b421015610ba65760405162461bcd60e51b815260206004820152601f60248201527f57616974203120646179206265666f7265207374617274696e672072616d700060448201526064015b60405180910390fd5b610bb36212750042611baf565b811015610bfb5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e742072616d702074696d6560501b6044820152606401610b9d565b8115801590610c0c5750620f424082105b610c585760405162461bcd60e51b815260206004820181905260248201527f667574757265415f206d757374206265203e203020616e64203c204d41585f416044820152606401610b9d565b6000610c63846110c2565b90506000610c72606485611a23565b9050808203610cb15760405162461bcd60e51b815260206004820152600b60248201526a02176616c69642072616d760ac1b6044820152606401610b9d565b81811015610d105781610cc5600283611a23565b1015610d0b5760405162461bcd60e51b8152602060048201526015602482015274199d5d1d5c995057c81a5cc81d1bdbc81cdb585b1b605a1b6044820152606401610b9d565b610d62565b610d1b600283611a23565b811115610d625760405162461bcd60e51b8152602060048201526015602482015274667574757265415f20697320746f6f206c6172676560581b6044820152606401610b9d565b600185018290556002850181905542600386018190556004860184905560408051848152602081018490528082019290925260608201859052517fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549181900360800190a15050505050565b6305f5e100811115610e0c5760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610b9d565b6005820181905581546040518281527f29aee3d14d18e1b8ace81481838ab2996fee9446a44336847d1d5c7fdf2471b19060200161024a565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610eda5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b9d565b919050565b42816004015411610f325760405162461bcd60e51b815260206004820152601760248201527f52616d7020697320616c72656164792073746f707065640000000000000000006044820152606401610b9d565b6000610f3d826110c2565b60018301819055600283018190554260038401819055600484018190556040519192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc20193891610f9491848252602082015260400190565b60405180910390a15050565b6402540be400811115610fe05760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610b9d565b6006820181905581546040518281527f7b4e02f2e320870ba4f764edf60a5289a465018a3fe159f0d72ba33139b0a6169060200161024a565b600882015460005b818110156110bc57600084600801828154811061104057611040611848565b6000918252602082200154600b870180546001600160a01b039092169350908490811061106f5761106f611848565b90600052602060002001549050806000146110b257600086600b01848154811061109b5761109b611848565b6000918252602090912001556110b2828683611173565b5050600101611021565b50505050565b60048101546002820154600091904282111561116c576003840154600185015480831115611130576110f48285611bc2565b6110fe8342611bc2565b6111088386611bc2565b6111129190611a23565b61111c9190611bd5565b6111269082611baf565b9695505050505050565b61113a8285611bc2565b6111448342611bc2565b61114e8584611bc2565b6111589190611a23565b6111629190611bd5565b6111269082611bc2565b9392505050565b8060000361118057505050565b6001600160a01b0383166111a757604051633a48ca7b60e11b815260040160405180910390fd5b6111b28383836111b7565b505050565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908401526111b2928692916000916112479185169084906112c4565b8051909150156111b257808060200190518101906112659190611a01565b6111b25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b9d565b60606112d384846000856112db565b949350505050565b60608247101561133c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b9d565b600080866001600160a01b031685876040516113589190611bf7565b60006040518083038185875af1925050503d8060008114611395576040519150601f19603f3d011682016040523d82523d6000602084013e61139a565b606091505b50915091506113ab878383876113b6565b979650505050505050565b6060831561142557825160000361141e576001600160a01b0385163b61141e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b9d565b50816112d3565b6112d3838381511561143a5781518083602001fd5b8060405162461bcd60e51b8152600401610b9d9190611c13565b8280548282559060005260206000209081019282156114a9579160200282015b828111156114a957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611474565b506114b59291506114f4565b5090565b8280548282559060005260206000209081019282156114a9579160200282015b828111156114a95782518255916020019190600101906114d9565b5b808211156114b557600081556001016114f5565b60008060006060848603121561151e57600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561154857600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561159657611596611557565b604052919050565b600067ffffffffffffffff8211156115b8576115b8611557565b5060051b60200190565b6001600160a01b03811681146115d757600080fd5b50565b600082601f8301126115eb57600080fd5b813560206116006115fb8361159e565b61156d565b82815260059290921b8401810191818101908684111561161f57600080fd5b8286015b84811015611643578035611636816115c2565b8352918301918301611623565b509695505050505050565b600082601f83011261165f57600080fd5b8135602061166f6115fb8361159e565b82815260059290921b8401810191818101908684111561168e57600080fd5b8286015b8481101561164357803560ff811681146116ac5760008081fd5b8352918301918301611692565b600082601f8301126116ca57600080fd5b813567ffffffffffffffff8111156116e4576116e4611557565b6116f7601f8201601f191660200161156d565b81815284602083860101111561170c57600080fd5b816020850160208301376000918101602001919091529392505050565b8035610eda816115c2565b60008060008060008060008060006101208a8c03121561175357600080fd5b8935985060208a013567ffffffffffffffff8082111561177257600080fd5b61177e8d838e016115da565b995060408c013591508082111561179457600080fd5b6117a08d838e0161164e565b985060608c01359150808211156117b657600080fd5b6117c28d838e016116b9565b975060808c01359150808211156117d857600080fd5b506117e58c828d016116b9565b95505060a08a0135935060c08a0135925060e08a0135915061180a6101008b01611729565b90509295985092959850929598565b60006020828403121561182b57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561188d5761188d61185e565b92915050565b600181815b808511156118ce5781600019048211156118b4576118b461185e565b808516156118c157918102915b93841c9390800290611898565b509250929050565b6000826118e55750600161188d565b816118f25750600061188d565b816001811461190857600281146119125761192e565b600191505061188d565b60ff8411156119235761192361185e565b50506001821b61188d565b5060208310610133831016604e8410600b8410161715611951575081810a61188d565b61195b8383611893565b806000190482111561196f5761196f61185e565b029392505050565b600061116c83836118d6565b60005b8381101561199e578181015183820152602001611986565b50506000910152565b600081518084526119bf816020860160208601611983565b601f01601f19169290920160200192915050565b6040815260006119e660408301856119a7565b82810360208401526119f881856119a7565b95945050505050565b600060208284031215611a1357600080fd5b8151801515811461116c57600080fd5b808202811582820484141761188d5761188d61185e565b600081518084526020808501945080840160005b83811015611a735781516001600160a01b031687529582019590820190600101611a4e565b509495945050505050565b600081518084526020808501945080840160005b83811015611a7357815187529582019590820190600101611a92565b60408152825160408201526020830151606082015260408301516080820152606083015160a0820152608083015160c082015260a083015160e0820152600060c0840151610100818185015260e08601519150610120611b18818601846001600160a01b03169052565b81870151925061018091506101408281870152611b396101c0870185611a3a565b9350818801519150603f19610160818887030181890152611b5a8685611a7e565b9550828a01519350818887030185890152611b758685611a7e565b9550808a015194505080878603016101a0880152505050611b968282611a7e565b9250505061116c60208301846001600160a01b03169052565b8082018082111561188d5761188d61185e565b8181038181111561188d5761188d61185e565b600082611bf257634e487b7160e01b600052601260045260246000fd5b500490565b60008251611c09818460208701611983565b9190910192915050565b60208152600061116c60208301846119a756fea264697066735822122088fb064a0b6061de2342a9716c134a83ff1e5b5cc8143f2136af68cf7b55c55064736f6c63430008110033";

type SwapAdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapAdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapAdminFacet__factory extends ContractFactory {
  constructor(...args: SwapAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapAdminFacet> {
    return super.deploy(overrides || {}) as Promise<SwapAdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapAdminFacet {
    return super.attach(address) as SwapAdminFacet;
  }
  override connect(signer: Signer): SwapAdminFacet__factory {
    return super.connect(signer) as SwapAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAdminFacetInterface {
    return new utils.Interface(_abi) as SwapAdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as SwapAdminFacet;
  }
}
