/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapAdminFacet,
  SwapAdminFacetInterface,
} from "../../../../../contracts/core/connext/facets/SwapAdminFacet";

const _abi = [
  {
    inputs: [],
    name: "BaseConnextFacet__getAdoptedAsset_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__getApprovedCanonicalId_notWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyBridgeRouter_notBridgeRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrAdmin_notOwnerOrAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrRouter_notOwnerOrRouter",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwnerOrWatcher_notOwnerOrWatcher",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnextFacet__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_aExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_adminFeeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_alreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_decimalsMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_duplicateTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_failedInitLpTokenClone",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_feeExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_invalidPooledTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_tokenDecimalsExceedMax",
    type: "error",
  },
  {
    inputs: [],
    name: "SwapAdminFacet__initializeSwap_zeroTokenAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "AdminFeesWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RampAStopped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapFeesSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureA",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "initialATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "futureATime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "adminFee",
            type: "uint256",
          },
          {
            internalType: "contract LPToken",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "contract IERC20[]",
            name: "pooledTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "tokenPrecisionMultipliers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "balances",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "adminFees",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct SwapUtils.Swap",
        name: "swap",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SwapInitialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20[]",
        name: "_pooledTokens",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
      {
        internalType: "string",
        name: "lpTokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "lpTokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_adminFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lpTokenTargetAddress",
        type: "address",
      },
    ],
    name: "initializeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "futureA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "futureTime",
        type: "uint256",
      },
    ],
    name: "rampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newAdminFee",
        type: "uint256",
      },
    ],
    name: "setSwapAdminFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "newSwapFee",
        type: "uint256",
      },
    ],
    name: "setSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "stopRampA",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "withdrawSwapAdminFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c33806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631963e4261461006757806343be5eaf1461007c57806347555ef61461008f57806372a30e08146100a25780639c8eab97146100b5578063a1a23c29146100c8575b600080fd5b61007a6100753660046114e0565b6100db565b005b61007a61008a36600461150c565b61019d565b61007a61009d36600461170b565b610256565b61007a6100b03660046117f0565b6108d0565b61007a6100c336600461150c565b610981565b61007a6100d63660046117f0565b610a32565b336100e4610b14565b6001600160a01b03161415801561011f575060033360009081526019602052604090205460ff16600381111561011c5761011c611809565b14155b1561013d57604051637b32c26b60e01b815260040160405180910390fd5b6000838152602160205260409020610156908383610b42565b60408051838152602081018390523381830152905184917f58e6fbecdb1a94225cf82c6b317a771aa08c9ab6552702b819bcd84ba8e8312f919081900360600190a2505050565b336101a6610b14565b6001600160a01b0316141580156101e1575060033360009081526019602052604090205460ff1660038111156101de576101de611809565b14155b156101ff57604051637b32c26b60e01b815260040160405180910390fd5b60008281526021602052604090206102179082610dcf565b6040805182815233602082015283917f6d9b91502dc11e7c127e8e2d114c1f8026647ecb6b987c1baaadb706b5eb317691015b60405180910390a25050565b3361025f610b14565b6001600160a01b03161415801561029a575060033360009081526019602052604090205460ff16600381111561029757610297611809565b14155b156102b857604051637b32c26b60e01b815260040160405180910390fd5b600089815260216020526040902060080154156102e8576040516376a1368960e11b815260040160405180910390fd5b600188511115806102fa575060208851115b156103185760405163502ef3af60e01b815260040160405180910390fd5b87518751811461033b5760405163d6e48e5d60e01b815260040160405180910390fd5b6000885167ffffffffffffffff8111156103575761035761152e565b604051908082528060200260200182016040528015610380578160200160208202803683370190505b50905060005b8281101561059657801561044f5760008c81526022602052604081208c519091908d90849081106103b9576103b961181f565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1615158061043157508a81815181106103fa576103fa61181f565b60200260200101516001600160a01b03168b60008151811061041e5761041e61181f565b60200260200101516001600160a01b0316145b1561044f57604051632fa9e93b60e11b815260040160405180910390fd5b60006001600160a01b03168b828151811061046c5761046c61181f565b60200260200101516001600160a01b03160361049b57604051634ce187ad60e11b815260040160405180910390fd5b601260ff168a82815181106104b2576104b261181f565b602002602001015160ff1611156104dc57604051637d4ada4560e11b815260040160405180910390fd5b8981815181106104ee576104ee61181f565b60200260200101516012610502919061184b565b6105109060ff16600a61194e565b8282815181106105225761052261181f565b60200260200101818152505080600060220160008e815260200190815260200160002060008d84815181106105595761055961181f565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191660ff92909216919091179055600101610386565b50620f424086106105ba576040516306aedbfd60e01b815260040160405180910390fd5b6305f5e10085106105de57604051634fc2217d60e11b815260040160405180910390fd5b6402540be4008410610603576040516384b9a37f60e01b815260040160405180910390fd5b600061060e84610e47565b60405163266c45bb60e11b81529091506001600160a01b03821690634cd88b769061063f908c908c906004016119aa565b6020604051808303816000875af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906119d8565b61069f5760405163276cd8b960e01b815260040160405180910390fd5b60006040518061018001604052808e815260200160648a6106c091906119fa565b81526020016106d060648b6119fa565b81526020016000815260200160008152602001888152602001878152602001836001600160a01b031681526020018d81526020018481526020018d5167ffffffffffffffff8111156107245761072461152e565b60405190808252806020026020018201604052801561074d578160200160208202803683370190505b5081526020018d5167ffffffffffffffff81111561076d5761076d61152e565b604051908082528060200260200182016040528015610796578160200160208202803683370190505b50905260008e81526021602090815260409182902083518155838201516001820155918301516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e08301516007830180546001600160a01b0319166001600160a01b039092169190911790556101008301518051939450849361082c926008850192019061142b565b506101208201518051610849916009840191602090910190611490565b50610140820151805161086691600a840191602090910190611490565b50610160820151805161088391600b840191602090910190611490565b509050508c7f4c5d883e86afc82dc0f918cfc013e437aa458ec41475884857ba8daec50d24cb82336040516108b9929190611a85565b60405180910390a250505050505050505050505050565b336108d9610b14565b6001600160a01b031614158015610914575060033360009081526019602052604090205460ff16600381111561091157610911611809565b14155b1561093257604051637b32c26b60e01b815260040160405180910390fd5b600081815260216020526040902061094990610ee4565b60405133815281907f86ce75679135e270f845c02bcb49ef6fb50464cb322dcc30096cccd13d2597df9060200160405180910390a250565b3361098a610b14565b6001600160a01b0316141580156109c5575060033360009081526019602052604090205460ff1660038111156109c2576109c2611809565b14155b156109e357604051637b32c26b60e01b815260040160405180910390fd5b60008281526021602052604090206109fb9082610fa5565b6040805182815233602082015283917f46eefbb271e4103912d3c227656de8afc0849f4c8cba4b2a1e38b660361e0463910161024a565b33610a3b610b14565b6001600160a01b031614158015610a76575060033360009081526019602052604090205460ff166003811115610a7357610a73611809565b14155b15610a9457604051637b32c26b60e01b815260040160405180910390fd5b60205460011901610ab857604051637ce54e2d60e11b815260040160405180910390fd5b600260209081556000828152602190915260409020610ad7903361101e565b60405133815281907f2e6c35653408399a9853c5e5f81b67018cba78568bfd76dd46f93c825cbfb95d9060200160405180910390a2506001602055565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c1320546001600160a01b031690565b6003830154610b549062015180611b86565b421015610ba85760405162461bcd60e51b815260206004820152601f60248201527f57616974203120646179206265666f7265207374617274696e672072616d700060448201526064015b60405180910390fd5b610bb56212750042611b86565b811015610bfd5760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e742072616d702074696d6560501b6044820152606401610b9f565b8115801590610c0e5750620f424082105b610c5a5760405162461bcd60e51b815260206004820181905260248201527f667574757265415f206d757374206265203e203020616e64203c204d41585f416044820152606401610b9f565b6000610c65846110d0565b90506000610c746064856119fa565b9050808203610cb35760405162461bcd60e51b815260206004820152600b60248201526a02176616c69642072616d760ac1b6044820152606401610b9f565b81811015610d125781610cc76002836119fa565b1015610d0d5760405162461bcd60e51b8152602060048201526015602482015274199d5d1d5c995057c81a5cc81d1bdbc81cdb585b1b605a1b6044820152606401610b9f565b610d64565b610d1d6002836119fa565b811115610d645760405162461bcd60e51b8152602060048201526015602482015274667574757265415f20697320746f6f206c6172676560581b6044820152606401610b9f565b600185018290556002850181905542600386018190556004860184905560408051848152602081018490528082019290925260608201859052517fa2b71ec6df949300b59aab36b55e189697b750119dd349fcfa8c0f779e83c2549181900360800190a15050505050565b6305f5e100811115610e0e5760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610b9f565b6005820181905581546040518281527f29aee3d14d18e1b8ace81481838ab2996fee9446a44336847d1d5c7fdf2471b19060200161024a565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b038116610edf5760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610b9f565b919050565b42816004015411610f375760405162461bcd60e51b815260206004820152601760248201527f52616d7020697320616c72656164792073746f707065640000000000000000006044820152606401610b9f565b6000610f42826110d0565b60018301819055600283018190554260038401819055600484018190556040519192507f46e22fb3709ad289f62ce63d469248536dbc78d82b84a3d7e74ad606dc20193891610f9991848252602082015260400190565b60405180910390a15050565b6402540be400811115610fe55760405162461bcd60e51b81526020600482015260086024820152670e8dede40d0d2ced60c31b6044820152606401610b9f565b6006820181905581546040518281527f7b4e02f2e320870ba4f764edf60a5289a465018a3fe159f0d72ba33139b0a6169060200161024a565b600882015460005b818110156110ca5760008460080182815481106110455761104561181f565b6000918252602082200154600b870180546001600160a01b03909216935090849081106110745761107461181f565b90600052602060002001549050806000146110c057600086600b0184815481106110a0576110a061181f565b6000918252602090912001556110c06001600160a01b0383168683611181565b5050600101611026565b50505050565b60048101546002820154600091904282111561117a57600384015460018501548083111561113e576111028285611b99565b61110c8342611b99565b6111168386611b99565b61112091906119fa565b61112a9190611bac565b6111349082611b86565b9695505050505050565b6111488285611b99565b6111528342611b99565b61115c8584611b99565b61116691906119fa565b6111709190611bac565b6111349082611b99565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526111d39084906111d8565b505050565b600061122d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112aa9092919063ffffffff16565b8051909150156111d3578080602001905181019061124b91906119d8565b6111d35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610b9f565b60606112b984846000856112c1565b949350505050565b6060824710156113225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610b9f565b6001600160a01b0385163b6113795760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b9f565b600080866001600160a01b031685876040516113959190611bce565b60006040518083038185875af1925050503d80600081146113d2576040519150601f19603f3d011682016040523d82523d6000602084013e6113d7565b606091505b50915091506113e78282866113f2565b979650505050505050565b6060831561140157508161117a565b8251156114115782518084602001fd5b8160405162461bcd60e51b8152600401610b9f9190611bea565b828054828255906000526020600020908101928215611480579160200282015b8281111561148057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061144b565b5061148c9291506114cb565b5090565b828054828255906000526020600020908101928215611480579160200282015b828111156114805782518255916020019190600101906114b0565b5b8082111561148c57600081556001016114cc565b6000806000606084860312156114f557600080fd5b505081359360208301359350604090920135919050565b6000806040838503121561151f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561156d5761156d61152e565b604052919050565b600067ffffffffffffffff82111561158f5761158f61152e565b5060051b60200190565b6001600160a01b03811681146115ae57600080fd5b50565b600082601f8301126115c257600080fd5b813560206115d76115d283611575565b611544565b82815260059290921b840181019181810190868411156115f657600080fd5b8286015b8481101561161a57803561160d81611599565b83529183019183016115fa565b509695505050505050565b600082601f83011261163657600080fd5b813560206116466115d283611575565b82815260059290921b8401810191818101908684111561166557600080fd5b8286015b8481101561161a57803560ff811681146116835760008081fd5b8352918301918301611669565b600082601f8301126116a157600080fd5b813567ffffffffffffffff8111156116bb576116bb61152e565b6116ce601f8201601f1916602001611544565b8181528460208386010111156116e357600080fd5b816020850160208301376000918101602001919091529392505050565b8035610edf81611599565b60008060008060008060008060006101208a8c03121561172a57600080fd5b8935985060208a013567ffffffffffffffff8082111561174957600080fd5b6117558d838e016115b1565b995060408c013591508082111561176b57600080fd5b6117778d838e01611625565b985060608c013591508082111561178d57600080fd5b6117998d838e01611690565b975060808c01359150808211156117af57600080fd5b506117bc8c828d01611690565b95505060a08a0135935060c08a0135925060e08a013591506117e16101008b01611700565b90509295985092959850929598565b60006020828403121561180257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561186457611864611835565b92915050565b600181815b808511156118a557816000190482111561188b5761188b611835565b8085161561189857918102915b93841c939080029061186f565b509250929050565b6000826118bc57506001611864565b816118c957506000611864565b81600181146118df57600281146118e957611905565b6001915050611864565b60ff8411156118fa576118fa611835565b50506001821b611864565b5060208310610133831016604e8410600b8410161715611928575081810a611864565b611932838361186a565b806000190482111561194657611946611835565b029392505050565b600061117a83836118ad565b60005b8381101561197557818101518382015260200161195d565b50506000910152565b6000815180845261199681602086016020860161195a565b601f01601f19169290920160200192915050565b6040815260006119bd604083018561197e565b82810360208401526119cf818561197e565b95945050505050565b6000602082840312156119ea57600080fd5b8151801515811461117a57600080fd5b808202811582820484141761186457611864611835565b600081518084526020808501945080840160005b83811015611a4a5781516001600160a01b031687529582019590820190600101611a25565b509495945050505050565b600081518084526020808501945080840160005b83811015611a4a57815187529582019590820190600101611a69565b60408152825160408201526020830151606082015260408301516080820152606083015160a0820152608083015160c082015260a083015160e0820152600060c0840151610100818185015260e08601519150610120611aef818601846001600160a01b03169052565b81870151925061018091506101408281870152611b106101c0870185611a11565b9350818801519150603f19610160818887030181890152611b318685611a55565b9550828a01519350818887030185890152611b4c8685611a55565b9550808a015194505080878603016101a0880152505050611b6d8282611a55565b9250505061117a60208301846001600160a01b03169052565b8082018082111561186457611864611835565b8181038181111561186457611864611835565b600082611bc957634e487b7160e01b600052601260045260246000fd5b500490565b60008251611be081846020870161195a565b9190910192915050565b60208152600061117a602083018461197e56fea26469706673582212202657fd259b176d4432571eae04a2efcf4ca86e1cfb8540531817af894ccedb8f64736f6c63430008110033";

type SwapAdminFacetConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SwapAdminFacetConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SwapAdminFacet__factory extends ContractFactory {
  constructor(...args: SwapAdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<SwapAdminFacet> {
    return super.deploy(overrides || {}) as Promise<SwapAdminFacet>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapAdminFacet {
    return super.attach(address) as SwapAdminFacet;
  }
  override connect(signer: Signer): SwapAdminFacet__factory {
    return super.connect(signer) as SwapAdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapAdminFacetInterface {
    return new utils.Interface(_abi) as SwapAdminFacetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SwapAdminFacet {
    return new Contract(address, _abi, signerOrProvider) as SwapAdminFacet;
  }
}
