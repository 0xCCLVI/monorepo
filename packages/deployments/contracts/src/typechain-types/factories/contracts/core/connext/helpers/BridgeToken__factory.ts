/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "detailsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_newDecimals",
        type: "uint8",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_detailsHash",
        type: "bytes32",
      },
    ],
    name: "setDetailsHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611bd4806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c8063715018a6116100c3578063a457c2d71161007c578063a457c2d714610285578063a9059cbb14610298578063cc2ab7c7146102ab578063d505accf146102be578063dd62ed3e146102d1578063f2fde38b1461030a57600080fd5b8063715018a61461022c5780637ecebe00146102345780638129fc1c146102475780638da5cb5b1461024f57806395d89b411461026a5780639dc29fac1461027257600080fd5b80633644e515116101155780633644e515146101cd57806339509351146101d557806340c10f19146101e85780634815fcb1146101fd578063654935f41461020657806370a082311461021957600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a61031d565b60405161016791906115b6565b60405180910390f35b61018361017e366004611605565b6103b2565b6040519015158152602001610167565b609b545b604051908152602001610167565b6101836101b336600461162f565b6103c8565b609f5460405160ff9091168152602001610167565b610197610431565b6101836101e3366004611605565b6104c9565b6101fb6101f6366004611605565b6104ff565b005b61019760a05481565b6101fb6102143660046116c5565b610515565b610197610227366004611746565b610677565b6101fb610697565b610197610242366004611746565b6106ab565b6101fb6106c9565b6033546040516001600160a01b039091168152602001610167565b61015a61088a565b6101fb610280366004611605565b61089c565b610183610293366004611605565b6108ae565b6101836102a6366004611605565b6108fd565b6101fb6102b9366004611761565b61090a565b6101fb6102cc36600461177a565b610920565b6101976102df3660046117e4565b6001600160a01b039182166000908152609a6020908152604080832093909416825291909152205490565b6101fb610318366004611746565b610a84565b6060609d600001805461032f90611817565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90611817565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b60006103bf338484610a95565b50600192915050565b60006103d5848484610bba565b610427843361042285604051806060016040528060288152602001611b52602891396001600160a01b038a166000908152609a602090815260408083203384529091529020549190610d40565b610a95565b5060019392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f609d600001604051602001610469919061184b565b6040516020818303038152906040528051906020012061048860665490565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b336000818152609a602090815260408083206001600160a01b038716845290915281205490916103bf9185906104229086610d6c565b610507610d7f565b6105118282610dd9565b5050565b6000609d600001805461052790611817565b159150819050806105ad575060a0546105ab87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8b018190048102820181019092528981529250899150889081908401838280828437600092019190915250889250610ebf915050565b145b6105f35760405162461bcd60e51b815260206004820152601260248201527121636f6d6d69747465642064657461696c7360701b60448201526064015b60405180910390fd5b609d610600868883611932565b50609e61060e848683611932565b508061066f57601284846040516106269291906119f3565b6040518091039020878760405161063e9291906119f3565b604051908190038120907f96848da8c41ae282b5ec5c04f45fc469a8186bb78de70419275c2c402fcc27b190600090a45b505050505050565b6001600160a01b0381166000908152609960205260408120545b92915050565b61069f610d7f565b6106a96000610efb565b565b6001600160a01b0381166000908152609c6020526040812054610691565b600054610100900460ff16158080156106e95750600054600160ff909116105b806107035750303b158015610703575060005460ff166001145b6107665760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105ea565b6000805460ff191660011790558015610789576000805461ff0019166101001790555b610791610f4d565b610841609d60000180546107a490611817565b80601f01602080910402602001604051908101604052809291908181526020018280546107d090611817565b801561081d5780601f106107f25761010080835404028352916020019161081d565b820191906000526020600020905b81548152906001019060200180831161080057829003601f168201915b5050505050604051806040016040528060018152602001603160f81b815250610f7c565b8015610887576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609d600101805461032f90611817565b6108a4610d7f565b6105118282610fad565b60006103bf338461042285604051806060016040528060258152602001611b7a60259139336000908152609a602090815260408083206001600160a01b038d1684529091529020549190610d40565b60006103bf338484610bba565b610912610d7f565b8060a054146108875760a055565b834211156109705760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105ea565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861099f8c6110b1565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109fa826110d9565b90506000610a0a82878787611127565b9050896001600160a01b0316816001600160a01b031614610a6d5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105ea565b610a788a8a8a610a95565b50505050505050505050565b610a8c610d7f565b6108878161114f565b6001600160a01b038316610af75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105ea565b6001600160a01b038216610b585760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105ea565b6001600160a01b038381166000818152609a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610c1e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105ea565b6001600160a01b038216610c805760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105ea565b610cbd81604051806060016040528060268152602001611b2c602691396001600160a01b0386166000908152609960205260409020549190610d40565b6001600160a01b038085166000908152609960205260408082209390935590841681522054610cec9082610d6c565b6001600160a01b0380841660008181526099602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610bad9085815260200190565b60008184841115610d645760405162461bcd60e51b81526004016105ea91906115b6565b505050900390565b6000610d788284611a19565b9392505050565b6033546001600160a01b031633146106a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105ea565b6001600160a01b038216610e2f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105ea565b609b54610e3c9082610d6c565b609b556001600160a01b038216600090815260996020526040902054610e629082610d6c565b6001600160a01b0383166000818152609960205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610eb39085815260200190565b60405180910390a35050565b600083518484518585604051602001610edc959493929190611a31565b6040516020818303038152906040528051906020012090509392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610f745760405162461bcd60e51b81526004016105ea90611a91565b6106a96111ca565b600054610100900460ff16610fa35760405162461bcd60e51b81526004016105ea90611a91565b61051182826111fa565b6001600160a01b03821661100d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105ea565b61104a81604051806060016040528060228152602001611b0a602291396001600160a01b0385166000908152609960205260409020549190610d40565b6001600160a01b038316600090815260996020526040902055609b54611070908261122b565b609b556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610eb3565b6001600160a01b0381166000908152609c602052604090208054600181018255905b50919050565b60006106916110e6611237565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061113887878787611273565b9150915061114581611360565b5095945050505050565b611157610d7f565b6001600160a01b0381166111bc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105ea565b61088781610efb565b505050565b600054610100900460ff166111f15760405162461bcd60e51b81526004016105ea90611a91565b6106a933610efb565b600054610100900460ff166112215760405162461bcd60e51b81526004016105ea90611a91565b6105118282611516565b6000610d788284611adc565b600061126e7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61126660655490565b606654611557565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112aa5750600090506003611357565b8460ff16601b141580156112c257508460ff16601c14155b156112d35750600090506004611357565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611327573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661135057600060019250925050611357565b9150600090505b94509492505050565b600081600481111561137457611374611af3565b0361137c5750565b600181600481111561139057611390611af3565b036113dd5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105ea565b60028160048111156113f1576113f1611af3565b0361143e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105ea565b600381600481111561145257611452611af3565b036114aa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105ea565b60048160048111156114be576114be611af3565b036108875760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105ea565b600054610100900460ff1661153d5760405162461bcd60e51b81526004016105ea90611a91565b815160209283012081519190920120606591909155606655565b6040805160208101859052908101839052606081018290524660808201523060a082015260009060c001610edc565b60005b838110156115a1578181015183820152602001611589565b838111156115b0576000848401525b50505050565b60208152600082518060208401526115d5816040850160208701611586565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461160057600080fd5b919050565b6000806040838503121561161857600080fd5b611621836115e9565b946020939093013593505050565b60008060006060848603121561164457600080fd5b61164d846115e9565b925061165b602085016115e9565b9150604084013590509250925092565b60008083601f84011261167d57600080fd5b50813567ffffffffffffffff81111561169557600080fd5b6020830191508360208285010111156116ad57600080fd5b9250929050565b803560ff8116811461160057600080fd5b6000806000806000606086880312156116dd57600080fd5b853567ffffffffffffffff808211156116f557600080fd5b61170189838a0161166b565b9097509550602088013591508082111561171a57600080fd5b506117278882890161166b565b909450925061173a9050604087016116b4565b90509295509295909350565b60006020828403121561175857600080fd5b610d78826115e9565b60006020828403121561177357600080fd5b5035919050565b600080600080600080600060e0888a03121561179557600080fd5b61179e886115e9565b96506117ac602089016115e9565b955060408801359450606088013593506117c8608089016116b4565b925060a0880135915060c0880135905092959891949750929550565b600080604083850312156117f757600080fd5b611800836115e9565b915061180e602084016115e9565b90509250929050565b600181811c9082168061182b57607f821691505b6020821081036110d357634e487b7160e01b600052602260045260246000fd5b600060208083526000845461185f81611817565b80848701526040600180841660008114611880576001811461189a576118c8565b60ff1985168984015283151560051b8901830195506118c8565b896000528660002060005b858110156118c05781548b82018601529083019088016118a5565b8a0184019650505b509398975050505050505050565b634e487b7160e01b600052604160045260246000fd5b601f8211156111c557600081815260208120601f850160051c810160208610156119135750805b601f850160051c820191505b8181101561066f5782815560010161191f565b67ffffffffffffffff83111561194a5761194a6118d6565b61195e836119588354611817565b836118ec565b6000601f841160018114611992576000851561197a5750838201355b600019600387901b1c1916600186901b1783556119ec565b600083815260209020601f19861690835b828110156119c357868501358255602094850194600190920191016119a3565b50868210156119e05760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a2c57611a2c611a03565b500190565b85815260008551611a49816020850160208a01611586565b80830190508560208201528451611a67816040840160208901611586565b60f89490941b6001600160f81b031916604091909401908101939093525050604101949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082821015611aee57611aee611a03565b500390565b634e487b7160e01b600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203b0d6eabd43092c0da48b84946f81b9081c3814cc66fbadf5b806b0b1166740164736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
