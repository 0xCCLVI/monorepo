/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b6b806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a457c2d71161007c578063a457c2d71461025e578063a9059cbb14610271578063b7b090ee14610284578063d505accf14610297578063dd62ed3e146102aa578063f2fde38b146102e357600080fd5b8063715018a61461020d5780637ecebe00146102155780638da5cb5b1461022857806395d89b41146102435780639dc29fac1461024b57600080fd5b8063313ce567116100ff578063313ce567146101b75780633644e515146101cc57806339509351146101d457806340c10f19146101e757806370a08231146101fa57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780633118724e146101a2575b600080fd5b6101446102f6565b60405161015191906113f1565b60405180910390f35b61016d610168366004611462565b61038b565b6040519015158152602001610151565b609b545b604051908152602001610151565b61016d61019d36600461148c565b6103a1565b6101b56101b036600461157c565b61040a565b005b609f5460405160ff9091168152602001610151565b610181610548565b61016d6101e2366004611462565b6105e0565b6101b56101f5366004611462565b610616565b6101816102083660046115f0565b61062c565b6101b561064c565b6101816102233660046115f0565b610660565b6033546040516001600160a01b039091168152602001610151565b61014461067e565b6101b5610259366004611462565b610690565b61016d61026c366004611462565b6106a2565b61016d61027f366004611462565b6106f1565b6101b5610292366004611654565b6106fe565b6101b56102a53660046116c0565b610780565b6101816102b836600461172a565b6001600160a01b039182166000908152609a6020908152604080832093909416825291909152205490565b6101b56102f13660046115f0565b6108e4565b6060609d60000180546103089061175d565b80601f01602080910402602001604051908101604052809291908181526020018280546103349061175d565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050905090565b60006103983384846108f8565b50600192915050565b60006103ae848484610a1d565b61040084336103fb85604051806060016040528060288152602001611ae9602891396001600160a01b038a166000908152609a602090815260408083203384529091529020549190610ba3565b6108f8565b5060019392505050565b600054610100900460ff161580801561042a5750600054600160ff909116105b806104445750303b158015610444575060005460ff166001145b6104ac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156104cf576000805461ff0019166101001790555b6104d7610bcf565b6104fc848484604051806040016040528060018152602001603160f81b815250610bfe565b8015610542576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f609d6000016040516020016105809190611791565b6040516020818303038152906040528051906020012061059f60665490565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b336000818152609a602090815260408083206001600160a01b038716845290915281205490916103989185906103fb9086610c5e565b61061e610c71565b6106288282610ccb565b5050565b6001600160a01b0381166000908152609960205260408120545b92915050565b610654610c71565b61065e6000610db1565b565b6001600160a01b0381166000908152609c6020526040812054610646565b6060609d60010180546103089061175d565b610698610c71565b6106288282610e03565b600061039833846103fb85604051806060016040528060258152602001611b1160259139336000908152609a602090815260408083206001600160a01b038d1684529091529020549190610ba3565b6000610398338484610a1d565b610706610c71565b609d61071384868361186a565b50609e61072182848361186a565b50818160405161073292919061192a565b6040518091039020848460405161074a92919061192a565b604051908190038120907f1ec4c73af923253fb2c28a509dd78d342709289a09929d78c64c0b8e047efbcd90600090a350505050565b834211156107d05760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016104a3565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886107ff8c610f07565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061085a82610f2f565b9050600061086a82878787610f7d565b9050896001600160a01b0316816001600160a01b0316146108cd5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016104a3565b6108d88a8a8a6108f8565b50505050505050505050565b6108ec610c71565b6108f581610fa5565b50565b6001600160a01b03831661095a5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104a3565b6001600160a01b0382166109bb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104a3565b6001600160a01b038381166000818152609a602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316610a815760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104a3565b6001600160a01b038216610ae35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104a3565b610b2081604051806060016040528060268152602001611ac3602691396001600160a01b0386166000908152609960205260409020549190610ba3565b6001600160a01b038085166000908152609960205260408082209390935590841681522054610b4f9082610c5e565b6001600160a01b0380841660008181526099602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a109085815260200190565b60008184841115610bc75760405162461bcd60e51b81526004016104a391906113f1565b505050900390565b600054610100900460ff16610bf65760405162461bcd60e51b81526004016104a39061193a565b61065e611020565b600054610100900460ff16610c255760405162461bcd60e51b81526004016104a39061193a565b610c2f8382611050565b609d610c3b8482611985565b50609f805460ff191660ff8616179055609e610c578382611985565b5050505050565b6000610c6a8284611a5b565b9392505050565b6033546001600160a01b0316331461065e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a3565b6001600160a01b038216610d215760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104a3565b609b54610d2e9082610c5e565b609b556001600160a01b038216600090815260996020526040902054610d549082610c5e565b6001600160a01b0383166000818152609960205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610da59085815260200190565b60405180910390a35050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610e635760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104a3565b610ea081604051806060016040528060228152602001611aa1602291396001600160a01b0385166000908152609960205260409020549190610ba3565b6001600160a01b038316600090815260996020526040902055609b54610ec69082611081565b609b556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610da5565b6001600160a01b0381166000908152609c602052604090208054600181018255905b50919050565b6000610646610f3c61108d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f8e8787878761110d565b91509150610f9b816111fa565b5095945050505050565b610fad610c71565b6001600160a01b0381166110125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104a3565b6108f581610db1565b505050565b600054610100900460ff166110475760405162461bcd60e51b81526004016104a39061193a565b61065e33610db1565b600054610100900460ff166110775760405162461bcd60e51b81526004016104a39061193a565b61062882826113b0565b6000610c6a8284611a73565b60006111087f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6110bc60655490565b6066546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561114457506000905060036111f1565b8460ff16601b1415801561115c57508460ff16601c14155b1561116d57506000905060046111f1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111c1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111ea576000600192509250506111f1565b9150600090505b94509492505050565b600081600481111561120e5761120e611a8a565b036112165750565b600181600481111561122a5761122a611a8a565b036112775760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104a3565b600281600481111561128b5761128b611a8a565b036112d85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104a3565b60038160048111156112ec576112ec611a8a565b036113445760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104a3565b600481600481111561135857611358611a8a565b036108f55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104a3565b600054610100900460ff166113d75760405162461bcd60e51b81526004016104a39061193a565b815160209283012081519190920120606591909155606655565b600060208083528351808285015260005b8181101561141e57858101830151858201604001528201611402565b81811115611430576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461145d57600080fd5b919050565b6000806040838503121561147557600080fd5b61147e83611446565b946020939093013593505050565b6000806000606084860312156114a157600080fd5b6114aa84611446565b92506114b860208501611446565b9150604084013590509250925092565b803560ff8116811461145d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f83011261150057600080fd5b813567ffffffffffffffff8082111561151b5761151b6114d9565b604051601f8301601f19908116603f01168101908282118183101715611543576115436114d9565b8160405283815286602085880101111561155c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561159157600080fd5b61159a846114c8565b9250602084013567ffffffffffffffff808211156115b757600080fd5b6115c3878388016114ef565b935060408601359150808211156115d957600080fd5b506115e6868287016114ef565b9150509250925092565b60006020828403121561160257600080fd5b610c6a82611446565b60008083601f84011261161d57600080fd5b50813567ffffffffffffffff81111561163557600080fd5b60208301915083602082850101111561164d57600080fd5b9250929050565b6000806000806040858703121561166a57600080fd5b843567ffffffffffffffff8082111561168257600080fd5b61168e8883890161160b565b909650945060208701359150808211156116a757600080fd5b506116b48782880161160b565b95989497509550505050565b600080600080600080600060e0888a0312156116db57600080fd5b6116e488611446565b96506116f260208901611446565b9550604088013594506060880135935061170e608089016114c8565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561173d57600080fd5b61174683611446565b915061175460208401611446565b90509250929050565b600181811c9082168061177157607f821691505b602082108103610f2957634e487b7160e01b600052602260045260246000fd5b60006020808352600084546117a58161175d565b808487015260406001808416600081146117c657600181146117e05761180e565b60ff1985168984015283151560051b89018301955061180e565b896000528660002060005b858110156118065781548b82018601529083019088016117eb565b8a0184019650505b509398975050505050505050565b601f82111561101b57600081815260208120601f850160051c810160208610156118435750805b601f850160051c820191505b818110156118625782815560010161184f565b505050505050565b67ffffffffffffffff831115611882576118826114d9565b61189683611890835461175d565b8361181c565b6000601f8411600181146118ca57600085156118b25750838201355b600019600387901b1c1916600186901b178355610c57565b600083815260209020601f19861690835b828110156118fb57868501358255602094850194600190920191016118db565b50868210156119185760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8183823760009101908152919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b815167ffffffffffffffff81111561199f5761199f6114d9565b6119b3816119ad845461175d565b8461181c565b602080601f8311600181146119e857600084156119d05750858301515b600019600386901b1c1916600185901b178555611862565b600085815260208120601f198616915b82811015611a17578886015182559484019460019091019084016119f8565b5085821015611a355787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a6e57611a6e611a45565b500190565b600082821015611a8557611a85611a45565b500390565b634e487b7160e01b600052602160045260246000fdfe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220ea23d58cbaac2061f41fae75272bdd24e569c0090cf0ca70ee853ca6f856539564736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(overrides || {}) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
