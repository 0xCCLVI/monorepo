/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BridgeToken,
  BridgeTokenInterface,
} from "../../../../../contracts/core/connext/helpers/BridgeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "UpdateDetails",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amnt",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_newSymbol",
        type: "string",
      },
    ],
    name: "setDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162001c0e38038062001c0e833981016040819052620000359162000263565b828282604051806040016040528060018152602001603160f81b81525082816200006e620000686200014260201b60201c565b62000146565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c0948501909152815191909501209052919091526101205260066200010b848262000376565b506008805460ff191660ff8616179055600762000129838262000376565b5080516020909101206005555062000442945050505050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001be57600080fd5b81516001600160401b0380821115620001db57620001db62000196565b604051601f8301601f19908116603f0116810190828211818310171562000206576200020662000196565b816040528381526020925086838588010111156200022357600080fd5b600091505b8382101562000247578582018301518183018401529082019062000228565b83821115620002595760008385830101525b9695505050505050565b6000806000606084860312156200027957600080fd5b835160ff811681146200028b57600080fd5b60208501519093506001600160401b0380821115620002a957600080fd5b620002b787838801620001ac565b93506040860151915080821115620002ce57600080fd5b50620002dd86828701620001ac565b9150509250925092565b600181811c90821680620002fc57607f821691505b6020821081036200031d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200037157600081815260208120601f850160051c810160208610156200034c5750805b601f850160051c820191505b818110156200036d5782815560010162000358565b5050505b505050565b81516001600160401b0381111562000392576200039262000196565b620003aa81620003a38454620002e7565b8462000323565b602080601f831160018114620003e25760008415620003c95750858301515b600019600386901b1c1916600185901b1785556200036d565b600085815260208120601f198616915b828110156200041357888601518255948401946001909101908401620003f2565b5085821015620004325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161177c620004926000396000610f6301526000610fb201526000610f8d01526000610ee601526000610f1001526000610f3a015261177c6000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637ecebe00116100ad578063a9059cbb11610071578063a9059cbb14610253578063b7b090ee14610266578063d505accf14610279578063dd62ed3e1461028c578063f2fde38b1461029f57600080fd5b80637ecebe00146101f75780638da5cb5b1461020a57806395d89b41146102255780639dc29fac1461022d578063a457c2d71461024057600080fd5b80633644e515116100f45780633644e515146101ac57806339509351146101b457806340c10f19146101c757806370a08231146101dc578063715018a6146101ef57600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102b2565b60405161014691906112a3565b60405180910390f35b61016261015d366004611314565b610347565b6040519015158152602001610146565b6003545b604051908152602001610146565b61016261019236600461133e565b61035d565b60085460405160ff9091168152602001610146565b61017661037f565b6101626101c2366004611314565b610412565b6101da6101d5366004611314565b61044e565b005b6101766101ea36600461137a565b610464565b6101da610484565b61017661020536600461137a565b610498565b6000546040516001600160a01b039091168152602001610146565b6101396104b6565b6101da61023b366004611314565b6104c8565b61016261024e366004611314565b6104da565b610162610261366004611314565b610559565b6101da6102743660046113e5565b610566565b6101da610287366004611451565b6105e8565b61017661029a3660046114c4565b61074c565b6101da6102ad36600461137a565b610777565b6060600660000180546102c4906114f7565b80601f01602080910402602001604051908101604052809291908181526020018280546102f0906114f7565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b60006103543384846107f0565b50600192915050565b600061036a843384610915565b61037584848461098f565b5060019392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60066000016040516020016103b7919061152b565b60408051601f198184030181528282528051602091820120600554918401949094529082019290925260608101919091524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103549185906104499086906115cc565b6107f0565b610456610b5e565b6104608282610bb8565b5050565b6001600160a01b0381166000908152600160205260408120545b92915050565b61048c610b5e565b6104966000610ca0565b565b6001600160a01b03811660009081526004602052604081205461047e565b6060600660010180546102c4906114f7565b6104d0610b5e565b6104608282610cf0565b6000806104e7338561074c565b90508281101561054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61037533858584036107f0565b600061035433848461098f565b61056e610b5e565b600661057b848683611648565b506007610589828483611648565b50818160405161059a929190611709565b604051809103902084846040516105b2929190611709565b604051908190038120907f1ec4c73af923253fb2c28a509dd78d342709289a09929d78c64c0b8e047efbcd90600090a350505050565b834211156106385760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610543565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106678c610e36565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006106c282610e5e565b905060006106d282878787610eac565b9050896001600160a01b0316816001600160a01b0316146107355760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610543565b6107408a8a8a6107f0565b50505050505050505050565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61077f610b5e565b6001600160a01b0381166107e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610543565b6107ed81610ca0565b50565b6001600160a01b0383166108525760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610543565b6001600160a01b0382166108b35760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610543565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000610921848461074c565b90506000198114610989578181101561097c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610543565b61098984848484036107f0565b50505050565b6001600160a01b0383166109f35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610543565b6001600160a01b038216610a555760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610543565b6001600160a01b03831660009081526001602052604090205481811015610acd5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610543565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610b049084906115cc565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b5091815260200190565b60405180910390a350505050565b6000546001600160a01b031633146104965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610543565b6001600160a01b038216610c0e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610543565b80600354610c1c91906115cc565b6003556001600160a01b038216600090815260016020526040902054610c439082906115cc565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c949085815260200190565b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610d505760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610543565b6001600160a01b03821660009081526001602052604090205481811015610dc45760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610543565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610df3908490611719565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610908565b6001600160a01b03811660009081526004602052604090208054600181018255905b50919050565b600061047e610e6b610ed9565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610ebd87878787611000565b91509150610eca816110ed565b5095945050505050565b505050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f3257507f000000000000000000000000000000000000000000000000000000000000000046145b15610f5c57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561103757506000905060036110e4565b8460ff16601b1415801561104f57508460ff16601c14155b1561106057506000905060046110e4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156110b4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110dd576000600192509250506110e4565b9150600090505b94509492505050565b600081600481111561110157611101611730565b036111095750565b600181600481111561111d5761111d611730565b0361116a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610543565b600281600481111561117e5761117e611730565b036111cb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610543565b60038160048111156111df576111df611730565b036112375760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610543565b600481600481111561124b5761124b611730565b036107ed5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610543565b600060208083528351808285015260005b818110156112d0578581018301518582016040015282016112b4565b818111156112e2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461130f57600080fd5b919050565b6000806040838503121561132757600080fd5b611330836112f8565b946020939093013593505050565b60008060006060848603121561135357600080fd5b61135c846112f8565b925061136a602085016112f8565b9150604084013590509250925092565b60006020828403121561138c57600080fd5b611395826112f8565b9392505050565b60008083601f8401126113ae57600080fd5b50813567ffffffffffffffff8111156113c657600080fd5b6020830191508360208285010111156113de57600080fd5b9250929050565b600080600080604085870312156113fb57600080fd5b843567ffffffffffffffff8082111561141357600080fd5b61141f8883890161139c565b9096509450602087013591508082111561143857600080fd5b506114458782880161139c565b95989497509550505050565b600080600080600080600060e0888a03121561146c57600080fd5b611475886112f8565b9650611483602089016112f8565b95506040880135945060608801359350608088013560ff811681146114a757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156114d757600080fd5b6114e0836112f8565b91506114ee602084016112f8565b90509250929050565b600181811c9082168061150b57607f821691505b602082108103610e5857634e487b7160e01b600052602260045260246000fd5b600060208083526000845461153f816114f7565b80848701526040600180841660008114611560576001811461157a576115a8565b60ff1985168984015283151560051b8901830195506115a8565b896000528660002060005b858110156115a05781548b8201860152908301908801611585565b8a0184019650505b509398975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115df576115df6115b6565b500190565b634e487b7160e01b600052604160045260246000fd5b601f821115610ed457600081815260208120601f850160051c810160208610156116215750805b601f850160051c820191505b818110156116405782815560010161162d565b505050505050565b67ffffffffffffffff831115611660576116606115e4565b6116748361166e83546114f7565b836115fa565b6000601f8411600181146116a857600085156116905750838201355b600019600387901b1c1916600186901b178355611702565b600083815260209020601f19861690835b828110156116d957868501358255602094850194600190920191016116b9565b50868210156116f65760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8183823760009101908152919050565b60008282101561172b5761172b6115b6565b500390565b634e487b7160e01b600052602160045260246000fdfea26469706673582212209ff01b6d62d290313be7fb8f16a106af289d999b1047418d39213a04bd2513ed64736f6c634300080f0033";

type BridgeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeToken__factory extends ContractFactory {
  constructor(...args: BridgeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _decimals: PromiseOrValue<BigNumberish>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeToken> {
    return super.deploy(
      _decimals,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<BridgeToken>;
  }
  override getDeployTransaction(
    _decimals: PromiseOrValue<BigNumberish>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _decimals,
      _name,
      _symbol,
      overrides || {}
    );
  }
  override attach(address: string): BridgeToken {
    return super.attach(address) as BridgeToken;
  }
  override connect(signer: Signer): BridgeToken__factory {
    return super.connect(signer) as BridgeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeTokenInterface {
    return new utils.Interface(_abi) as BridgeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeToken {
    return new Contract(address, _abi, signerOrProvider) as BridgeToken;
  }
}
