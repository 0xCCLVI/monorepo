/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainHubConnector,
  MultichainHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620016d7380380620016d78339810160408190526200003591620003d7565b848282808a8a858a8a84848484846200004e3362000296565b8463ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011d576200011d81620002fb565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050505050505050505062000190816200036460201b60201c565b5081600003620001d45760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000090565b826001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023991906200045a565b6001600160a01b0316610100819052620002825760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000090565b5061012052506200047f9650505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620003ba57600080fd5b919050565b80516001600160a01b0381168114620003ba57600080fd5b600080600080600080600060e0888a031215620003f357600080fd5b620003fe88620003a5565b96506200040e60208901620003a5565b95506200041e60408901620003bf565b94506200042e60608901620003bf565b93506200043e60808901620003bf565b925060a0880151915060c0880151905092959891949750929550565b6000602082840312156200046d57600080fd5b6200047882620003bf565b9392505050565b60805160a05160c05160e05161010051610120516111c96200050e60003960008181610b8901528181610c7c0152610def015260008181610cee0152610d4c01526000818161014101526108d101526000818161026a0152818161043801526108aa0152600081816103eb015281816104ed015281816107e10152610abc015260006101e301526111c96000f3fe6080604052600436106101235760003560e01c80637850b020116100a0578063cc39428311610064578063cc39428314610370578063d1851c9214610390578063d232c220146103ae578063d69f9d61146103d9578063db1b76591461040d57600080fd5b80637850b020146102cf5780638da5cb5b146102ef5780639abaf4791461030d578063b1f8100d1461033b578063c5b350df1461035b57600080fd5b80635bd11efc116100e75780635bd11efc146102055780635c36b186146102255780635f61e3ec146102585780636a42b8f8146102a4578063715018a6146102ba57600080fd5b8063141684161461012f5780633cf52ffb1461017d57806348e6fa231461019c5780634ff746f6146101b157806352a9674b146101d157600080fd5b3661012a57005b600080fd5b34801561013b57600080fd5b506101637f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561018957600080fd5b506002545b604051908152602001610174565b6101af6101aa366004610ed3565b61042d565b005b3480156101bd57600080fd5b506101af6101cc366004610f37565b6104e2565b3480156101dd57600080fd5b506101637f000000000000000000000000000000000000000000000000000000000000000081565b34801561021157600080fd5b506101af610220366004610f89565b610588565b34801561023157600080fd5b506040805180820182526004815263706f6e6760e01b602082015290516101749190610ff3565b34801561026457600080fd5b5061028c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610174565b3480156102b057600080fd5b5062093a8061018e565b3480156102c657600080fd5b506101af6105bf565b3480156102db57600080fd5b506101af6102ea366004611006565b610673565b3480156102fb57600080fd5b506000546001600160a01b031661028c565b34801561031957600080fd5b5061032d610328366004610f37565b6106a7565b60405161017492919061101f565b34801561034757600080fd5b506101af610356366004610f89565b6106b9565b34801561036757600080fd5b506101af610757565b34801561037c57600080fd5b5060035461028c906001600160a01b031681565b34801561039c57600080fd5b506001546001600160a01b031661028c565b3480156103ba57600080fd5b506000546001600160a01b0316155b6040519015158152602001610174565b3480156103e557600080fd5b5061028c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041957600080fd5b506103c9610428366004610f89565b6107c7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104995760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104a382826107d8565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516104d69392919061103a565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105435760405162461bcd60e51b81526004016104909060208082526004908201526310a0a6a160e11b604082015260600190565b61054c81610815565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161057d929190611078565b60405180910390a150565b6000546001600160a01b031633146105b3576040516311a8a1bb60e31b815260040160405180910390fd5b6105bc81610958565b50565b6000546001600160a01b031633146105ea576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426105fc91906110b8565b1161061a576040516324e0285f60e21b815260040160405180910390fd5b60025460000361063d57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610667576040516323295ef960e01b815260040160405180910390fd5b61067160006109c1565b565b6000546001600160a01b0316331461069e576040516311a8a1bb60e31b815260040160405180910390fd5b6105bc81610a26565b600060606106b483610815565b915091565b6000546001600160a01b031633146106e4576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610702575060025415155b15610720576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361074e57604051634a2fb73f60e11b815260040160405180910390fd5b6105bc81610a67565b6001546001600160a01b03163314610782576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261079491906110b8565b116107b2576040516324e0285f60e21b815260040160405180910390fd5b600154610671906001600160a01b03166109c1565b60006107d282610ab5565b92915050565b600354610811907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03168484610ae1565b5050565b60035461082a906001600160a01b0316610ab5565b6108655760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606401610490565b80516020146108a05760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610490565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006108f9846110cb565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b5050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006107d27f000000000000000000000000000000000000000000000000000000000000000083610ce1565b8151602014610b215760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610490565b805115610b5f5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610490565b6000610b6a34610e1a565b6040516366c96b3760e01b8152606060048201526000606482018190527f00000000000000000000000000000000000000000000000000000000000000006024830152602060448301529192506001600160a01b038716906366c96b3790608401602060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c91906110f2565b9050610c1982600161110b565b8110610c4f5760405162461bcd60e51b8152602060048201526005602482015264216665657360d81b6044820152606401610490565b60405163bd45c4e760e01b81526001600160a01b0387169063bd45c4e7908490610ca790899089906000907f00000000000000000000000000000000000000000000000000000000000000009060029060040161111e565b6000604051808303818588803b158015610cc057600080fd5b505af1158015610cd4573d6000803e3d6000fd5b5050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d475760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b6044820152606401610490565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610da8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcc919061115c565b5091509150836001600160a01b0316826001600160a01b0316148015610e1157507f000000000000000000000000000000000000000000000000000000000000000081145b95945050505050565b6000600454821115610e2c5760045491505b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e5757600080fd5b813567ffffffffffffffff80821115610e7257610e72610e30565b604051601f8301601f19908116603f01168101908282118183101715610e9a57610e9a610e30565b81604052838152866020858801011115610eb357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610ee657600080fd5b823567ffffffffffffffff80821115610efe57600080fd5b610f0a86838701610e46565b93506020850135915080821115610f2057600080fd5b50610f2d85828601610e46565b9150509250929050565b600060208284031215610f4957600080fd5b813567ffffffffffffffff811115610f6057600080fd5b610f6c84828501610e46565b949350505050565b6001600160a01b03811681146105bc57600080fd5b600060208284031215610f9b57600080fd5b8135610fa681610f74565b9392505050565b6000815180845260005b81811015610fd357602081850181015186830182015201610fb7565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610fa66020830184610fad565b60006020828403121561101857600080fd5b5035919050565b8215158152604060208201526000610f6c6040830184610fad565b60608152600061104d6060830186610fad565b828103602084015261105f8186610fad565b91505060018060a01b0383166040830152949350505050565b60408152600061108b6040830185610fad565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156107d2576107d26110a2565b805160208083015191908110156110ec576000198160200360031b1b821691505b50919050565b60006020828403121561110457600080fd5b5051919050565b808201808211156107d2576107d26110a2565b600060018060a01b03808816835260a0602084015261114060a0840188610fad565b9516604083015250606081019290925260809091015292915050565b60008060006060848603121561117157600080fd5b835161117c81610f74565b60208501516040909501519096949550939250505056fea2646970667358221220a21bd02f4154d48151399c711f33fed873dbb0d6f21acc7e4c64d7925fdc815c64736f6c63430008110033";

type MultichainHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainHubConnector__factory extends ContractFactory {
  constructor(...args: MultichainHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorChainId,
      _gasCap,
      overrides || {}
    ) as Promise<MultichainHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorChainId,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): MultichainHubConnector {
    return super.attach(address) as MultichainHubConnector;
  }
  override connect(signer: Signer): MultichainHubConnector__factory {
    return super.connect(signer) as MultichainHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainHubConnectorInterface {
    return new utils.Interface(_abi) as MultichainHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainHubConnector;
  }
}
