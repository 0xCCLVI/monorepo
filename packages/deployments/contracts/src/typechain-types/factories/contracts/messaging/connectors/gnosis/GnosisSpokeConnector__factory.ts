/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GnosisSpokeConnector,
  GnosisSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/gnosis/GnosisSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620039d1380380620039d18339810160408190526200003591620003ff565b80808c8c8c8c8c8c8c8c8c8c808a8a8a8a8a6200005233620002c4565b8463ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012157620001218162000323565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002385760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b0382166200028b5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b506001600160a01b03166101005260065550620002b19550869450506200038c92505050565b50505050505050505050505050620004be565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600d5460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600d55565b805163ffffffff81168114620003e257600080fd5b919050565b80516001600160a01b0381168114620003e257600080fd5b60008060008060008060008060008060006101608c8e0312156200042257600080fd5b6200042d8c620003cd565b9a506200043d60208d01620003cd565b99506200044d60408d01620003e7565b98506200045d60608d01620003e7565b97506200046d60808d01620003e7565b965060a08c0151955060c08c0151945060e08c01519350620004936101008d01620003e7565b9250620004a46101208d01620003e7565b91506101408c015190509295989b509295989b9093969950565b60805160a05160c05160e05161010051610120516101405161345d62000574600039600081816102ee0152611c0e01526000818161085b01528181611c2f0152611cb60152600081816106b80152818161093e01528181610df501526115230152600061027e015260006104f601526000818161082701528181610a720152818161168f0152818161186e01526120a3015260008181610483015281816105f4015281816114d40152611b10015261345d6000f3fe6080604052600436106102605760003560e01c80637850b02011610144578063b697f531116100b6578063d232c2201161007a578063d232c220146107d6578063d2a3cc71146107f5578063d69f9d6114610815578063d88beda214610849578063db1b76591461087d578063fa31de011461089d57600080fd5b8063b697f53114610730578063b95a200114610750578063c5b350df14610783578063cc39428314610798578063d1851c92146107b857600080fd5b80639d3117c7116101085780639d3117c7146106665780639fa92f9d14610693578063a01892a5146106a6578063ad9c0c2e146106da578063b1f8100d146106f0578063b2f876431461071057600080fd5b80637850b020146105b05780638456cb59146105d05780638d3638f4146105e55780638da5cb5b1461061857806398c9f2b91461063657600080fd5b8063508a109b116101dd5780635f61e3ec116101a15780635f61e3ec146104e457806365eaf11b1461053057806368742da6146105455780636a42b8f8146105655780636b04a9331461057b578063715018a61461059b57600080fd5b8063508a109b146104285780635190bc531461044857806352a9674b146104715780635bd11efc146104a55780635c975abb146104c557600080fd5b80632bbd59ca116102245780632bbd59ca14610371578063301f07c3146103ae5780633cf52ffb146103de5780633f4ba83a146103f35780634ff746f61461040857600080fd5b8063141684161461026c5780631eeaabea146102ba57806325e3beda146102dc578063272efc691461031e5780632bb1ae7c1461035e57600080fd5b3661026757005b600080fd5b34801561027857600080fd5b506102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102c657600080fd5b506102da6102d5366004612d04565b6108bd565b005b3480156102e857600080fd5b506103107f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b34801561032a57600080fd5b5061034e610339366004612d32565b600a6020526000908152604090205460ff1681565b60405190151581526020016102b1565b6102da61036c366004612df2565b610932565b34801561037d57600080fd5b506103a161038c366004612d04565b600c6020526000908152604090205460ff1681565b6040516102b19190612e3d565b3480156103ba57600080fd5b5061034e6103c9366004612d04565b60086020526000908152604090205460ff1681565b3480156103ea57600080fd5b50600254610310565b3480156103ff57600080fd5b506102da610a2a565b34801561041457600080fd5b506102da610423366004612df2565b610a67565b34801561043457600080fd5b506102da610443366004612e65565b610b0d565b34801561045457600080fd5b5061034e610463366004612d32565b6001600160a01b0316301490565b34801561047d57600080fd5b506102a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104b157600080fd5b506102da6104c0366004612d32565b610dba565b3480156104d157600080fd5b50600354600160a01b900460ff1661034e565b3480156104f057600080fd5b506105187f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b34801561053c57600080fd5b50610310610df1565b34801561055157600080fd5b506102da610560366004612d32565b610e7a565b34801561057157600080fd5b5062093a80610310565b34801561058757600080fd5b506102da610596366004612d04565b610ef7565b3480156105a757600080fd5b506102da610fc2565b3480156105bc57600080fd5b506102da6105cb366004612d04565b61107f565b3480156105dc57600080fd5b506102da6110b3565b3480156105f157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102a0565b34801561062457600080fd5b506000546001600160a01b0316610518565b34801561064257600080fd5b5061034e610651366004612d04565b60096020526000908152604090205460ff1681565b34801561067257600080fd5b50610310610681366004612d04565b60076020526000908152604090205481565b34801561069f57600080fd5b5030610518565b3480156106b257600080fd5b506105187f000000000000000000000000000000000000000000000000000000000000000081565b3480156106e657600080fd5b5061031060065481565b3480156106fc57600080fd5b506102da61070b366004612d32565b611167565b34801561071c57600080fd5b506102da61072b366004612d32565b61120c565b34801561073c57600080fd5b506102da61074b366004612d32565b611288565b34801561075c57600080fd5b506102a061076b366004612f1a565b600b6020526000908152604090205463ffffffff1681565b34801561078f57600080fd5b506102da611307565b3480156107a457600080fd5b50600354610518906001600160a01b031681565b3480156107c457600080fd5b506001546001600160a01b0316610518565b3480156107e257600080fd5b506000546001600160a01b03161561034e565b34801561080157600080fd5b506102da610810366004612d32565b611362565b34801561082157600080fd5b506105187f000000000000000000000000000000000000000000000000000000000000000081565b34801561085557600080fd5b506103107f000000000000000000000000000000000000000000000000000000000000000081565b34801561088957600080fd5b5061034e610898366004612d32565b611424565b3480156108a957600080fd5b506103106108b8366004612f35565b611435565b6000546001600160a01b031633146108e8576040516311a8a1bb60e31b815260040160405180910390fd5b600654810361092d5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b61093a6115f2565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be9190612f8c565b6040516020016109d091815260200190565b60405160208183030381529060405290506109eb818361163f565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077818333604051610a1e93929190612ffd565b60405180910390a15050565b6000546001600160a01b03163314610a55576040516311a8a1bb60e31b815260040160405180910390fd5b610a5d611772565b610a656117c2565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ac85760405162461bcd60e51b81526004016109249060208082526004908201526310a0a6a160e11b604082015260600190565b610ad181611817565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610b0292919061303b565b60405180910390a150565b610b156115f2565b83610b4c5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610924565b600085856000818110610b6157610b61613065565b9050602002810190610b73919061307b565b610b7d908061309c565b604051610b8b9291906130ea565b604051809103902090506000610bf28288886000818110610bae57610bae613065565b9050602002810190610bc0919061307b565b60200189896000818110610bd657610bd6613065565b9050602002810190610be8919061307b565b6104200135611940565b9050610c00818686866119e5565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610d245787878263ffffffff16818110610c4357610c43613065565b9050602002810190610c55919061307b565b610c5f908061309c565b604051610c6d9291906130ea565b604051809103902092506000610cc2848a8a8563ffffffff16818110610c9557610c95613065565b9050602002810190610ca7919061307b565b6020018b8b8663ffffffff16818110610bd657610bd6613065565b9050828114610d015760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610924565b506000838152600c60205260409020805460ff1916600190811790915501610c1d565b5060005b63ffffffff8116871115610db057610da788888363ffffffff16818110610d5157610d51613065565b9050602002810190610d63919061307b565b610d6d908061309c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611aa292505050565b50600101610d28565b5050505050505050565b6000546001600160a01b03163314610de5576040516311a8a1bb60e31b815260040160405180910390fd5b610dee81611de9565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190612f8c565b905090565b6000546001600160a01b03163314610ea5576040516311a8a1bb60e31b815260040160405180910390fd5b47610eb08282611e52565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d82604051610eeb91815260200190565b60405180910390a25050565b6000546001600160a01b03163314610f22576040516311a8a1bb60e31b815260040160405180910390fd5b610f2a611772565b6000818152600760205260408120549003610f7f5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610924565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610b029083815260200190565b6000546001600160a01b03163314610fed576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361101057604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426110229190613110565b11611040576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561106a576040516323295ef960e01b815260040160405180910390fd5b600154610a65906001600160a01b0316611f6b565b6000546001600160a01b031633146110aa576040516311a8a1bb60e31b815260040160405180910390fd5b610dee81611fca565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111209190613127565b6111575760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610924565b61115f6115f2565b610a6561200b565b6000546001600160a01b03163314611192576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156111b757506001600160a01b03811615155b156111d5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361120357604051634a2fb73f60e11b815260040160405180910390fd5b610dee8161204e565b6000546001600160a01b03163314611237576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610b02565b6000546001600160a01b031633146112b3576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610b02565b6001546001600160a01b03163314611332576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426113449190613110565b1161106a5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461138d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036113eb5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610924565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610b02565b600061142f8261209c565b92915050565b336000908152600a602052604081205460ff166114835760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610924565b63ffffffff8085166000908152600b6020526040902054166114a6816001613149565b63ffffffff8681166000908152600b60205260408120805463ffffffff1916939092169290921790556114fd7f000000000000000000000000000000000000000000000000000000000000000033848989896120c8565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115979190613171565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836115c9600184613110565b84876040516115db9493929190613195565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610a655760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610924565b805160201461167f5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610924565b6003546040516001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263dc8601b3929116906327fba37b60e11b906116d19087906024016131ba565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261170c85612100565b6040518463ffffffff1660e01b815260040161172a939291906131cd565b6020604051808303816000875af1158015611749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176d9190612f8c565b505050565b600354600160a01b900460ff16610a655760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610924565b6117ca611772565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035461182c906001600160a01b031661209c565b61186b5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610924565b467f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b07506116040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190612f8c565b1461192f5760405162461bcd60e51b815260206004820152601160248201527010b232b9ba34b730ba34b7b721b430b4b760791b6044820152606401610924565b610dee61193b82613201565b61215e565b6000806000858152600c602052604090205460ff16600281111561196657611966612e27565b146119a95760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610924565b6119dd8484602080602002604051908101604052809291908260208002808284376000920191909152508691506122879050565b949350505050565b60008481526009602052604090205460ff16611a9c57611a048361232d565b6000611a3a8584602080602002604051908101604052809291908260208002808284376000920191909152508691506122879050565b9050838114611a815760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610924565b506000848152600960205260409020805460ff191660011790555b50505050565b6000600260055403611af65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610924565b60026005556000611b07838261241f565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611b3f62ffffff198316612443565b63ffffffff1614611b815760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610924565b6000611b9262ffffff198316612458565b905060016000828152600c602052604090205460ff166002811115611bb957611bb9612e27565b14611bf05760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610924565b6000818152600c60205260409020805460ff19166002179055611c537f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613225565b5a1015611c8b5760405162461bcd60e51b8152600401610924906020808252600490820152632167617360e01b604082015260600190565b6000611c9c62ffffff1984166124a1565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611cf962ffffff1989166124b2565b611d0862ffffff198a166124c6565b611d1762ffffff198b166124db565b611d34611d2962ffffff198d166124f0565b62ffffff191661251e565b604051602401611d47949392919061323d565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611d90578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611dce9392919061326c565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611ea25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610924565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611eef576040519150601f19603f3d011682016040523d82523d6000602084013e611ef4565b606091505b505090508061176d5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610924565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600d5460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600d55565b6120136115f2565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117fa3390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600061142f7f000000000000000000000000000000000000000000000000000000000000000083612567565b60608686868686866040516020016120e59695949392919061328d565b60405160208183030381529060405290509695505050505050565b600081516020146121425760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610924565b61142f828060200190518101906121599190612f8c565b612628565b8061219c5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610924565b600081815260076020526040902054156121ef5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610924565b60008181526008602052604090205460ff16156122445760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610924565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610b029083815260200190565b8260005b602081101561232557600183821c1660008583602081106122ae576122ae613065565b60200201519050816001036122ee57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061231b565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505060010161228b565b509392505050565b60008181526008602052604090205460ff16156123475750565b6000818152600760205260408120549081900361239d5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610924565b6006546123aa8243613110565b10156123f85760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610924565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b81516000906020840161243a64ffffffffff8516828461263e565b95945050505050565b600061142f62ffffff19831660286004612685565b60008061246e8360781c6001600160601b031690565b6001600160601b03169050600061248e8460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061142f6124af836126b5565b90565b600061142f62ffffff198316826004612685565b600061142f62ffffff19831660246004612685565b600061142f62ffffff198316600460206126c6565b600061142f604c61250e81601886901c6001600160601b0316613110565b62ffffff19851691906000612822565b60606000806125368460181c6001600160601b031690565b6001600160601b031690506040519150819250612556848360200161289c565b508181016020016040529052919050565b6000336001600160a01b038416146125ab5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610924565b816001600160a01b0316836001600160a01b031663d67bdd256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261791906132e7565b6001600160a01b0316149392505050565b6000600d5482111561263a57600d5491505b5090565b60008061264b8385613225565b905060405181111561265b575060005b806000036126705762ffffff199150506115eb565b5050606092831b9190911790911b1760181b90565b6000612692826020613304565b61269d906008613327565b60ff166126ab8585856126c6565b901c949350505050565b600061142f62ffffff198316602c60205b60008160ff166000036126db575060006115eb565b6126ee8460181c6001600160601b031690565b6001600160601b031661270460ff841685613225565b11156127685761274f6127208560781c6001600160601b031690565b6001600160601b031661273c8660181c6001600160601b031690565b6001600160601b0316858560ff166129f3565b60405162461bcd60e51b815260040161092491906131ba565b60208260ff1611156127e25760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610924565b6008820260006127fb8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806128388660781c6001600160601b031690565b6001600160601b0316905061284c86612a61565b846128578784613225565b6128619190613225565b11156128745762ffffff199150506119dd565b61287e8582613225565b90506128928364ffffffffff16828661263e565b9695505050505050565b600062ffffff19808416036129045760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610924565b61290d83612a9a565b61296d5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610924565b60006129828460181c6001600160601b031690565b6001600160601b0316905060006129a28560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156129c25760206060fd5b8285848460045afa506128926129d88760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b60606000612a0086612ad7565b9150506000612a0e86612ad7565b9150506000612a1c86612ad7565b9150506000612a2a86612ad7565b91505083838383604051602001612a449493929190613350565b604051602081830303815290604052945050505050949350505050565b6000612a768260181c6001600160601b031690565b612a898360781c6001600160601b031690565b016001600160601b03169050919050565b6000612aa68260d81c90565b64ffffffffff1664ffffffffff03612ac057506000919050565b6000612acb83612a61565b60405110199392505050565b600080601f5b600f8160ff161115612b2c576000612af6826008613327565b60ff1685901c9050612b0781612b85565b61ffff16841793508160ff16601014612b2257601084901b93505b5060001901612add565b50600f5b60ff8160ff161015612b7f576000612b49826008613327565b60ff1685901c9050612b5a81612b85565b61ffff16831792508160ff16600014612b7557601083901b92505b5060001901612b30565b50915091565b6000612b9760048360ff16901c612bb7565b60ff1661ffff919091161760081b612bae82612bb7565b60ff1617919050565b600060f08083179060ff82169003612bd25750603092915050565b8060ff1660f103612be65750603192915050565b8060ff1660f203612bfa5750603292915050565b8060ff1660f303612c0e5750603392915050565b8060ff1660f403612c225750603492915050565b8060ff1660f503612c365750603592915050565b8060ff1660f603612c4a5750603692915050565b8060ff1660f703612c5e5750603792915050565b8060ff1660f803612c725750603892915050565b8060ff1660f903612c865750603992915050565b8060ff1660fa03612c9a5750606192915050565b8060ff1660fb03612cae5750606292915050565b8060ff1660fc03612cc25750606392915050565b8060ff1660fd03612cd65750606492915050565b8060ff1660fe03612cea5750606592915050565b8060ff1660ff03612cfe5750606692915050565b50919050565b600060208284031215612d1657600080fd5b5035919050565b6001600160a01b0381168114610dee57600080fd5b600060208284031215612d4457600080fd5b81356115eb81612d1d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612d7657600080fd5b813567ffffffffffffffff80821115612d9157612d91612d4f565b604051601f8301601f19908116603f01168101908282118183101715612db957612db9612d4f565b81604052838152866020858801011115612dd257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612e0457600080fd5b813567ffffffffffffffff811115612e1b57600080fd5b6119dd84828501612d65565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612e5f57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612e7e57600080fd5b853567ffffffffffffffff80821115612e9657600080fd5b818801915088601f830112612eaa57600080fd5b813581811115612eb957600080fd5b8960208260051b8501011115612ece57600080fd5b602092830197509550508601359250610440860187811115612eef57600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612f1557600080fd5b919050565b600060208284031215612f2c57600080fd5b6115eb82612f01565b600080600060608486031215612f4a57600080fd5b612f5384612f01565b925060208401359150604084013567ffffffffffffffff811115612f7657600080fd5b612f8286828701612d65565b9150509250925092565b600060208284031215612f9e57600080fd5b5051919050565b60005b83811015612fc0578181015183820152602001612fa8565b83811115611a9c5750506000910152565b60008151808452612fe9816020860160208601612fa5565b601f01601f19169290920160200192915050565b6060815260006130106060830186612fd1565b82810360208401526130228186612fd1565b91505060018060a01b0383166040830152949350505050565b60408152600061304e6040830185612fd1565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261309257600080fd5b9190910192915050565b6000808335601e198436030181126130b357600080fd5b83018035915067ffffffffffffffff8211156130ce57600080fd5b6020019150368190038213156130e357600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015613122576131226130fa565b500390565b60006020828403121561313957600080fd5b815180151581146115eb57600080fd5b600063ffffffff808316818516808303821115613168576131686130fa565b01949350505050565b6000806040838503121561318457600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006128926080830184612fd1565b6020815260006115eb6020830184612fd1565b6001600160a01b03841681526060602082018190526000906131f190830185612fd1565b9050826040830152949350505050565b80516020808301519190811015612cfe5760001960209190910360031b1b16919050565b60008219821115613238576132386130fa565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526128926080830184612fd1565b838152821515602082015260606040820152600061243a6060830184612fd1565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516132d581604c850160208701612fa5565b91909101604c01979650505050505050565b6000602082840312156132f957600080fd5b81516115eb81612d1d565b600060ff821660ff84168082101561331e5761331e6130fa565b90039392505050565b600060ff821660ff84168160ff0481118215151615613348576133486130fa565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161289256fea26469706673582212202f7d036bee261552624b39edcbc520f2f263f1c0001893b49d432fd0fc66aedc64736f6c634300080f0033";

type GnosisSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisSpokeConnector__factory extends ContractFactory {
  constructor(...args: GnosisSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    ) as Promise<GnosisSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): GnosisSpokeConnector {
    return super.attach(address) as GnosisSpokeConnector;
  }
  override connect(signer: Signer): GnosisSpokeConnector__factory {
    return super.connect(signer) as GnosisSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisSpokeConnectorInterface {
    return new utils.Interface(_abi) as GnosisSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GnosisSpokeConnector;
  }
}
