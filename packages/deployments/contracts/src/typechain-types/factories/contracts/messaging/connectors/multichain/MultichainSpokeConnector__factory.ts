/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162003d8438038062003d848339810160408190526200003591620004ff565b898282808f8f858f8f8f8f8f8f8f808a8a8a8a8a6200005433620003be565b8463ffffffff166000036200009f5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000eb5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000096565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012357620001238162000423565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f75760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000096565b613a988410156200023a5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000096565b6101208590526101408490526001600160a01b0382166200028d5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000096565b506001600160a01b03166101005260085550620002b39550869450506200048c92505050565b5081600003620002f75760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000096565b826001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035c9190620005c7565b6001600160a01b0316610160819052620003a55760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000096565b506101805250620005ec9b505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b805163ffffffff81168114620004e257600080fd5b919050565b80516001600160a01b0381168114620004e257600080fd5b6000806000806000806000806000806000806101808d8f0312156200052357600080fd5b6200052e8d620004cd565b9b506200053e60208e01620004cd565b9a506200054e60408e01620004e7565b99506200055e60608e01620004e7565b98506200056e60808e01620004e7565b975060a08d0151965060c08d0151955060e08d01519450620005946101008e01620004e7565b9350620005a56101208e01620004e7565b92506101408d015191506101608d015190509295989b509295989b509295989b565b600060208284031215620005da57600080fd5b620005e582620004e7565b9392505050565b60805160a05160c05160e05161010051610120516101405161016051610180516136c5620006bf600039600081816122570152818161234a0152612c1a01526000612b770152600081816103400152611c5101526000818161095701528181611c720152611cf601526000818161077e01528181610a9101528181610fd101526116e4015260006102d00152600061055e01526000818161090d01528181610c390152818161180901526120d40152600081816104a50152818161068c015281816116860152611b5301526136c56000f3fe6080604052600436106102b25760003560e01c80638456cb5911610175578063b697f531116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610945578063db1b765914610979578063e0fed01014610999578063fa31de01146109b957600080fd5b8063d2a3cc71146108db578063d69f9d61146108fb578063d7d317b31461092f57600080fd5b8063b697f53114610816578063b95a200114610836578063c5b350df14610869578063cc3942831461087e578063d1851c921461089e578063d232c220146108bc57600080fd5b80639fa92f9d1161012e5780639fa92f9d14610759578063a01892a51461076c578063a792c29b146107a0578063ad9c0c2e146107c0578063b1f8100d146107d6578063b2f87643146107f657600080fd5b80638456cb59146106685780638d3638f41461067d5780638da5cb5b146106b057806398c9f2b9146106ce5780639abaf479146106fe5780639d3117c71461072c57600080fd5b8063572386ca1161021957806365eaf11b116101d257806365eaf11b146105c857806368742da6146105dd5780636a42b8f8146105fd5780636b04a93314610613578063715018a6146106335780637850b0201461064857600080fd5b8063572386ca146104c7578063579c1618146104f75780635bd11efc1461050d5780635c975abb1461052d5780635f61e3ec1461054c5780636159ada11461059857600080fd5b80633cf52ffb1161026b5780633cf52ffb146104005780633f4ba83a146104155780634ff746f61461042a578063508a109b1461044a5780635190bc531461046a57806352a9674b1461049357600080fd5b806314168416146102be5780631eeaabea1461030c57806325e3beda1461032e5780632bb1ae7c146103705780632bbd59ca14610383578063301f07c3146103c057600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561031857600080fd5b5061032c61032736600461303a565b6109d9565b005b34801561033a57600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610303565b61032c61037e3660046130f6565b610a4e565b34801561038f57600080fd5b506103b361039e36600461303a565b600f6020526000908152604090205460ff1681565b6040516103039190613141565b3480156103cc57600080fd5b506103f06103db36600461303a565b600a6020526000908152604090205460ff1681565b6040519015158152602001610303565b34801561040c57600080fd5b50600254610362565b34801561042157600080fd5b5061032c610bf1565b34801561043657600080fd5b5061032c6104453660046130f6565b610c2e565b34801561045657600080fd5b5061032c610465366004613169565b610cd4565b34801561047657600080fd5b506103f061048536600461321a565b6001600160a01b0316301490565b34801561049f57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d357600080fd5b506103f06104e236600461303a565b600c6020526000908152604090205460ff1681565b34801561050357600080fd5b5061036260055481565b34801561051957600080fd5b5061032c61052836600461321a565b610f96565b34801561053957600080fd5b50600354600160a01b900460ff166103f0565b34801561055857600080fd5b506105807f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610303565b3480156105a457600080fd5b506103f06105b336600461321a565b600d6020526000908152604090205460ff1681565b3480156105d457600080fd5b50610362610fcd565b3480156105e957600080fd5b5061032c6105f836600461321a565b611056565b34801561060957600080fd5b5062093a80610362565b34801561061f57600080fd5b5061032c61062e36600461303a565b6110d3565b34801561063f57600080fd5b5061032c61119e565b34801561065457600080fd5b5061032c61066336600461303a565b6111c9565b34801561067457600080fd5b5061032c6111fd565b34801561068957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102f2565b3480156106bc57600080fd5b506000546001600160a01b0316610580565b3480156106da57600080fd5b506103f06106e936600461303a565b600b6020526000908152604090205460ff1681565b34801561070a57600080fd5b5061071e6107193660046130f6565b6112b1565b604051610303929190613287565b34801561073857600080fd5b5061036261074736600461303a565b60096020526000908152604090205481565b34801561076557600080fd5b5030610580565b34801561077857600080fd5b506105807f000000000000000000000000000000000000000000000000000000000000000081565b3480156107ac57600080fd5b50600454610580906001600160a01b031681565b3480156107cc57600080fd5b5061036260085481565b3480156107e257600080fd5b5061032c6107f136600461321a565b6112c3565b34801561080257600080fd5b5061032c61081136600461321a565b611361565b34801561082257600080fd5b5061032c61083136600461321a565b6113dd565b34801561084257600080fd5b506102f26108513660046132bb565b600e6020526000908152604090205463ffffffff1681565b34801561087557600080fd5b5061032c61145c565b34801561088a57600080fd5b50600354610580906001600160a01b031681565b3480156108aa57600080fd5b506001546001600160a01b0316610580565b3480156108c857600080fd5b506000546001600160a01b0316156103f0565b3480156108e757600080fd5b5061032c6108f636600461321a565b6114cc565b34801561090757600080fd5b506105807f000000000000000000000000000000000000000000000000000000000000000081565b34801561093b57600080fd5b5061036260065481565b34801561095157600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b34801561098557600080fd5b506103f061099436600461321a565b6115a3565b3480156109a557600080fd5b5061032c6109b436600461303a565b6115b4565b3480156109c557600080fd5b506103626109d43660046132d6565b6115e8565b6000546001600160a01b03163314610a04576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a495760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b610a566117b3565b43600554600654610a679190613343565b1115610a86576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190613356565b6000818152600c602052604090205490915060ff1615610b675760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a40565b600081604051602001610b7c91815260200190565b6040516020818303038152906040529050610b978184611800565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610be49083908690339061336f565b60405180910390a1505050565b6000546001600160a01b03163314610c1c576040516311a8a1bb60e31b815260040160405180910390fd5b610c2461183d565b610c2c61188d565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c8f5760405162461bcd60e51b8152600401610a409060208082526004908201526310a0a6a160e11b604082015260600190565b610c98816118e2565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610cc99291906133ad565b60405180910390a150565b610cdc6117b3565b610ce4611982565b83610d1b5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a40565b600085856000818110610d3057610d306133d7565b9050602002810190610d4291906133ed565b610d4c908061340e565b604051610d5a92919061345c565b604051809103902090506000610dc18288886000818110610d7d57610d7d6133d7565b9050602002810190610d8f91906133ed565b60200189896000818110610da557610da56133d7565b9050602002810190610db791906133ed565b61042001356119db565b9050610dcf81868686611a80565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610ef55788888263ffffffff16818110610e1457610e146133d7565b9050602002810190610e2691906133ed565b610e30908061340e565b604051610e3e92919061345c565b604051809103902093506000610e93858b8b8563ffffffff16818110610e6657610e666133d7565b9050602002810190610e7891906133ed565b6020018c8c8663ffffffff16818110610da557610da56133d7565b9050838114610ed25760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a40565b506000848152600f60205260409020805460ff1916600190811790915501610dee565b5060005b818163ffffffff161015610f8157610f7889898363ffffffff16818110610f2257610f226133d7565b9050602002810190610f3491906133ed565b610f3e908061340e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b3d92505050565b50600101610ef9565b50505050610f8f6001600755565b5050505050565b6000546001600160a01b03163314610fc1576040516311a8a1bb60e31b815260040160405180910390fd5b610fca81611e0f565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561102d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110519190613356565b905090565b6000546001600160a01b03163314611081576040516311a8a1bb60e31b815260040160405180910390fd5b4761108c8282611e78565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516110c791815260200190565b60405180910390a25050565b6000546001600160a01b031633146110fe576040516311a8a1bb60e31b815260040160405180910390fd5b61110661183d565b600081815260096020526040812054900361115b5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a40565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610cc99083815260200190565b6000546001600160a01b03163314610c2c576040516311a8a1bb60e31b815260040160405180910390fd5b6000546001600160a01b031633146111f4576040516311a8a1bb60e31b815260040160405180910390fd5b610fca81611f96565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015611246573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126a919061346c565b6112a15760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a40565b6112a96117b3565b610c2c611fd7565b600060606112be836118e2565b915091565b6000546001600160a01b031633146112ee576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561130c575060025415155b1561132a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361135857604051634a2fb73f60e11b815260040160405180910390fd5b610fca8161201a565b6000546001600160a01b0316331461138c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610cc9565b6000546001600160a01b03163314611408576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610cc9565b6001546001600160a01b03163314611487576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442611499919061348e565b116114b7576040516324e0285f60e21b815260040160405180910390fd5b600154610c2c906001600160a01b0316612068565b6000546001600160a01b031633146114f7576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115555760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a40565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610cc9565b60006115ae826120cd565b92915050565b6000546001600160a01b031633146115df576040516311a8a1bb60e31b815260040160405180910390fd5b610fca816120f9565b336000908152600d602052604081205460ff166116365760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a40565b63ffffffff8085166000908152600e602052604081208054919291909116908261165f836134a1565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006116be7f00000000000000000000000000000000000000000000000000000000000000006116b5336001600160a01b031690565b84898989612177565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611734573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175891906134c4565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361178a60018461348e565b848760405161179c94939291906134e8565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610c2c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a40565b600354611839907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b031684846121af565b5050565b600354600160a01b900460ff16610c2c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a40565b61189561183d565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6003546118f7906001600160a01b03166120cd565b6119365760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610a40565b80516020146119715760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a40565b610fca61197d8261350d565b6123af565b6002600754036119d45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a40565b6002600755565b6000806000858152600f602052604090205460ff166002811115611a0157611a0161312b565b14611a445760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a40565b611a788484602080602002604051908101604052809291908260208002808284376000920191909152508691506124d89050565b949350505050565b6000848152600b602052604090205460ff16611b3757611a9f83612826565b6000611ad58584602080602002604051908101604052809291908260208002808284376000920191909152508691506124d89050565b9050838114611b1c5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a40565b506000848152600b60205260409020805460ff191660011790555b50505050565b600080611b4a838261295b565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611b8262ffffff19831661297f565b63ffffffff1614611bc45760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a40565b6000611bd562ffffff198316612994565b905060016000828152600f602052604090205460ff166002811115611bfc57611bfc61312b565b14611c335760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a40565b6000818152600f60205260409020805460ff19166002179055611c967f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613343565b5a1015611cce5760405162461bcd60e51b8152600401610a40906020808252600490820152632167617360e01b604082015260600190565b6000611cdf62ffffff1984166129dd565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611d3a62ffffff1988166129ee565b611d4962ffffff198916612a02565b611d5862ffffff198a16612a17565b611d75611d6a62ffffff198c16612a2c565b62ffffff1916612a5a565b604051602401611d889493929190613534565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611dc2858560008685612aa3565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611dfb9088908b908690613563565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611ec85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a40565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611f15576040519150601f19603f3d011682016040523d82523d6000602084013e611f1a565b606091505b5050905080611f915760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a40565b505050565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b611fdf6117b3565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118c53390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006115ae7f000000000000000000000000000000000000000000000000000000000000000083612b2e565b600554810361213c5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a40565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610cc9565b606086868686868660405160200161219496959493929190613584565b60405160208183030381529060405290509695505050505050565b81516020146121ef5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a40565b80511561222d5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a40565b600061223834612c42565b6040516366c96b3760e01b8152606060048201526000606482018190527f00000000000000000000000000000000000000000000000000000000000000006024830152602060448301529192506001600160a01b038716906366c96b3790608401602060405180830381865afa1580156122b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122da9190613356565b90506122e7826001613343565b811061231d5760405162461bcd60e51b8152602060048201526005602482015264216665657360d81b6044820152606401610a40565b60405163bd45c4e760e01b81526001600160a01b0387169063bd45c4e790849061237590899089906000907f0000000000000000000000000000000000000000000000000000000000000000906002906004016135de565b6000604051808303818588803b15801561238e57600080fd5b505af11580156123a2573d6000803e3d6000fd5b5050505050505050505050565b806123ed5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a40565b600081815260096020526040902054156124405760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a40565b6000818152600a602052604090205460ff16156124955760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a40565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610cc99083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806128695760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a40565b6000818152600a602052604090205460ff16156128835750565b600081815260096020526040812054908190036128d95760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a40565b6008546128e6824361348e565b10156129345760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a40565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b81516000906020840161297664ffffffffff85168284612c58565b95945050505050565b60006115ae62ffffff19831660286004612c95565b6000806129aa8360781c6001600160601b031690565b6001600160601b0316905060006129ca8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115ae6129eb83612cc5565b90565b60006115ae62ffffff198316826004612c95565b60006115ae62ffffff19831660246004612c95565b60006115ae62ffffff19831660046020612cd6565b60006115ae604c612a4a81601886901c6001600160601b031661348e565b62ffffff19851691906000612de1565b6060600080612a728460181c6001600160601b031690565b6001600160601b031690506040519150819250612a928483602001612e5b565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612ac957612ac9613053565b6040519080825280601f01601f191660200182016040528015612af3576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612b14578692505b828152826000602083013e90999098509650505050505050565b6000336001600160a01b03841614612b725760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610a40565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bf7919061361c565b5091509150836001600160a01b0316826001600160a01b031614801561297657507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b6000601054821115612c545760105491505b5090565b600080612c658385613343565b9050604051811115612c75575060005b80600003612c8a5762ffffff199150506117ac565b612976858585612f4e565b6000612ca2826020613653565b612cad90600861366c565b60ff16612cbb858585612cd6565b901c949350505050565b60006115ae62ffffff198316602c60205b60008160ff16600003612ceb575060006117ac565b612cfe8460181c6001600160601b031690565b6001600160601b0316612d1460ff841685613343565b1115612d7c57612d2d8460781c6001600160601b031690565b612d408560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a40565b60208260ff161115612da15760405163045df3f960e01b815260040160405180910390fd5b600882026000612dba8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612df78660781c6001600160601b031690565b6001600160601b03169050612e0b86612fc5565b84612e168784613343565b612e209190613343565b1115612e335762ffffff19915050611a78565b612e3d8582613343565b9050612e518364ffffffffff168286612c58565b9695505050505050565b600062ffffff1980841603612e835760405163148d513360e21b815260040160405180910390fd5b612e8c83612ffe565b15612eaa57604051632ee0949160e11b815260040160405180910390fd5b6000612ebf8460181c6001600160601b031690565b6001600160601b031690506000612edf8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612f005760206060fd5b8386858560045afa905080612f2857604051632af1bd9b60e21b815260040160405180910390fd5b612f43612f358860d81c90565b64ffffffffff168786612f4e565b979650505050505050565b60006060601883856001600160601b03821682148015612f76575086816001600160601b0316145b612faf5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a40565b96831b90961790911b90941790931b9392505050565b6000612fda8260181c6001600160601b031690565b612fed8360781c6001600160601b031690565b016001600160601b03169050919050565b600061300a8260d81c90565b64ffffffffff1664ffffffffff0361302457506001919050565b600061302f83612fc5565b604051109392505050565b60006020828403121561304c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261307a57600080fd5b813567ffffffffffffffff8082111561309557613095613053565b604051601f8301601f19908116603f011681019082821181831017156130bd576130bd613053565b816040528381528660208588010111156130d657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561310857600080fd5b813567ffffffffffffffff81111561311f57600080fd5b611a7884828501613069565b634e487b7160e01b600052602160045260246000fd5b602081016003831061316357634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561318257600080fd5b853567ffffffffffffffff8082111561319a57600080fd5b818801915088601f8301126131ae57600080fd5b8135818111156131bd57600080fd5b8960208260051b85010111156131d257600080fd5b6020928301975095505086013592506104408601878111156131f357600080fd5b94979396509194604001933592915050565b6001600160a01b0381168114610fca57600080fd5b60006020828403121561322c57600080fd5b81356117ac81613205565b60005b8381101561325257818101518382015260200161323a565b50506000910152565b60008151808452613273816020860160208601613237565b601f01601f19169290920160200192915050565b8215158152604060208201526000611a78604083018461325b565b803563ffffffff811681146132b657600080fd5b919050565b6000602082840312156132cd57600080fd5b6117ac826132a2565b6000806000606084860312156132eb57600080fd5b6132f4846132a2565b925060208401359150604084013567ffffffffffffffff81111561331757600080fd5b61332386828701613069565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156115ae576115ae61332d565b60006020828403121561336857600080fd5b5051919050565b606081526000613382606083018661325b565b8281036020840152613394818661325b565b91505060018060a01b0383166040830152949350505050565b6040815260006133c0604083018561325b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261340457600080fd5b9190910192915050565b6000808335601e1984360301811261342557600080fd5b83018035915067ffffffffffffffff82111561344057600080fd5b60200191503681900382131561345557600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561347e57600080fd5b815180151581146117ac57600080fd5b818103818111156115ae576115ae61332d565b600063ffffffff8083168181036134ba576134ba61332d565b6001019392505050565b600080604083850312156134d757600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612e51608083018461325b565b8051602080830151919081101561352e576000198160200360031b1b821691505b50919050565b600063ffffffff808716835280861660208401525083604083015260806060830152612e51608083018461325b565b8381528215156020820152606060408201526000612976606083018461325b565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516135cc81604c850160208701613237565b91909101604c01979650505050505050565b600060018060a01b03808816835260a0602084015261360060a084018861325b565b9516604083015250606081019290925260809091015292915050565b60008060006060848603121561363157600080fd5b835161363c81613205565b602085015160409095015190969495509392505050565b60ff82811682821603908111156115ae576115ae61332d565b60ff81811683821602908116908181146136885761368861332d565b509291505056fea26469706673582212208943e2b0e893a8987fbed604bed6e017bac0d6b3229327ed9ad919cf92d4b14c64736f6c63430008110033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      _gasCap,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
