/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b50604051620035e5380380620035e58339810160408190526200003591620004a8565b88818c8c838c8c8c8c8c8c8c808a8a8a8a8a6200005233620003ae565b8463ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e052811615620001215762000121816200040d565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002385760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b0382166200028b5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b506001600160a01b03166101005260065550505060008590039350620002e9925050505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000094565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000328573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200034e919062000567565b6001600160a01b0316610160819052620003975760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000094565b61018052506200058c9a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200048b57600080fd5b919050565b80516001600160a01b03811681146200048b57600080fd5b60008060008060008060008060008060006101608c8e031215620004cb57600080fd5b620004d68c62000476565b9a50620004e660208d0162000476565b9950620004f660408d0162000490565b98506200050660608d0162000490565b97506200051660808d0162000490565b965060a08c0151955060c08c0151945060e08c015193506200053c6101008d0162000490565b92506200054d6101208d0162000490565b91506101408c015190509295989b509295989b9093969950565b6000602082840312156200057a57600080fd5b620005858262000490565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612f8d6200065860003960008181611bb20152612107015260006120640152600081816102be01526117ef01526000818161064501528181611810015261189701526000818161053e0152818161070e01528181610bc50152611254015260006102680152600061042a01526000818161061e01528181610842015281816113b30152611b2a0152600081816103de0152818161049a0152818161120501526116f10152612f8d6000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638d3638f411610146578063b697f531116100c3578063d232c22011610087578063d232c220146105f4578063d2a3cc7114610606578063d69f9d6114610619578063d88beda214610640578063db1b765914610667578063fa31de011461067a57600080fd5b8063b697f5311461058f578063b95a2001146105a2578063c5b350df146105c8578063cc394283146105d0578063d1851c92146105e357600080fd5b80639fa92f9d1161010a5780639fa92f9d14610533578063a01892a514610539578063ad9c0c2e14610560578063b1f8100d14610569578063b2f876431461057c57600080fd5b80638d3638f4146104985780638da5cb5b146104be57806398c9f2b9146104cf5780639abaf479146104f25780639d3117c71461051357600080fd5b8063508a109b116101df5780635f61e3ec116101a35780635f61e3ec1461042557806365eaf11b146104645780636a42b8f81461046c5780636b04a93314610475578063715018a6146104885780638456cb591461049057600080fd5b8063508a109b146103aa5780635190bc53146103bd57806352a9674b146103d95780635bd11efc146104005780635c975abb1461041357600080fd5b80632bbd59ca116102265780632bbd59ca14610334578063301f07c3146103645780633cf52ffb146103875780633f4ba83a1461038f5780634ff746f61461039757600080fd5b806314168416146102635780631eeaabea146102a457806325e3beda146102b9578063272efc69146102ee5780632bb1ae7c14610321575b600080fd5b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102b76102b23660046127f5565b61068d565b005b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161029b565b6103116102fc366004612823565b600a6020526000908152604090205460ff1681565b604051901515815260200161029b565b6102b761032f3660046128e3565b610702565b6103576103423660046127f5565b600c6020526000908152604090205460ff1681565b60405161029b919061292e565b6103116103723660046127f5565b60086020526000908152604090205460ff1681565b6002546102e0565b6102b76107fa565b6102b76103a53660046128e3565b610837565b6102b76103b8366004612956565b6108dd565b6103116103cb366004612823565b6001600160a01b0316301490565b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6102b761040e366004612823565b610b8a565b600354600160a01b900460ff16610311565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161029b565b6102e0610bc1565b62093a806102e0565b6102b76104833660046127f5565b610c4a565b6102b7610d15565b6102b7610dd2565b7f000000000000000000000000000000000000000000000000000000000000000061028a565b6000546001600160a01b031661044c565b6103116104dd3660046127f5565b60096020526000908152604090205460ff1681565b6105056105003660046128e3565b610e86565b60405161029b929190612a4a565b6102e06105213660046127f5565b60076020526000908152604090205481565b3061044c565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6102e060065481565b6102b7610577366004612823565b610e98565b6102b761058a366004612823565b610f3d565b6102b761059d366004612823565b610fb9565b61028a6105b0366004612a7e565b600b6020526000908152604090205463ffffffff1681565b6102b7611038565b60035461044c906001600160a01b031681565b6001546001600160a01b031661044c565b6000546001600160a01b031615610311565b6102b7610614366004612823565b611093565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b610311610675366004612823565b611155565b6102e0610688366004612a99565b611166565b6000546001600160a01b031633146106b8576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036106fd5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b61070a611323565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078e9190612af0565b6040516020016107a091815260200190565b60405160208183030381529060405290506107bb8183611370565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778183336040516107ee93929190612b09565b60405180910390a15050565b6000546001600160a01b03163314610825576040516311a8a1bb60e31b815260040160405180910390fd5b61082d6113dc565b61083561142c565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108985760405162461bcd60e51b81526004016106f49060208082526004908201526310a0a6a160e11b604082015260600190565b6108a181611481565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516108d2929190612b47565b60405180910390a150565b6108e5611323565b8361091c5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106f4565b60008585600081811061093157610931612b71565b90506020028101906109439190612b87565b61094d9080612ba8565b60405161095b929190612bf6565b6040518091039020905060006109c2828888600081811061097e5761097e612b71565b90506020028101906109909190612b87565b602001898960008181106109a6576109a6612b71565b90506020028101906109b89190612b87565b6104200135611521565b90506109d0818686866115c6565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610af45787878263ffffffff16818110610a1357610a13612b71565b9050602002810190610a259190612b87565b610a2f9080612ba8565b604051610a3d929190612bf6565b604051809103902092506000610a92848a8a8563ffffffff16818110610a6557610a65612b71565b9050602002810190610a779190612b87565b6020018b8b8663ffffffff168181106109a6576109a6612b71565b9050828114610ad15760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106f4565b506000838152600c60205260409020805460ff19166001908117909155016109ed565b5060005b63ffffffff8116871115610b8057610b7788888363ffffffff16818110610b2157610b21612b71565b9050602002810190610b339190612b87565b610b3d9080612ba8565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061168392505050565b50600101610af8565b5050505050505050565b6000546001600160a01b03163314610bb5576040516311a8a1bb60e31b815260040160405180910390fd5b610bbe816119ca565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190612af0565b905090565b6000546001600160a01b03163314610c75576040516311a8a1bb60e31b815260040160405180910390fd5b610c7d6113dc565b6000818152600760205260408120549003610cd25760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016106f4565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906108d29083815260200190565b6000546001600160a01b03163314610d40576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610d6357604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610d759190612c1c565b11610d93576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610dbd576040516323295ef960e01b815260040160405180910390fd5b600154610835906001600160a01b0316611a33565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190612c33565b610e765760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106f4565b610e7e611323565b610835611a92565b60006060610e9383611481565b915091565b6000546001600160a01b03163314610ec3576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610ee857506001600160a01b03811615155b15610f06576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610f3457604051634a2fb73f60e11b815260040160405180910390fd5b610bbe81611ad5565b6000546001600160a01b03163314610f68576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016108d2565b6000546001600160a01b03163314610fe4576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016108d2565b6001546001600160a01b03163314611063576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426110759190612c1c565b11610dbd5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146110be576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361111c5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106f4565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016108d2565b600061116082611b23565b92915050565b336000908152600a602052604081205460ff166111b45760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106f4565b63ffffffff8085166000908152600b6020526040902054166111d7816001612c55565b63ffffffff8681166000908152600b60205260408120805463ffffffff19169390921692909217905561122e7f00000000000000000000000000000000000000000000000000000000000000003384898989611b4f565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156112a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c89190612c7d565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836112fa600184612c1c565b848760405161130c9493929190612ca1565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff16156108355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f4565b8051156113ae5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016106f4565b6113d87f000000000000000000000000000000000000000000000000000000000000000083611b87565b5050565b600354600160a01b900460ff166108355760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f4565b6114346113dc565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611496906001600160a01b0316611b23565b6114d55760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106f4565b80516020146115105760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106f4565b610bbe61151c82612cc6565b611c12565b6000806000858152600c602052604090205460ff16600281111561154757611547612918565b1461158a5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106f4565b6115be848460208060200260405190810160405280929190826020800280828437600092019190915250869150611d3b9050565b949350505050565b60008481526009602052604090205460ff1661167d576115e583611de1565b600061161b858460208060200260405190810160405280929190826020800280828437600092019190915250869150611d3b9050565b90508381146116625760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016106f4565b506000848152600960205260409020805460ff191660011790555b50505050565b60006002600554036116d75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f4565b600260055560006116e88382611ed3565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661172062ffffff198316611ef7565b63ffffffff16146117625760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106f4565b600061177362ffffff198316611f0c565b905060016000828152600c602052604090205460ff16600281111561179a5761179a612918565b146117d15760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106f4565b6000818152600c60205260409020805460ff191660021790556118347f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612cea565b5a101561186c5760405162461bcd60e51b81526004016106f4906020808252600490820152632167617360e01b604082015260600190565b600061187d62ffffff198416611f55565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006118da62ffffff198916611f66565b6118e962ffffff198a16611f7a565b6118f862ffffff198b16611f8f565b61191561190a62ffffff198d16611fa4565b62ffffff1916611fd2565b6040516024016119289493929190612d02565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611971578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516119af93929190612d31565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a9a611323565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114643390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006111607f00000000000000000000000000000000000000000000000000000000000000008361201b565b6060868686868686604051602001611b6c96959493929190612d52565b60405160208183030381529060405290509695505050505050565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611bdc90859085906000907f0000000000000000000000000000000000000000000000000000000000000000908290600401612dac565b600060405180830381600087803b158015611bf657600080fd5b505af1158015611c0a573d6000803e3d6000fd5b505050505050565b80611c505760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016106f4565b60008181526007602052604090205415611ca35760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016106f4565b60008181526008602052604090205460ff1615611cf85760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016106f4565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906108d29083815260200190565b8260005b6020811015611dd957600183821c166000858360208110611d6257611d62612b71565b6020020151905081600103611da2576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611dcf565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611d3f565b509392505050565b60008181526008602052604090205460ff1615611dfb5750565b60008181526007602052604081205490819003611e515760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016106f4565b600654611e5e8243612c1c565b1015611eac5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016106f4565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b815160009060208401611eee64ffffffffff8516828461212f565b95945050505050565b600061116062ffffff19831660286004612176565b600080611f228360781c6001600160601b031690565b6001600160601b031690506000611f428460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000611160611f63836121a6565b90565b600061116062ffffff198316826004612176565b600061116062ffffff19831660246004612176565b600061116062ffffff198316600460206121b7565b6000611160604c611fc281601886901c6001600160601b0316612c1c565b62ffffff19851691906000612313565b6060600080611fea8460181c6001600160601b031690565b6001600160601b03169050604051915081925061200a848360200161238d565b508181016020016040529052919050565b6000336001600160a01b0384161461205f5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106f4565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156120c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e49190612dea565b5091509150836001600160a01b0316826001600160a01b0316148015611eee57507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b60008061213c8385612cea565b905060405181111561214c575060005b806000036121615762ffffff1991505061131c565b5050606092831b9190911790911b1760181b90565b6000612183826020612e21565b61218e906008612e44565b60ff1661219c8585856121b7565b901c949350505050565b600061116062ffffff198316602c60205b60008160ff166000036121cc5750600061131c565b6121df8460181c6001600160601b031690565b6001600160601b03166121f560ff841685612cea565b1115612259576122406122118560781c6001600160601b031690565b6001600160601b031661222d8660181c6001600160601b031690565b6001600160601b0316858560ff166124e4565b60405162461bcd60e51b81526004016106f49190612e6d565b60208260ff1611156122d35760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106f4565b6008820260006122ec8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806123298660781c6001600160601b031690565b6001600160601b0316905061233d86612552565b846123488784612cea565b6123529190612cea565b11156123655762ffffff199150506115be565b61236f8582612cea565b90506123838364ffffffffff16828661212f565b9695505050505050565b600062ffffff19808416036123f55760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106f4565b6123fe8361258b565b61245e5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106f4565b60006124738460181c6001600160601b031690565b6001600160601b0316905060006124938560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156124b35760206060fd5b8285848460045afa506123836124c98760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006124f1866125c8565b91505060006124ff866125c8565b915050600061250d866125c8565b915050600061251b866125c8565b915050838383836040516020016125359493929190612e80565b604051602081830303815290604052945050505050949350505050565b60006125678260181c6001600160601b031690565b61257a8360781c6001600160601b031690565b016001600160601b03169050919050565b60006125978260d81c90565b64ffffffffff1664ffffffffff036125b157506000919050565b60006125bc83612552565b60405110199392505050565b600080601f5b600f8160ff16111561261d5760006125e7826008612e44565b60ff1685901c90506125f881612676565b61ffff16841793508160ff1660101461261357601084901b93505b50600019016125ce565b50600f5b60ff8160ff16101561267057600061263a826008612e44565b60ff1685901c905061264b81612676565b61ffff16831792508160ff1660001461266657601083901b92505b5060001901612621565b50915091565b600061268860048360ff16901c6126a8565b60ff1661ffff919091161760081b61269f826126a8565b60ff1617919050565b600060f08083179060ff821690036126c35750603092915050565b8060ff1660f1036126d75750603192915050565b8060ff1660f2036126eb5750603292915050565b8060ff1660f3036126ff5750603392915050565b8060ff1660f4036127135750603492915050565b8060ff1660f5036127275750603592915050565b8060ff1660f60361273b5750603692915050565b8060ff1660f70361274f5750603792915050565b8060ff1660f8036127635750603892915050565b8060ff1660f9036127775750603992915050565b8060ff1660fa0361278b5750606192915050565b8060ff1660fb0361279f5750606292915050565b8060ff1660fc036127b35750606392915050565b8060ff1660fd036127c75750606492915050565b8060ff1660fe036127db5750606592915050565b8060ff1660ff036127ef5750606692915050565b50919050565b60006020828403121561280757600080fd5b5035919050565b6001600160a01b0381168114610bbe57600080fd5b60006020828403121561283557600080fd5b813561131c8161280e565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261286757600080fd5b813567ffffffffffffffff8082111561288257612882612840565b604051601f8301601f19908116603f011681019082821181831017156128aa576128aa612840565b816040528381528660208588010111156128c357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156128f557600080fd5b813567ffffffffffffffff81111561290c57600080fd5b6115be84828501612856565b634e487b7160e01b600052602160045260246000fd5b602081016003831061295057634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561296f57600080fd5b853567ffffffffffffffff8082111561298757600080fd5b818801915088601f83011261299b57600080fd5b8135818111156129aa57600080fd5b8960208260051b85010111156129bf57600080fd5b6020928301975095505086013592506104408601878111156129e057600080fd5b94979396509194604001933592915050565b60005b83811015612a0d5781810151838201526020016129f5565b8381111561167d5750506000910152565b60008151808452612a368160208601602086016129f2565b601f01601f19169290920160200192915050565b82151581526040602082015260006115be6040830184612a1e565b803563ffffffff81168114612a7957600080fd5b919050565b600060208284031215612a9057600080fd5b61131c82612a65565b600080600060608486031215612aae57600080fd5b612ab784612a65565b925060208401359150604084013567ffffffffffffffff811115612ada57600080fd5b612ae686828701612856565b9150509250925092565b600060208284031215612b0257600080fd5b5051919050565b606081526000612b1c6060830186612a1e565b8281036020840152612b2e8186612a1e565b91505060018060a01b0383166040830152949350505050565b604081526000612b5a6040830185612a1e565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612b9e57600080fd5b9190910192915050565b6000808335601e19843603018112612bbf57600080fd5b83018035915067ffffffffffffffff821115612bda57600080fd5b602001915036819003821315612bef57600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612c2e57612c2e612c06565b500390565b600060208284031215612c4557600080fd5b8151801515811461131c57600080fd5b600063ffffffff808316818516808303821115612c7457612c74612c06565b01949350505050565b60008060408385031215612c9057600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006123836080830184612a1e565b805160208083015191908110156127ef5760001960209190910360031b1b16919050565b60008219821115612cfd57612cfd612c06565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526123836080830184612a1e565b8381528215156020820152606060408201526000611eee6060830184612a1e565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612d9a81604c8501602087016129f2565b91909101604c01979650505050505050565b600060018060a01b03808816835260a06020840152612dce60a0840188612a1e565b9516604083015250606081019290925260809091015292915050565b600080600060608486031215612dff57600080fd5b8351612e0a8161280e565b602085015160409095015190969495509392505050565b600060ff821660ff841680821015612e3b57612e3b612c06565b90039392505050565b600060ff821660ff84168160ff0481118215151615612e6557612e65612c06565b029392505050565b60208152600061131c6020830184612a1e565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161238356fea264697066735822122096191d64c91273f2ef880436f690a2f0abd9d340b3cb20df8d96278f0ec642c564736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
