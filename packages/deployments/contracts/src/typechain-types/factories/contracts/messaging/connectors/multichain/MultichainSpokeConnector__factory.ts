/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b50604051620030fc380380620030fc8339810160408190526200003591620004ab565b86818a8a838a8a8a8a8a87808888888888858484620000543362000370565b8263ffffffff166000036200009f5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152600960248201526832b6b83a3c9030b6b160b91b604482015260640162000096565b6001600160a01b0381166200012f5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000096565b63ffffffff9283166080526001600160a01b0391821660a052811660c05290861660e05282161562000166576200016682620003cf565b80156200017857620001788162000438565b5050505050508063ffffffff16600003620001c05760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000096565b63ffffffff16610100526001602655620cf850821015620002135760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000096565b613a98811015620002565760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000096565b610120919091526101405250505060008490039250620002ad9150505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000096565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa158015620002ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000312919062000542565b6001600160a01b03166101608190526200035b5760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000096565b61018052506200056798505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200048e57600080fd5b919050565b80516001600160a01b03811681146200048e57600080fd5b60008060008060008060008060006101208a8c031215620004cb57600080fd5b620004d68a62000479565b9850620004e660208b0162000479565b9750620004f660408b0162000493565b96506200050660608b0162000493565b95506200051660808b0162000493565b945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b6000602082840312156200055557600080fd5b620005608262000493565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612ad76200062560003960008181611af90152611c4501526000611ba201526000818161028f0152610f2a01526000818161056f01528181610f4b0152610fd201526000818161041a01526104da0152600061025301526000818161038c0152610838015260008181610548015281816105f8015281816111bd015261123701526000818161035201528181610b8b0152610e2c0152612ad76000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639abaf47911610130578063cf796c75116100b8578063db1b76591161007c578063db1b765914610591578063ee250e06146105a4578063f38a267b146105ad578063fa31de01146105d0578063fd54b228146105e357600080fd5b8063cf796c7514610517578063d1851c9214610520578063d232c22014610531578063d69f9d6114610543578063d88beda21461056a57600080fd5b8063b697f531116100ff578063b697f5311461049c578063b95a2001146104af578063c2fb26a6146104d5578063c5b350df146104fc578063cc3942831461050457600080fd5b80639abaf4791461044f5780639fa92f9d14610470578063b1f8100d14610476578063b2f876431461048957600080fd5b80635bd11efc116101be5780636eb67a51116101825780636eb67a51146103ea578063715018a6146103fd57806382646a58146104055780638d3638f4146104185780638da5cb5b1461043e57600080fd5b80635bd11efc146103745780635f61e3ec146103875780636188af0e146103c657806365eaf11b146103d95780636a42b8f8146103e157600080fd5b80632bbd59ca116102055780632bbd59ca146102e45780633cf52ffb146103145780634ff746f61461031c5780635190bc531461033157806352a9674b1461034d57600080fd5b806306661abd14610237578063141684161461024e57806325e3beda1461028a578063272efc69146102b1575b600080fd5b6025545b6040519081526020015b60405180910390f35b6102757f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610245565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102d46102bf366004612373565b60296020526000908152604090205460ff1681565b6040519015158152602001610245565b6103076102f2366004612390565b602b6020526000908152604090205460ff1681565b60405161024591906123bf565b60025461023b565b61032f61032a36600461248a565b6105ed565b005b6102d461033f366004612373565b6001600160a01b0316301490565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b61032f610382366004612373565b61069c565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610245565b61032f6103d43660046124bf565b6106d3565b61023b610729565b62093a8061023b565b61032f6103f8366004612390565b61073a565b61032f61076e565b61032f61041336600461248a565b61082d565b7f0000000000000000000000000000000000000000000000000000000000000000610275565b6000546001600160a01b03166103ae565b61046261045d36600461248a565b6108ce565b604051610245929190612577565b306103ae565b61032f610484366004612373565b6108e0565b61032f610497366004612373565b610985565b61032f6104aa366004612373565b610a01565b6102756104bd3660046125ab565b602a6020526000908152604090205463ffffffff1681565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b61032f610a80565b6003546103ae906001600160a01b031681565b61023b60045481565b6001546001600160a01b03166103ae565b6000546001600160a01b0316156102d4565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102d461059f366004612373565b610adb565b61023b60275481565b6102d46105bb366004612390565b60286020526000908152604090205460ff1681565b61032f6105de3660046125c6565b610aec565b60255461023b9081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106575760405162461bcd60e51b815260040161064e9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61066081610c2b565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161069192919061261d565b60405180910390a150565b6000546001600160a01b031633146106c7576040516311a8a1bb60e31b815260040160405180910390fd5b6106d081610cc7565b50565b6106e583805190602001208383610d30565b61071a5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b604482015260640161064e565b61072383610dbe565b50505050565b60006107356005611105565b905090565b6000546001600160a01b03163314610765576040516311a8a1bb60e31b815260040160405180910390fd5b6106d081611118565b6000546001600160a01b03163314610799576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107bc57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107ce919061265d565b116107ec576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610816576040516323295ef960e01b815260040160405180910390fd5b60015461082b906001600160a01b0316611159565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108945760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161064e565b61089d816111b8565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc813360405161069192919061261d565b600060606108db83610c2b565b915091565b6000546001600160a01b0316331461090b576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561093057506001600160a01b03811615155b1561094e576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361097c57604051634a2fb73f60e11b815260040160405180910390fd5b6106d0816111e2565b6000546001600160a01b031633146109b0576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610691565b6000546001600160a01b03163314610a2c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610691565b6001546001600160a01b03163314610aab576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610abd919061265d565b116108165760405163d39c12bb60e01b815260040160405180910390fd5b6000610ae682611230565b92915050565b3360009081526029602052604090205460ff16610b3a5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161064e565b63ffffffff8084166000908152602a602052604090205416610b5d816001612674565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610bb47f0000000000000000000000000000000000000000000000000000000000000000338488888861125c565b80516020820120909150610bc9600582611294565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610bf660255490565b610c00919061265d565b610c0a6005611105565b85604051610c1b949392919061269c565b60405180910390a1505050505050565b600354610c40906001600160a01b0316611230565b610c7b5760405162461bcd60e51b815260206004820152600c60248201526b10b618a1b7b73732b1ba37b960a11b604482015260640161064e565b8051602014610cb65760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161064e565b6106d0610cc2826126c1565b6113b1565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610d5657610d566123a9565b14610d995760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161064e565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610e125760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161064e565b60026026556000610e2383826113f3565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610e5b62ffffff198316611417565b63ffffffff1614610e9d5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161064e565b6000610eae62ffffff19831661142c565b905060016000828152602b602052604090205460ff166002811115610ed557610ed56123a9565b14610f0c5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161064e565b6000818152602b60205260409020805460ff19166002179055610f6f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006126e5565b5a1015610fa75760405162461bcd60e51b815260040161064e906020808252600490820152632167617360e01b604082015260600190565b6000610fb862ffffff198416611475565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061101562ffffff198916611486565b61102462ffffff198a1661149a565b61103362ffffff198b166114af565b61105061104562ffffff198d166114c4565b62ffffff19166114f2565b60405160240161106394939291906126fd565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d9450838511156110ac578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110ea9392919061272c565b60405180910390a15050600160265550949695505050505050565b6000610ae68261111361153b565b6119fc565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106d07f000000000000000000000000000000000000000000000000000000000000000082611ace565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610ae67f000000000000000000000000000000000000000000000000000000000000000083611b59565b60608686868686866040516020016112799695949392919061274d565b60405160208183030381529060405290509695505050505050565b60016112a26020600261288b565b6112ac919061265d565b8260200154106112f15760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161064e565b600182602001600082825461130691906126e5565b9091555050602082015460005b60208110156113a35781600116600103611342578284826020811061133a5761133a612897565b015550505050565b83816020811061135457611354612897565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261138f91906128ad565b91508061139b816128cf565b915050611313565b506113ac6128e8565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b81516000906020840161140e64ffffffffff85168284611c6d565b95945050505050565b6000610ae662ffffff19831660286004611cb4565b6000806114428360781c6001600160601b031690565b6001600160601b0316905060006114628460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610ae661148383611ce4565b90565b6000610ae662ffffff198316826004611cb4565b6000610ae662ffffff19831660246004611cb4565b6000610ae662ffffff19831660046020611cf5565b6000610ae6604c6114e281601886901c6001600160601b031661265d565b62ffffff19851691906000611e51565b606060008061150a8460181c6001600160601b031690565b6001600160601b03169050604051915081925061152a8483602001611ecd565b508181016020016040529052919050565b61154361233f565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611ac657600182821c166000868360208110611a2957611a29612897565b0154905081600103611a66576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611ab1565b84868460208110611a7957611a79612897565b6020020151604051602001611a98929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611abe906128cf565b915050611a06565b505092915050565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611b2390859085906000907f00000000000000000000000000000000000000000000000000000000000000009082906004016128fe565b600060405180830381600087803b158015611b3d57600080fd5b505af1158015611b51573d6000803e3d6000fd5b505050505050565b6000336001600160a01b03841614611b9d5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b604482015260640161064e565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611bfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c22919061293c565b5091509150836001600160a01b0316826001600160a01b031614801561140e57507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b600080611c7a83856126e5565b9050604051811115611c8a575060005b80600003611c9f5762ffffff19915050610db7565b5050606092831b9190911790911b1760181b90565b6000611cc1826020612973565b611ccc906008612996565b60ff16611cda858585611cf5565b901c949350505050565b6000610ae662ffffff198316602c60205b60008160ff16600003611d0a57506000610db7565b611d1d8460181c6001600160601b031690565b6001600160601b0316611d3360ff8416856126e5565b1115611d9757611d7e611d4f8560781c6001600160601b031690565b6001600160601b0316611d6b8660181c6001600160601b031690565b6001600160601b0316858560ff1661202e565b60405162461bcd60e51b815260040161064e91906129b7565b60208260ff161115611e115760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161064e565b600882026000611e2a8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611e678660781c6001600160601b031690565b6001600160601b03169050611e7b8661209c565b84611e8687846126e5565b611e9091906126e5565b1115611ea35762ffffff19915050611ec5565b611ead85826126e5565b9050611ec18364ffffffffff168286611c6d565b9150505b949350505050565b600062ffffff1980841603611f355760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161064e565b611f3e836120d5565b611f9e5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161064e565b6000611fb38460181c6001600160601b031690565b6001600160601b031690506000611fd38560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611ff35760206060fd5b8285848460045afa506120246120098760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6060600061203b86612112565b915050600061204986612112565b915050600061205786612112565b915050600061206586612112565b9150508383838360405160200161207f94939291906129ca565b604051602081830303815290604052945050505050949350505050565b60006120b18260181c6001600160601b031690565b6120c48360781c6001600160601b031690565b016001600160601b03169050919050565b60006120e18260d81c90565b64ffffffffff1664ffffffffff036120fb57506000919050565b60006121068361209c565b60405110199392505050565b600080601f5b600f8160ff161115612167576000612131826008612996565b60ff1685901c9050612142816121c0565b61ffff16841793508160ff1660101461215d57601084901b93505b5060001901612118565b50600f5b60ff8160ff1610156121ba576000612184826008612996565b60ff1685901c9050612195816121c0565b61ffff16831792508160ff166000146121b057601083901b92505b506000190161216b565b50915091565b60006121d260048360ff16901c6121f2565b60ff1661ffff919091161760081b6121e9826121f2565b60ff1617919050565b600060f08083179060ff8216900361220d5750603092915050565b8060ff1660f1036122215750603192915050565b8060ff1660f2036122355750603292915050565b8060ff1660f3036122495750603392915050565b8060ff1660f40361225d5750603492915050565b8060ff1660f5036122715750603592915050565b8060ff1660f6036122855750603692915050565b8060ff1660f7036122995750603792915050565b8060ff1660f8036122ad5750603892915050565b8060ff1660f9036122c15750603992915050565b8060ff1660fa036122d55750606192915050565b8060ff1660fb036122e95750606292915050565b8060ff1660fc036122fd5750606392915050565b8060ff1660fd036123115750606492915050565b8060ff1660fe036123255750606592915050565b8060ff1660ff036123395750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b03811681146106d057600080fd5b60006020828403121561238557600080fd5b8135610db78161235e565b6000602082840312156123a257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106123e157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261240e57600080fd5b813567ffffffffffffffff80821115612429576124296123e7565b604051601f8301601f19908116603f01168101908282118183101715612451576124516123e7565b8160405283815286602085880101111561246a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561249c57600080fd5b813567ffffffffffffffff8111156124b357600080fd5b611ec5848285016123fd565b600080600061044084860312156124d557600080fd5b833567ffffffffffffffff8111156124ec57600080fd5b6124f8868287016123fd565b93505061042084018581111561250d57600080fd5b60208501925080359150509250925092565b60005b8381101561253a578181015183820152602001612522565b838111156107235750506000910152565b6000815180845261256381602086016020860161251f565b601f01601f19169290920160200192915050565b8215158152604060208201526000611ec5604083018461254b565b803563ffffffff811681146125a657600080fd5b919050565b6000602082840312156125bd57600080fd5b610db782612592565b6000806000606084860312156125db57600080fd5b6125e484612592565b925060208401359150604084013567ffffffffffffffff81111561260757600080fd5b612613868287016123fd565b9150509250925092565b604081526000612630604083018561254b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561266f5761266f612647565b500390565b600063ffffffff80831681851680830382111561269357612693612647565b01949350505050565b848152836020820152826040820152608060608201526000612024608083018461254b565b805160208083015191908110156123395760001960209190910360031b1b16919050565b600082198211156126f8576126f8612647565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152612024608083018461254b565b838152821515602082015260606040820152600061140e606083018461254b565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161279581604c85016020870161251f565b91909101604c01979650505050505050565b600181815b808511156127e25781600019048211156127c8576127c8612647565b808516156127d557918102915b93841c93908002906127ac565b509250929050565b6000826127f957506001610ae6565b8161280657506000610ae6565b816001811461281c576002811461282657612842565b6001915050610ae6565b60ff84111561283757612837612647565b50506001821b610ae6565b5060208310610133831016604e8410600b8410161715612865575081810a610ae6565b61286f83836127a7565b806000190482111561288357612883612647565b029392505050565b6000610db783836127ea565b634e487b7160e01b600052603260045260246000fd5b6000826128ca57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016128e1576128e1612647565b5060010190565b634e487b7160e01b600052600160045260246000fd5b600060018060a01b03808816835260a0602084015261292060a084018861254b565b9516604083015250606081019290925260809091015292915050565b60008060006060848603121561295157600080fd5b835161295c8161235e565b602085015160409095015190969495509392505050565b600060ff821660ff84168082101561298d5761298d612647565b90039392505050565b600060ff821660ff84168160ff048111821515161561288357612883612647565b602081526000610db7602083018461254b565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161202456fea26469706673582212204bab54e7ff6ebe7ecf11d5cf171a9d8240f8b91f977e89138d356d9777b0239f64736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
