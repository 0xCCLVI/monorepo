/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pending",
        type: "bytes32",
      },
    ],
    name: "AggregateRootsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootCurrent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPendingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatorPath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregatorIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
    ],
    name: "setAggregateRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setWatcherPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b50604051620033e5380380620033e58339810160408190526200003591620004f3565b89818d8d838d8d8d8d8d8d8d8d808b8b8b8b8b8b6200005433620003b8565b8563ffffffff166000036200009f5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000eb5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000096565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012357620001238262000417565b80156200013557620001358162000480565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039690961695909517909455505060016006555050620cf850851015620001fd5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000096565b613a98841015620002405760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000096565b6101208590526101408490526001600160a01b038216620002935760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000096565b506001600160a01b03166101005260075550505060008690039450620002f293505050505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000096565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000331573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003579190620005bb565b6001600160a01b0316610160819052620003a05760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000096565b6101805250620005e09b505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620004d657600080fd5b919050565b80516001600160a01b0381168114620004d657600080fd5b6000806000806000806000806000806000806101808d8f0312156200051757600080fd5b620005228d620004c1565b9b506200053260208e01620004c1565b9a506200054260408e01620004db565b99506200055260608e01620004db565b98506200056260808e01620004db565b975060a08d0151965060c08d0151955060e08d015194506101008d01519350620005906101208e01620004db565b9250620005a16101408e01620004db565b91506101608d015190509295989b509295989b509295989b565b600060208284031215620005ce57600080fd5b620005d982620004db565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612d39620006ac60003960008181611bfc0152611e9001526000611ded0152600081816102d401526118fe01526000818161061d0152818161191f01526119a60152600081816104c1015281816107de01528181610c39015261134c0152600061027e015260006103e60152600081816105f601528181610708015281816116170152611ae00152600081816103ac01528181610457015281816112fd01526118000152612d396000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c8063a01892a511610151578063c5b350df116100c3578063d2a3cc7111610087578063d2a3cc71146105de578063d69f9d61146105f1578063d88beda214610618578063db1b76591461063f578063f38a267b14610652578063fa31de011461067557600080fd5b8063c5b350df14610597578063cc3942831461059f578063cf796c75146105b2578063d1851c92146105bb578063d232c220146105cc57600080fd5b8063b2f8764311610115578063b2f876431461051d578063b39af46614610530578063b46300ec14610543578063b697f5311461054b578063b95a20011461055e578063c1ca16221461058457600080fd5b8063a01892a5146104bc578063ad9c0c2e146104e3578063b0c273cc146104ec578063b187bd26146104ff578063b1f8100d1461050a57600080fd5b80635f61e3ec116101ea578063715018a6116101ae578063715018a61461044d5780638d3638f4146104555780638da5cb5b1461047b5780639aa44d001461048c5780639abaf479146104955780639fa92f9d146104b657600080fd5b80635f61e3ec146103e157806364fd5f841461042057806365eaf11b146104295780636a42b8f8146104315780636eb67a511461043a57600080fd5b80633cf52ffb1161023c5780633cf52ffb146103675780633fc40eaa1461036f5780634ff746f6146103785780635190bc531461038b57806352a9674b146103a75780635bd11efc146103ce57600080fd5b806314168416146102795780631eeaabea146102ba57806325e3beda146102cf578063272efc69146103045780632bbd59ca14610337575b600080fd5b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102cd6102c836600461257e565b610688565b005b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b6103276103123660046125ac565b600c6020526000908152604090205460ff1681565b60405190151581526020016102b1565b61035a61034536600461257e565b600e6020526000908152604090205460ff1681565b6040516102b191906125df565b6002546102f6565b6102f660095481565b6102cd6103863660046126aa565b6106fd565b6103276103993660046125ac565b6001600160a01b0316301490565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6102cd6103dc3660046125ac565b6107a3565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b6102f6600a5481565b6102f66107da565b62093a806102f6565b6102cd61044836600461257e565b610863565b6102cd610897565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b6000546001600160a01b0316610408565b6102f660085481565b6104a86104a33660046126aa565b610956565b6040516102b192919061273b565b30610408565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6102f660075481565b6102cd6104fa366004612764565b610968565b600f5460ff16610327565b6102cd6105183660046125ac565b610a66565b6102cd61052b3660046125ac565b610b0b565b6102cd61053e366004612781565b610b87565b6102cd610c35565b6102cd6105593660046125ac565b610d16565b6102a061056c3660046127bc565b600d6020526000908152604090205463ffffffff1681565b6102cd6105923660046127d7565b610d95565b6102cd611130565b600354610408906001600160a01b031681565b6102f660045481565b6001546001600160a01b0316610408565b6000546001600160a01b031615610327565b6102cd6105ec3660046125ac565b61118b565b6104087f000000000000000000000000000000000000000000000000000000000000000081565b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b61032761064d3660046125ac565b61124d565b61032761066036600461257e565b600b6020526000908152604090205460ff1681565b6102f661068336600461286f565b61125e565b6000546001600160a01b031633146106b3576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036106f85760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461075e5760405162461bcd60e51b81526004016106ef9060208082526004908201526310a0a6a160e11b604082015260600190565b6107678161141b565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107989291906128c6565b60405180910390a150565b6000546001600160a01b031633146107ce576040516311a8a1bb60e31b815260040160405180910390fd5b6107d7816114bb565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085e91906128f0565b905090565b6000546001600160a01b0316331461088e576040516311a8a1bb60e31b815260040160405180910390fd5b6107d781611524565b6000546001600160a01b031633146108c2576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036108e557604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108f7919061291f565b11610915576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561093f576040516323295ef960e01b815260040160405180910390fd5b600154610954906001600160a01b0316611565565b565b600060606109638361141b565b915091565b6005546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190612936565b610a0b5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106ef565b600f5481151560ff909116151503610a535760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016106ef565b600f805460ff1916911515919091179055565b6000546001600160a01b03163314610a91576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610ab657506001600160a01b03811615155b15610ad4576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610b0257604051634a2fb73f60e11b815260040160405180910390fd5b6107d7816115c4565b6000546001600160a01b03163314610b36576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610798565b6000546001600160a01b03163314610bb2576040516311a8a1bb60e31b815260040160405180910390fd5b600f5460ff16610bee5760405162461bcd60e51b8152602060048201526007602482015266085c185d5cd95960ca1b60448201526064016106ef565b6008829055600981905560408051838152602081018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce76910160405180910390a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb991906128f0565b604051602001610ccb91815260200190565b6040516020818303038152906040529050610ce581611612565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107989291906128c6565b6000546001600160a01b03163314610d41576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610798565b600f5460ff1615610dd45760405162461bcd60e51b8152602060048201526009602482015268085d5b9c185d5cd95960ba1b60448201526064016106ef565b82610e0b5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106ef565b600084846000818110610e2057610e20612953565b9050602002810190610e329190612969565b610e3c908061298a565b604051610e4a9291906129d8565b604051809103902090506000610eb18287876000818110610e6d57610e6d612953565b9050602002810190610e7f9190612969565b60200188886000818110610e9557610e95612953565b9050602002810190610ea79190612969565b610420013561163c565b6000818152600b602052604090205490915060ff16610f77576000600a544311610edd57600854610ee1565b6009545b90506000610f198387602080602002604051908101604052809291908260208002808284376000920191909152508991506116e19050565b9050818114610f5b5760405162461bcd60e51b815260206004820152600e60248201526d085859d9dc9959d85d19549bdbdd60921b60448201526064016106ef565b50506000818152600b60205260409020805460ff191660011790555b6000828152600e60205260409020805460ff191660019081179091555b63ffffffff811686111561109b5786868263ffffffff16818110610fba57610fba612953565b9050602002810190610fcc9190612969565b610fd6908061298a565b604051610fe49291906129d8565b6040518091039020925060006110398489898563ffffffff1681811061100c5761100c612953565b905060200281019061101e9190612969565b6020018a8a8663ffffffff16818110610e9557610e95612953565b90508281146110785760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106ef565b506000838152600e60205260409020805460ff1916600190811790915501610f94565b5060005b63ffffffff81168611156111275761111e87878363ffffffff168181106110c8576110c8612953565b90506020028101906110da9190612969565b6110e4908061298a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061179292505050565b5060010161109f565b50505050505050565b6001546001600160a01b0316331461115b576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261116d919061291f565b1161093f5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146111b6576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b03908116908216036112145760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106ef565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610798565b600061125882611ad9565b92915050565b336000908152600c602052604081205460ff166112ac5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106ef565b63ffffffff8085166000908152600d6020526040902054166112cf8160016129e8565b63ffffffff8681166000908152600d60205260408120805463ffffffff1916939092169290921790556113267f00000000000000000000000000000000000000000000000000000000000000003384898989611b05565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561139c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c09190612a10565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836113f260018461291f565b84876040516114049493929190612a34565b60405180910390a1509093505050505b9392505050565b600354611430906001600160a01b0316611ad9565b61146f5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106ef565b80516020146114aa5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106ef565b6107d76114b682612a59565b611b3d565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6107d77f000000000000000000000000000000000000000000000000000000000000000082611bd1565b6000806000858152600e602052604090205460ff166002811115611662576116626125c9565b146116a55760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106ef565b6116d98484602080602002604051908101604052809291908260208002808284376000920191909152508691506116e19050565b949350505050565b8260005b602081101561178a57600183821c16600085836020811061170857611708612953565b6020020151905081600103611748576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611775565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050808061178290612a7d565b9150506116e5565b509392505050565b60006002600654036117e65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106ef565b600260065560006117f78382611c5c565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661182f62ffffff198316611c80565b63ffffffff16146118715760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106ef565b600061188262ffffff198316611c95565b905060016000828152600e602052604090205460ff1660028111156118a9576118a96125c9565b146118e05760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106ef565b6000818152600e60205260409020805460ff191660021790556119437f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612a96565b5a101561197b5760405162461bcd60e51b81526004016106ef906020808252600490820152632167617360e01b604082015260600190565b600061198c62ffffff198416611cde565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006119e962ffffff198916611cef565b6119f862ffffff198a16611d03565b611a0762ffffff198b16611d18565b611a24611a1962ffffff198d16611d2d565b62ffffff1916611d5b565b604051602401611a379493929190612aae565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611a80578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611abe93929190612add565b60405180910390a15050600160065550949695505050505050565b60006112587f000000000000000000000000000000000000000000000000000000000000000083611da4565b6060868686868686604051602001611b2296959493929190612afe565b60405160208183030381529060405290509695505050505050565b600754600a54611b4d9190612a96565b4311611b8a5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016106ef565b6009805460088190559082905543600a5560408051918252602082018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce769101610798565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611c2690859085906000907f0000000000000000000000000000000000000000000000000000000000000000908290600401612b58565b600060405180830381600087803b158015611c4057600080fd5b505af1158015611c54573d6000803e3d6000fd5b505050505050565b815160009060208401611c7764ffffffffff85168284611eb8565b95945050505050565b600061125862ffffff19831660286004611eff565b600080611cab8360781c6001600160601b031690565b6001600160601b031690506000611ccb8460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000611258611cec83611f2f565b90565b600061125862ffffff198316826004611eff565b600061125862ffffff19831660246004611eff565b600061125862ffffff19831660046020611f40565b6000611258604c611d4b81601886901c6001600160601b031661291f565b62ffffff1985169190600061209c565b6060600080611d738460181c6001600160601b031690565b6001600160601b031690506040519150819250611d938483602001612116565b508181016020016040529052919050565b6000336001600160a01b03841614611de85760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106ef565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6d9190612b96565b5091509150836001600160a01b0316826001600160a01b0316148015611c7757507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b600080611ec58385612a96565b9050604051811115611ed5575060005b80600003611eea5762ffffff19915050611414565b5050606092831b9190911790911b1760181b90565b6000611f0c826020612bcd565b611f17906008612bf0565b60ff16611f25858585611f40565b901c949350505050565b600061125862ffffff198316602c60205b60008160ff16600003611f5557506000611414565b611f688460181c6001600160601b031690565b6001600160601b0316611f7e60ff841685612a96565b1115611fe257611fc9611f9a8560781c6001600160601b031690565b6001600160601b0316611fb68660181c6001600160601b031690565b6001600160601b0316858560ff1661226d565b60405162461bcd60e51b81526004016106ef9190612c19565b60208260ff16111561205c5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106ef565b6008820260006120758660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806120b28660781c6001600160601b031690565b6001600160601b031690506120c6866122db565b846120d18784612a96565b6120db9190612a96565b11156120ee5762ffffff199150506116d9565b6120f88582612a96565b905061210c8364ffffffffff168286611eb8565b9695505050505050565b600062ffffff198084160361217e5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106ef565b61218783612314565b6121e75760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106ef565b60006121fc8460181c6001600160601b031690565b6001600160601b03169050600061221c8560781c6001600160601b031690565b6001600160601b03169050600060405190508481111561223c5760206060fd5b8285848460045afa5061210c6122528760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060600061227a86612351565b915050600061228886612351565b915050600061229686612351565b91505060006122a486612351565b915050838383836040516020016122be9493929190612c2c565b604051602081830303815290604052945050505050949350505050565b60006122f08260181c6001600160601b031690565b6123038360781c6001600160601b031690565b016001600160601b03169050919050565b60006123208260d81c90565b64ffffffffff1664ffffffffff0361233a57506000919050565b6000612345836122db565b60405110199392505050565b600080601f5b600f8160ff1611156123a6576000612370826008612bf0565b60ff1685901c9050612381816123ff565b61ffff16841793508160ff1660101461239c57601084901b93505b5060001901612357565b50600f5b60ff8160ff1610156123f95760006123c3826008612bf0565b60ff1685901c90506123d4816123ff565b61ffff16831792508160ff166000146123ef57601083901b92505b50600019016123aa565b50915091565b600061241160048360ff16901c612431565b60ff1661ffff919091161760081b61242882612431565b60ff1617919050565b600060f08083179060ff8216900361244c5750603092915050565b8060ff1660f1036124605750603192915050565b8060ff1660f2036124745750603292915050565b8060ff1660f3036124885750603392915050565b8060ff1660f40361249c5750603492915050565b8060ff1660f5036124b05750603592915050565b8060ff1660f6036124c45750603692915050565b8060ff1660f7036124d85750603792915050565b8060ff1660f8036124ec5750603892915050565b8060ff1660f9036125005750603992915050565b8060ff1660fa036125145750606192915050565b8060ff1660fb036125285750606292915050565b8060ff1660fc0361253c5750606392915050565b8060ff1660fd036125505750606492915050565b8060ff1660fe036125645750606592915050565b8060ff1660ff036125785750606692915050565b50919050565b60006020828403121561259057600080fd5b5035919050565b6001600160a01b03811681146107d757600080fd5b6000602082840312156125be57600080fd5b813561141481612597565b634e487b7160e01b600052602160045260246000fd5b602081016003831061260157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261262e57600080fd5b813567ffffffffffffffff8082111561264957612649612607565b604051601f8301601f19908116603f0116810190828211818310171561267157612671612607565b8160405283815286602085880101111561268a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156126bc57600080fd5b813567ffffffffffffffff8111156126d357600080fd5b6116d98482850161261d565b60005b838110156126fa5781810151838201526020016126e2565b83811115612709576000848401525b50505050565b600081518084526127278160208601602086016126df565b601f01601f19169290920160200192915050565b82151581526040602082015260006116d9604083018461270f565b80151581146107d757600080fd5b60006020828403121561277657600080fd5b813561141481612756565b6000806040838503121561279457600080fd5b50508035926020909101359150565b803563ffffffff811681146127b757600080fd5b919050565b6000602082840312156127ce57600080fd5b611414826127a3565b60008060008061044085870312156127ee57600080fd5b843567ffffffffffffffff8082111561280657600080fd5b818701915087601f83011261281a57600080fd5b81358181111561282957600080fd5b8860208260051b850101111561283e57600080fd5b60208301965080955050505061042085018681111561285c57600080fd5b9396929550505060209290920191903590565b60008060006060848603121561288457600080fd5b61288d846127a3565b925060208401359150604084013567ffffffffffffffff8111156128b057600080fd5b6128bc8682870161261d565b9150509250925092565b6040815260006128d9604083018561270f565b905060018060a01b03831660208301529392505050565b60006020828403121561290257600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561293157612931612909565b500390565b60006020828403121561294857600080fd5b815161141481612756565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261298057600080fd5b9190910192915050565b6000808335601e198436030181126129a157600080fd5b83018035915067ffffffffffffffff8211156129bc57600080fd5b6020019150368190038213156129d157600080fd5b9250929050565b8183823760009101908152919050565b600063ffffffff808316818516808303821115612a0757612a07612909565b01949350505050565b60008060408385031215612a2357600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061210c608083018461270f565b805160208083015191908110156125785760001960209190910360031b1b16919050565b600060018201612a8f57612a8f612909565b5060010190565b60008219821115612aa957612aa9612909565b500190565b600063ffffffff80871683528086166020840152508360408301526080606083015261210c608083018461270f565b8381528215156020820152606060408201526000611c77606083018461270f565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612b4681604c8501602087016126df565b91909101604c01979650505050505050565b600060018060a01b03808816835260a06020840152612b7a60a084018861270f565b9516604083015250606081019290925260809091015292915050565b600080600060608486031215612bab57600080fd5b8351612bb681612597565b602085015160409095015190969495509392505050565b600060ff821660ff841680821015612be757612be7612909565b90039392505050565b600060ff821660ff84168160ff0481118215151615612c1157612c11612909565b029392505050565b602081526000611414602083018461270f565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161210c56fea26469706673582212208a233c1c9f4a12c4842d3fce6a35409815f68ebf615c356ae3d4efeb3321951c64736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
