/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultichainSpokeConnector,
  MultichainSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/multichain/MultichainSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorChainId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pending",
        type: "bytes32",
      },
    ],
    name: "AggregateRootsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootCurrent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPendingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "anyExecute",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatorPath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregatorIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
    ],
    name: "setAggregateRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101a06040523480156200001257600080fd5b5060405162003480380380620034808339810160408190526200003591620004f8565b89818d8d838d8d8d8d8d8d8d8d808b8b8b8b8b8b6200005433620003bd565b8563ffffffff166000036200009f5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000eb5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000096565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e052821615620001235762000123826200041c565b80156200013557620001358162000485565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b03909616610100026001600160a81b031990961695909517909455505060016006555050620cf850851015620002025760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000096565b613a98841015620002455760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000096565b6101208590526101408490526001600160a01b038216620002985760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000096565b506001600160a01b03166101005260075550505060008690039450620002f793505050505760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000096565b816001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000336573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200035c9190620005c0565b6001600160a01b0316610160819052620003a55760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000096565b6101805250620005e59b505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620004db57600080fd5b919050565b80516001600160a01b0381168114620004db57600080fd5b6000806000806000806000806000806000806101808d8f0312156200051c57600080fd5b620005278d620004c6565b9b506200053760208e01620004c6565b9a506200054760408e01620004e0565b99506200055760608e01620004e0565b98506200056760808e01620004e0565b975060a08d0151965060c08d0151955060e08d015194506101008d01519350620005956101208e01620004e0565b9250620005a66101408e01620004e0565b91506101608d015190509295989b509295989b509295989b565b600060208284031215620005d357600080fd5b620005de82620004e0565b9392505050565b60805160a05160c05160e0516101005161012051610140516101605161018051612dcf620006b160003960008181611cb80152611f4c01526000611ea90152600081816102df01526119ba015260008181610625015281816119db0152611a620152600081816104e70152818161082301528181610c0901526112ea01526000610289015260006104040152600081816105fe0152818161074d015281816116d30152611b9c0152600081816103bf0152818161047d0152818161129b01526118bc0152612dcf6000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80639aa44d001161015c578063c1ca1622116100ce578063d2a3cc7111610087578063d2a3cc71146105e6578063d69f9d61146105f9578063d88beda214610620578063db1b765914610647578063f38a267b1461065a578063fa31de011461067d57600080fd5b8063c1ca16221461058c578063c5b350df1461059f578063cc394283146105a7578063cf796c75146105ba578063d1851c92146105c3578063d232c220146105d457600080fd5b8063b1f8100d11610120578063b1f8100d14610512578063b2f8764314610525578063b39af46614610538578063b46300ec1461054b578063b697f53114610553578063b95a20011461056657600080fd5b80639aa44d00146104b25780639abaf479146104bb5780639fa92f9d146104dc578063a01892a5146104e2578063ad9c0c2e1461050957600080fd5b80635bd11efc116101f55780636a42b8f8116101b95780636a42b8f81461044f5780636eb67a5114610458578063715018a61461046b5780638456cb59146104735780638d3638f41461047b5780638da5cb5b146104a157600080fd5b80635bd11efc146103e15780635c975abb146103f45780635f61e3ec146103ff57806364fd5f841461043e57806365eaf11b1461044757600080fd5b80633cf52ffb116102475780633cf52ffb146103725780633f4ba83a1461037a5780633fc40eaa146103825780634ff746f61461038b5780635190bc531461039e57806352a9674b146103ba57600080fd5b806314168416146102845780631eeaabea146102c557806325e3beda146102da578063272efc691461030f5780632bbd59ca14610342575b600080fd5b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102d86102d336600461263a565b610690565b005b6103017f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102bc565b61033261031d366004612668565b600c6020526000908152604090205460ff1681565b60405190151581526020016102bc565b61036561035036600461263a565b600e6020526000908152604090205460ff1681565b6040516102bc919061269b565b600254610301565b6102d8610705565b61030160095481565b6102d8610399366004612766565b610742565b6103326103ac366004612668565b6001600160a01b0316301490565b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b6102d86103ef366004612668565b6107e8565b60055460ff16610332565b6104267f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102bc565b610301600a5481565b61030161081f565b62093a80610301565b6102d861046636600461263a565b6108a8565b6102d86108dc565b6102d8610999565b7f00000000000000000000000000000000000000000000000000000000000000006102ab565b6000546001600160a01b0316610426565b61030160085481565b6104ce6104c9366004612766565b610a50565b6040516102bc9291906127f7565b30610426565b6104267f000000000000000000000000000000000000000000000000000000000000000081565b61030160075481565b6102d8610520366004612668565b610a62565b6102d8610533366004612668565b610b07565b6102d8610546366004612812565b610b83565b6102d8610bfd565b6102d8610561366004612668565b610ce6565b6102ab61057436600461284d565b600d6020526000908152604090205463ffffffff1681565b6102d861059a366004612868565b610d65565b6102d86110c9565b600354610426906001600160a01b031681565b61030160045481565b6001546001600160a01b0316610426565b6000546001600160a01b031615610332565b6102d86105f4366004612668565b611124565b6104267f000000000000000000000000000000000000000000000000000000000000000081565b6103017f000000000000000000000000000000000000000000000000000000000000000081565b610332610655366004612668565b6111eb565b61033261066836600461263a565b600b6020526000908152604090205460ff1681565b61030161068b366004612900565b6111fc565b6000546001600160a01b031633146106bb576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036107005760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b6000546001600160a01b03163314610730576040516311a8a1bb60e31b815260040160405180910390fd5b6107386113b9565b610740611402565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107a35760405162461bcd60e51b81526004016106f79060208082526004908201526310a0a6a160e11b604082015260600190565b6107ac81611454565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107dd929190612957565b60405180910390a150565b6000546001600160a01b03163314610813576040516311a8a1bb60e31b815260040160405180910390fd5b61081c816114f4565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561087f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a39190612981565b905090565b6000546001600160a01b031633146108d3576040516311a8a1bb60e31b815260040160405180910390fd5b61081c8161155d565b6000546001600160a01b03163314610907576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361092a57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261093c91906129b0565b1161095a576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610984576040516323295ef960e01b815260040160405180910390fd5b600154610740906001600160a01b031661159e565b6005546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0991906129c7565b610a405760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106f7565b610a486115fd565b610740611643565b60006060610a5d83611454565b915091565b6000546001600160a01b03163314610a8d576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610ab257506001600160a01b03811615155b15610ad0576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610afe57604051634a2fb73f60e11b815260040160405180910390fd5b61081c81611680565b6000546001600160a01b03163314610b32576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107dd565b6000546001600160a01b03163314610bae576040516311a8a1bb60e31b815260040160405180910390fd5b610bb66113b9565b6008829055600981905560408051838152602081018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce76910160405180910390a15050565b610c056115fd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c899190612981565b604051602001610c9b91815260200190565b6040516020818303038152906040529050610cb5816116ce565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107dd929190612957565b6000546001600160a01b03163314610d11576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107dd565b610d6d6115fd565b82610da45760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106f7565b600084846000818110610db957610db96129e9565b9050602002810190610dcb91906129ff565b610dd59080612a20565b604051610de3929190612a6e565b604051809103902090506000610e4a8287876000818110610e0657610e066129e9565b9050602002810190610e1891906129ff565b60200188886000818110610e2e57610e2e6129e9565b9050602002810190610e4091906129ff565b61042001356116f8565b6000818152600b602052604090205490915060ff16610f10576000600a544311610e7657600854610e7a565b6009545b90506000610eb283876020806020026040519081016040528092919082602080028082843760009201919091525089915061179d9050565b9050818114610ef45760405162461bcd60e51b815260206004820152600e60248201526d085859d9dc9959d85d19549bdbdd60921b60448201526064016106f7565b50506000818152600b60205260409020805460ff191660011790555b6000828152600e60205260409020805460ff191660019081179091555b63ffffffff81168611156110345786868263ffffffff16818110610f5357610f536129e9565b9050602002810190610f6591906129ff565b610f6f9080612a20565b604051610f7d929190612a6e565b604051809103902092506000610fd28489898563ffffffff16818110610fa557610fa56129e9565b9050602002810190610fb791906129ff565b6020018a8a8663ffffffff16818110610e2e57610e2e6129e9565b90508281146110115760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106f7565b506000838152600e60205260409020805460ff1916600190811790915501610f2d565b5060005b63ffffffff81168611156110c0576110b787878363ffffffff16818110611061576110616129e9565b905060200281019061107391906129ff565b61107d9080612a20565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061184e92505050565b50600101611038565b50505050505050565b6001546001600160a01b031633146110f4576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261110691906129b0565b116109845760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461114f576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b036101009091048116908216036111b25760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106f7565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107dd565b60006111f682611b95565b92915050565b336000908152600c602052604081205460ff1661124a5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106f7565b63ffffffff8085166000908152600d60205260409020541661126d816001612a7e565b63ffffffff8681166000908152600d60205260408120805463ffffffff1916939092169290921790556112c47f00000000000000000000000000000000000000000000000000000000000000003384898989611bc1565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561133a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135e9190612aa6565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836113906001846129b0565b84876040516113a29493929190612aca565b60405180910390a1509093505050505b9392505050565b60055460ff166107405760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106f7565b61140a6113b9565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611469906001600160a01b0316611b95565b6114a85760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106f7565b80516020146114e35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106f7565b61081c6114ef82612aef565b611bf9565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60055460ff16156107405760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106f7565b61164b6115fd565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114373390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b61081c7f000000000000000000000000000000000000000000000000000000000000000082611c8d565b6000806000858152600e602052604090205460ff16600281111561171e5761171e612685565b146117615760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106f7565b61179584846020806020026040519081016040528092919082602080028082843760009201919091525086915061179d9050565b949350505050565b8260005b602081101561184657600183821c1660008583602081106117c4576117c46129e9565b6020020151905081600103611804576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611831565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050808061183e90612b13565b9150506117a1565b509392505050565b60006002600654036118a25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106f7565b600260065560006118b38382611d18565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166118eb62ffffff198316611d3c565b63ffffffff161461192d5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106f7565b600061193e62ffffff198316611d51565b905060016000828152600e602052604090205460ff16600281111561196557611965612685565b1461199c5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106f7565b6000818152600e60205260409020805460ff191660021790556119ff7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b2c565b5a1015611a375760405162461bcd60e51b81526004016106f7906020808252600490820152632167617360e01b604082015260600190565b6000611a4862ffffff198416611d9a565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611aa562ffffff198916611dab565b611ab462ffffff198a16611dbf565b611ac362ffffff198b16611dd4565b611ae0611ad562ffffff198d16611de9565b62ffffff1916611e17565b604051602401611af39493929190612b44565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611b3c578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611b7a93929190612b73565b60405180910390a15050600160065550949695505050505050565b60006111f67f000000000000000000000000000000000000000000000000000000000000000083611e60565b6060868686868686604051602001611bde96959493929190612b94565b60405160208183030381529060405290509695505050505050565b600754600a54611c099190612b2c565b4311611c465760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016106f7565b6009805460088190559082905543600a5560408051918252602082018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce7691016107dd565b60405163bd45c4e760e01b81526001600160a01b0383169063bd45c4e790611ce290859085906000907f0000000000000000000000000000000000000000000000000000000000000000908290600401612bee565b600060405180830381600087803b158015611cfc57600080fd5b505af1158015611d10573d6000803e3d6000fd5b505050505050565b815160009060208401611d3364ffffffffff85168284611f74565b95945050505050565b60006111f662ffffff19831660286004611fbb565b600080611d678360781c6001600160601b031690565b6001600160601b031690506000611d878460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006111f6611da883611feb565b90565b60006111f662ffffff198316826004611fbb565b60006111f662ffffff19831660246004611fbb565b60006111f662ffffff19831660046020611ffc565b60006111f6604c611e0781601886901c6001600160601b03166129b0565b62ffffff19851691906000612158565b6060600080611e2f8460181c6001600160601b031690565b6001600160601b031690506040519150819250611e4f84836020016121d2565b508181016020016040529052919050565b6000336001600160a01b03841614611ea45760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106f7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611f05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f299190612c2c565b5091509150836001600160a01b0316826001600160a01b0316148015611d3357507f000000000000000000000000000000000000000000000000000000000000000014949350505050565b600080611f818385612b2c565b9050604051811115611f91575060005b80600003611fa65762ffffff199150506113b2565b5050606092831b9190911790911b1760181b90565b6000611fc8826020612c63565b611fd3906008612c86565b60ff16611fe1858585611ffc565b901c949350505050565b60006111f662ffffff198316602c60205b60008160ff16600003612011575060006113b2565b6120248460181c6001600160601b031690565b6001600160601b031661203a60ff841685612b2c565b111561209e576120856120568560781c6001600160601b031690565b6001600160601b03166120728660181c6001600160601b031690565b6001600160601b0316858560ff16612329565b60405162461bcd60e51b81526004016106f79190612caf565b60208260ff1611156121185760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106f7565b6008820260006121318660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60008061216e8660781c6001600160601b031690565b6001600160601b0316905061218286612397565b8461218d8784612b2c565b6121979190612b2c565b11156121aa5762ffffff19915050611795565b6121b48582612b2c565b90506121c88364ffffffffff168286611f74565b9695505050505050565b600062ffffff198084160361223a5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106f7565b612243836123d0565b6122a35760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106f7565b60006122b88460181c6001600160601b031690565b6001600160601b0316905060006122d88560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156122f85760206060fd5b8285848460045afa506121c861230e8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006123368661240d565b91505060006123448661240d565b91505060006123528661240d565b91505060006123608661240d565b9150508383838360405160200161237a9493929190612cc2565b604051602081830303815290604052945050505050949350505050565b60006123ac8260181c6001600160601b031690565b6123bf8360781c6001600160601b031690565b016001600160601b03169050919050565b60006123dc8260d81c90565b64ffffffffff1664ffffffffff036123f657506000919050565b600061240183612397565b60405110199392505050565b600080601f5b600f8160ff16111561246257600061242c826008612c86565b60ff1685901c905061243d816124bb565b61ffff16841793508160ff1660101461245857601084901b93505b5060001901612413565b50600f5b60ff8160ff1610156124b557600061247f826008612c86565b60ff1685901c9050612490816124bb565b61ffff16831792508160ff166000146124ab57601083901b92505b5060001901612466565b50915091565b60006124cd60048360ff16901c6124ed565b60ff1661ffff919091161760081b6124e4826124ed565b60ff1617919050565b600060f08083179060ff821690036125085750603092915050565b8060ff1660f10361251c5750603192915050565b8060ff1660f2036125305750603292915050565b8060ff1660f3036125445750603392915050565b8060ff1660f4036125585750603492915050565b8060ff1660f50361256c5750603592915050565b8060ff1660f6036125805750603692915050565b8060ff1660f7036125945750603792915050565b8060ff1660f8036125a85750603892915050565b8060ff1660f9036125bc5750603992915050565b8060ff1660fa036125d05750606192915050565b8060ff1660fb036125e45750606292915050565b8060ff1660fc036125f85750606392915050565b8060ff1660fd0361260c5750606492915050565b8060ff1660fe036126205750606592915050565b8060ff1660ff036126345750606692915050565b50919050565b60006020828403121561264c57600080fd5b5035919050565b6001600160a01b038116811461081c57600080fd5b60006020828403121561267a57600080fd5b81356113b281612653565b634e487b7160e01b600052602160045260246000fd5b60208101600383106126bd57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126126ea57600080fd5b813567ffffffffffffffff80821115612705576127056126c3565b604051601f8301601f19908116603f0116810190828211818310171561272d5761272d6126c3565b8160405283815286602085880101111561274657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561277857600080fd5b813567ffffffffffffffff81111561278f57600080fd5b611795848285016126d9565b60005b838110156127b657818101518382015260200161279e565b838111156127c5576000848401525b50505050565b600081518084526127e381602086016020860161279b565b601f01601f19169290920160200192915050565b821515815260406020820152600061179560408301846127cb565b6000806040838503121561282557600080fd5b50508035926020909101359150565b803563ffffffff8116811461284857600080fd5b919050565b60006020828403121561285f57600080fd5b6113b282612834565b600080600080610440858703121561287f57600080fd5b843567ffffffffffffffff8082111561289757600080fd5b818701915087601f8301126128ab57600080fd5b8135818111156128ba57600080fd5b8860208260051b85010111156128cf57600080fd5b6020830196508095505050506104208501868111156128ed57600080fd5b9396929550505060209290920191903590565b60008060006060848603121561291557600080fd5b61291e84612834565b925060208401359150604084013567ffffffffffffffff81111561294157600080fd5b61294d868287016126d9565b9150509250925092565b60408152600061296a60408301856127cb565b905060018060a01b03831660208301529392505050565b60006020828403121561299357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156129c2576129c261299a565b500390565b6000602082840312156129d957600080fd5b815180151581146113b257600080fd5b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612a1657600080fd5b9190910192915050565b6000808335601e19843603018112612a3757600080fd5b83018035915067ffffffffffffffff821115612a5257600080fd5b602001915036819003821315612a6757600080fd5b9250929050565b8183823760009101908152919050565b600063ffffffff808316818516808303821115612a9d57612a9d61299a565b01949350505050565b60008060408385031215612ab957600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006121c860808301846127cb565b805160208083015191908110156126345760001960209190910360031b1b16919050565b600060018201612b2557612b2561299a565b5060010190565b60008219821115612b3f57612b3f61299a565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526121c860808301846127cb565b8381528215156020820152606060408201526000611d3360608301846127cb565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612bdc81604c85016020870161279b565b91909101604c01979650505050505050565b600060018060a01b03808816835260a06020840152612c1060a08401886127cb565b9516604083015250606081019290925260809091015292915050565b600080600060608486031215612c4157600080fd5b8351612c4c81612653565b602085015160409095015190969495509392505050565b600060ff821660ff841680821015612c7d57612c7d61299a565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ca757612ca761299a565b029392505050565b6020815260006113b260208301846127cb565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016121c856fea26469706673582212203e0b4e1667e0f6160b25ae347278c572234bdfa4aa06495c7a9975a43674cfd764736f6c634300080f0033";

type MultichainSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainSpokeConnector__factory extends ContractFactory {
  constructor(...args: MultichainSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    ) as Promise<MultichainSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _mirrorChainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _mirrorChainId,
      overrides || {}
    );
  }
  override attach(address: string): MultichainSpokeConnector {
    return super.attach(address) as MultichainSpokeConnector;
  }
  override connect(signer: Signer): MultichainSpokeConnector__factory {
    return super.connect(signer) as MultichainSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainSpokeConnectorInterface {
    return new utils.Interface(_abi) as MultichainSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultichainSpokeConnector;
  }
}
