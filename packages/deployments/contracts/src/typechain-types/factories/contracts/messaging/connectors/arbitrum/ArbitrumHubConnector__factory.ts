/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumHubConnector,
  ArbitrumHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSubmissionCostCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxGasCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasPriceCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasPriceCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "MaxGasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "MaxSubmissionCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RetryableTicketCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPriceCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxGasCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSubmissionCostCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IArbitrumOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_sendRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "l2Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l1Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l2Timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct L2Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IArbitrumRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setGasPriceCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setMaxGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setMaxSubmissionCostCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200223f3803806200223f833981016040819052620000359162000335565b888888888884848484846200004a3362000235565b8463ffffffff16600003620000955760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008c565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e052811615620001195762000119816200029a565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600480546001600160a01b0319166001600160a01b038e1690811782556040805163cb23bcb560e01b81529051919a5063cb23bcb599508083019850602097509095508590030192508391508790505afa158015620001d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fc9190620003d5565b600580546001600160a01b0319166001600160a01b039290921691909117905560069290925560075560085550620003fa945050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200031857600080fd5b919050565b80516001600160a01b03811681146200031857600080fd5b60008060008060008060008060006101208a8c0312156200035557600080fd5b620003608a62000303565b98506200037060208b0162000303565b97506200038060408b016200031d565b96506200039060608b016200031d565b9550620003a060808b016200031d565b9450620003b060a08b016200031d565b935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b600060208284031215620003e857600080fd5b620003f3826200031d565b9392505050565b60805160a05160c05160e051611de16200045e6000396000818161024201526109a701526000818161037c0152818161062801526109d8015260008181610539015281816106dd01528181610d170152611359015260006102f50152611de16000f3fe6080604052600436106101bb5760003560e01c80639ab0563b116100ec578063ce11e6ab1161008a578063d69f9d6111610064578063d69f9d6114610527578063db1b76591461055b578063e2ce3c641461057b578063fbd4006b1461059157600080fd5b8063ce11e6ab146104ca578063d1851c92146104ea578063d232c2201461050857600080fd5b8063b64d327e116100c6578063b64d327e1461045f578063c5b350df14610475578063cb23bcb51461048a578063cc394283146104aa57600080fd5b80639ab0563b146103ff5780639d4373a41461041f578063b1f8100d1461043f57600080fd5b806352a9674b116101595780635f61e3ec116101335780635f61e3ec1461036a5780636a42b8f8146103b6578063715018a6146103cc5780638da5cb5b146103e157600080fd5b806352a9674b146102e35780635bd11efc146103175780635c36b1861461033757600080fd5b80633327998d116101955780633327998d146102795780633cf52ffb1461029b57806348e6fa23146102b05780634ff746f6146102c357600080fd5b806305a79e06146101c75780630fca49cd1461020c578063141684161461023057600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101f76101e2366004611759565b60096020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561021857600080fd5b5061022260065481565b604051908152602001610203565b34801561023c57600080fd5b506102647f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610203565b34801561028557600080fd5b50610299610294366004611759565b6105b1565b005b3480156102a757600080fd5b50600254610222565b6102996102be36600461183f565b61061d565b3480156102cf57600080fd5b506102996102de3660046118a3565b6106d2565b3480156102ef57600080fd5b506102647f000000000000000000000000000000000000000000000000000000000000000081565b34801561032357600080fd5b506102996103323660046118f5565b610778565b34801561034357600080fd5b506040805180820182526004815263706f6e6760e01b602082015290516102039190611958565b34801561037657600080fd5b5061039e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610203565b3480156103c257600080fd5b5062093a80610222565b3480156103d857600080fd5b506102996107af565b3480156103ed57600080fd5b506000546001600160a01b031661039e565b34801561040b57600080fd5b5061029961041a366004611759565b610863565b34801561042b57600080fd5b5061029961043a366004611999565b6108cf565b34801561044b57600080fd5b5061029961045a3660046118f5565b610a9e565b34801561046b57600080fd5b5061022260075481565b34801561048157600080fd5b50610299610b3c565b34801561049657600080fd5b5060055461039e906001600160a01b031681565b3480156104b657600080fd5b5060035461039e906001600160a01b031681565b3480156104d657600080fd5b5060045461039e906001600160a01b031681565b3480156104f657600080fd5b506001546001600160a01b031661039e565b34801561051457600080fd5b506000546001600160a01b0316156101f7565b34801561053357600080fd5b5061039e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561056757600080fd5b506101f76105763660046118f5565b610bac565b34801561058757600080fd5b5061022260085481565b34801561059d57600080fd5b506102996105ac366004611759565b610bbd565b6000546001600160a01b031633146105dc576040516311a8a1bb60e31b815260040160405180910390fd5b60065460408051918252602082018390527f8826388bbfa56ae5df40ee5607d9d354fa66549d854624242c77b5af2a5e4c3b910160405180910390a1600655565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106895760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6106938282610c29565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516106c693929190611a63565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107335760405162461bcd60e51b81526004016106809060208082526004908201526310a0a6a160e11b604082015260600190565b61073c81610e32565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161076d929190611aa1565b60405180910390a150565b6000546001600160a01b031633146107a3576040516311a8a1bb60e31b815260040160405180910390fd5b6107ac81610e4b565b50565b6000546001600160a01b031633146107da576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426107ec9190611ae1565b1161080a576040516324e0285f60e21b815260040160405180910390fd5b60025460000361082d57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610857576040516323295ef960e01b815260040160405180910390fd5b6108616000610eb4565b565b6000546001600160a01b0316331461088e576040516311a8a1bb60e31b815260040160405180910390fd5b60075460408051918252602082018390527f57bffb29c4c6b672a2e334fa00ea826dba286d6cb34d61bebc6c667abb579c62910160405180910390a1600755565b6108da878787610f19565b6108e7868585858561106e565b6108f460c0820182611af4565b905060641461092f5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610680565b6000610993604460206109868461094960c0880188611af4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506111d19050565b62ffffff191691906111f5565b60405163473ec9fd60e11b815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e7d93fa90604401600060405180830381600087803b158015610a2457600080fd5b505af1158015610a38573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81604051602001610a7091815260200190565b60408051601f1981840301815290829052610a8c913390611aa1565b60405180910390a15050505050505050565b6000546001600160a01b03163314610ac9576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610ae7575060025415155b15610b05576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610b3357604051634a2fb73f60e11b815260040160405180910390fd5b6107ac81611304565b6001546001600160a01b03163314610b67576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610b799190611ae1565b11610b97576040516324e0285f60e21b815260040160405180910390fd5b600154610861906001600160a01b0316610eb4565b6000610bb782611352565b92915050565b6000546001600160a01b03163314610be8576040516311a8a1bb60e31b815260040160405180910390fd5b60065460408051918252602082018390527f7f46895145f361561c5e9bbaf45b71269a4399dc3064511f123ebf4c6f04e357910160405180910390a1600855565b8151602014610c645760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610680565b6000634ff746f660e01b83604051602401610c7f9190611958565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091528251909150606014610cf45760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610680565b600080600084806020019051810190610d0d9190611b42565b92509250925060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679b6ded34600360009054906101000a90046001600160a01b03166000610d6989600654611398565b6003546007546001600160a01b03909116908190610d88908c90611398565b610d948b600854611398565b8e6040518a63ffffffff1660e01b8152600401610db8989796959493929190611b70565b60206040518083038185885af1158015610dd6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610dfb9190611bcb565b60405190915081907fde92b5b7839f4a2c640f5e3bbb66d415458dadc57a487b0c7fa562ed7c9c896f90600090a250505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b604080516020808201849052818301859052825180830384018152606090920190925280519101206000906005546040516324b204d360e21b815267ffffffffffffffff871660048201529192506000916001600160a01b03909116906392c8134c9060240161018060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc19190611bf4565b9050818160400151146110055760405162461bcd60e51b815260206004820152600c60248201526b21636f6e6669726d4461746160a01b6044820152606401610680565b60008160c0015167ffffffffffffffff16118015611031575060008160e0015167ffffffffffffffff16115b6110675760405162461bcd60e51b8152602060048201526007602482015266085cdd185ad95960ca1b6044820152606401610680565b5050505050565b6003546001600160a01b031661108760208301836118f5565b6001600160a01b0316146110d05760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610680565b6004546000906001600160a01b0316639f0c04bf6110f160208501856118f5565b61110160408601602087016118f5565b60408601356060870135608088013560a089013561112260c08b018b611af4565b6040518963ffffffff1660e01b8152600401611145989796959493929190611cc6565b602060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111869190611bcb565b90506111c98585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508591508a90506113ae565b505050505050565b8151600090602084016111ec64ffffffffff85168284611547565b95945050505050565b60008160ff1660000361120a575060006112fd565b61121d8460181c6001600160601b031690565b6001600160601b031661123360ff841685611d2e565b111561129b5761124c8460781c6001600160601b031690565b61125f8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610680565b60208260ff1611156112c05760405163045df3f960e01b815260040160405180910390fd5b6008820260006112d98660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91860151909116925050505b9392505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600061137d7f0000000000000000000000000000000000000000000000000000000000000000611584565b6001600160a01b0316826001600160a01b0316149050919050565b60008183106113a757816112fd565b5090919050565b6101008451106113ef5760405162461bcd60e51b815260206004820152600c60248201526b0e0e4dedecc40d8cadccee8d60a31b6044820152606401610680565b835183901c156114325760405162461bcd60e51b815260206004820152600e60248201526d10b6b4b734b6b0b610383937b7b360911b6044820152606401610680565b60008381526009602052604090205460ff16156114795760405162461bcd60e51b81526020600482015260056024820152641cdc195b9d60da1b6044820152606401610680565b60048054604051627436d360e01b81526000926001600160a01b0390921691627436d3916114ad9189918991899101611d41565b602060405180830381865afa1580156114ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ee9190611bcb565b90508181146115285760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b6044820152606401610680565b5050506000908152600960205260409020805460ff1916600117905550565b6000806115548385611d2e565b9050604051811115611564575060005b806000036115795762ffffff199150506112fd565b6111ec8585856116e2565b60006001600160a01b03821633146115af5760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116139190611d8e565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa158015611650573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116749190611d8e565b90506001600160a01b038116610bb75760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b6064820152608401610680565b60006060601883856001600160601b0382168214801561170a575086816001600160601b0316145b6117435760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610680565b96831b90961790911b90941790931b9392505050565b60006020828403121561176b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156117ac576117ac611772565b60405290565b600082601f8301126117c357600080fd5b813567ffffffffffffffff808211156117de576117de611772565b604051601f8301601f19908116603f0116810190828211818310171561180657611806611772565b8160405283815286602085880101111561181f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561185257600080fd5b823567ffffffffffffffff8082111561186a57600080fd5b611876868387016117b2565b9350602085013591508082111561188c57600080fd5b50611899858286016117b2565b9150509250929050565b6000602082840312156118b557600080fd5b813567ffffffffffffffff8111156118cc57600080fd5b6118d8848285016117b2565b949350505050565b6001600160a01b03811681146107ac57600080fd5b60006020828403121561190757600080fd5b81356112fd816118e0565b6000815180845260005b818110156119385760208185018101518683018201520161191c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006112fd6020830184611912565b67ffffffffffffffff811681146107ac57600080fd5b600060e0828403121561199357600080fd5b50919050565b600080600080600080600060c0888a0312156119b457600080fd5b87356119bf8161196b565b96506020880135955060408801359450606088013567ffffffffffffffff808211156119ea57600080fd5b818a0191508a601f8301126119fe57600080fd5b813581811115611a0d57600080fd5b8b60208260051b8501011115611a2257600080fd5b6020830196508095505060808a0135935060a08a0135915080821115611a4757600080fd5b50611a548a828b01611981565b91505092959891949750929550565b606081526000611a766060830186611912565b8281036020840152611a888186611912565b91505060018060a01b0383166040830152949350505050565b604081526000611ab46040830185611912565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610bb757610bb7611acb565b6000808335601e19843603018112611b0b57600080fd5b83018035915067ffffffffffffffff821115611b2657600080fd5b602001915036819003821315611b3b57600080fd5b9250929050565b600080600060608486031215611b5757600080fd5b8351925060208401519150604084015190509250925092565b600061010060018060a01b03808c1684528a602085015289604085015280891660608501528088166080850152508560a08401528460c08401528060e0840152611bbc81840185611912565b9b9a5050505050505050505050565b600060208284031215611bdd57600080fd5b5051919050565b8051611bef8161196b565b919050565b60006101808284031215611c0757600080fd5b611c0f611788565b825181526020830151602082015260408301516040820152611c3360608401611be4565b6060820152611c4460808401611be4565b6080820152611c5560a08401611be4565b60a0820152611c6660c08401611be4565b60c0820152611c7760e08401611be4565b60e0820152610100611c8a818501611be4565b90820152610120611c9c848201611be4565b90820152610140611cae848201611be4565b90820152610160928301519281019290925250919050565b600060018060a01b03808b168352808a166020840152508760408301528660608301528560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b80820180821115610bb757610bb7611acb565b606080825284519082018190526000906020906080840190828801845b82811015611d7a57815184529284019290840190600101611d5e565b505050908301949094525060400152919050565b600060208284031215611da057600080fd5b81516112fd816118e056fea2646970667358221220e203e342f6f3e00b697c41832b310b51d30b4cc2ef296faa6381eeff0d5ce9da64736f6c63430008110033";

type ArbitrumHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumHubConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _outbox: PromiseOrValue<string>,
    _maxSubmissionCostCap: PromiseOrValue<BigNumberish>,
    _maxGasCap: PromiseOrValue<BigNumberish>,
    _gasPriceCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _outbox,
      _maxSubmissionCostCap,
      _maxGasCap,
      _gasPriceCap,
      overrides || {}
    ) as Promise<ArbitrumHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _outbox: PromiseOrValue<string>,
    _maxSubmissionCostCap: PromiseOrValue<BigNumberish>,
    _maxGasCap: PromiseOrValue<BigNumberish>,
    _gasPriceCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _outbox,
      _maxSubmissionCostCap,
      _maxGasCap,
      _gasPriceCap,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumHubConnector {
    return super.attach(address) as ArbitrumHubConnector;
  }
  override connect(signer: Signer): ArbitrumHubConnector__factory {
    return super.connect(signer) as ArbitrumHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumHubConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumHubConnector;
  }
}
