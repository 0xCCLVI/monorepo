/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumHubConnector,
  ArbitrumHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "DefaultGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IArbitrumOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_sendRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "l2Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l1Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l2Timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct L2Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IArbitrumRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_defaultGasPrice",
        type: "uint256",
      },
    ],
    name: "setDefaultGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620024f8380380620024f8833981016040819052620000359162000383565b8787878787878585858585856200004c3362000248565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b82620002a7565b80156200012d576200012d8162000310565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350505060058b90555050600680546001600160a01b0319166001600160a01b038a169081179091556040805163cb23bcb560e01b8152905191985063cb23bcb597506004808201975060209650919450849003019150829050865afa158015620001f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000219919062000419565b600780546001600160a01b0319166001600160a01b0392909216919091179055506200043e9650505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200036657600080fd5b919050565b80516001600160a01b03811681146200036657600080fd5b600080600080600080600080610100898b031215620003a157600080fd5b620003ac8962000351565b9750620003bc60208a0162000351565b9650620003cc60408a016200036b565b9550620003dc60608a016200036b565b9450620003ec60808a016200036b565b935060a0890151925060c089015191506200040a60e08a016200036b565b90509295985092959890939650565b6000602082840312156200042c57600080fd5b62000437826200036b565b9392505050565b60805160a05160c05160e051612056620004a2600039600081816101c201526108a80152600081816102b3015281816104f301526108d9015260008181610490015281816105a801528181610ba401526111c60152600061025f01526120566000f3fe6080604052600436106101665760003560e01c80638da5cb5b116100d1578063ce11e6ab1161008a578063d232c22011610064578063d232c2201461045f578063d69f9d611461047e578063db1b7659146104b2578063e7b4294c146104d257600080fd5b8063ce11e6ab1461040b578063cf796c751461042b578063d1851c921461044157600080fd5b80638da5cb5b146103585780639d4373a414610376578063b1f8100d14610396578063c5b350df146103b6578063cb23bcb5146103cb578063cc394283146103eb57600080fd5b80635bd11efc116101235780635bd11efc146102815780635f61e3ec146102a15780636a42b8f8146102ed5780636eb67a5114610303578063715018a6146103235780638b42a40a1461033857600080fd5b806305a79e061461016b57806314168416146101b05780633cf52ffb146101f957806348e6fa23146102185780634ff746f61461022d57806352a9674b1461024d575b600080fd5b34801561017757600080fd5b5061019b6101863660046118a2565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101bc57600080fd5b506101e47f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101a7565b34801561020557600080fd5b506002545b6040519081526020016101a7565b61022b610226366004611988565b6104e8565b005b34801561023957600080fd5b5061022b6102483660046119ec565b61059d565b34801561025957600080fd5b506101e47f000000000000000000000000000000000000000000000000000000000000000081565b34801561028d57600080fd5b5061022b61029c366004611a3e565b61063a565b3480156102ad57600080fd5b506102d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101a7565b3480156102f957600080fd5b5062093a8061020a565b34801561030f57600080fd5b5061022b61031e3660046118a2565b610671565b34801561032f57600080fd5b5061022b6106a5565b34801561034457600080fd5b5061022b6103533660046118a2565b610764565b34801561036457600080fd5b506000546001600160a01b03166102d5565b34801561038257600080fd5b5061022b610391366004611a83565b6107d0565b3480156103a257600080fd5b5061022b6103b1366004611a3e565b61098f565b3480156103c257600080fd5b5061022b610a34565b3480156103d757600080fd5b506007546102d5906001600160a01b031681565b3480156103f757600080fd5b506003546102d5906001600160a01b031681565b34801561041757600080fd5b506006546102d5906001600160a01b031681565b34801561043757600080fd5b5061020a60045481565b34801561044d57600080fd5b506001546001600160a01b03166102d5565b34801561046b57600080fd5b506000546001600160a01b03161561019b565b34801561048a57600080fd5b506102d57f000000000000000000000000000000000000000000000000000000000000000081565b3480156104be57600080fd5b5061019b6104cd366004611a3e565b610a8f565b3480156104de57600080fd5b5061020a60055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105545760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055e8282610aa0565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161059193929190611b9a565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fe5760405162461bcd60e51b815260040161054b9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161062f929190611bd8565b60405180910390a150565b6000546001600160a01b03163314610665576040516311a8a1bb60e31b815260040160405180910390fd5b61066e81610c33565b50565b6000546001600160a01b0316331461069c576040516311a8a1bb60e31b815260040160405180910390fd5b61066e81610c9c565b6000546001600160a01b031633146106d0576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036106f357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107059190611c18565b11610723576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561074d576040516323295ef960e01b815260040160405180910390fd5b600154610762906001600160a01b0316610cdd565b565b6000546001600160a01b0316331461078f576040516311a8a1bb60e31b815260040160405180910390fd5b60055460408051918252602082018390527f577c2dd19d86f7555790e151b7455ad2b3897b5c6037646b19672da61a1a8734910160405180910390a1600555565b6107db878787610d3c565b6107e88685858585610e8a565b6107f560c0820182611c2f565b90506024146108305760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161054b565b6000610894600460206108878461084a60c0880188611c2f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509293925050610fed9050565b62ffffff19169190611011565b60405163473ec9fd60e11b815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e7d93fa90604401600060405180830381600087803b15801561092557600080fd5b505af1158015610939573d6000803e3d6000fd5b507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced925061096d91505060c0840184611c2f565b3360405161097d93929190611ca6565b60405180910390a15050505050505050565b6000546001600160a01b031633146109ba576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156109df57506001600160a01b03811615155b156109fd576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a2b57604051634a2fb73f60e11b815260040160405180910390fd5b61066e81611171565b6001546001600160a01b03163314610a5f576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a719190611c18565b1161074d5760405163d39c12bb60e01b815260040160405180910390fd5b6000610a9a826111bf565b92915050565b8151602014610adb5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161054b565b6000634ff746f660e01b83604051602401610af69190611cd2565b60408051601f19818403018152919052602080820180516001600160e01b03166001600160e01b031990941693909317909252835190925014610b6a5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b604482015260640161054b565b600082806020019051810190610b809190611ce5565b6003546004805460055460405163679b6ded60e01b81529495506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169563679b6ded953495610be99593909116936000938a9333938493918e9101611cfe565b60206040518083038185885af1158015610c07573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610c2c9190611ce5565b5050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516020808201849052818301859052825180830384018152606090920190925280519101206000906007546040516324b204d360e21b815267ffffffffffffffff871660048201529192506000916001600160a01b03909116906392c8134c9060240161018060405180830381865afa158015610dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de49190611d69565b905081816040015114610e285760405162461bcd60e51b815260206004820152600c60248201526b21636f6e6669726d4461746160a01b604482015260640161054b565b60008160c0015167ffffffffffffffff16118015610e54575060008160e0015167ffffffffffffffff16115b610c2c5760405162461bcd60e51b8152602060048201526007602482015266085cdd185ad95960ca1b604482015260640161054b565b6003546001600160a01b0316610ea36020830183611a3e565b6001600160a01b031614610eec5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161054b565b6006546000906001600160a01b0316639f0c04bf610f0d6020850185611a3e565b610f1d6040860160208701611a3e565b60408601356060870135608088013560a0890135610f3e60c08b018b611c2f565b6040518963ffffffff1660e01b8152600401610f61989796959493929190611e3b565b602060405180830381865afa158015610f7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa29190611ce5565b9050610fe58585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508591508a9050611205565b505050505050565b81516000906020840161100864ffffffffff851682846113a6565b95945050505050565b60008160ff166000036110265750600061116a565b6110398460181c6001600160601b031690565b6001600160601b031661104f60ff841685611e8d565b11156110b35761109a61106b8560781c6001600160601b031690565b6001600160601b03166110878660181c6001600160601b031690565b6001600160601b0316858560ff166113ed565b60405162461bcd60e51b815260040161054b9190611cd2565b60208260ff16111561112d5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161054b565b6008820260006111468660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91860151909116925050505b9392505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006111ea7f0000000000000000000000000000000000000000000000000000000000000000611517565b6001600160a01b0316826001600160a01b0316149050919050565b6101008451106112465760405162461bcd60e51b815260206004820152600c60248201526b0e0e4dedecc40d8cadccee8d60a31b604482015260640161054b565b8351611253906002611f89565b83106112925760405162461bcd60e51b815260206004820152600e60248201526d10b6b4b734b6b0b610383937b7b360911b604482015260640161054b565b60008381526008602052604090205460ff16156112d95760405162461bcd60e51b81526020600482015260056024820152641cdc195b9d60da1b604482015260640161054b565b600654604051627436d360e01b81526000916001600160a01b031690627436d39061130c90889088908890600401611f95565b602060405180830381865afa158015611329573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134d9190611ce5565b90508181146113875760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b604482015260640161054b565b5050506000908152600860205260409020805460ff1916600117905550565b6000806113b38385611e8d565b90506040518111156113c3575060005b806000036113d85762ffffff1991505061116a565b5050606092831b9190911790911b1760181b90565b606060006113fa86611675565b915050600061140886611675565b915050600061141686611675565b915050600061142486611675565b604080517f54797065644d656d566965772f696e646578202d204f76657272616e20746865602082015274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b818301526001600160d01b031960d098891b811660558301526e040eed2e8d040d8cadccee8d04060f608b1b605b830181905297891b8116606a8301527f2e20417474656d7074656420746f20696e646578206174206f666673657420306070830152600f60fb1b609083015295881b861660918201526097810196909652951b90921660a68401525050601760f91b60ac8201528151808203608d01815260ad90910190915295945050505050565b60006001600160a01b03821633146115425760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190611fe2565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116079190611fe2565b90506001600160a01b038116610a9a5760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b606482015260840161054b565b600080601f5b600f8160ff1611156116ca576000611694826008611fff565b60ff1685901c90506116a581611723565b61ffff16841793508160ff166010146116c057601084901b93505b506000190161167b565b50600f5b60ff8160ff16101561171d5760006116e7826008611fff565b60ff1685901c90506116f881611723565b61ffff16831792508160ff1660001461171357601083901b92505b50600019016116ce565b50915091565b600061173560048360ff16901c611755565b60ff1661ffff919091161760081b61174c82611755565b60ff1617919050565b600060f08083179060ff821690036117705750603092915050565b8060ff1660f1036117845750603192915050565b8060ff1660f2036117985750603292915050565b8060ff1660f3036117ac5750603392915050565b8060ff1660f4036117c05750603492915050565b8060ff1660f5036117d45750603592915050565b8060ff1660f6036117e85750603692915050565b8060ff1660f7036117fc5750603792915050565b8060ff1660f8036118105750603892915050565b8060ff1660f9036118245750603992915050565b8060ff1660fa036118385750606192915050565b8060ff1660fb0361184c5750606292915050565b8060ff1660fc036118605750606392915050565b8060ff1660fd036118745750606492915050565b8060ff1660fe036118885750606592915050565b8060ff1660ff0361189c5750606692915050565b50919050565b6000602082840312156118b457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff811182821017156118f5576118f56118bb565b60405290565b600082601f83011261190c57600080fd5b813567ffffffffffffffff80821115611927576119276118bb565b604051601f8301601f19908116603f0116810190828211818310171561194f5761194f6118bb565b8160405283815286602085880101111561196857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561199b57600080fd5b823567ffffffffffffffff808211156119b357600080fd5b6119bf868387016118fb565b935060208501359150808211156119d557600080fd5b506119e2858286016118fb565b9150509250929050565b6000602082840312156119fe57600080fd5b813567ffffffffffffffff811115611a1557600080fd5b611a21848285016118fb565b949350505050565b6001600160a01b038116811461066e57600080fd5b600060208284031215611a5057600080fd5b813561116a81611a29565b67ffffffffffffffff8116811461066e57600080fd5b600060e0828403121561189c57600080fd5b600080600080600080600060c0888a031215611a9e57600080fd5b8735611aa981611a5b565b96506020880135955060408801359450606088013567ffffffffffffffff80821115611ad457600080fd5b818a0191508a601f830112611ae857600080fd5b813581811115611af757600080fd5b8b60208260051b8501011115611b0c57600080fd5b6020830196508095505060808a0135935060a08a0135915080821115611b3157600080fd5b50611b3e8a828b01611a71565b91505092959891949750929550565b6000815180845260005b81811015611b7357602081850181015186830182015201611b57565b81811115611b85576000602083870101525b50601f01601f19169290920160200192915050565b606081526000611bad6060830186611b4d565b8281036020840152611bbf8186611b4d565b91505060018060a01b0383166040830152949350505050565b604081526000611beb6040830185611b4d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611c2a57611c2a611c02565b500390565b6000808335601e19843603018112611c4657600080fd5b83018035915067ffffffffffffffff821115611c6157600080fd5b602001915036819003821315611c7657600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000611cba604083018587611c7d565b905060018060a01b0383166020830152949350505050565b60208152600061116a6020830184611b4d565b600060208284031215611cf757600080fd5b5051919050565b600061010060018060a01b03808c1684528a602085015289604085015280891660608501528088166080850152508560a08401528460c08401528060e0840152611d4a81840185611b4d565b9b9a5050505050505050505050565b8051611d6481611a5b565b919050565b60006101808284031215611d7c57600080fd5b611d846118d1565b825181526020830151602082015260408301516040820152611da860608401611d59565b6060820152611db960808401611d59565b6080820152611dca60a08401611d59565b60a0820152611ddb60c08401611d59565b60c0820152611dec60e08401611d59565b60e0820152610100611dff818501611d59565b90820152610120611e11848201611d59565b90820152610140611e23848201611d59565b90820152610160928301519281019290925250919050565b600060018060a01b03808b168352808a166020840152508760408301528660608301528560808301528460a083015260e060c0830152611e7f60e083018486611c7d565b9a9950505050505050505050565b60008219821115611ea057611ea0611c02565b500190565b600181815b80851115611ee0578160001904821115611ec657611ec6611c02565b80851615611ed357918102915b93841c9390800290611eaa565b509250929050565b600082611ef757506001610a9a565b81611f0457506000610a9a565b8160018114611f1a5760028114611f2457611f40565b6001915050610a9a565b60ff841115611f3557611f35611c02565b50506001821b610a9a565b5060208310610133831016604e8410600b8410161715611f63575081810a610a9a565b611f6d8383611ea5565b8060001904821115611f8157611f81611c02565b029392505050565b600061116a8383611ee8565b606080825284519082018190526000906020906080840190828801845b82811015611fce57815184529284019290840190600101611fb2565b505050908301949094525060400152919050565b600060208284031215611ff457600080fd5b815161116a81611a29565b600060ff821660ff84168160ff0481118215151615611f8157611f81611c0256fea264697066735822122017531d70106d658ec868ca36e65e6c0d461e194ed301bd7da80ee653132248d564736f6c634300080f0033";

type ArbitrumHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumHubConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _defaultGasPrice,
      _outbox,
      overrides || {}
    ) as Promise<ArbitrumHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _defaultGasPrice: PromiseOrValue<BigNumberish>,
    _outbox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _defaultGasPrice,
      _outbox,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumHubConnector {
    return super.attach(address) as ArbitrumHubConnector;
  }
  override connect(signer: Signer): ArbitrumHubConnector__factory {
    return super.connect(signer) as ArbitrumHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumHubConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumHubConnector;
  }
}
