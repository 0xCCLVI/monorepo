/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonZkHubConnector,
  PolygonZkHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygonzk/PolygonZkHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_mirrorNetworkId",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "originNetwork",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onMessageReceived",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200129c3803806200129c833981016040819052620000359162000295565b80868686868684848484846200004b3362000195565b8463ffffffff16600003620000965760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e25760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008d565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011a576200011a81620001fa565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350505063ffffffff9097166101005250620003169b505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200027857600080fd5b919050565b80516001600160a01b03811681146200027857600080fd5b60008060008060008060c08789031215620002af57600080fd5b620002ba8762000263565b9550620002ca6020880162000263565b9450620002da604088016200027d565b9350620002ea606088016200027d565b9250620002fa608088016200027d565b91506200030a60a0880162000263565b90509295509295509295565b60805160a05160c05160e05161010051610f106200038c600039600081816103be0152610b6301526000818161012b015261084f01526000818161025101528181610485015261082801526000818161037801528181610535015281816108e00152610a56015260006101fd0152610f106000f3fe60806040526004361061010d5760003560e01c8063715018a611610095578063cc39428311610064578063cc39428314610309578063d1851c9214610329578063d232c22014610347578063d69f9d6114610366578063db1b76591461039a57600080fd5b8063715018a6146102a15780638da5cb5b146102b6578063b1f8100d146102d4578063c5b350df146102f457600080fd5b80634ff746f6116100dc5780634ff746f6146101cb57806352a9674b146101eb5780635bd11efc1461021f5780635f61e3ec1461023f5780636a42b8f81461028b57600080fd5b806314168416146101195780631806b5f2146101675780633cf52ffb1461019757806348e6fa23146101b657600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561017357600080fd5b50610187610182366004610c86565b6103ba565b604051901515815260200161015e565b3480156101a357600080fd5b506002545b60405190815260200161015e565b6101c96101c4366004610cef565b61047a565b005b3480156101d757600080fd5b506101c96101e6366004610d53565b61052a565b3480156101f757600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561022b57600080fd5b506101c961023a366004610d90565b6105d0565b34801561024b57600080fd5b506102737f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015e565b34801561029757600080fd5b5062093a806101a8565b3480156102ad57600080fd5b506101c9610607565b3480156102c257600080fd5b506000546001600160a01b0316610273565b3480156102e057600080fd5b506101c96102ef366004610d90565b6106bb565b34801561030057600080fd5b506101c9610759565b34801561031557600080fd5b50600354610273906001600160a01b031681565b34801561033557600080fd5b506001546001600160a01b0316610273565b34801561035357600080fd5b506000546001600160a01b031615610187565b34801561037257600080fd5b506102737f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a657600080fd5b506101876103b5366004610d90565b6107c9565b60007f000000000000000000000000000000000000000000000000000000000000000063ffffffff168363ffffffff161461042e5760405162461bcd60e51b815260206004820152600f60248201526e216d6972726f72206e6574776f726b60881b60448201526064015b60405180910390fd5b81516020146104695760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610425565b61047384836107da565b9392505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e15760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610425565b6104eb82826108d7565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161051e93929190610df1565b60405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461058b5760405162461bcd60e51b81526004016104259060208082526004908201526310a0a6a160e11b604082015260600190565b61059481610914565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105c5929190610e2f565b60405180910390a150565b6000546001600160a01b031633146105fb576040516311a8a1bb60e31b815260040160405180910390fd5b6106048161092d565b50565b6000546001600160a01b03163314610632576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426106449190610e59565b11610662576040516324e0285f60e21b815260040160405180910390fd5b60025460000361068557604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156106af576040516323295ef960e01b815260040160405180910390fd5b6106b96000610996565b565b6000546001600160a01b031633146106e6576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610704575060025415155b15610722576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361075057604051634a2fb73f60e11b815260040160405180910390fd5b610604816109fb565b6001546001600160a01b03163314610784576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107969190610e59565b116107b4576040516324e0285f60e21b815260040160405180910390fd5b6001546106b9906001600160a01b0316610996565b60006107d482610a49565b92915050565b6107e382610a49565b61081e5760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606401610425565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f000000000000000000000000000000000000000000000000000000000000000061087784610e7a565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156108bb57600080fd5b505af11580156108cf573d6000803e3d6000fd5b505050505050565b600354610910907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03168484610ac1565b5050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aac5760405162461bcd60e51b81526004016104259060208082526004908201526310b0b6b160e11b604082015260600190565b506003546001600160a01b0391821691161490565b8151602014610b015760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610425565b805115610b3f5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610425565b60405163d96a15f760e01b81526001600160a01b0385169063d96a15f790610b8f907f00000000000000000000000000000000000000000000000000000000000000009087908790600401610ea1565b600060405180830381600087803b158015610ba957600080fd5b505af1158015610bbd573d6000803e3d6000fd5b5050505050505050565b80356001600160a01b0381168114610bde57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c0a57600080fd5b813567ffffffffffffffff80821115610c2557610c25610be3565b604051601f8301601f19908116603f01168101908282118183101715610c4d57610c4d610be3565b81604052838152866020858801011115610c6657600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610c9b57600080fd5b610ca484610bc7565b9250602084013563ffffffff81168114610cbd57600080fd5b9150604084013567ffffffffffffffff811115610cd957600080fd5b610ce586828701610bf9565b9150509250925092565b60008060408385031215610d0257600080fd5b823567ffffffffffffffff80821115610d1a57600080fd5b610d2686838701610bf9565b93506020850135915080821115610d3c57600080fd5b50610d4985828601610bf9565b9150509250929050565b600060208284031215610d6557600080fd5b813567ffffffffffffffff811115610d7c57600080fd5b610d8884828501610bf9565b949350505050565b600060208284031215610da257600080fd5b61047382610bc7565b6000815180845260005b81811015610dd157602081850181015186830182015201610db5565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610e046060830186610dab565b8281036020840152610e168186610dab565b91505060018060a01b0383166040830152949350505050565b604081526000610e426040830185610dab565b905060018060a01b03831660208301529392505050565b818103818111156107d457634e487b7160e01b600052601160045260246000fd5b80516020808301519190811015610e9b576000198160200360031b1b821691505b50919050565b63ffffffff841681526001600160a01b0383166020820152606060408201819052600090610ed190830184610dab565b9594505050505056fea2646970667358221220c63545fbf8d62dc374b5fc2f6df97ec5dbfb8c8d3de706926847a3e0506857ca64736f6c63430008110033";

type PolygonZkHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonZkHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonZkHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonZkHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonZkHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorNetworkId,
      overrides || {}
    ) as Promise<PolygonZkHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorNetworkId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorNetworkId,
      overrides || {}
    );
  }
  override attach(address: string): PolygonZkHubConnector {
    return super.attach(address) as PolygonZkHubConnector;
  }
  override connect(signer: Signer): PolygonZkHubConnector__factory {
    return super.connect(signer) as PolygonZkHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonZkHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonZkHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonZkHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonZkHubConnector;
  }
}
