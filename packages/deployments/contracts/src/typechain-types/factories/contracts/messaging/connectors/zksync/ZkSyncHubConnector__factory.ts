/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ZkSyncHubConnector,
  ZkSyncHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/zksync/ZkSyncHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2BlockNumber",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_l2MessageIndex",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_l2TxNumberInBlock",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162001824380380620018248339810160408190526200003591620002dc565b80878787878784848484846200004b336200019b565b8463ffffffff16600003620000965760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e25760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008d565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011a576200011a8162000200565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018d816200026960201b60201c565b505050505050505062000368565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002bf57600080fd5b919050565b80516001600160a01b0381168114620002bf57600080fd5b600080600080600080600060e0888a031215620002f857600080fd5b6200030388620002aa565b96506200031360208901620002aa565b95506200032360408901620002c4565b94506200033360608901620002c4565b93506200034360808901620002c4565b92506200035360a08901620002c4565b915060c0880151905092959891949750929550565b60805160a05160c05160e051611451620003d36000396000818161014c01526109ab0152600081816102750152818161046901526109e60152600081816103fc0152818161051e0152818161086601528181610bab0152610c61015260006101ee01526114516000f3fe60806040526004361061012e5760003560e01c80637850b020116100ab578063cc3942831161006f578063cc3942831461038d578063d1851c92146103ad578063d232c220146103cb578063d69f9d61146103ea578063db1b76591461041e578063e92a492f1461043e57600080fd5b80637850b020146102da5780638da5cb5b146102fa578063b1f8100d14610318578063c1f0808a14610338578063c5b350df1461037857600080fd5b80635bd11efc116100f25780635bd11efc146102105780635c36b186146102305780635f61e3ec146102635780636a42b8f8146102af578063715018a6146102c557600080fd5b8063141684161461013a5780633cf52ffb1461018857806348e6fa23146101a75780634ff746f6146101bc57806352a9674b146101dc57600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561019457600080fd5b506002545b60405190815260200161017f565b6101ba6101b5366004610f60565b61045e565b005b3480156101c857600080fd5b506101ba6101d7366004610fc4565b610513565b3480156101e857600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021c57600080fd5b506101ba61022b366004611001565b6105b9565b34801561023c57600080fd5b506040805180820182526004815263706f6e6760e01b6020820152905161017f9190611077565b34801561026f57600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017f565b3480156102bb57600080fd5b5062093a80610199565b3480156102d157600080fd5b506101ba6105f0565b3480156102e657600080fd5b506101ba6102f536600461108a565b6106a4565b34801561030657600080fd5b506000546001600160a01b0316610297565b34801561032457600080fd5b506101ba610333366004611001565b6106d8565b34801561034457600080fd5b5061036861035336600461108a565b60056020526000908152604090205460ff1681565b604051901515815260200161017f565b34801561038457600080fd5b506101ba610776565b34801561039957600080fd5b50600354610297906001600160a01b031681565b3480156103b957600080fd5b506001546001600160a01b0316610297565b3480156103d757600080fd5b506000546001600160a01b031615610368565b3480156103f657600080fd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b34801561042a57600080fd5b50610368610439366004611001565b6107e6565b34801561044a57600080fd5b506101ba610459366004611131565b6107f0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104ca5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104d48282610a8b565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077828233604051610507939291906111e0565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105745760405162461bcd60e51b81526004016104c19060208082526004908201526310a0a6a160e11b604082015260600190565b61057d81610d31565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105ae92919061121e565b60405180910390a150565b6000546001600160a01b031633146105e4576040516311a8a1bb60e31b815260040160405180910390fd5b6105ed81610d4a565b50565b6000546001600160a01b0316331461061b576040516311a8a1bb60e31b815260040160405180910390fd5b62093a806002544261062d9190611248565b1161064b576040516324e0285f60e21b815260040160405180910390fd5b60025460000361066e57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610698576040516323295ef960e01b815260040160405180910390fd5b6106a26000610db3565b565b6000546001600160a01b031633146106cf576040516311a8a1bb60e31b815260040160405180910390fd5b6105ed81610e18565b6000546001600160a01b03163314610703576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610721575060025415155b1561073f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361076d57604051634a2fb73f60e11b815260040160405180910390fd5b6105ed81610e59565b6001546001600160a01b031633146107a1576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107b39190611248565b116107d1576040516324e0285f60e21b815260040160405180910390fd5b6001546106a2906001600160a01b0316610db3565b6000805b92915050565b6020831461082a5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c1565b6040805160608101825261ffff871681526003546001600160a01b03166020808301919091528251601f870182900482028101820184528681527f0000000000000000000000000000000000000000000000000000000000000000936000939290830191908990899081908401838280828437600092018290525093909452505060405163e4948f4360e01b8152929350916001600160a01b038516915063e4948f43906108e4908d908d9087908b908b90600401611269565b602060405180830381865afa158015610901573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092591906112f2565b90508061095e5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016104c1565b600061096a8789611314565b60008181526005602052604090205490915060ff16610a7e5760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b158015610a2a57600080fd5b505af1158015610a3e573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced888833604051610a7593929190611332565b60405180910390a15b5050505050505050505050565b8051602014610acb5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104c1565b8151602014610b065760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c1565b6000634ff746f660e01b83604051602401610b219190611077565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600082806020019051810190610b6c9190611373565b90506127106000610b7c34610ea7565b8451604051632e6b3b8f60e11b8152600481018690526024810185905263ffffffff90911660448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635cd6771e90606401602060405180830381865afa158015610bfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1e9190611373565b8111610c545760405162461bcd60e51b8152602060048201526005602482015264216665657360d81b60448201526064016104c1565b6003546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163725ad850918491166000888782604051908082528060200260200182016040528015610cc457816020015b6060815260200190600190039081610caf5790505b506040518763ffffffff1660e01b8152600401610ce595949392919061138c565b60206040518083038185885af1158015610d03573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d289190611373565b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000600454821115610eb95760045491505b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ee457600080fd5b813567ffffffffffffffff80821115610eff57610eff610ebd565b604051601f8301601f19908116603f01168101908282118183101715610f2757610f27610ebd565b81604052838152866020858801011115610f4057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610f7357600080fd5b823567ffffffffffffffff80821115610f8b57600080fd5b610f9786838701610ed3565b93506020850135915080821115610fad57600080fd5b50610fba85828601610ed3565b9150509250929050565b600060208284031215610fd657600080fd5b813567ffffffffffffffff811115610fed57600080fd5b610ff984828501610ed3565b949350505050565b60006020828403121561101357600080fd5b81356001600160a01b038116811461102a57600080fd5b9392505050565b6000815180845260005b818110156110575760208185018101518683018201520161103b565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061102a6020830184611031565b60006020828403121561109c57600080fd5b5035919050565b60008083601f8401126110b557600080fd5b50813567ffffffffffffffff8111156110cd57600080fd5b6020830191508360208285010111156110e557600080fd5b9250929050565b60008083601f8401126110fe57600080fd5b50813567ffffffffffffffff81111561111657600080fd5b6020830191508360208260051b85010111156110e557600080fd5b600080600080600080600060a0888a03121561114c57600080fd5b873563ffffffff8116811461116057600080fd5b965060208801359550604088013561ffff8116811461117e57600080fd5b9450606088013567ffffffffffffffff8082111561119b57600080fd5b6111a78b838c016110a3565b909650945060808a01359150808211156111c057600080fd5b506111cd8a828b016110ec565b989b979a50959850939692959293505050565b6060815260006111f36060830186611031565b82810360208401526112058186611031565b91505060018060a01b0383166040830152949350505050565b6040815260006112316040830185611031565b905060018060a01b03831660208301529392505050565b818103818111156107ea57634e487b7160e01b600052601160045260246000fd5b63ffffffff861681528460208201526080604082015261ffff845116608082015260018060a01b0360208501511660a082015260006040850151606060c08401526112b760e0840182611031565b838103606085015284815290506001600160fb1b038411156112d857600080fd5b8360051b8086602084013701602001979650505050505050565b60006020828403121561130457600080fd5b8151801515811461102a57600080fd5b803560208310156107ea57600019602084900360031b1b1692915050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b60006020828403121561138557600080fd5b5051919050565b60018060a01b038616815260006020868184015260a060408401526113b460a0840187611031565b85606085015283810360808501528085518083528383019150838160051b84010184880160005b8381101561140957601f198684030185526113f7838351611031565b948701949250908601906001016113db565b50909c9b50505050505050505050505056fea2646970667358221220bca9b763bd348aa8977f94a7e5a290d4236b41bac18cd51cc9fb3db49bbe756364736f6c63430008110033";

type ZkSyncHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkSyncHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkSyncHubConnector__factory extends ContractFactory {
  constructor(...args: ZkSyncHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkSyncHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<ZkSyncHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): ZkSyncHubConnector {
    return super.attach(address) as ZkSyncHubConnector;
  }
  override connect(signer: Signer): ZkSyncHubConnector__factory {
    return super.connect(signer) as ZkSyncHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkSyncHubConnectorInterface {
    return new utils.Interface(_abi) as ZkSyncHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkSyncHubConnector {
    return new Contract(address, _abi, signerOrProvider) as ZkSyncHubConnector;
  }
}
