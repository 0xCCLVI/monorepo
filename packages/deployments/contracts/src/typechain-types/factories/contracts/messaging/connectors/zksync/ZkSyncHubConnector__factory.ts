/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ZkSyncHubConnector,
  ZkSyncHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/zksync/ZkSyncHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2BlockNumber",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_l2MessageIndex",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "_l2TxNumberInBlock",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b506040516200180b3803806200180b8339810160408190526200003591620002dc565b80878787878784848484846200004b336200019b565b8463ffffffff16600003620000965760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e25760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008d565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011a576200011a8162000200565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018d816200026960201b60201c565b505050505050505062000368565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002bf57600080fd5b919050565b80516001600160a01b0381168114620002bf57600080fd5b600080600080600080600060e0888a031215620002f857600080fd5b6200030388620002aa565b96506200031360208901620002aa565b95506200032360408901620002c4565b94506200033360608901620002c4565b93506200034360808901620002c4565b92506200035360a08901620002c4565b915060c0880151905092959891949750929550565b60805160a05160c05160e051611438620003d360003960008181610175015261099201526000818161025c0152818161045001526109cd0152600081816103e3015281816105050152818161084d01528181610b920152610c480152600061020801526114386000f3fe60806040526004361061012e5760003560e01c80637850b020116100ab578063cc3942831161006f578063cc39428314610374578063d1851c9214610394578063d232c220146103b2578063d69f9d61146103d1578063db1b765914610405578063e92a492f1461042557600080fd5b80637850b020146102c15780638da5cb5b146102e1578063b1f8100d146102ff578063c1f0808a1461031f578063c5b350df1461035f57600080fd5b806352a9674b116100f257806352a9674b146101f65780635bd11efc1461022a5780635f61e3ec1461024a5780636a42b8f814610296578063715018a6146102ac57600080fd5b8063047dbeb81461013a57806314168416146101635780633cf52ffb146101ac57806348e6fa23146101c15780634ff746f6146101d657600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015060045481565b6040519081526020015b60405180910390f35b34801561016f57600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161015a565b3480156101b857600080fd5b50600254610150565b6101d46101cf366004610f47565b610445565b005b3480156101e257600080fd5b506101d46101f1366004610fab565b6104fa565b34801561020257600080fd5b506101977f000000000000000000000000000000000000000000000000000000000000000081565b34801561023657600080fd5b506101d4610245366004610fe8565b6105a0565b34801561025657600080fd5b5061027e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015a565b3480156102a257600080fd5b5062093a80610150565b3480156102b857600080fd5b506101d46105d7565b3480156102cd57600080fd5b506101d46102dc366004611018565b61068b565b3480156102ed57600080fd5b506000546001600160a01b031661027e565b34801561030b57600080fd5b506101d461031a366004610fe8565b6106bf565b34801561032b57600080fd5b5061034f61033a366004611018565b60056020526000908152604090205460ff1681565b604051901515815260200161015a565b34801561036b57600080fd5b506101d461075d565b34801561038057600080fd5b5060035461027e906001600160a01b031681565b3480156103a057600080fd5b506001546001600160a01b031661027e565b3480156103be57600080fd5b506000546001600160a01b03161561034f565b3480156103dd57600080fd5b5061027e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561041157600080fd5b5061034f610420366004610fe8565b6107cd565b34801561043157600080fd5b506101d46104403660046110bf565b6107d7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b15760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104bb8282610a72565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516104ee939291906111b4565b60405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461055b5760405162461bcd60e51b81526004016104a89060208082526004908201526310a0a6a160e11b604082015260600190565b61056481610d18565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105959291906111f2565b60405180910390a150565b6000546001600160a01b031633146105cb576040516311a8a1bb60e31b815260040160405180910390fd5b6105d481610d31565b50565b6000546001600160a01b03163314610602576040516311a8a1bb60e31b815260040160405180910390fd5b62093a8060025442610614919061121c565b11610632576040516324e0285f60e21b815260040160405180910390fd5b60025460000361065557604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561067f576040516323295ef960e01b815260040160405180910390fd5b6106896000610d9a565b565b6000546001600160a01b031633146106b6576040516311a8a1bb60e31b815260040160405180910390fd5b6105d481610dff565b6000546001600160a01b031633146106ea576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610708575060025415155b15610726576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361075457604051634a2fb73f60e11b815260040160405180910390fd5b6105d481610e40565b6001546001600160a01b03163314610788576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261079a919061121c565b116107b8576040516324e0285f60e21b815260040160405180910390fd5b600154610689906001600160a01b0316610d9a565b6000805b92915050565b602083146108115760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104a8565b6040805160608101825261ffff871681526003546001600160a01b03166020808301919091528251601f870182900482028101820184528681527f0000000000000000000000000000000000000000000000000000000000000000936000939290830191908990899081908401838280828437600092018290525093909452505060405163e4948f4360e01b8152929350916001600160a01b038516915063e4948f43906108cb908d908d9087908b908b9060040161123d565b602060405180830381865afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c91906112c6565b9050806109455760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016104a8565b600061095187896112e8565b60008181526005602052604090205490915060ff16610a655760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced888833604051610a5c93929190611306565b60405180910390a15b5050505050505050505050565b8051602014610ab25760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104a8565b8151602014610aed5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104a8565b6000634ff746f660e01b83604051602401610b089190611347565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050509050600082806020019051810190610b53919061135a565b90506127106000610b6334610e8e565b8451604051632e6b3b8f60e11b8152600481018690526024810185905263ffffffff90911660448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635cd6771e90606401602060405180830381865afa158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c05919061135a565b8111610c3b5760405162461bcd60e51b8152602060048201526005602482015264216665657360d81b60448201526064016104a8565b6003546001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169163725ad850918491166000888782604051908082528060200260200182016040528015610cab57816020015b6060815260200190600190039081610c965790505b506040518763ffffffff1660e01b8152600401610ccc959493929190611373565b60206040518083038185885af1158015610cea573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d0f919061135a565b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000600454821115610ea05760045491505b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ecb57600080fd5b813567ffffffffffffffff80821115610ee657610ee6610ea4565b604051601f8301601f19908116603f01168101908282118183101715610f0e57610f0e610ea4565b81604052838152866020858801011115610f2757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610f5a57600080fd5b823567ffffffffffffffff80821115610f7257600080fd5b610f7e86838701610eba565b93506020850135915080821115610f9457600080fd5b50610fa185828601610eba565b9150509250929050565b600060208284031215610fbd57600080fd5b813567ffffffffffffffff811115610fd457600080fd5b610fe084828501610eba565b949350505050565b600060208284031215610ffa57600080fd5b81356001600160a01b038116811461101157600080fd5b9392505050565b60006020828403121561102a57600080fd5b5035919050565b60008083601f84011261104357600080fd5b50813567ffffffffffffffff81111561105b57600080fd5b60208301915083602082850101111561107357600080fd5b9250929050565b60008083601f84011261108c57600080fd5b50813567ffffffffffffffff8111156110a457600080fd5b6020830191508360208260051b850101111561107357600080fd5b600080600080600080600060a0888a0312156110da57600080fd5b873563ffffffff811681146110ee57600080fd5b965060208801359550604088013561ffff8116811461110c57600080fd5b9450606088013567ffffffffffffffff8082111561112957600080fd5b6111358b838c01611031565b909650945060808a013591508082111561114e57600080fd5b5061115b8a828b0161107a565b989b979a50959850939692959293505050565b6000815180845260005b8181101561119457602081850181015186830182015201611178565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006111c7606083018661116e565b82810360208401526111d9818661116e565b91505060018060a01b0383166040830152949350505050565b604081526000611205604083018561116e565b905060018060a01b03831660208301529392505050565b818103818111156107d157634e487b7160e01b600052601160045260246000fd5b63ffffffff861681528460208201526080604082015261ffff845116608082015260018060a01b0360208501511660a082015260006040850151606060c084015261128b60e084018261116e565b838103606085015284815290506001600160fb1b038411156112ac57600080fd5b8360051b8086602084013701602001979650505050505050565b6000602082840312156112d857600080fd5b8151801515811461101157600080fd5b803560208310156107d157600019602084900360031b1b1692915050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b602081526000611011602083018461116e565b60006020828403121561136c57600080fd5b5051919050565b60018060a01b038616815260006020868184015260a0604084015261139b60a084018761116e565b85606085015283810360808501528085518083528383019150838160051b84010184880160005b838110156113f057601f198684030185526113de83835161116e565b948701949250908601906001016113c2565b50909c9b50505050505050505050505056fea26469706673582212205d12b953105e60affc237954133ac8c46572a38fe1f7bc7eaa5ab31125f5147b64736f6c63430008110033";

type ZkSyncHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkSyncHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkSyncHubConnector__factory extends ContractFactory {
  constructor(...args: ZkSyncHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkSyncHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<ZkSyncHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): ZkSyncHubConnector {
    return super.attach(address) as ZkSyncHubConnector;
  }
  override connect(signer: Signer): ZkSyncHubConnector__factory {
    return super.connect(signer) as ZkSyncHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkSyncHubConnectorInterface {
    return new utils.Interface(_abi) as ZkSyncHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkSyncHubConnector {
    return new Contract(address, _abi, signerOrProvider) as ZkSyncHubConnector;
  }
}
