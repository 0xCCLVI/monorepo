/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002f5b38038062002f5b8339810160408190526200003591620003af565b878787878787878787808888888888858484620000523362000274565b8263ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152600960248201526832b6b83a3c9030b6b160b91b604482015260640162000094565b6001600160a01b0381166200012d5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff9283166080526001600160a01b0391821660a052811660c05290861660e05282161562000164576200016482620002d3565b8015620001765762000176816200033c565b5050505050508063ffffffff16600003620001be5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000094565b63ffffffff16610100526001602655620cf850821015620002115760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98811015620002545760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101209190915261014052506200043c9c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200039257600080fd5b919050565b80516001600160a01b03811681146200039257600080fd5b600080600080600080600080610100898b031215620003cd57600080fd5b620003d8896200037d565b9750620003e860208a016200037d565b9650620003f860408a0162000397565b95506200040860608a0162000397565b94506200041860808a0162000397565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e051610100516101205161014051612a7e620004dd6000396000818161028f0152610f3701526000818161055601528181610f580152610fdf01526000818161041a01526104c10152600061025301526000818161038c015261081f01526000818161052f015281816105df0152818161123201526112f501526000818161035201528181610b980152610e390152612a7e6000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80639fa92f9d11610130578063cf796c75116100b8578063db1b76591161007c578063db1b765914610578578063ee250e061461058b578063f38a267b14610594578063fa31de01146105b7578063fd54b228146105ca57600080fd5b8063cf796c75146104fe578063d1851c9214610507578063d232c22014610518578063d69f9d611461052a578063d88beda21461055157600080fd5b8063b697f531116100ff578063b697f53114610483578063b95a200114610496578063c2fb26a6146104bc578063c5b350df146104e3578063cc394283146104eb57600080fd5b80639fa92f9d1461044f578063b1f8100d14610455578063b2f8764314610468578063b46300ec1461047b57600080fd5b80635bd11efc116101be5780636eb67a51116101825780636eb67a51146103ea578063715018a6146103fd57806382646a58146104055780638d3638f4146104185780638da5cb5b1461043e57600080fd5b80635bd11efc146103745780635f61e3ec146103875780636188af0e146103c657806365eaf11b146103d95780636a42b8f8146103e157600080fd5b80632bbd59ca116102055780632bbd59ca146102e45780633cf52ffb146103145780634ff746f61461031c5780635190bc531461033157806352a9674b1461034d57600080fd5b806306661abd14610237578063141684161461024e57806325e3beda1461028a578063272efc69146102b1575b600080fd5b6025545b6040519081526020015b60405180910390f35b6102757f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610245565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102d46102bf366004612353565b60296020526000908152604090205460ff1681565b6040519015158152602001610245565b6103076102f2366004612370565b602b6020526000908152604090205460ff1681565b604051610245919061239f565b60025461023b565b61032f61032a36600461246a565b6105d4565b005b6102d461033f366004612353565b6001600160a01b0316301490565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b61032f610382366004612353565b610683565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610245565b61032f6103d436600461249f565b6106ba565b61023b610710565b62093a8061023b565b61032f6103f8366004612370565b610721565b61032f610755565b61032f61041336600461246a565b610814565b7f0000000000000000000000000000000000000000000000000000000000000000610275565b6000546001600160a01b03166103ae565b306103ae565b61032f610463366004612353565b6108b5565b61032f610476366004612353565b61095a565b61032f6109d6565b61032f610491366004612353565b610a0e565b6102756104a4366004612518565b602a6020526000908152604090205463ffffffff1681565b6102757f000000000000000000000000000000000000000000000000000000000000000081565b61032f610a8d565b6003546103ae906001600160a01b031681565b61023b60045481565b6001546001600160a01b03166103ae565b6000546001600160a01b0316156102d4565b6103ae7f000000000000000000000000000000000000000000000000000000000000000081565b61023b7f000000000000000000000000000000000000000000000000000000000000000081565b6102d4610586366004612353565b610ae8565b61023b60275481565b6102d46105a2366004612370565b60286020526000908152604090205460ff1681565b61032f6105c5366004612533565b610af9565b60255461023b9081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461063e5760405162461bcd60e51b81526004016106359060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61064781610c38565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106789291906125e2565b60405180910390a150565b6000546001600160a01b031633146106ae576040516311a8a1bb60e31b815260040160405180910390fd5b6106b781610cd4565b50565b6106cc83805190602001208383610d3d565b6107015760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610635565b61070a83610dcb565b50505050565b600061071c6005611112565b905090565b6000546001600160a01b0316331461074c576040516311a8a1bb60e31b815260040160405180910390fd5b6106b781611125565b6000546001600160a01b03163314610780576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107a357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107b59190612622565b116107d3576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107fd576040516323295ef960e01b815260040160405180910390fd5b600154610812906001600160a01b0316611166565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461087b5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610635565b610884816111c5565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516106789291906125e2565b6000546001600160a01b031633146108e0576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561090557506001600160a01b03811615155b15610923576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361095157604051634a2fb73f60e11b815260040160405180910390fd5b6106b7816112a0565b6000546001600160a01b03163314610985576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610678565b60006109e26005611112565b6040516020016109f491815260200190565b6040516020818303038152906040529050610884816111c5565b6000546001600160a01b03163314610a39576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610678565b6001546001600160a01b03163314610ab8576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610aca9190612622565b116107fd5760405163d39c12bb60e01b815260040160405180910390fd5b6000610af3826112ee565b92915050565b3360009081526029602052604090205460ff16610b475760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610635565b63ffffffff8084166000908152602a602052604090205416610b6a816001612639565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610bc17f0000000000000000000000000000000000000000000000000000000000000000338488888861131a565b80516020820120909150610bd6600582611352565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610c0360255490565b610c0d9190612622565b610c176005611112565b85604051610c289493929190612661565b60405180910390a1505050505050565b600354610c4d906001600160a01b03166112ee565b610c885760405162461bcd60e51b815260206004820152600c60248201526b10b618a1b7b73732b1ba37b960a11b6044820152606401610635565b8051602014610cc35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610635565b6106b7610ccf82612686565b61146f565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610d6357610d63612389565b14610da65760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610635565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610e1f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610635565b60026026556000610e3083826114b1565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610e6862ffffff1983166114d5565b63ffffffff1614610eaa5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610635565b6000610ebb62ffffff1983166114ea565b905060016000828152602b602052604090205460ff166002811115610ee257610ee2612389565b14610f195760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610635565b6000818152602b60205260409020805460ff19166002179055610f7c7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006126aa565b5a1015610fb45760405162461bcd60e51b8152600401610635906020808252600490820152632167617360e01b604082015260600190565b6000610fc562ffffff198416611533565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061102262ffffff198916611544565b61103162ffffff198a16611558565b61104062ffffff198b1661156d565b61105d61105262ffffff198d16611582565b62ffffff19166115b0565b60405160240161107094939291906126c2565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d9450838511156110b9578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110f7939291906126f1565b60405180910390a15050600160265550949695505050505050565b6000610af3826111206115f9565b611aba565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000634ff746f660e01b826040516024016111e09190612712565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b9461126a9490921692879201612725565b600060405180830381600087803b15801561128457600080fd5b505af1158015611298573d6000803e3d6000fd5b505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610af37f000000000000000000000000000000000000000000000000000000000000000083611b8c565b60608686868686866040516020016113379695949392919061275f565b60405160208183030381529060405290509695505050505050565b60016113606020600261289d565b61136a9190612622565b8260200154106113af5760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610635565b60018260200160008282546113c491906126aa565b9091555050602082015460005b6020811015611461578160011660010361140057828482602081106113f8576113f86128a9565b015550505050565b838160208110611412576114126128a9565b0154604080516020810192909252810184905260600160405160208183030381529060405280519060200120925060028261144d91906128bf565b915080611459816128e1565b9150506113d1565b5061146a6128fa565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b8151600090602084016114cc64ffffffffff85168284611c4d565b95945050505050565b6000610af362ffffff19831660286004611c94565b6000806115008360781c6001600160601b031690565b6001600160601b0316905060006115208460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610af361154183611cc4565b90565b6000610af362ffffff198316826004611c94565b6000610af362ffffff19831660246004611c94565b6000610af362ffffff19831660046020611cd5565b6000610af3604c6115a081601886901c6001600160601b0316612622565b62ffffff19851691906000611e31565b60606000806115c88460181c6001600160601b031690565b6001600160601b0316905060405191508192506115e88483602001611ead565b508181016020016040529052919050565b61160161231f565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611b8457600182821c166000868360208110611ae757611ae76128a9565b0154905081600103611b24576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611b6f565b84868460208110611b3757611b376128a9565b6020020151604051602001611b56929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611b7c906128e1565b915050611ac4565b505092915050565b6000336001600160a01b03841614611bd05760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610635565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3c9190612910565b6001600160a01b0316149392505050565b600080611c5a83856126aa565b9050604051811115611c6a575060005b80600003611c7f5762ffffff19915050610dc4565b5050606092831b9190911790911b1760181b90565b6000611ca182602061292d565b611cac906008612950565b60ff16611cba858585611cd5565b901c949350505050565b6000610af362ffffff198316602c60205b60008160ff16600003611cea57506000610dc4565b611cfd8460181c6001600160601b031690565b6001600160601b0316611d1360ff8416856126aa565b1115611d7757611d5e611d2f8560781c6001600160601b031690565b6001600160601b0316611d4b8660181c6001600160601b031690565b6001600160601b0316858560ff1661200e565b60405162461bcd60e51b81526004016106359190612712565b60208260ff161115611df15760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610635565b600882026000611e0a8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611e478660781c6001600160601b031690565b6001600160601b03169050611e5b8661207c565b84611e6687846126aa565b611e7091906126aa565b1115611e835762ffffff19915050611ea5565b611e8d85826126aa565b9050611ea18364ffffffffff168286611c4d565b9150505b949350505050565b600062ffffff1980841603611f155760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610635565b611f1e836120b5565b611f7e5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610635565b6000611f938460181c6001600160601b031690565b6001600160601b031690506000611fb38560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611fd35760206060fd5b8285848460045afa50612004611fe98760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6060600061201b866120f2565b9150506000612029866120f2565b9150506000612037866120f2565b9150506000612045866120f2565b9150508383838360405160200161205f9493929190612971565b604051602081830303815290604052945050505050949350505050565b60006120918260181c6001600160601b031690565b6120a48360781c6001600160601b031690565b016001600160601b03169050919050565b60006120c18260d81c90565b64ffffffffff1664ffffffffff036120db57506000919050565b60006120e68361207c565b60405110199392505050565b600080601f5b600f8160ff161115612147576000612111826008612950565b60ff1685901c9050612122816121a0565b61ffff16841793508160ff1660101461213d57601084901b93505b50600019016120f8565b50600f5b60ff8160ff16101561219a576000612164826008612950565b60ff1685901c9050612175816121a0565b61ffff16831792508160ff1660001461219057601083901b92505b506000190161214b565b50915091565b60006121b260048360ff16901c6121d2565b60ff1661ffff919091161760081b6121c9826121d2565b60ff1617919050565b600060f08083179060ff821690036121ed5750603092915050565b8060ff1660f1036122015750603192915050565b8060ff1660f2036122155750603292915050565b8060ff1660f3036122295750603392915050565b8060ff1660f40361223d5750603492915050565b8060ff1660f5036122515750603592915050565b8060ff1660f6036122655750603692915050565b8060ff1660f7036122795750603792915050565b8060ff1660f80361228d5750603892915050565b8060ff1660f9036122a15750603992915050565b8060ff1660fa036122b55750606192915050565b8060ff1660fb036122c95750606292915050565b8060ff1660fc036122dd5750606392915050565b8060ff1660fd036122f15750606492915050565b8060ff1660fe036123055750606592915050565b8060ff1660ff036123195750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b03811681146106b757600080fd5b60006020828403121561236557600080fd5b8135610dc48161233e565b60006020828403121561238257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106123c157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126123ee57600080fd5b813567ffffffffffffffff80821115612409576124096123c7565b604051601f8301601f19908116603f01168101908282118183101715612431576124316123c7565b8160405283815286602085880101111561244a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561247c57600080fd5b813567ffffffffffffffff81111561249357600080fd5b611ea5848285016123dd565b600080600061044084860312156124b557600080fd5b833567ffffffffffffffff8111156124cc57600080fd5b6124d8868287016123dd565b9350506104208401858111156124ed57600080fd5b60208501925080359150509250925092565b803563ffffffff8116811461251357600080fd5b919050565b60006020828403121561252a57600080fd5b610dc4826124ff565b60008060006060848603121561254857600080fd5b612551846124ff565b925060208401359150604084013567ffffffffffffffff81111561257457600080fd5b612580868287016123dd565b9150509250925092565b60005b838110156125a557818101518382015260200161258d565b8381111561070a5750506000910152565b600081518084526125ce81602086016020860161258a565b601f01601f19169290920160200192915050565b6040815260006125f560408301856125b6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156126345761263461260c565b500390565b600063ffffffff8083168185168083038211156126585761265861260c565b01949350505050565b84815283602082015282604082015260806060820152600061200460808301846125b6565b805160208083015191908110156123195760001960209190910360031b1b16919050565b600082198211156126bd576126bd61260c565b500190565b600063ffffffff80871683528086166020840152508360408301526080606083015261200460808301846125b6565b83815282151560208201526060604082015260006114cc60608301846125b6565b602081526000610dc460208301846125b6565b6001600160a01b0384168152606060208201819052600090612749908301856125b6565b905063ffffffff83166040830152949350505050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516127a781604c85016020870161258a565b91909101604c01979650505050505050565b600181815b808511156127f45781600019048211156127da576127da61260c565b808516156127e757918102915b93841c93908002906127be565b509250929050565b60008261280b57506001610af3565b8161281857506000610af3565b816001811461282e576002811461283857612854565b6001915050610af3565b60ff8411156128495761284961260c565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715612877575081810a610af3565b61288183836127b9565b80600019048211156128955761289561260c565b029392505050565b6000610dc483836127fc565b634e487b7160e01b600052603260045260246000fd5b6000826128dc57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016128f3576128f361260c565b5060010190565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561292257600080fd5b8151610dc48161233e565b600060ff821660ff8416808210156129475761294761260c565b90039392505050565b600060ff821660ff84168160ff04811182151516156128955761289561260c565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161200456fea2646970667358221220d84acaa75161d4893c05c5e22a3c228a8b8ad735b024b9174a035e34d337b48064736f6c634300080f0033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
