/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002f1038038062002f108339810160408190526200003591620003af565b878787878787878787808888888888858484620000523362000274565b8263ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152600960248201526832b6b83a3c9030b6b160b91b604482015260640162000094565b6001600160a01b0381166200012d5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff9283166080526001600160a01b0391821660a052811660c05290861660e05282161562000164576200016482620002d3565b8015620001765762000176816200033c565b5050505050508063ffffffff16600003620001be5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000094565b63ffffffff16610100526001602655620cf850821015620002115760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98811015620002545760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101209190915261014052506200043c9c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200039257600080fd5b919050565b80516001600160a01b03811681146200039257600080fd5b600080600080600080600080610100898b031215620003cd57600080fd5b620003d8896200037d565b9750620003e860208a016200037d565b9650620003f860408a0162000397565b95506200040860608a0162000397565b94506200041860808a0162000397565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e051610100516101205161014051612a33620004dd600039600081816102840152610eec01526000818161054301528181610f0d0152610f9401526000818161040f01526104ae01526000610248015260008181610381015261080c01526000818161051c015281816105cc015281816111e701526112aa01526000818161034701528181610b4d0152610dee0152612a336000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063cf796c75116100b8578063db1b76591161007c578063db1b765914610565578063ee250e0614610578578063f38a267b14610581578063fa31de01146105a4578063fd54b228146105b757600080fd5b8063cf796c75146104eb578063d1851c92146104f4578063d232c22014610505578063d69f9d6114610517578063d88beda21461053e57600080fd5b8063b697f531116100ff578063b697f53114610470578063b95a200114610483578063c2fb26a6146104a9578063c5b350df146104d0578063cc394283146104d857600080fd5b80638da5cb5b146104335780639fa92f9d14610444578063b1f8100d1461044a578063b2f876431461045d57600080fd5b80635bd11efc116101b35780636a42b8f8116101825780636a42b8f8146103d65780636eb67a51146103df578063715018a6146103f257806382646a58146103fa5780638d3638f41461040d57600080fd5b80635bd11efc146103695780635f61e3ec1461037c5780636188af0e146103bb57806365eaf11b146103ce57600080fd5b80632bbd59ca116101fa5780632bbd59ca146102d95780633cf52ffb146103095780634ff746f6146103115780635190bc531461032657806352a9674b1461034257600080fd5b806306661abd1461022c578063141684161461024357806325e3beda1461027f578063272efc69146102a6575b600080fd5b6025545b6040519081526020015b60405180910390f35b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161023a565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c96102b4366004612308565b60296020526000908152604090205460ff1681565b604051901515815260200161023a565b6102fc6102e7366004612325565b602b6020526000908152604090205460ff1681565b60405161023a9190612354565b600254610230565b61032461031f36600461241f565b6105c1565b005b6102c9610334366004612308565b6001600160a01b0316301490565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b610324610377366004612308565b610670565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161023a565b6103246103c9366004612454565b6106a7565b6102306106fd565b62093a80610230565b6103246103ed366004612325565b61070e565b610324610742565b61032461040836600461241f565b610801565b7f000000000000000000000000000000000000000000000000000000000000000061026a565b6000546001600160a01b03166103a3565b306103a3565b610324610458366004612308565b6108a2565b61032461046b366004612308565b610947565b61032461047e366004612308565b6109c3565b61026a6104913660046124cd565b602a6020526000908152604090205463ffffffff1681565b61026a7f000000000000000000000000000000000000000000000000000000000000000081565b610324610a42565b6003546103a3906001600160a01b031681565b61023060045481565b6001546001600160a01b03166103a3565b6000546001600160a01b0316156102c9565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6102307f000000000000000000000000000000000000000000000000000000000000000081565b6102c9610573366004612308565b610a9d565b61023060275481565b6102c961058f366004612325565b60286020526000908152604090205460ff1681565b6103246105b23660046124e8565b610aae565b6025546102309081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461062b5760405162461bcd60e51b81526004016106229060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61063481610bed565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610665929190612597565b60405180910390a150565b6000546001600160a01b0316331461069b576040516311a8a1bb60e31b815260040160405180910390fd5b6106a481610c89565b50565b6106b983805190602001208383610cf2565b6106ee5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b6044820152606401610622565b6106f783610d80565b50505050565b600061070960056110c7565b905090565b6000546001600160a01b03163314610739576040516311a8a1bb60e31b815260040160405180910390fd5b6106a4816110da565b6000546001600160a01b0316331461076d576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361079057604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107a291906125d7565b116107c0576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107ea576040516323295ef960e01b815260040160405180910390fd5b6001546107ff906001600160a01b031661111b565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108685760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610622565b6108718161117a565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610665929190612597565b6000546001600160a01b031633146108cd576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108f257506001600160a01b03811615155b15610910576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361093e57604051634a2fb73f60e11b815260040160405180910390fd5b6106a481611255565b6000546001600160a01b03163314610972576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610665565b6000546001600160a01b031633146109ee576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610665565b6001546001600160a01b03163314610a6d576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a7f91906125d7565b116107ea5760405163d39c12bb60e01b815260040160405180910390fd5b6000610aa8826112a3565b92915050565b3360009081526029602052604090205460ff16610afc5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610622565b63ffffffff8084166000908152602a602052604090205416610b1f8160016125ee565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610b767f000000000000000000000000000000000000000000000000000000000000000033848888886112cf565b80516020820120909150610b8b600582611307565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610bb860255490565b610bc291906125d7565b610bcc60056110c7565b85604051610bdd9493929190612616565b60405180910390a1505050505050565b600354610c02906001600160a01b03166112a3565b610c3d5760405162461bcd60e51b815260206004820152600c60248201526b10b618a1b7b73732b1ba37b960a11b6044820152606401610622565b8051602014610c785760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610622565b6106a4610c848261263b565b611424565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610d1857610d1861233e565b14610d5b5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610622565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610dd45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610622565b60026026556000610de58382611466565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610e1d62ffffff19831661148a565b63ffffffff1614610e5f5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610622565b6000610e7062ffffff19831661149f565b905060016000828152602b602052604090205460ff166002811115610e9757610e9761233e565b14610ece5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610622565b6000818152602b60205260409020805460ff19166002179055610f317f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061265f565b5a1015610f695760405162461bcd60e51b8152600401610622906020808252600490820152632167617360e01b604082015260600190565b6000610f7a62ffffff1984166114e8565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000610fd762ffffff1989166114f9565b610fe662ffffff198a1661150d565b610ff562ffffff198b16611522565b61101261100762ffffff198d16611537565b62ffffff1916611565565b6040516024016110259493929190612677565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d94508385111561106e578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516110ac939291906126a6565b60405180910390a15050600160265550949695505050505050565b6000610aa8826110d56115ae565b611a6f565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000634ff746f660e01b8260405160240161119591906126c7565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b9461121f94909216928792016126da565b600060405180830381600087803b15801561123957600080fd5b505af115801561124d573d6000803e3d6000fd5b505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610aa87f000000000000000000000000000000000000000000000000000000000000000083611b41565b60608686868686866040516020016112ec96959493929190612714565b60405160208183030381529060405290509695505050505050565b600161131560206002612852565b61131f91906125d7565b8260200154106113645760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b6044820152606401610622565b6001826020016000828254611379919061265f565b9091555050602082015460005b602081101561141657816001166001036113b557828482602081106113ad576113ad61285e565b015550505050565b8381602081106113c7576113c761285e565b015460408051602081019290925281018490526060016040516020818303038152906040528051906020012092506002826114029190612874565b91508061140e81612896565b915050611386565b5061141f6128af565b505050565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b81516000906020840161148164ffffffffff85168284611c02565b95945050505050565b6000610aa862ffffff19831660286004611c49565b6000806114b58360781c6001600160601b031690565b6001600160601b0316905060006114d58460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610aa86114f683611c79565b90565b6000610aa862ffffff198316826004611c49565b6000610aa862ffffff19831660246004611c49565b6000610aa862ffffff19831660046020611c8a565b6000610aa8604c61155581601886901c6001600160601b03166125d7565b62ffffff19851691906000611de6565b606060008061157d8460181c6001600160601b031690565b6001600160601b03169050604051915081925061159d8483602001611e62565b508181016020016040529052919050565b6115b66122d4565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611b3957600182821c166000868360208110611a9c57611a9c61285e565b0154905081600103611ad9576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611b24565b84868460208110611aec57611aec61285e565b6020020151604051602001611b0b929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611b3190612896565b915050611a79565b505092915050565b6000336001600160a01b03841614611b855760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610622565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf191906128c5565b6001600160a01b0316149392505050565b600080611c0f838561265f565b9050604051811115611c1f575060005b80600003611c345762ffffff19915050610d79565b5050606092831b9190911790911b1760181b90565b6000611c568260206128e2565b611c61906008612905565b60ff16611c6f858585611c8a565b901c949350505050565b6000610aa862ffffff198316602c60205b60008160ff16600003611c9f57506000610d79565b611cb28460181c6001600160601b031690565b6001600160601b0316611cc860ff84168561265f565b1115611d2c57611d13611ce48560781c6001600160601b031690565b6001600160601b0316611d008660181c6001600160601b031690565b6001600160601b0316858560ff16611fc3565b60405162461bcd60e51b815260040161062291906126c7565b60208260ff161115611da65760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610622565b600882026000611dbf8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611dfc8660781c6001600160601b031690565b6001600160601b03169050611e1086612031565b84611e1b878461265f565b611e25919061265f565b1115611e385762ffffff19915050611e5a565b611e42858261265f565b9050611e568364ffffffffff168286611c02565b9150505b949350505050565b600062ffffff1980841603611eca5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610622565b611ed38361206a565b611f335760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610622565b6000611f488460181c6001600160601b031690565b6001600160601b031690506000611f688560781c6001600160601b031690565b6001600160601b031690506000604051905084811115611f885760206060fd5b8285848460045afa50611fb9611f9e8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b60606000611fd0866120a7565b9150506000611fde866120a7565b9150506000611fec866120a7565b9150506000611ffa866120a7565b915050838383836040516020016120149493929190612926565b604051602081830303815290604052945050505050949350505050565b60006120468260181c6001600160601b031690565b6120598360781c6001600160601b031690565b016001600160601b03169050919050565b60006120768260d81c90565b64ffffffffff1664ffffffffff0361209057506000919050565b600061209b83612031565b60405110199392505050565b600080601f5b600f8160ff1611156120fc5760006120c6826008612905565b60ff1685901c90506120d781612155565b61ffff16841793508160ff166010146120f257601084901b93505b50600019016120ad565b50600f5b60ff8160ff16101561214f576000612119826008612905565b60ff1685901c905061212a81612155565b61ffff16831792508160ff1660001461214557601083901b92505b5060001901612100565b50915091565b600061216760048360ff16901c612187565b60ff1661ffff919091161760081b61217e82612187565b60ff1617919050565b600060f08083179060ff821690036121a25750603092915050565b8060ff1660f1036121b65750603192915050565b8060ff1660f2036121ca5750603292915050565b8060ff1660f3036121de5750603392915050565b8060ff1660f4036121f25750603492915050565b8060ff1660f5036122065750603592915050565b8060ff1660f60361221a5750603692915050565b8060ff1660f70361222e5750603792915050565b8060ff1660f8036122425750603892915050565b8060ff1660f9036122565750603992915050565b8060ff1660fa0361226a5750606192915050565b8060ff1660fb0361227e5750606292915050565b8060ff1660fc036122925750606392915050565b8060ff1660fd036122a65750606492915050565b8060ff1660fe036122ba5750606592915050565b8060ff1660ff036122ce5750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b6001600160a01b03811681146106a457600080fd5b60006020828403121561231a57600080fd5b8135610d79816122f3565b60006020828403121561233757600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061237657634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126123a357600080fd5b813567ffffffffffffffff808211156123be576123be61237c565b604051601f8301601f19908116603f011681019082821181831017156123e6576123e661237c565b816040528381528660208588010111156123ff57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561243157600080fd5b813567ffffffffffffffff81111561244857600080fd5b611e5a84828501612392565b6000806000610440848603121561246a57600080fd5b833567ffffffffffffffff81111561248157600080fd5b61248d86828701612392565b9350506104208401858111156124a257600080fd5b60208501925080359150509250925092565b803563ffffffff811681146124c857600080fd5b919050565b6000602082840312156124df57600080fd5b610d79826124b4565b6000806000606084860312156124fd57600080fd5b612506846124b4565b925060208401359150604084013567ffffffffffffffff81111561252957600080fd5b61253586828701612392565b9150509250925092565b60005b8381101561255a578181015183820152602001612542565b838111156106f75750506000910152565b6000815180845261258381602086016020860161253f565b601f01601f19169290920160200192915050565b6040815260006125aa604083018561256b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156125e9576125e96125c1565b500390565b600063ffffffff80831681851680830382111561260d5761260d6125c1565b01949350505050565b848152836020820152826040820152608060608201526000611fb9608083018461256b565b805160208083015191908110156122ce5760001960209190910360031b1b16919050565b60008219821115612672576126726125c1565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152611fb9608083018461256b565b8381528215156020820152606060408201526000611481606083018461256b565b602081526000610d79602083018461256b565b6001600160a01b03841681526060602082018190526000906126fe9083018561256b565b905063ffffffff83166040830152949350505050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161275c81604c85016020870161253f565b91909101604c01979650505050505050565b600181815b808511156127a957816000190482111561278f5761278f6125c1565b8085161561279c57918102915b93841c9390800290612773565b509250929050565b6000826127c057506001610aa8565b816127cd57506000610aa8565b81600181146127e357600281146127ed57612809565b6001915050610aa8565b60ff8411156127fe576127fe6125c1565b50506001821b610aa8565b5060208310610133831016604e8410600b841016171561282c575081810a610aa8565b612836838361276e565b806000190482111561284a5761284a6125c1565b029392505050565b6000610d7983836127b1565b634e487b7160e01b600052603260045260246000fd5b60008261289157634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016128a8576128a86125c1565b5060010190565b634e487b7160e01b600052600160045260246000fd5b6000602082840312156128d757600080fd5b8151610d79816122f3565b600060ff821660ff8416808210156128fc576128fc6125c1565b90039392505050565b600060ff821660ff84168160ff048111821515161561284a5761284a6125c1565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611fb956fea2646970667358221220afde9b6f61e1af23cd2a610a54c460aedf459e2797314152ebe41f89afcf4c1764736f6c634300080f0033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
