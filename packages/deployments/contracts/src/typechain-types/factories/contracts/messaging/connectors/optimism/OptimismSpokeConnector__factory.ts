/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003565380380620035658339810160408190526200003591620003ff565b80808c8c8c8c8c8c8c8c8c8c808a8a8a8a8a6200005233620002c4565b8463ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012157620001218162000323565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002385760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b0382166200028b5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b506001600160a01b03166101005260065550620002b19550869450506200038c92505050565b50505050505050505050505050620004be565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600d5460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600d55565b805163ffffffff81168114620003e257600080fd5b919050565b80516001600160a01b0381168114620003e257600080fd5b60008060008060008060008060008060006101608c8e0312156200042257600080fd5b6200042d8c620003cd565b9a506200043d60208d01620003cd565b99506200044d60408d01620003e7565b98506200045d60608d01620003e7565b97506200046d60808d01620003e7565b965060a08c0151955060c08c0151945060e08c01519350620004936101008d01620003e7565b9250620004a46101208d01620003e7565b91506101408c015190509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612ff86200056d600039600081816102be01526118bc015260008181610637015281816118dd01526119640152600081816105300152818161070001528181610bb70152611268015260006102680152600061042a01526000818161061001528181610834015281816114210152611c380152600081816103de015281816104ad0152818161121901526117be0152612ff86000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638456cb5911610146578063b697f531116100c3578063d232c22011610087578063d232c220146105e6578063d2a3cc71146105f8578063d69f9d611461060b578063d88beda214610632578063db1b765914610659578063fa31de011461066c57600080fd5b8063b697f53114610581578063b95a200114610594578063c5b350df146105ba578063cc394283146105c2578063d1851c92146105d557600080fd5b80639fa92f9d1161010a5780639fa92f9d14610525578063a01892a51461052b578063ad9c0c2e14610552578063b1f8100d1461055b578063b2f876431461056e57600080fd5b80638456cb59146104a35780638d3638f4146104ab5780638da5cb5b146104d157806398c9f2b9146104e25780639d3117c71461050557600080fd5b8063508a109b116101df5780635f61e3ec116101a35780635f61e3ec1461042557806365eaf11b146104645780636a42b8f81461046c5780636b04a93314610475578063715018a6146104885780637850b0201461049057600080fd5b8063508a109b146103aa5780635190bc53146103bd57806352a9674b146103d95780635bd11efc146104005780635c975abb1461041357600080fd5b80632bbd59ca116102265780632bbd59ca14610334578063301f07c3146103645780633cf52ffb146103875780633f4ba83a1461038f5780634ff746f61461039757600080fd5b806314168416146102635780631eeaabea146102a457806325e3beda146102b9578063272efc69146102ee5780632bb1ae7c14610321575b600080fd5b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102b76102b2366004612899565b61067f565b005b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161029b565b6103116102fc3660046128c7565b600a6020526000908152604090205460ff1681565b604051901515815260200161029b565b6102b761032f366004612987565b6106f4565b610357610342366004612899565b600c6020526000908152604090205460ff1681565b60405161029b91906129d2565b610311610372366004612899565b60086020526000908152604090205460ff1681565b6002546102e0565b6102b76107ec565b6102b76103a5366004612987565b610829565b6102b76103b83660046129fa565b6108cf565b6103116103cb3660046128c7565b6001600160a01b0316301490565b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6102b761040e3660046128c7565b610b7c565b600354600160a01b900460ff16610311565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161029b565b6102e0610bb3565b62093a806102e0565b6102b7610483366004612899565b610c3c565b6102b7610d07565b6102b761049e366004612899565b610dc4565b6102b7610df8565b7f000000000000000000000000000000000000000000000000000000000000000061028a565b6000546001600160a01b031661044c565b6103116104f0366004612899565b60096020526000908152604090205460ff1681565b6102e0610513366004612899565b60076020526000908152604090205481565b3061044c565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6102e060065481565b6102b76105693660046128c7565b610eac565b6102b761057c3660046128c7565b610f51565b6102b761058f3660046128c7565b610fcd565b61028a6105a2366004612aaf565b600b6020526000908152604090205463ffffffff1681565b6102b761104c565b60035461044c906001600160a01b031681565b6001546001600160a01b031661044c565b6000546001600160a01b031615610311565b6102b76106063660046128c7565b6110a7565b61044c7f000000000000000000000000000000000000000000000000000000000000000081565b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b6103116106673660046128c7565b611169565b6102e061067a366004612aca565b61117a565b6000546001600160a01b031633146106aa576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036106ef5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b6106fc611337565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561075c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107809190612b21565b60405160200161079291815260200190565b60405160208183030381529060405290506107ad8183611384565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778183336040516107e093929190612b92565b60405180910390a15050565b6000546001600160a01b03163314610817576040516311a8a1bb60e31b815260040160405180910390fd5b61081f6114a9565b6108276114f9565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461088a5760405162461bcd60e51b81526004016106e69060208082526004908201526310a0a6a160e11b604082015260600190565b6108938161154e565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516108c4929190612bd0565b60405180910390a150565b6108d7611337565b8361090e5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106e6565b60008585600081811061092357610923612bfa565b90506020028101906109359190612c10565b61093f9080612c31565b60405161094d929190612c7f565b6040518091039020905060006109b4828888600081811061097057610970612bfa565b90506020028101906109829190612c10565b6020018989600081811061099857610998612bfa565b90506020028101906109aa9190612c10565b61042001356115ee565b90506109c281868686611693565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610ae65787878263ffffffff16818110610a0557610a05612bfa565b9050602002810190610a179190612c10565b610a219080612c31565b604051610a2f929190612c7f565b604051809103902092506000610a84848a8a8563ffffffff16818110610a5757610a57612bfa565b9050602002810190610a699190612c10565b6020018b8b8663ffffffff1681811061099857610998612bfa565b9050828114610ac35760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106e6565b506000838152600c60205260409020805460ff19166001908117909155016109df565b5060005b63ffffffff8116871115610b7257610b6988888363ffffffff16818110610b1357610b13612bfa565b9050602002810190610b259190612c10565b610b2f9080612c31565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061175092505050565b50600101610aea565b5050505050505050565b6000546001600160a01b03163314610ba7576040516311a8a1bb60e31b815260040160405180910390fd5b610bb081611a97565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c379190612b21565b905090565b6000546001600160a01b03163314610c67576040516311a8a1bb60e31b815260040160405180910390fd5b610c6f6114a9565b6000818152600760205260408120549003610cc45760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016106e6565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906108c49083815260200190565b6000546001600160a01b03163314610d32576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610d5557604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610d679190612ca5565b11610d85576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610daf576040516323295ef960e01b815260040160405180910390fd5b600154610827906001600160a01b0316611b00565b6000546001600160a01b03163314610def576040516311a8a1bb60e31b815260040160405180910390fd5b610bb081611b5f565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190612cbc565b610e9c5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106e6565b610ea4611337565b610827611ba0565b6000546001600160a01b03163314610ed7576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610efc57506001600160a01b03811615155b15610f1a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610f4857604051634a2fb73f60e11b815260040160405180910390fd5b610bb081611be3565b6000546001600160a01b03163314610f7c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016108c4565b6000546001600160a01b03163314610ff8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016108c4565b6001546001600160a01b03163314611077576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426110899190612ca5565b11610daf5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146110d2576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036111305760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106e6565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016108c4565b600061117482611c31565b92915050565b336000908152600a602052604081205460ff166111c85760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106e6565b63ffffffff8085166000908152600b6020526040902054166111eb816001612cde565b63ffffffff8681166000908152600b60205260408120805463ffffffff1916939092169290921790556112427f00000000000000000000000000000000000000000000000000000000000000003384898989611c5d565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156112b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dc9190612d06565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361130e600184612ca5565b84876040516113209493929190612d2a565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff16156108275760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106e6565b81516020146113c45760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016106e6565b6000634ff746f660e01b836040516024016113df9190612d4f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b91168361145486611c95565b6040518463ffffffff1660e01b815260040161147293929190612d62565b600060405180830381600087803b15801561148c57600080fd5b505af11580156114a0573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff166108275760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106e6565b6115016114a9565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611563906001600160a01b0316611c31565b6115a25760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106e6565b80516020146115dd5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106e6565b610bb06115e982612d9c565b611cf3565b6000806000858152600c602052604090205460ff166002811115611614576116146129bc565b146116575760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106e6565b61168b848460208060200260405190810160405280929190826020800280828437600092019190915250869150611e1c9050565b949350505050565b60008481526009602052604090205460ff1661174a576116b283611ec2565b60006116e8858460208060200260405190810160405280929190826020800280828437600092019190915250869150611e1c9050565b905083811461172f5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016106e6565b506000848152600960205260409020805460ff191660011790555b50505050565b60006002600554036117a45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106e6565b600260055560006117b58382611fb4565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166117ed62ffffff198316611fd8565b63ffffffff161461182f5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106e6565b600061184062ffffff198316611fed565b905060016000828152600c602052604090205460ff166002811115611867576118676129bc565b1461189e5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106e6565b6000818152600c60205260409020805460ff191660021790556119017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612dc0565b5a10156119395760405162461bcd60e51b81526004016106e6906020808252600490820152632167617360e01b604082015260600190565b600061194a62ffffff198416612036565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006119a762ffffff198916612047565b6119b662ffffff198a1661205b565b6119c562ffffff198b16612070565b6119e26119d762ffffff198d16612085565b62ffffff19166120b3565b6040516024016119f59493929190612dd8565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611a3e578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611a7c93929190612e07565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600d5460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600d55565b611ba8611337565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115313390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006111747f0000000000000000000000000000000000000000000000000000000000000000836120fc565b6060868686868686604051602001611c7a96959493929190612e28565b60405160208183030381529060405290509695505050505050565b60008151602014611cd75760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016106e6565b61117482806020019051810190611cee9190612b21565b6121bd565b80611d315760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016106e6565b60008181526007602052604090205415611d845760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016106e6565b60008181526008602052604090205460ff1615611dd95760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016106e6565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906108c49083815260200190565b8260005b6020811015611eba57600183821c166000858360208110611e4357611e43612bfa565b6020020151905081600103611e83576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611eb0565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611e20565b509392505050565b60008181526008602052604090205460ff1615611edc5750565b60008181526007602052604081205490819003611f325760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016106e6565b600654611f3f8243612ca5565b1015611f8d5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016106e6565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b815160009060208401611fcf64ffffffffff851682846121d3565b95945050505050565b600061117462ffffff1983166028600461221a565b6000806120038360781c6001600160601b031690565b6001600160601b0316905060006120238460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006111746120448361224a565b90565b600061117462ffffff19831682600461221a565b600061117462ffffff1983166024600461221a565b600061117462ffffff1983166004602061225b565b6000611174604c6120a381601886901c6001600160601b0316612ca5565b62ffffff198516919060006123b7565b60606000806120cb8460181c6001600160601b031690565b6001600160601b0316905060405191508192506120eb8483602001612431565b508181016020016040529052919050565b6000336001600160a01b038416146121405760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106e6565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ac9190612e82565b6001600160a01b0316149392505050565b6000600d548211156121cf57600d5491505b5090565b6000806121e08385612dc0565b90506040518111156121f0575060005b806000036122055762ffffff19915050611330565b5050606092831b9190911790911b1760181b90565b6000612227826020612e9f565b612232906008612ec2565b60ff1661224085858561225b565b901c949350505050565b600061117462ffffff198316602c60205b60008160ff1660000361227057506000611330565b6122838460181c6001600160601b031690565b6001600160601b031661229960ff841685612dc0565b11156122fd576122e46122b58560781c6001600160601b031690565b6001600160601b03166122d18660181c6001600160601b031690565b6001600160601b0316858560ff16612588565b60405162461bcd60e51b81526004016106e69190612d4f565b60208260ff1611156123775760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106e6565b6008820260006123908660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806123cd8660781c6001600160601b031690565b6001600160601b031690506123e1866125f6565b846123ec8784612dc0565b6123f69190612dc0565b11156124095762ffffff1991505061168b565b6124138582612dc0565b90506124278364ffffffffff1682866121d3565b9695505050505050565b600062ffffff19808416036124995760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106e6565b6124a28361262f565b6125025760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106e6565b60006125178460181c6001600160601b031690565b6001600160601b0316905060006125378560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156125575760206060fd5b8285848460045afa5061242761256d8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006125958661266c565b91505060006125a38661266c565b91505060006125b18661266c565b91505060006125bf8661266c565b915050838383836040516020016125d99493929190612eeb565b604051602081830303815290604052945050505050949350505050565b600061260b8260181c6001600160601b031690565b61261e8360781c6001600160601b031690565b016001600160601b03169050919050565b600061263b8260d81c90565b64ffffffffff1664ffffffffff0361265557506000919050565b6000612660836125f6565b60405110199392505050565b600080601f5b600f8160ff1611156126c157600061268b826008612ec2565b60ff1685901c905061269c8161271a565b61ffff16841793508160ff166010146126b757601084901b93505b5060001901612672565b50600f5b60ff8160ff1610156127145760006126de826008612ec2565b60ff1685901c90506126ef8161271a565b61ffff16831792508160ff1660001461270a57601083901b92505b50600019016126c5565b50915091565b600061272c60048360ff16901c61274c565b60ff1661ffff919091161760081b6127438261274c565b60ff1617919050565b600060f08083179060ff821690036127675750603092915050565b8060ff1660f10361277b5750603192915050565b8060ff1660f20361278f5750603292915050565b8060ff1660f3036127a35750603392915050565b8060ff1660f4036127b75750603492915050565b8060ff1660f5036127cb5750603592915050565b8060ff1660f6036127df5750603692915050565b8060ff1660f7036127f35750603792915050565b8060ff1660f8036128075750603892915050565b8060ff1660f90361281b5750603992915050565b8060ff1660fa0361282f5750606192915050565b8060ff1660fb036128435750606292915050565b8060ff1660fc036128575750606392915050565b8060ff1660fd0361286b5750606492915050565b8060ff1660fe0361287f5750606592915050565b8060ff1660ff036128935750606692915050565b50919050565b6000602082840312156128ab57600080fd5b5035919050565b6001600160a01b0381168114610bb057600080fd5b6000602082840312156128d957600080fd5b8135611330816128b2565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261290b57600080fd5b813567ffffffffffffffff80821115612926576129266128e4565b604051601f8301601f19908116603f0116810190828211818310171561294e5761294e6128e4565b8160405283815286602085880101111561296757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561299957600080fd5b813567ffffffffffffffff8111156129b057600080fd5b61168b848285016128fa565b634e487b7160e01b600052602160045260246000fd5b60208101600383106129f457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612a1357600080fd5b853567ffffffffffffffff80821115612a2b57600080fd5b818801915088601f830112612a3f57600080fd5b813581811115612a4e57600080fd5b8960208260051b8501011115612a6357600080fd5b602092830197509550508601359250610440860187811115612a8457600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612aaa57600080fd5b919050565b600060208284031215612ac157600080fd5b61133082612a96565b600080600060608486031215612adf57600080fd5b612ae884612a96565b925060208401359150604084013567ffffffffffffffff811115612b0b57600080fd5b612b17868287016128fa565b9150509250925092565b600060208284031215612b3357600080fd5b5051919050565b60005b83811015612b55578181015183820152602001612b3d565b8381111561174a5750506000910152565b60008151808452612b7e816020860160208601612b3a565b601f01601f19169290920160200192915050565b606081526000612ba56060830186612b66565b8281036020840152612bb78186612b66565b91505060018060a01b0383166040830152949350505050565b604081526000612be36040830185612b66565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612c2757600080fd5b9190910192915050565b6000808335601e19843603018112612c4857600080fd5b83018035915067ffffffffffffffff821115612c6357600080fd5b602001915036819003821315612c7857600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612cb757612cb7612c8f565b500390565b600060208284031215612cce57600080fd5b8151801515811461133057600080fd5b600063ffffffff808316818516808303821115612cfd57612cfd612c8f565b01949350505050565b60008060408385031215612d1957600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006124276080830184612b66565b6020815260006113306020830184612b66565b6001600160a01b0384168152606060208201819052600090612d8690830185612b66565b905063ffffffff83166040830152949350505050565b805160208083015191908110156128935760001960209190910360031b1b16919050565b60008219821115612dd357612dd3612c8f565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526124276080830184612b66565b8381528215156020820152606060408201526000611fcf6060830184612b66565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612e7081604c850160208701612b3a565b91909101604c01979650505050505050565b600060208284031215612e9457600080fd5b8151611330816128b2565b600060ff821660ff841680821015612eb957612eb9612c8f565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ee357612ee3612c8f565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161242756fea2646970667358221220cc9b9f0e466c58d54948b2d5b42f73c58fb504882df3a24d5470abc8a6ae50fa64736f6c634300080f0033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
