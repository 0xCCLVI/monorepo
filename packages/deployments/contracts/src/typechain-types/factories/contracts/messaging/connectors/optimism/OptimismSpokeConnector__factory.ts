/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003b5038038062003b508339810160408190526200003591620003ff565b80808c8c8c8c8c8c8c8c8c8c808a8a8a8a8a6200005233620002c4565b8463ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012157620001218162000323565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f55760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002385760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b0382166200028b5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b506001600160a01b03166101005260085550620002b19550869450506200038c92505050565b50505050505050505050505050620004be565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b805163ffffffff81168114620003e257600080fd5b919050565b80516001600160a01b0381168114620003e257600080fd5b60008060008060008060008060008060006101608c8e0312156200042257600080fd5b6200042d8c620003cd565b9a506200043d60208d01620003cd565b99506200044d60408d01620003e7565b98506200045d60608d01620003e7565b97506200046d60808d01620003e7565b965060a08c0151955060c08c0151945060e08c01519350620004936101008d01620003e7565b9250620004a46101208d01620003e7565b91506101408c015190509295989b509295989b9093969950565b60805160a05160c05160e0516101005161012051610140516135e36200056d6000396000818161031a0152611cfe0152600081816108e301528181611d1f0152611da601526000818161072a01528181610a1d01528181610f4801526116aa015260006102aa0152600061056801526000818161089901528181610bc50152818161186301526121980152600081816104af015281816106660152818161165b0152611c0001526135e36000f3fe60806040526004361061028c5760003560e01c80637850b0201161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d6114610887578063d7d317b3146108bb578063d88beda2146108d1578063db1b765914610905578063e0fed01014610925578063fa31de011461094557600080fd5b8063b95a2001146107c2578063c5b350df146107f5578063cc3942831461080a578063d1851c921461082a578063d232c22014610848578063d2a3cc711461086757600080fd5b80639fa92f9d116101135780639fa92f9d14610705578063a01892a514610718578063ad9c0c2e1461074c578063b1f8100d14610762578063b2f8764314610782578063b697f531146107a257600080fd5b80637850b020146106225780638456cb59146106425780638d3638f4146106575780638da5cb5b1461068a57806398c9f2b9146106a85780639d3117c7146106d857600080fd5b80635190bc53116101fe5780635f61e3ec116101b75780635f61e3ec1461055657806365eaf11b146105a257806368742da6146105b75780636a42b8f8146105d75780636b04a933146105ed578063715018a61461060d57600080fd5b80635190bc531461047457806352a9674b1461049d578063572386ca146104d1578063579c1618146105015780635bd11efc146105175780635c975abb1461053757600080fd5b80632bbd59ca116102505780632bbd59ca1461039d578063301f07c3146103da5780633cf52ffb1461040a5780633f4ba83a1461041f5780634ff746f614610434578063508a109b1461045457600080fd5b806314168416146102985780631eeaabea146102e657806325e3beda14610308578063272efc691461034a5780632bb1ae7c1461038a57600080fd5b3661029357005b600080fd5b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102f257600080fd5b50610306610301366004612e65565b610965565b005b34801561031457600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102dd565b34801561035657600080fd5b5061037a610365366004612e93565b600d6020526000908152604090205460ff1681565b60405190151581526020016102dd565b610306610398366004612f53565b6109da565b3480156103a957600080fd5b506103cd6103b8366004612e65565b600f6020526000908152604090205460ff1681565b6040516102dd9190612f9e565b3480156103e657600080fd5b5061037a6103f5366004612e65565b600a6020526000908152604090205460ff1681565b34801561041657600080fd5b5060025461033c565b34801561042b57600080fd5b50610306610b7d565b34801561044057600080fd5b5061030661044f366004612f53565b610bba565b34801561046057600080fd5b5061030661046f366004612fc6565b610c60565b34801561048057600080fd5b5061037a61048f366004612e93565b6001600160a01b0316301490565b3480156104a957600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104dd57600080fd5b5061037a6104ec366004612e65565b600c6020526000908152604090205460ff1681565b34801561050d57600080fd5b5061033c60055481565b34801561052357600080fd5b50610306610532366004612e93565b610f0d565b34801561054357600080fd5b50600354600160a01b900460ff1661037a565b34801561056257600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102dd565b3480156105ae57600080fd5b5061033c610f44565b3480156105c357600080fd5b506103066105d2366004612e93565b610fcd565b3480156105e357600080fd5b5062093a8061033c565b3480156105f957600080fd5b50610306610608366004612e65565b61104a565b34801561061957600080fd5b50610306611115565b34801561062e57600080fd5b5061030661063d366004612e65565b6111d2565b34801561064e57600080fd5b50610306611206565b34801561066357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561069657600080fd5b506000546001600160a01b031661058a565b3480156106b457600080fd5b5061037a6106c3366004612e65565b600b6020526000908152604090205460ff1681565b3480156106e457600080fd5b5061033c6106f3366004612e65565b60096020526000908152604090205481565b34801561071157600080fd5b503061058a565b34801561072457600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561075857600080fd5b5061033c60085481565b34801561076e57600080fd5b5061030661077d366004612e93565b6112ba565b34801561078e57600080fd5b5061030661079d366004612e93565b61135f565b3480156107ae57600080fd5b506103066107bd366004612e93565b6113db565b3480156107ce57600080fd5b506102cc6107dd36600461307b565b600e6020526000908152604090205463ffffffff1681565b34801561080157600080fd5b5061030661145a565b34801561081657600080fd5b5060035461058a906001600160a01b031681565b34801561083657600080fd5b506001546001600160a01b031661058a565b34801561085457600080fd5b506000546001600160a01b03161561037a565b34801561087357600080fd5b50610306610882366004612e93565b6114b5565b34801561089357600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108c757600080fd5b5061033c60065481565b3480156108dd57600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561091157600080fd5b5061037a610920366004612e93565b611577565b34801561093157600080fd5b50610306610940366004612e65565b611588565b34801561095157600080fd5b5061033c610960366004613096565b6115bc565b6000546001600160a01b03163314610990576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109d55760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b6109e2611779565b436005546006546109f39190613103565b1115610a12576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d919061311b565b6000818152600c602052604090205490915060ff1615610af35760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109cc565b600081604051602001610b0891815260200190565b6040516020818303038152906040529050610b2381846117c6565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b709083908690339061318c565b60405180910390a1505050565b6000546001600160a01b03163314610ba8576040516311a8a1bb60e31b815260040160405180910390fd5b610bb06118eb565b610bb861193b565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c1b5760405162461bcd60e51b81526004016109cc9060208082526004908201526310a0a6a160e11b604082015260600190565b610c2481611990565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610c559291906131ca565b60405180910390a150565b610c68611779565b83610c9f5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109cc565b600085856000818110610cb457610cb46131f4565b9050602002810190610cc6919061320a565b610cd0908061322b565b604051610cde929190613279565b604051809103902090506000610d458288886000818110610d0157610d016131f4565b9050602002810190610d13919061320a565b60200189896000818110610d2957610d296131f4565b9050602002810190610d3b919061320a565b6104200135611a30565b9050610d5381868686611ad5565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610e775787878263ffffffff16818110610d9657610d966131f4565b9050602002810190610da8919061320a565b610db2908061322b565b604051610dc0929190613279565b604051809103902092506000610e15848a8a8563ffffffff16818110610de857610de86131f4565b9050602002810190610dfa919061320a565b6020018b8b8663ffffffff16818110610d2957610d296131f4565b9050828114610e545760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109cc565b506000838152600f60205260409020805460ff1916600190811790915501610d70565b5060005b63ffffffff8116871115610f0357610efa88888363ffffffff16818110610ea457610ea46131f4565b9050602002810190610eb6919061320a565b610ec0908061322b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9292505050565b50600101610e7b565b5050505050505050565b6000546001600160a01b03163314610f38576040516311a8a1bb60e31b815260040160405180910390fd5b610f4181611ed9565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc8919061311b565b905090565b6000546001600160a01b03163314610ff8576040516311a8a1bb60e31b815260040160405180910390fd5b476110038282611f42565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161103e91815260200190565b60405180910390a25050565b6000546001600160a01b03163314611075576040516311a8a1bb60e31b815260040160405180910390fd5b61107d6118eb565b60008181526009602052604081205490036110d25760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109cc565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610c559083815260200190565b6000546001600160a01b03163314611140576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361116357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426111759190613289565b11611193576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156111bd576040516323295ef960e01b815260040160405180910390fd5b600154610bb8906001600160a01b0316612060565b6000546001600160a01b031633146111fd576040516311a8a1bb60e31b815260040160405180910390fd5b610f41816120bf565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561124f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127391906132a0565b6112aa5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109cc565b6112b2611779565b610bb8612100565b6000546001600160a01b031633146112e5576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561130a57506001600160a01b03811615155b15611328576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361135657604051634a2fb73f60e11b815260040160405180910390fd5b610f4181612143565b6000546001600160a01b0316331461138a576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610c55565b6000546001600160a01b03163314611406576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610c55565b6001546001600160a01b03163314611485576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114979190613289565b116111bd5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146114e0576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361153e5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109cc565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610c55565b600061158282612191565b92915050565b6000546001600160a01b031633146115b3576040516311a8a1bb60e31b815260040160405180910390fd5b610f41816121bd565b336000908152600d602052604081205460ff1661160a5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016109cc565b63ffffffff8085166000908152600e60205260409020541661162d8160016132c2565b63ffffffff8681166000908152600e60205260408120805463ffffffff1916939092169290921790556116847f0000000000000000000000000000000000000000000000000000000000000000338489898961223b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156116fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171e91906132ea565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611750600184613289565b8487604051611762949392919061330e565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610bb85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109cc565b81516020146118065760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109cc565b6000634ff746f660e01b836040516024016118219190613333565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b91168361189686612273565b6040518463ffffffff1660e01b81526004016118b493929190613346565b600060405180830381600087803b1580156118ce57600080fd5b505af11580156118e2573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610bb85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109cc565b6119436118eb565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6003546119a5906001600160a01b0316612191565b6119e45760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016109cc565b8051602014611a1f5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109cc565b610f41611a2b82613380565b6122d1565b6000806000858152600f602052604090205460ff166002811115611a5657611a56612f88565b14611a995760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109cc565b611acd8484602080602002604051908101604052809291908260208002808284376000920191909152508691506123fa9050565b949350505050565b6000848152600b602052604090205460ff16611b8c57611af4836124a0565b6000611b2a8584602080602002604051908101604052809291908260208002808284376000920191909152508691506123fa9050565b9050838114611b715760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109cc565b506000848152600b60205260409020805460ff191660011790555b50505050565b6000600260075403611be65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109cc565b60026007556000611bf78382612592565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611c2f62ffffff1983166125b6565b63ffffffff1614611c715760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109cc565b6000611c8262ffffff1983166125cb565b905060016000828152600f602052604090205460ff166002811115611ca957611ca9612f88565b14611ce05760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109cc565b6000818152600f60205260409020805460ff19166002179055611d437f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613103565b5a1015611d7b5760405162461bcd60e51b81526004016109cc906020808252600490820152632167617360e01b604082015260600190565b6000611d8c62ffffff198416612614565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611de962ffffff198916612625565b611df862ffffff198a16612639565b611e0762ffffff198b1661264e565b611e24611e1962ffffff198d16612663565b62ffffff1916612691565b604051602401611e3794939291906133a4565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611e80578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611ebe939291906133d3565b60405180910390a15050600160075550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611f925760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611fdf576040519150601f19603f3d011682016040523d82523d6000602084013e611fe4565b606091505b505090508061205b5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109cc565b505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b612108611779565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119733390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006115827f0000000000000000000000000000000000000000000000000000000000000000836126da565b60055481036122005760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109cc565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610c55565b6060868686868686604051602001612258969594939291906133f4565b60405160208183030381529060405290509695505050505050565b600081516020146122b55760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109cc565b611582828060200190518101906122cc919061311b565b61279b565b8061230f5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109cc565b600081815260096020526040902054156123625760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109cc565b6000818152600a602052604090205460ff16156123b75760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109cc565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610c559083815260200190565b8260005b602081101561249857600183821c166000858360208110612421576124216131f4565b602002015190508160010361246157604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061248e565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50506001016123fe565b509392505050565b6000818152600a602052604090205460ff16156124ba5750565b600081815260096020526040812054908190036125105760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109cc565b60085461251d8243613289565b101561256b5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109cc565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b8151600090602084016125ad64ffffffffff851682846127b1565b95945050505050565b600061158262ffffff198316602860046127f8565b6000806125e18360781c6001600160601b031690565b6001600160601b0316905060006126018460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061158261262283612828565b90565b600061158262ffffff1983168260046127f8565b600061158262ffffff198316602460046127f8565b600061158262ffffff19831660046020612839565b6000611582604c61268181601886901c6001600160601b0316613289565b62ffffff19851691906000612995565b60606000806126a98460181c6001600160601b031690565b6001600160601b0316905060405191508192506126c98483602001612a0f565b508181016020016040529052919050565b6000336001600160a01b0384161461271e5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016109cc565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278a919061344e565b6001600160a01b0316149392505050565b60006010548211156127ad5760105491505b5090565b6000806127be8385613103565b90506040518111156127ce575060005b806000036127e35762ffffff19915050611772565b5050606092831b9190911790911b1760181b90565b600061280582602061346b565b61281090600861348e565b60ff1661281e858585612839565b901c949350505050565b600061158262ffffff198316602c60205b60008160ff1660000361284e57506000611772565b6128618460181c6001600160601b031690565b6001600160601b031661287760ff841685613103565b11156128db576128c26128938560781c6001600160601b031690565b6001600160601b03166128af8660181c6001600160601b031690565b6001600160601b0316858560ff16612b66565b60405162461bcd60e51b81526004016109cc9190613333565b60208260ff1611156129555760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016109cc565b60088202600061296e8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806129ab8660781c6001600160601b031690565b6001600160601b031690506129bf86612bd4565b846129ca8784613103565b6129d49190613103565b11156129e75762ffffff19915050611acd565b6129f18582613103565b9050612a058364ffffffffff1682866127b1565b9695505050505050565b600062ffffff1980841603612a775760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016109cc565b612a8083612c0d565b612ae05760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016109cc565b6000612af58460181c6001600160601b031690565b6001600160601b031690506000612b158560781c6001600160601b031690565b6001600160601b031690506000604051905084811115612b355760206060fd5b8285848460045afa50612a05612b4b8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b60606000612b7386612c4a565b9150506000612b8186612c4a565b9150506000612b8f86612c4a565b9150506000612b9d86612c4a565b91505083838383604051602001612bb794939291906134b7565b604051602081830303815290604052945050505050949350505050565b6000612be98260181c6001600160601b031690565b612bfc8360781c6001600160601b031690565b016001600160601b03169050919050565b6000612c198260d81c90565b64ffffffffff1664ffffffffff03612c3357506000919050565b6000612c3e83612bd4565b60405110199392505050565b600080601f5b600f811115612c96576000612c6682600861358e565b85901c9050612c7481612ce6565b61ffff168417935081601014612c8c57601084901b93505b5060001901612c50565b50600f5b60ff811015612ce0576000612cb082600861358e565b85901c9050612cbe81612ce6565b61ffff168317925081600014612cd657601083901b92505b5060001901612c9a565b50915091565b6000612cf860048360ff16901c612d18565b60ff1661ffff919091161760081b612d0f82612d18565b60ff1617919050565b600060f08083179060ff82169003612d335750603092915050565b8060ff1660f103612d475750603192915050565b8060ff1660f203612d5b5750603292915050565b8060ff1660f303612d6f5750603392915050565b8060ff1660f403612d835750603492915050565b8060ff1660f503612d975750603592915050565b8060ff1660f603612dab5750603692915050565b8060ff1660f703612dbf5750603792915050565b8060ff1660f803612dd35750603892915050565b8060ff1660f903612de75750603992915050565b8060ff1660fa03612dfb5750606192915050565b8060ff1660fb03612e0f5750606292915050565b8060ff1660fc03612e235750606392915050565b8060ff1660fd03612e375750606492915050565b8060ff1660fe03612e4b5750606592915050565b8060ff1660ff03612e5f5750606692915050565b50919050565b600060208284031215612e7757600080fd5b5035919050565b6001600160a01b0381168114610f4157600080fd5b600060208284031215612ea557600080fd5b813561177281612e7e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612ed757600080fd5b813567ffffffffffffffff80821115612ef257612ef2612eb0565b604051601f8301601f19908116603f01168101908282118183101715612f1a57612f1a612eb0565b81604052838152866020858801011115612f3357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612f6557600080fd5b813567ffffffffffffffff811115612f7c57600080fd5b611acd84828501612ec6565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612fc057634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612fdf57600080fd5b853567ffffffffffffffff80821115612ff757600080fd5b818801915088601f83011261300b57600080fd5b81358181111561301a57600080fd5b8960208260051b850101111561302f57600080fd5b60209283019750955050860135925061044086018781111561305057600080fd5b94979396509194604001933592915050565b803563ffffffff8116811461307657600080fd5b919050565b60006020828403121561308d57600080fd5b61177282613062565b6000806000606084860312156130ab57600080fd5b6130b484613062565b925060208401359150604084013567ffffffffffffffff8111156130d757600080fd5b6130e386828701612ec6565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008219821115613116576131166130ed565b500190565b60006020828403121561312d57600080fd5b5051919050565b60005b8381101561314f578181015183820152602001613137565b83811115611b8c5750506000910152565b60008151808452613178816020860160208601613134565b601f01601f19169290920160200192915050565b60608152600061319f6060830186613160565b82810360208401526131b18186613160565b91505060018060a01b0383166040830152949350505050565b6040815260006131dd6040830185613160565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261322157600080fd5b9190910192915050565b6000808335601e1984360301811261324257600080fd5b83018035915067ffffffffffffffff82111561325d57600080fd5b60200191503681900382131561327257600080fd5b9250929050565b8183823760009101908152919050565b60008282101561329b5761329b6130ed565b500390565b6000602082840312156132b257600080fd5b8151801515811461177257600080fd5b600063ffffffff8083168185168083038211156132e1576132e16130ed565b01949350505050565b600080604083850312156132fd57600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612a056080830184613160565b6020815260006117726020830184613160565b6001600160a01b038416815260606020820181905260009061336a90830185613160565b905063ffffffff83166040830152949350505050565b80516020808301519190811015612e5f5760001960209190910360031b1b16919050565b600063ffffffff808716835280861660208401525083604083015260806060830152612a056080830184613160565b83815282151560208201526060604082015260006125ad6060830184613160565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161343c81604c850160208701613134565b91909101604c01979650505050505050565b60006020828403121561346057600080fd5b815161177281612e7e565b600060ff821660ff841680821015613485576134856130ed565b90039392505050565b600060ff821660ff84168160ff04811182151516156134af576134af6130ed565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201612a05565b60008160001904831182151516156135a8576135a86130ed565b50029056fea26469706673582212201e0cd131354989ef8660b807f63f9db5d860c1fd1ae3031ab134794aac6adaa864736f6c634300080f0033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
