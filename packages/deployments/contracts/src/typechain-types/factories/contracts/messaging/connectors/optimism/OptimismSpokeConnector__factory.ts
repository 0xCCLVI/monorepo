/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620033773803806200337783398101604081905262000035916200040f565b8a8a8a8a8a8a8a8a8a8a8a808b8b8b8b8b8b6200005233620002d4565b8563ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012157620001218262000333565b8015620001335762000133816200039c565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b03909616610100026001600160a81b031990961695909517909455505060016006555050620cf850851015620002005760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002435760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b038216620002965760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b816001600160a01b0316610100816001600160a01b0316815250508260078190555050505050505050505050505050505050505050505050620004ce565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003f257600080fd5b919050565b80516001600160a01b0381168114620003f257600080fd5b60008060008060008060008060008060006101608c8e0312156200043257600080fd5b6200043d8c620003dd565b9a506200044d60208d01620003dd565b99506200045d60408d01620003f7565b98506200046d60608d01620003f7565b97506200047d60808d01620003f7565b965060a08c0151955060c08c0151945060e08c015193506101008c01519250620004ab6101208d01620003f7565b9150620004bc6101408d01620003f7565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612dfa6200057d600039600081816102c90152611781015260008181610639015281816117a2015261182901526000818161052101528181610ac101528181610ee60152611263015260006102730152600061041b0152600081816106120152818161073e01528181611b5d0152611bd20152600081816103d60152818161049e0152818161121401526116830152612dfa6000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c80638d3638f411610151578063b95a2001116100c3578063d232c22011610087578063d232c220146105e8578063d2a3cc71146105fa578063d69f9d611461060d578063d88beda214610634578063db1b76591461065b578063fa31de011461066e57600080fd5b8063b95a20011461058d578063c5b350df146105b3578063cc394283146105bb578063cf796c75146105ce578063d1851c92146105d757600080fd5b8063a01892a511610115578063a01892a51461051c578063ad9c0c2e14610543578063b1f8100d1461054c578063b2f876431461055f578063b46300ec14610572578063b697f5311461057a57600080fd5b80638d3638f41461049c5780638da5cb5b146104c257806398c9f2b9146104d35780639d3117c7146104f65780639fa92f9d1461051657600080fd5b80635190bc53116101ea57806365eaf11b116101ae57806365eaf11b146104555780636a42b8f81461045d5780636b04a933146104665780636eb67a5114610479578063715018a61461048c5780638456cb591461049457600080fd5b80635190bc53146103b557806352a9674b146103d15780635bd11efc146103f85780635c975abb1461040b5780635f61e3ec1461041657600080fd5b8063301f07c311610231578063301f07c31461035c5780633cf52ffb1461037f5780633f4ba83a146103875780634ff746f61461038f578063508a109b146103a257600080fd5b8063141684161461026e5780631eeaabea146102af57806325e3beda146102c4578063272efc69146102f95780632bbd59ca1461032c575b600080fd5b6102957f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102c26102bd3660046126d9565b610681565b005b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102a6565b61031c610307366004612707565b600b6020526000908152604090205460ff1681565b60405190151581526020016102a6565b61034f61033a3660046126d9565b600d6020526000908152604090205460ff1681565b6040516102a6919061273a565b61031c61036a3660046126d9565b60096020526000908152604090205460ff1681565b6002546102eb565b6102c26106f6565b6102c261039d366004612805565b610733565b6102c26103b036600461283a565b6107d9565b61031c6103c3366004612707565b6001600160a01b0316301490565b6102957f000000000000000000000000000000000000000000000000000000000000000081565b6102c2610406366004612707565b610a86565b60055460ff1661031c565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102a6565b6102eb610abd565b62093a806102eb565b6102c26104743660046126d9565b610b46565b6102c26104873660046126d9565b610c11565b6102c2610c45565b6102c2610d02565b7f0000000000000000000000000000000000000000000000000000000000000000610295565b6000546001600160a01b031661043d565b61031c6104e13660046126d9565b600a6020526000908152604090205460ff1681565b6102eb6105043660046126d9565b60086020526000908152604090205481565b3061043d565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b6102eb60075481565b6102c261055a366004612707565b610db9565b6102c261056d366004612707565b610e5e565b6102c2610eda565b6102c2610588366004612707565b610fc3565b61029561059b3660046128ef565b600c6020526000908152604090205463ffffffff1681565b6102c2611042565b60035461043d906001600160a01b031681565b6102eb60045481565b6001546001600160a01b031661043d565b6000546001600160a01b03161561031c565b6102c2610608366004612707565b61109d565b61043d7f000000000000000000000000000000000000000000000000000000000000000081565b6102eb7f000000000000000000000000000000000000000000000000000000000000000081565b61031c610669366004612707565b611164565b6102eb61067c36600461290a565b611175565b6000546001600160a01b031633146106ac576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036106f15760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b6000546001600160a01b03163314610721576040516311a8a1bb60e31b815260040160405180910390fd5b610729611332565b61073161137b565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107945760405162461bcd60e51b81526004016106e89060208082526004908201526310a0a6a160e11b604082015260600190565b61079d816113cd565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107ce9291906129b9565b60405180910390a150565b6107e161146d565b836108185760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106e8565b60008585600081811061082d5761082d6129e3565b905060200281019061083f91906129f9565b6108499080612a1a565b604051610857929190612a68565b6040518091039020905060006108be828888600081811061087a5761087a6129e3565b905060200281019061088c91906129f9565b602001898960008181106108a2576108a26129e3565b90506020028101906108b491906129f9565b61042001356114b3565b90506108cc81868686611558565b6000828152600d60205260409020805460ff191660019081179091555b63ffffffff81168711156109f05787878263ffffffff1681811061090f5761090f6129e3565b905060200281019061092191906129f9565b61092b9080612a1a565b604051610939929190612a68565b60405180910390209250600061098e848a8a8563ffffffff16818110610961576109616129e3565b905060200281019061097391906129f9565b6020018b8b8663ffffffff168181106108a2576108a26129e3565b90508281146109cd5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106e8565b506000838152600d60205260409020805460ff19166001908117909155016108e9565b5060005b63ffffffff8116871115610a7c57610a7388888363ffffffff16818110610a1d57610a1d6129e3565b9050602002810190610a2f91906129f9565b610a399080612a1a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061161592505050565b506001016109f4565b5050505050505050565b6000546001600160a01b03163314610ab1576040516311a8a1bb60e31b815260040160405180910390fd5b610aba8161195c565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190612a78565b905090565b6000546001600160a01b03163314610b71576040516311a8a1bb60e31b815260040160405180910390fd5b610b79611332565b6000818152600860205260408120549003610bce5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016106e8565b60008181526008602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906107ce9083815260200190565b6000546001600160a01b03163314610c3c576040516311a8a1bb60e31b815260040160405180910390fd5b610aba816119c5565b6000546001600160a01b03163314610c70576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610c9357604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610ca59190612aa7565b11610cc3576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610ced576040516323295ef960e01b815260040160405180910390fd5b600154610731906001600160a01b0316611a06565b6005546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610d4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d729190612abe565b610da95760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106e8565b610db161146d565b610731611a65565b6000546001600160a01b03163314610de4576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610e0957506001600160a01b03811615155b15610e27576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610e5557604051634a2fb73f60e11b815260040160405180910390fd5b610aba81611aa2565b6000546001600160a01b03163314610e89576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107ce565b610ee261146d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f669190612a78565b604051602001610f7891815260200190565b6040516020818303038152906040529050610f9281611af0565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107ce9291906129b9565b6000546001600160a01b03163314610fee576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107ce565b6001546001600160a01b0316331461106d576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261107f9190612aa7565b11610ced5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146110c8576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b0361010090910481169082160361112b5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106e8565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107ce565b600061116f82611bcb565b92915050565b336000908152600b602052604081205460ff166111c35760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106e8565b63ffffffff8085166000908152600c6020526040902054166111e6816001612ae0565b63ffffffff8681166000908152600c60205260408120805463ffffffff19169390921692909217905561123d7f00000000000000000000000000000000000000000000000000000000000000003384898989611bf7565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d79190612b08565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611309600184612aa7565b848760405161131b9493929190612b2c565b60405180910390a1509093505050505b9392505050565b60055460ff166107315760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106e8565b611383611332565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6003546113e2906001600160a01b0316611bcb565b6114215760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106e8565b805160201461145c5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106e8565b610aba61146882612b51565b611c2f565b60055460ff16156107315760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106e8565b6000806000858152600d602052604090205460ff1660028111156114d9576114d9612724565b1461151c5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106e8565b611550848460208060200260405190810160405280929190826020800280828437600092019190915250869150611c729050565b949350505050565b6000848152600a602052604090205460ff1661160f5761157783611d18565b60006115ad858460208060200260405190810160405280929190826020800280828437600092019190915250869150611c729050565b90508381146115f45760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016106e8565b506000848152600a60205260409020805460ff191660011790555b50505050565b60006002600654036116695760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106e8565b6002600655600061167a8382611e0a565b905063ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166116b262ffffff198316611e2e565b63ffffffff16146116f45760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106e8565b600061170562ffffff198316611e43565b905060016000828152600d602052604090205460ff16600281111561172c5761172c612724565b146117635760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106e8565b6000818152600d60205260409020805460ff191660021790556117c67f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b75565b5a10156117fe5760405162461bcd60e51b81526004016106e8906020808252600490820152632167617360e01b604082015260600190565b600061180f62ffffff198416611e8c565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061186c62ffffff198916611e9d565b61187b62ffffff198a16611eb1565b61188a62ffffff198b16611ec6565b6118a761189c62ffffff198d16611edb565b62ffffff1916611f09565b6040516024016118ba9493929190612b8d565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611903578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a8460405161194193929190612bbc565b60405180910390a15050600160065550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611a6d61146d565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113b03390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000634ff746f660e01b82604051602401611b0b9190612bdd565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b94611b959490921692879201612bf0565b600060405180830381600087803b158015611baf57600080fd5b505af1158015611bc3573d6000803e3d6000fd5b505050505050565b600061116f7f000000000000000000000000000000000000000000000000000000000000000083611f52565b6060868686868686604051602001611c1496959493929190612c2a565b60405160208183030381529060405290509695505050505050565b60008181526008602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906107ce9083815260200190565b8260005b6020811015611d1057600183821c166000858360208110611c9957611c996129e3565b6020020151905081600103611cd9576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611d06565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611c76565b509392505050565b60008181526009602052604090205460ff1615611d325750565b60008181526008602052604081205490819003611d885760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016106e8565b600754611d958243612aa7565b1015611de35760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016106e8565b506000908152600960209081526040808320805460ff191660011790556008909152812055565b815160009060208401611e2564ffffffffff85168284612013565b95945050505050565b600061116f62ffffff1983166028600461205a565b600080611e598360781c6001600160601b031690565b6001600160601b031690506000611e798460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061116f611e9a8361208a565b90565b600061116f62ffffff19831682600461205a565b600061116f62ffffff1983166024600461205a565b600061116f62ffffff1983166004602061209b565b600061116f604c611ef981601886901c6001600160601b0316612aa7565b62ffffff198516919060006121f7565b6060600080611f218460181c6001600160601b031690565b6001600160601b031690506040519150819250611f418483602001612271565b508181016020016040529052919050565b6000336001600160a01b03841614611f965760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106e8565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120029190612c84565b6001600160a01b0316149392505050565b6000806120208385612b75565b9050604051811115612030575060005b806000036120455762ffffff1991505061132b565b5050606092831b9190911790911b1760181b90565b6000612067826020612ca1565b612072906008612cc4565b60ff1661208085858561209b565b901c949350505050565b600061116f62ffffff198316602c60205b60008160ff166000036120b05750600061132b565b6120c38460181c6001600160601b031690565b6001600160601b03166120d960ff841685612b75565b111561213d576121246120f58560781c6001600160601b031690565b6001600160601b03166121118660181c6001600160601b031690565b6001600160601b0316858560ff166123c8565b60405162461bcd60e51b81526004016106e89190612bdd565b60208260ff1611156121b75760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106e8565b6008820260006121d08660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60008061220d8660781c6001600160601b031690565b6001600160601b0316905061222186612436565b8461222c8784612b75565b6122369190612b75565b11156122495762ffffff19915050611550565b6122538582612b75565b90506122678364ffffffffff168286612013565b9695505050505050565b600062ffffff19808416036122d95760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106e8565b6122e28361246f565b6123425760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106e8565b60006123578460181c6001600160601b031690565b6001600160601b0316905060006123778560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156123975760206060fd5b8285848460045afa506122676123ad8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006123d5866124ac565b91505060006123e3866124ac565b91505060006123f1866124ac565b91505060006123ff866124ac565b915050838383836040516020016124199493929190612ced565b604051602081830303815290604052945050505050949350505050565b600061244b8260181c6001600160601b031690565b61245e8360781c6001600160601b031690565b016001600160601b03169050919050565b600061247b8260d81c90565b64ffffffffff1664ffffffffff0361249557506000919050565b60006124a083612436565b60405110199392505050565b600080601f5b600f8160ff1611156125015760006124cb826008612cc4565b60ff1685901c90506124dc8161255a565b61ffff16841793508160ff166010146124f757601084901b93505b50600019016124b2565b50600f5b60ff8160ff16101561255457600061251e826008612cc4565b60ff1685901c905061252f8161255a565b61ffff16831792508160ff1660001461254a57601083901b92505b5060001901612505565b50915091565b600061256c60048360ff16901c61258c565b60ff1661ffff919091161760081b6125838261258c565b60ff1617919050565b600060f08083179060ff821690036125a75750603092915050565b8060ff1660f1036125bb5750603192915050565b8060ff1660f2036125cf5750603292915050565b8060ff1660f3036125e35750603392915050565b8060ff1660f4036125f75750603492915050565b8060ff1660f50361260b5750603592915050565b8060ff1660f60361261f5750603692915050565b8060ff1660f7036126335750603792915050565b8060ff1660f8036126475750603892915050565b8060ff1660f90361265b5750603992915050565b8060ff1660fa0361266f5750606192915050565b8060ff1660fb036126835750606292915050565b8060ff1660fc036126975750606392915050565b8060ff1660fd036126ab5750606492915050565b8060ff1660fe036126bf5750606592915050565b8060ff1660ff036126d35750606692915050565b50919050565b6000602082840312156126eb57600080fd5b5035919050565b6001600160a01b0381168114610aba57600080fd5b60006020828403121561271957600080fd5b813561132b816126f2565b634e487b7160e01b600052602160045260246000fd5b602081016003831061275c57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261278957600080fd5b813567ffffffffffffffff808211156127a4576127a4612762565b604051601f8301601f19908116603f011681019082821181831017156127cc576127cc612762565b816040528381528660208588010111156127e557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561281757600080fd5b813567ffffffffffffffff81111561282e57600080fd5b61155084828501612778565b6000806000806000610460868803121561285357600080fd5b853567ffffffffffffffff8082111561286b57600080fd5b818801915088601f83011261287f57600080fd5b81358181111561288e57600080fd5b8960208260051b85010111156128a357600080fd5b6020928301975095505086013592506104408601878111156128c457600080fd5b94979396509194604001933592915050565b803563ffffffff811681146128ea57600080fd5b919050565b60006020828403121561290157600080fd5b61132b826128d6565b60008060006060848603121561291f57600080fd5b612928846128d6565b925060208401359150604084013567ffffffffffffffff81111561294b57600080fd5b61295786828701612778565b9150509250925092565b60005b8381101561297c578181015183820152602001612964565b8381111561160f5750506000910152565b600081518084526129a5816020860160208601612961565b601f01601f19169290920160200192915050565b6040815260006129cc604083018561298d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612a1057600080fd5b9190910192915050565b6000808335601e19843603018112612a3157600080fd5b83018035915067ffffffffffffffff821115612a4c57600080fd5b602001915036819003821315612a6157600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612a8a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612ab957612ab9612a91565b500390565b600060208284031215612ad057600080fd5b8151801515811461132b57600080fd5b600063ffffffff808316818516808303821115612aff57612aff612a91565b01949350505050565b60008060408385031215612b1b57600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612267608083018461298d565b805160208083015191908110156126d35760001960209190910360031b1b16919050565b60008219821115612b8857612b88612a91565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152612267608083018461298d565b8381528215156020820152606060408201526000611e25606083018461298d565b60208152600061132b602083018461298d565b6001600160a01b0384168152606060208201819052600090612c149083018561298d565b905063ffffffff83166040830152949350505050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612c7281604c850160208701612961565b91909101604c01979650505050505050565b600060208284031215612c9657600080fd5b815161132b816126f2565b600060ff821660ff841680821015612cbb57612cbb612a91565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ce557612ce5612a91565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161226756fea264697066735822122034164bd3526751a2be8fda60f1e0e87750c0d8c0173a66f74234f3fe9f1665bd64736f6c634300080f0033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
