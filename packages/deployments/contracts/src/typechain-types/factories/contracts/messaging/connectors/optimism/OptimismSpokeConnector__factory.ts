/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismSpokeConnector,
  OptimismSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003bd838038062003bd8833981016040819052620000359162000403565b80808c8c8c8c8c8c8c8c8c8c808a8a8a8a8a6200005233620002c2565b8463ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012157620001218162000327565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f45760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a978411620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b506001600160a01b03166101005260085550620002af9550869450506200039092505050565b50505050505050505050505050620004c2565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b805163ffffffff81168114620003e657600080fd5b919050565b80516001600160a01b0381168114620003e657600080fd5b60008060008060008060008060008060006101608c8e0312156200042657600080fd5b620004318c620003d1565b9a506200044160208d01620003d1565b99506200045160408d01620003eb565b98506200046160608d01620003eb565b97506200047160808d01620003eb565b965060a08c0151955060c08c0151945060e08c01519350620004976101008d01620003eb565b9250620004a86101208d01620003eb565b91506101408c015190509295989b509295989b9093969950565b60805160a05160c05160e05161010051610120516101405161366762000571600039600081816103400152611db501526000818161095c01528181611dd60152611e6301526000818161078301528181610ad901528181611019015261171d015260006102d00152600061059101526000818161091201528181610c81015281816118d701526122410152600081816104a5015281816106bf015281816116bf0152611cb501526136676000f3fe6080604052600436106102b25760003560e01c80637850b02011610175578063b697f531116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda21461094a578063db1b76591461097e578063e0fed0101461099e578063fa31de01146109be57600080fd5b8063d2a3cc71146108e0578063d69f9d6114610900578063d7d317b31461093457600080fd5b8063b697f5311461081b578063b95a20011461083b578063c5b350df1461086e578063cc39428314610883578063d1851c92146108a3578063d232c220146108c157600080fd5b80639fa92f9d1161012e5780639fa92f9d1461075e578063a01892a514610771578063a792c29b146107a5578063ad9c0c2e146107c5578063b1f8100d146107db578063b2f87643146107fb57600080fd5b80637850b0201461067b5780638456cb591461069b5780638d3638f4146106b05780638da5cb5b146106e357806398c9f2b9146107015780639d3117c71461073157600080fd5b8063572386ca116102195780636159ada1116101d25780636159ada1146105cb57806365eaf11b146105fb57806368742da6146106105780636a42b8f8146106305780636b04a93314610646578063715018a61461066657600080fd5b8063572386ca146104c7578063579c1618146104f75780635bd11efc1461050d5780635c36b1861461052d5780635c975abb146105605780635f61e3ec1461057f57600080fd5b80633cf52ffb1161026b5780633cf52ffb146104005780633f4ba83a146104155780634ff746f61461042a578063508a109b1461044a5780635190bc531461046a57806352a9674b1461049357600080fd5b806314168416146102be5780631eeaabea1461030c57806325e3beda1461032e5780632bb1ae7c146103705780632bbd59ca14610383578063301f07c3146103c057600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561031857600080fd5b5061032c610327366004612fdf565b6109ec565b005b34801561033a57600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610303565b61032c61037e36600461309b565b610a96565b34801561038f57600080fd5b506103b361039e366004612fdf565b600f6020526000908152604090205460ff1681565b60405161030391906130e6565b3480156103cc57600080fd5b506103f06103db366004612fdf565b600a6020526000908152604090205460ff1681565b6040519015158152602001610303565b34801561040c57600080fd5b50600254610362565b34801561042157600080fd5b5061032c610c39565b34801561043657600080fd5b5061032c61044536600461309b565b610c76565b34801561045657600080fd5b5061032c61046536600461310e565b610d1c565b34801561047657600080fd5b506103f06104853660046131bf565b6001600160a01b0316301490565b34801561049f57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d357600080fd5b506103f06104e2366004612fdf565b600c6020526000908152604090205460ff1681565b34801561050357600080fd5b5061036260055481565b34801561051957600080fd5b5061032c6105283660046131bf565b610fde565b34801561053957600080fd5b506040805180820182526004815263706f6e6760e01b60208201529051610303919061322c565b34801561056c57600080fd5b50600354600160a01b900460ff166103f0565b34801561058b57600080fd5b506105b37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610303565b3480156105d757600080fd5b506103f06105e63660046131bf565b600d6020526000908152604090205460ff1681565b34801561060757600080fd5b50610362611015565b34801561061c57600080fd5b5061032c61062b3660046131bf565b61109e565b34801561063c57600080fd5b5062093a80610362565b34801561065257600080fd5b5061032c610661366004612fdf565b61111b565b34801561067257600080fd5b5061032c6111e6565b34801561068757600080fd5b5061032c610696366004612fdf565b611211565b3480156106a757600080fd5b5061032c611245565b3480156106bc57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102f2565b3480156106ef57600080fd5b506000546001600160a01b03166105b3565b34801561070d57600080fd5b506103f061071c366004612fdf565b600b6020526000908152604090205460ff1681565b34801561073d57600080fd5b5061036261074c366004612fdf565b60096020526000908152604090205481565b34801561076a57600080fd5b50306105b3565b34801561077d57600080fd5b506105b37f000000000000000000000000000000000000000000000000000000000000000081565b3480156107b157600080fd5b506004546105b3906001600160a01b031681565b3480156107d157600080fd5b5061036260085481565b3480156107e757600080fd5b5061032c6107f63660046131bf565b6112f9565b34801561080757600080fd5b5061032c6108163660046131bf565b611397565b34801561082757600080fd5b5061032c6108363660046131bf565b611413565b34801561084757600080fd5b506102f2610856366004613258565b600e6020526000908152604090205463ffffffff1681565b34801561087a57600080fd5b5061032c611492565b34801561088f57600080fd5b506003546105b3906001600160a01b031681565b3480156108af57600080fd5b506001546001600160a01b03166105b3565b3480156108cd57600080fd5b506000546001600160a01b0316156103f0565b3480156108ec57600080fd5b5061032c6108fb3660046131bf565b611502565b34801561090c57600080fd5b506105b37f000000000000000000000000000000000000000000000000000000000000000081565b34801561094057600080fd5b5061036260065481565b34801561095657600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b34801561098a57600080fd5b506103f06109993660046131bf565b6115d9565b3480156109aa57600080fd5b5061032c6109b9366004612fdf565b6115ea565b3480156109ca57600080fd5b506109de6109d9366004613273565b61161e565b6040516103039291906132ca565b6000546001600160a01b03163314610a17576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a5c5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610a9e6117ed565b43600554600654610aaf91906132f9565b1115610ace576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b59919061330c565b6000818152600c602052604090205490915060ff1615610baf5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a53565b600081604051602001610bc491815260200190565b6040516020818303038152906040529050610bdf818461183a565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610c2c90839086903390613325565b60405180910390a1505050565b6000546001600160a01b03163314610c64576040516311a8a1bb60e31b815260040160405180910390fd5b610c6c61195f565b610c746119af565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cd75760405162461bcd60e51b8152600401610a539060208082526004908201526310a0a6a160e11b604082015260600190565b610ce081611a04565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d11929190613363565b60405180910390a150565b610d246117ed565b610d2c611aa4565b83610d635760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a53565b600085856000818110610d7857610d7861338d565b9050602002810190610d8a91906133a3565b610d9490806133c4565b604051610da2929190613412565b604051809103902090506000610e098288886000818110610dc557610dc561338d565b9050602002810190610dd791906133a3565b60200189896000818110610ded57610ded61338d565b9050602002810190610dff91906133a3565b6104200135611afd565b9050610e1781868686611ba4565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610f3d5788888263ffffffff16818110610e5c57610e5c61338d565b9050602002810190610e6e91906133a3565b610e7890806133c4565b604051610e86929190613412565b604051809103902093506000610edb858b8b8563ffffffff16818110610eae57610eae61338d565b9050602002810190610ec091906133a3565b6020018c8c8663ffffffff16818110610ded57610ded61338d565b9050838114610f1a5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a53565b506000848152600f60205260409020805460ff1916600190811790915501610e36565b5060005b818163ffffffff161015610fc957610fc089898363ffffffff16818110610f6a57610f6a61338d565b9050602002810190610f7c91906133a3565b610f8690806133c4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c9f92505050565b50600101610f41565b50505050610fd76001600755565b5050505050565b6000546001600160a01b03163314611009576040516311a8a1bb60e31b815260040160405180910390fd5b61101281611f7c565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611075573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611099919061330c565b905090565b6000546001600160a01b031633146110c9576040516311a8a1bb60e31b815260040160405180910390fd5b476110d48282611fe5565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161110f91815260200190565b60405180910390a25050565b6000546001600160a01b03163314611146576040516311a8a1bb60e31b815260040160405180910390fd5b61114e61195f565b60008181526009602052604081205490036111a35760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a53565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d119083815260200190565b6000546001600160a01b03163314610c74576040516311a8a1bb60e31b815260040160405180910390fd5b6000546001600160a01b0316331461123c576040516311a8a1bb60e31b815260040160405180910390fd5b61101281612103565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b29190613422565b6112e95760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a53565b6112f16117ed565b610c74612144565b6000546001600160a01b03163314611324576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611342575060025415155b15611360576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361138e57604051634a2fb73f60e11b815260040160405180910390fd5b61101281612187565b6000546001600160a01b031633146113c2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d11565b6000546001600160a01b0316331461143e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d11565b6001546001600160a01b031633146114bd576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114cf9190613444565b116114ed576040516324e0285f60e21b815260040160405180910390fd5b600154610c74906001600160a01b03166121d5565b6000546001600160a01b0316331461152d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361158b5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a53565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d11565b60006115e48261223a565b92915050565b6000546001600160a01b03163314611615576040516311a8a1bb60e31b815260040160405180910390fd5b61101281612266565b336000908152600d602052604081205460609060ff1661166f5760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a53565b63ffffffff8086166000908152600e602052604081208054919291909116908261169883613457565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006116f77f00000000000000000000000000000000000000000000000000000000000000006116ee336001600160a01b031690565b848a8a8a6122e4565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561176d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611791919061347a565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836117c3600184613444565b84876040516117d5949392919061349e565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610c745760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a53565b815160201461187a5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a53565b6000634ff746f660e01b83604051602401611895919061322c565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b91168361190a8661231c565b6040518463ffffffff1660e01b8152600401611928939291906134cd565b600060405180830381600087803b15801561194257600080fd5b505af1158015611956573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610c745760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a53565b6119b761195f565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611a19906001600160a01b031661223a565b611a585760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610a53565b8051602014611a935760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a53565b611012611a9f82613507565b61237a565b600260075403611af65760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a53565b6002600755565b6000806000858152600f602052604090205460ff166002811115611b2357611b236130d0565b14611b665760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a53565b611b9a8484602080602002604051908101604052809291908260208002808284376000920191909152508691506124a39050565b90505b9392505050565b6000848152600b602052604090205460ff16611c9957611bc3836127f1565b6000611bf98584602080602002604051908101604052809291908260208002808284376000920191909152508691506124a39050565b9050838114611c405760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a53565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611c8f9086815260200190565b60405180910390a3505b50505050565b600080611cac8382612951565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ce462ffffff198316612975565b63ffffffff1614611d265760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a53565b6000611d3762ffffff19831661298a565b905060016000828152600f602052604090205460ff166002811115611d5e57611d5e6130d0565b14611d955760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a53565b6000818152600f60205260409020805460ff191660021790556001611dfa7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006132f9565b611e049190613444565b5a11611e3b5760405162461bcd60e51b8152600401610a53906020808252600490820152632167617360e01b604082015260600190565b6000611e4c62ffffff1984166129d3565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611ea762ffffff1988166129e4565b611eb662ffffff1989166129f8565b611ec562ffffff198a16612a0d565b611ee2611ed762ffffff198c16612a22565b62ffffff1916612a50565b604051602401611ef5949392919061352e565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611f2f858560008685612a99565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611f689088908b90869061355d565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156120355760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a53565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612082576040519150601f19603f3d011682016040523d82523d6000602084013e612087565b606091505b50509050806120fe5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a53565b505050565b60105460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1601055565b61214c6117ed565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119e73390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006115e47f000000000000000000000000000000000000000000000000000000000000000083612b24565b60055481036122a95760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a53565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d11565b60608686868686866040516020016123019695949392919061357e565b60405160208183030381529060405290509695505050505050565b6000815160201461235e5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a53565b6115e482806020019051810190612375919061330c565b612be5565b806123b85760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a53565b6000818152600960205260409020541561240b5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a53565b6000818152600a602052604090205460ff16156124605760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a53565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d119083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806128345760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a53565b6000818152600a602052604090205460ff161561284e5750565b600081815260096020526040812054908190036128a45760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a53565b6008546128b18243613444565b10156128ff5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a53565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b81516000906020840161296c64ffffffffff85168284612bfb565b95945050505050565b60006115e462ffffff19831660286004612c38565b6000806129a08360781c6001600160601b031690565b6001600160601b0316905060006129c08460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115e46129e183612c68565b90565b60006115e462ffffff198316826004612c38565b60006115e462ffffff19831660246004612c38565b60006115e462ffffff19831660046020612c79565b60006115e4604c612a4081601886901c6001600160601b0316613444565b62ffffff19851691906000612d84565b6060600080612a688460181c6001600160601b031690565b6001600160601b031690506040519150819250612a888483602001612e00565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612abf57612abf612ff8565b6040519080825280601f01601f191660200182016040528015612ae9576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612b0a578692505b828152826000602083013e90999098509650505050505050565b6000336001600160a01b03841614612b685760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610a53565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd491906135d8565b6001600160a01b0316149392505050565b6000601054821115612bf75760105491505b5090565b600080612c0883856132f9565b9050604051811115612c18575060005b80600003612c2d5762ffffff19915050611b9d565b61296c858585612ef3565b6000612c458260206135f5565b612c5090600861360e565b60ff16612c5e858585612c79565b901c949350505050565b60006115e462ffffff198316602c60205b60008160ff16600003612c8e57506000611b9d565b612ca18460181c6001600160601b031690565b6001600160601b0316612cb760ff8416856132f9565b1115612d1f57612cd08460781c6001600160601b031690565b612ce38560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a53565b60208260ff161115612d445760405163045df3f960e01b815260040160405180910390fd5b600882026000612d5d8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612d9a8660781c6001600160601b031690565b6001600160601b03169050612dae86612f6a565b84612db987846132f9565b612dc391906132f9565b1115612dd65762ffffff19915050612df8565b612de085826132f9565b9050612df48364ffffffffff168286612bfb565b9150505b949350505050565b600062ffffff1980841603612e285760405163148d513360e21b815260040160405180910390fd5b612e3183612fa3565b15612e4f57604051632ee0949160e11b815260040160405180910390fd5b6000612e648460181c6001600160601b031690565b6001600160601b031690506000612e848560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612ea55760206060fd5b8386858560045afa905080612ecd57604051632af1bd9b60e21b815260040160405180910390fd5b612ee8612eda8860d81c90565b64ffffffffff168786612ef3565b979650505050505050565b60006060601883856001600160601b03821682148015612f1b575086816001600160601b0316145b612f545760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a53565b96831b90961790911b90941790931b9392505050565b6000612f7f8260181c6001600160601b031690565b612f928360781c6001600160601b031690565b016001600160601b03169050919050565b6000612faf8260d81c90565b64ffffffffff1664ffffffffff03612fc957506001919050565b6000612fd483612f6a565b604051109392505050565b600060208284031215612ff157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261301f57600080fd5b813567ffffffffffffffff8082111561303a5761303a612ff8565b604051601f8301601f19908116603f0116810190828211818310171561306257613062612ff8565b8160405283815286602085880101111561307b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156130ad57600080fd5b813567ffffffffffffffff8111156130c457600080fd5b612df88482850161300e565b634e487b7160e01b600052602160045260246000fd5b602081016003831061310857634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561312757600080fd5b853567ffffffffffffffff8082111561313f57600080fd5b818801915088601f83011261315357600080fd5b81358181111561316257600080fd5b8960208260051b850101111561317757600080fd5b60209283019750955050860135925061044086018781111561319857600080fd5b94979396509194604001933592915050565b6001600160a01b038116811461101257600080fd5b6000602082840312156131d157600080fd5b8135611b9d816131aa565b60005b838110156131f75781810151838201526020016131df565b50506000910152565b600081518084526132188160208601602086016131dc565b601f01601f19169290920160200192915050565b602081526000611b9d6020830184613200565b803563ffffffff8116811461325357600080fd5b919050565b60006020828403121561326a57600080fd5b611b9d8261323f565b60008060006060848603121561328857600080fd5b6132918461323f565b925060208401359150604084013567ffffffffffffffff8111156132b457600080fd5b6132c08682870161300e565b9150509250925092565b828152604060208201526000611b9a6040830184613200565b634e487b7160e01b600052601160045260246000fd5b808201808211156115e4576115e46132e3565b60006020828403121561331e57600080fd5b5051919050565b6060815260006133386060830186613200565b828103602084015261334a8186613200565b91505060018060a01b0383166040830152949350505050565b6040815260006133766040830185613200565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126133ba57600080fd5b9190910192915050565b6000808335601e198436030181126133db57600080fd5b83018035915067ffffffffffffffff8211156133f657600080fd5b60200191503681900382131561340b57600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561343457600080fd5b81518015158114611b9d57600080fd5b818103818111156115e4576115e46132e3565b600063ffffffff808316818103613470576134706132e3565b6001019392505050565b6000806040838503121561348d57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006134c36080830184613200565b9695505050505050565b6001600160a01b03841681526060602082018190526000906134f190830185613200565b905063ffffffff83166040830152949350505050565b80516020808301519190811015613528576000198160200360031b1b821691505b50919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526134c36080830184613200565b838152821515602082015260606040820152600061296c6060830184613200565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516135c681604c8501602087016131dc565b91909101604c01979650505050505050565b6000602082840312156135ea57600080fd5b8151611b9d816131aa565b60ff82811682821603908111156115e4576115e46132e3565b60ff818116838216029081169081811461362a5761362a6132e3565b509291505056fea2646970667358221220590c1c012dbeeae3ad5a48b22d13f8acfdd99cec54c20b8aa3ee2c6d359cb5a364736f6c63430008110033";

type OptimismSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismSpokeConnector__factory extends ContractFactory {
  constructor(...args: OptimismSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismSpokeConnector {
    return super.attach(address) as OptimismSpokeConnector;
  }
  override connect(signer: Signer): OptimismSpokeConnector__factory {
    return super.connect(signer) as OptimismSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismSpokeConnectorInterface {
    return new utils.Interface(_abi) as OptimismSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismSpokeConnector;
  }
}
