/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  ICheckpointManager,
  ICheckpointManagerInterface,
} from "../../../../../../../contracts/messaging/connectors/polygon/tunnel/FxBaseRootTunnel.sol/ICheckpointManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "headerBlocks",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000500000000000200010000000103550000006001100270000000230010019d0000008005000039000000400100003900000000005104350000000101200190000000510000c13d0000000001000031000000040110008c0000005c0000413d0000000101000367000000000101043b0000002501100197000000260110009c0000005c0000c13d0000000001000416000000000110004c0000005c0000c13d000000040100008a00000000011000310000002702000041000000200310008c000000000300001900000000030240190000002701100197000000000410004c000000000200a019000000270110009c00000000010300190000000001026019000000000110004c0000005c0000c13d00000004010000390000000101100367000000000101043b0000000000100435000000200100003900000000000104350000000001000019000400000005001d0087005f0000040f000500000001001d008700850000040f000300000001001d00000005010000290000000101100039008700850000040f000200000001001d00000005010000290000000201100039008700850000040f000100000001001d00000005010000290000000301100039008700850000040f00000005020000290000000402200039000500000001001d0000000001020019008700850000040f000000040400002900000003020000290000000000240435000000a00200003900000002030000290000000000320435000000c00300003900000001050000290000000000530435000000e0030000390000000505000029000000000053043500000028011001970000010003000039000000000013043500000000010400190000000003000019008700720000040f0000000001000416000000000110004c0000005c0000c13d0000002002000039000001000100003900000000002104390000012002000039000000000002043900000040020000390000002403000041008700720000040f00000000010000190000000002000019008700770000040f00000023020000410000000003000414000000230430009c0000000003028019000000230410009c00000000010280190000004001100210000000c002300210000000000112019f00000029011001c70000801002000039008700800000040f00000001022001900000006f0000613d000000000101043b000000000001042d00000000010000190000000002000019008700770000040f0000004001100210000000600220021000000000011200190000000001310019000000880001042e0000002303000041000000230420009c0000000002038019000000230410009c000000000103801900000040011002100000006002200210000000000112019f000000890001043000000083002104230000000102000039000000000001042d0000000002000019000000000001042d000000000101041a000000000001042d0000008700000432000000880001042e00000089000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000000000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000041539d4a000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff02000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

type ICheckpointManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ICheckpointManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ICheckpointManager__factory extends ContractFactory {
  constructor(...args: ICheckpointManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ICheckpointManager> {
    return super.deploy(overrides || {}) as Promise<ICheckpointManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ICheckpointManager {
    return super.attach(address) as ICheckpointManager;
  }
  override connect(signer: Signer): ICheckpointManager__factory {
    return super.connect(signer) as ICheckpointManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ICheckpointManagerInterface {
    return new utils.Interface(_abi) as ICheckpointManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICheckpointManager {
    return new Contract(address, _abi, signerOrProvider) as ICheckpointManager;
  }
}
