/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setWatcherPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200343d3803806200343d833981016040819052620000359162000433565b888b8b828b8b8b8b8b8b8b8b808b8b8b8b8b8b6200005333620002f8565b8563ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000ea5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012257620001228262000357565b801562000134576200013481620003c0565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039690961695909517909455505060016006555050620cf850851015620001fc5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a988410156200023f5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b6101208590526101408490526001600160a01b038216620002925760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000095565b816001600160a01b0316610100816001600160a01b03168152505082600781905550505050505050505050505080600e60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550505050505050505050505050620004f2565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff811681146200041657600080fd5b919050565b80516001600160a01b03811681146200041657600080fd5b60008060008060008060008060008060006101608c8e0312156200045657600080fd5b620004618c62000401565b9a506200047160208d0162000401565b99506200048160408d016200041b565b98506200049160608d016200041b565b9750620004a160808d016200041b565b965060a08c0151955060c08c0151945060e08c015193506101008c01519250620004cf6101208d016200041b565b9150620004e06101408d016200041b565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612ea36200059a600039600081816102ea01526118130152600081816106ae0152818161183401526118bb01526000818161057801528181610b27015281816110ff01526114770152600061029401526000610459015260008181610687015281816107760152611c5901526000818161041f015281816104e20152818161142801526117150152612ea36000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c806398c9f2b91161015c578063b697f531116100ce578063d232c22011610087578063d232c2201461065d578063d2a3cc711461066f578063d69f9d6114610682578063d88beda2146106a9578063db1b7659146106d0578063fa31de01146106e357600080fd5b8063b697f531146105ef578063b95a200114610602578063c5b350df14610628578063cc39428314610630578063cf796c7514610643578063d1851c921461064c57600080fd5b8063ad9c0c2e11610120578063ad9c0c2e1461059a578063b0c273cc146105a3578063b187bd26146105b6578063b1f8100d146105c1578063b2f87643146105d4578063b46300ec146105e757600080fd5b806398c9f2b9146105175780639a7c4b711461053a5780639d3117c71461054d5780639fa92f9d1461056d578063a01892a51461057357600080fd5b806352a9674b116102005780636eb67a51116101b95780636eb67a511461049f578063715018a6146104b25780637f1e9cb0146104ba57806388837094146104cd5780638d3638f4146104e05780638da5cb5b1461050657600080fd5b806352a9674b1461041a5780635bd11efc146104415780635f61e3ec1461045457806365eaf11b1461047b5780636a42b8f8146104835780636b04a9331461048c57600080fd5b8063301f07c311610252578063301f07c31461037d5780633cf52ffb146103a0578063450d11f0146103a85780634ff746f6146103d8578063508a109b146103eb5780635190bc53146103fe57600080fd5b8063141684161461028f5780631eeaabea146102d057806325e3beda146102e5578063272efc691461031a5780632bbd59ca1461034d575b600080fd5b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102e36102de366004612713565b6106f6565b005b61030c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102c7565b61033d610328366004612748565b600b6020526000908152604090205460ff1681565b60405190151581526020016102c7565b61037061035b366004612713565b600d6020526000908152604090205460ff1681565b6040516102c79190612779565b61033d61038b366004612713565b60096020526000908152604090205460ff1681565b60025461030c565b600e546103c09061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016102c7565b6102e36103e6366004612844565b61076b565b6102e36103f9366004612879565b610808565b61033d61040c366004612748565b6001600160a01b0316301490565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b6102e361044f366004612748565b610aec565b6103c07f000000000000000000000000000000000000000000000000000000000000000081565b61030c610b23565b62093a8061030c565b6102e361049a366004612713565b610bac565b6102e36104ad366004612713565b610cab565b6102e3610cdf565b600f546103c0906001600160a01b031681565b6102e36104db366004612748565b610d9e565b7f00000000000000000000000000000000000000000000000000000000000000006102b6565b6000546001600160a01b03166103c0565b61033d610525366004612713565b600a6020526000908152604090205460ff1681565b6102e3610548366004612915565b610e2c565b61030c61055b366004612713565b60086020526000908152604090205481565b306103c0565b6103c07f000000000000000000000000000000000000000000000000000000000000000081565b61030c60075481565b6102e36105b13660046129aa565b610edc565b600e5460ff1661033d565b6102e36105cf366004612748565b610fda565b6102e36105e2366004612748565b61107f565b6102e36110fb565b6102e36105fd366004612748565b6111dc565b6102b66106103660046129db565b600c6020526000908152604090205463ffffffff1681565b6102e361125b565b6003546103c0906001600160a01b031681565b61030c60045481565b6001546001600160a01b03166103c0565b6000546001600160a01b03161561033d565b6102e361067d366004612748565b6112b6565b6103c07f000000000000000000000000000000000000000000000000000000000000000081565b61030c7f000000000000000000000000000000000000000000000000000000000000000081565b61033d6106de366004612748565b611378565b61030c6106f13660046129f6565b611389565b6000546001600160a01b03163314610721576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036107665760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107cc5760405162461bcd60e51b815260040161075d9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107fd929190612aa5565b60405180910390a150565b600e5460ff16156108475760405162461bcd60e51b8152602060048201526009602482015268085d5b9c185d5cd95960ba1b604482015260640161075d565b8361087e5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b604482015260640161075d565b60008585600081811061089357610893612acf565b90506020028101906108a59190612ae5565b6108af9080612b06565b6040516108bd929190612b54565b60405180910390209050600061092482888860008181106108e0576108e0612acf565b90506020028101906108f29190612ae5565b6020018989600081811061090857610908612acf565b905060200281019061091a9190612ae5565b6104200135611546565b9050610932818686866115eb565b6000828152600d60205260409020805460ff191660019081179091555b63ffffffff8116871115610a565787878263ffffffff1681811061097557610975612acf565b90506020028101906109879190612ae5565b6109919080612b06565b60405161099f929190612b54565b6040518091039020925060006109f4848a8a8563ffffffff168181106109c7576109c7612acf565b90506020028101906109d99190612ae5565b6020018b8b8663ffffffff1681811061090857610908612acf565b9050828114610a335760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b604482015260640161075d565b506000838152600d60205260409020805460ff191660019081179091550161094f565b5060005b63ffffffff8116871115610ae257610ad988888363ffffffff16818110610a8357610a83612acf565b9050602002810190610a959190612ae5565b610a9f9080612b06565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506116a792505050565b50600101610a5a565b5050505050505050565b6000546001600160a01b03163314610b17576040516311a8a1bb60e31b815260040160405180910390fd5b610b20816119ee565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba79190612b64565b905090565b6000546001600160a01b03163314610bd7576040516311a8a1bb60e31b815260040160405180910390fd5b600e5460ff16610c135760405162461bcd60e51b8152602060048201526007602482015266085c185d5cd95960ca1b604482015260640161075d565b6000818152600860205260408120549003610c685760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b604482015260640161075d565b60008181526008602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906107fd9083815260200190565b6000546001600160a01b03163314610cd6576040516311a8a1bb60e31b815260040160405180910390fd5b610b2081611a57565b6000546001600160a01b03163314610d0a576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610d2d57604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610d3f9190612b93565b11610d5d576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610d87576040516323295ef960e01b815260040160405180910390fd5b600154610d9c906001600160a01b0316611a98565b565b600f546001600160a01b031615610e0a5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161075d565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600e5461010090046001600160a01b03163314610e955760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b606482015260840161075d565b610ed6848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611af792505050565b50505050565b6005546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa158015610f24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f489190612baa565b610f7f5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161075d565b600e5481151560ff909116151503610fc75760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b604482015260640161075d565b600e805460ff1916911515919091179055565b6000546001600160a01b03163314611005576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561102a57506001600160a01b03811615155b15611048576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361107657604051634a2fb73f60e11b815260040160405180910390fd5b610b2081611bf5565b6000546001600160a01b031633146110aa576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107fd565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561115b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117f9190612b64565b60405160200161119191815260200190565b60405160208183030381529060405290506111ab81611c43565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107fd929190612aa5565b6000546001600160a01b03163314611207576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107fd565b6001546001600160a01b03163314611286576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426112989190612b93565b11610d875760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146112e1576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b039081169082160361133f5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e61676572000000000000000000604482015260640161075d565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107fd565b600061138382611c4c565b92915050565b336000908152600b602052604081205460ff166113d75760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161075d565b63ffffffff8085166000908152600c6020526040902054166113fa816001612bc7565b63ffffffff8681166000908152600c60205260408120805463ffffffff1916939092169290921790556114517f00000000000000000000000000000000000000000000000000000000000000003384898989611cb8565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156114c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114eb9190612bef565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361151d600184612b93565b848760405161152f9493929190612c13565b60405180910390a1509093505050505b9392505050565b6000806000858152600d602052604090205460ff16600281111561156c5761156c612763565b146115af5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161075d565b6115e3848460208060200260405190810160405280929190826020800280828437600092019190915250869150611cf09050565b949350505050565b6000848152600a602052604090205460ff16610ed65761160a83611da1565b6000611640858460208060200260405190810160405280929190826020800280828437600092019190915250869150611cf09050565b90508381146116875760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b604482015260640161075d565b506000848152600a60205260409020805460ff1916600117905550505050565b60006002600654036116fb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161075d565b6002600655600061170c8382611e93565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661174462ffffff198316611eb7565b63ffffffff16146117865760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161075d565b600061179762ffffff198316611ecc565b905060016000828152600d602052604090205460ff1660028111156117be576117be612763565b146117f55760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161075d565b6000818152600d60205260409020805460ff191660021790556118587f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612c38565b5a10156118905760405162461bcd60e51b815260040161075d906020808252600490820152632167617360e01b604082015260600190565b60006118a162ffffff198416611f15565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006118fe62ffffff198916611f26565b61190d62ffffff198a16611f3a565b61191c62ffffff198b16611f4f565b61193961192e62ffffff198d16611f64565b62ffffff1916611f92565b60405160240161194c9493929190612c50565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611995578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516119d393929190612c7f565b60405180910390a15050600160065550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600f5482906001600160a01b03808316911614611b6a5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b606482015260840161075d565b8151602014611ba55760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161075d565b611bb6611bb183612ca0565b611fdb565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8233604051611be7929190612aa5565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b610b208161201e565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611cb05760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b604482015260640161075d565b506001919050565b6060868686868686604051602001611cd596959493929190612cc4565b60405160208183030381529060405290509695505050505050565b8260005b6020811015611d9957600183821c166000858360208110611d1757611d17612acf565b6020020151905081600103611d57576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611d84565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50508080611d9190612d1e565b915050611cf4565b509392505050565b60008181526009602052604090205460ff1615611dbb5750565b60008181526008602052604081205490819003611e115760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b604482015260640161075d565b600754611e1e8243612b93565b1015611e6c5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f7420217665726966696564000000000000000000604482015260640161075d565b506000908152600960209081526040808320805460ff191660011790556008909152812055565b815160009060208401611eae64ffffffffff8516828461204d565b95945050505050565b600061138362ffffff19831660286004612094565b600080611ee28360781c6001600160601b031690565b6001600160601b031690506000611f028460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000611383611f23836120c4565b90565b600061138362ffffff198316826004612094565b600061138362ffffff19831660246004612094565b600061138362ffffff198316600460206120d5565b6000611383604c611f8281601886901c6001600160601b0316612b93565b62ffffff19851691906000612231565b6060600080611faa8460181c6001600160601b031690565b6001600160601b031690506040519150819250611fca84836020016122ab565b508181016020016040529052919050565b60008181526008602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906107fd9083815260200190565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516107fd9190612d37565b60008061205a8385612c38565b905060405181111561206a575060005b8060000361207f5762ffffff1991505061153f565b5050606092831b9190911790911b1760181b90565b60006120a1826020612d4a565b6120ac906008612d6d565b60ff166120ba8585856120d5565b901c949350505050565b600061138362ffffff198316602c60205b60008160ff166000036120ea5750600061153f565b6120fd8460181c6001600160601b031690565b6001600160601b031661211360ff841685612c38565b11156121775761215e61212f8560781c6001600160601b031690565b6001600160601b031661214b8660181c6001600160601b031690565b6001600160601b0316858560ff16612402565b60405162461bcd60e51b815260040161075d9190612d37565b60208260ff1611156121f15760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161075d565b60088202600061220a8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806122478660781c6001600160601b031690565b6001600160601b0316905061225b86612470565b846122668784612c38565b6122709190612c38565b11156122835762ffffff199150506115e3565b61228d8582612c38565b90506122a18364ffffffffff16828661204d565b9695505050505050565b600062ffffff19808416036123135760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161075d565b61231c836124a9565b61237c5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161075d565b60006123918460181c6001600160601b031690565b6001600160601b0316905060006123b18560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156123d15760206060fd5b8285848460045afa506122a16123e78760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060600061240f866124e6565b915050600061241d866124e6565b915050600061242b866124e6565b9150506000612439866124e6565b915050838383836040516020016124539493929190612d96565b604051602081830303815290604052945050505050949350505050565b60006124858260181c6001600160601b031690565b6124988360781c6001600160601b031690565b016001600160601b03169050919050565b60006124b58260d81c90565b64ffffffffff1664ffffffffff036124cf57506000919050565b60006124da83612470565b60405110199392505050565b600080601f5b600f8160ff16111561253b576000612505826008612d6d565b60ff1685901c905061251681612594565b61ffff16841793508160ff1660101461253157601084901b93505b50600019016124ec565b50600f5b60ff8160ff16101561258e576000612558826008612d6d565b60ff1685901c905061256981612594565b61ffff16831792508160ff1660001461258457601083901b92505b506000190161253f565b50915091565b60006125a660048360ff16901c6125c6565b60ff1661ffff919091161760081b6125bd826125c6565b60ff1617919050565b600060f08083179060ff821690036125e15750603092915050565b8060ff1660f1036125f55750603192915050565b8060ff1660f2036126095750603292915050565b8060ff1660f30361261d5750603392915050565b8060ff1660f4036126315750603492915050565b8060ff1660f5036126455750603592915050565b8060ff1660f6036126595750603692915050565b8060ff1660f70361266d5750603792915050565b8060ff1660f8036126815750603892915050565b8060ff1660f9036126955750603992915050565b8060ff1660fa036126a95750606192915050565b8060ff1660fb036126bd5750606292915050565b8060ff1660fc036126d15750606392915050565b8060ff1660fd036126e55750606492915050565b8060ff1660fe036126f95750606592915050565b8060ff1660ff0361270d5750606692915050565b50919050565b60006020828403121561272557600080fd5b5035919050565b80356001600160a01b038116811461274357600080fd5b919050565b60006020828403121561275a57600080fd5b61153f8261272c565b634e487b7160e01b600052602160045260246000fd5b602081016003831061279b57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126127c857600080fd5b813567ffffffffffffffff808211156127e3576127e36127a1565b604051601f8301601f19908116603f0116810190828211818310171561280b5761280b6127a1565b8160405283815286602085880101111561282457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561285657600080fd5b813567ffffffffffffffff81111561286d57600080fd5b6115e3848285016127b7565b6000806000806000610460868803121561289257600080fd5b853567ffffffffffffffff808211156128aa57600080fd5b818801915088601f8301126128be57600080fd5b8135818111156128cd57600080fd5b8960208260051b85010111156128e257600080fd5b60209283019750955050860135925061044086018781111561290357600080fd5b94979396509194604001933592915050565b6000806000806060858703121561292b57600080fd5b8435935061293b6020860161272c565b9250604085013567ffffffffffffffff8082111561295857600080fd5b818701915087601f83011261296c57600080fd5b81358181111561297b57600080fd5b88602082850101111561298d57600080fd5b95989497505060200194505050565b8015158114610b2057600080fd5b6000602082840312156129bc57600080fd5b813561153f8161299c565b803563ffffffff8116811461274357600080fd5b6000602082840312156129ed57600080fd5b61153f826129c7565b600080600060608486031215612a0b57600080fd5b612a14846129c7565b925060208401359150604084013567ffffffffffffffff811115612a3757600080fd5b612a43868287016127b7565b9150509250925092565b60005b83811015612a68578181015183820152602001612a50565b83811115610ed65750506000910152565b60008151808452612a91816020860160208601612a4d565b601f01601f19169290920160200192915050565b604081526000612ab86040830185612a79565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612afc57600080fd5b9190910192915050565b6000808335601e19843603018112612b1d57600080fd5b83018035915067ffffffffffffffff821115612b3857600080fd5b602001915036819003821315612b4d57600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612b7657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612ba557612ba5612b7d565b500390565b600060208284031215612bbc57600080fd5b815161153f8161299c565b600063ffffffff808316818516808303821115612be657612be6612b7d565b01949350505050565b60008060408385031215612c0257600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006122a16080830184612a79565b60008219821115612c4b57612c4b612b7d565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526122a16080830184612a79565b8381528215156020820152606060408201526000611eae6060830184612a79565b8051602080830151919081101561270d5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612d0c81604c850160208701612a4d565b91909101604c01979650505050505050565b600060018201612d3057612d30612b7d565b5060010190565b60208152600061153f6020830184612a79565b600060ff821660ff841680821015612d6457612d64612b7d565b90039392505050565b600060ff821660ff84168160ff0481118215151615612d8e57612d8e612b7d565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016122a156fea26469706673582212206ad19472059239a7d2eb329c69ec26c4d65191cbfe653d4220d54c0676138a4264736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
