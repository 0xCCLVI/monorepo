/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620035b4380380620035b483398101604081905262000035916200047f565b878a8a828a8a8a8a8a8a8a808a8a8a8a8a6200005133620002d1565b8463ffffffff166000036200009c5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e85760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000093565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012057620001208162000330565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f45760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000093565b613a98841015620002375760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000093565b6101208590526101408490526001600160a01b0382166200028a5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000093565b506001600160a01b0390811661010052600691909155600d80546001600160a01b031916999091169890981790975550620005339f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000346816200035460201b620014861760201c565b6200035181620003bd565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600e546001600160a01b0316156200042b5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000093565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200046257600080fd5b919050565b80516001600160a01b03811681146200046257600080fd5b6000806000806000806000806000806101408b8d031215620004a057600080fd5b620004ab8b6200044d565b9950620004bb60208c016200044d565b9850620004cb60408c0162000467565b9750620004db60608c0162000467565b9650620004eb60808c0162000467565b955060a08b0151945060c08b0151935060e08b01519250620005116101008c0162000467565b9150620005226101208c0162000467565b90509295989b9194979a5092959850565b60805160a05160c05160e051610100516101205161014051612fe0620005d4600039600081816102df01526118f90152600081816106910152818161191a01526119a101526000818161058a0152818161075a01528181610c0801526113b7015260006102890152600061047601526000818161066a015261088e01526000818161042a015281816104f40152818161136801526117fb0152612fe06000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638456cb591161015c578063b2f87643116100ce578063d232c22011610087578063d232c22014610640578063d2a3cc7114610652578063d69f9d6114610665578063d88beda21461068c578063db1b7659146106b3578063fa31de01146106c657600080fd5b8063b2f87643146105c8578063b697f531146105db578063b95a2001146105ee578063c5b350df14610614578063cc3942831461061c578063d1851c921461062f57600080fd5b80639a7c4b71116101205780639a7c4b711461054c5780639d3117c71461055f5780639fa92f9d1461057f578063a01892a514610585578063ad9c0c2e146105ac578063b1f8100d146105b557600080fd5b80638456cb59146104d757806388837094146104df5780638d3638f4146104f25780638da5cb5b1461051857806398c9f2b91461052957600080fd5b8063508a109b116101f55780635f61e3ec116101b95780635f61e3ec1461047157806365eaf11b146104985780636a42b8f8146104a05780636b04a933146104a9578063715018a6146104bc5780637f1e9cb0146104c457600080fd5b8063508a109b146103f65780635190bc531461040957806352a9674b146104255780635bd11efc1461044c5780635c975abb1461045f57600080fd5b80632bbd59ca116102475780632bbd59ca14610355578063301f07c3146103855780633cf52ffb146103a85780633f4ba83a146103b0578063450d11f0146103b85780634ff746f6146103e357600080fd5b806314168416146102845780631eeaabea146102c557806325e3beda146102da578063272efc691461030f5780632bb1ae7c14610342575b600080fd5b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102d86102d3366004612851565b6106d9565b005b6103017f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102bc565b61033261031d366004612886565b600a6020526000908152604090205460ff1681565b60405190151581526020016102bc565b6102d8610350366004612944565b61074e565b610378610363366004612851565b600c6020526000908152604090205460ff1681565b6040516102bc919061298f565b610332610393366004612851565b60086020526000908152604090205460ff1681565b600254610301565b6102d8610846565b600d546103cb906001600160a01b031681565b6040516001600160a01b0390911681526020016102bc565b6102d86103f1366004612944565b610883565b6102d86104043660046129b7565b610920565b610332610417366004612886565b6001600160a01b0316301490565b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b6102d861045a366004612886565b610bcd565b600354600160a01b900460ff16610332565b6103cb7f000000000000000000000000000000000000000000000000000000000000000081565b610301610c04565b62093a80610301565b6102d86104b7366004612851565b610c8d565b6102d8610d58565b600e546103cb906001600160a01b031681565b6102d8610e15565b6102d86104ed366004612886565b610ec9565b7f00000000000000000000000000000000000000000000000000000000000000006102ab565b6000546001600160a01b03166103cb565b610332610537366004612851565b60096020526000908152604090205460ff1681565b6102d861055a366004612a53565b610f57565b61030161056d366004612851565b60076020526000908152604090205481565b306103cb565b6103cb7f000000000000000000000000000000000000000000000000000000000000000081565b61030160065481565b6102d86105c3366004612886565b611002565b6102d86105d6366004612886565b6110a7565b6102d86105e9366004612886565b611123565b6102ab6105fc366004612aee565b600b6020526000908152604090205463ffffffff1681565b6102d86111a2565b6003546103cb906001600160a01b031681565b6001546001600160a01b03166103cb565b6000546001600160a01b031615610332565b6102d8610660366004612886565b6111fd565b6103cb7f000000000000000000000000000000000000000000000000000000000000000081565b6103017f000000000000000000000000000000000000000000000000000000000000000081565b6103326106c1366004612886565b6112bf565b6103016106d4366004612b09565b6112c9565b6000546001600160a01b03163314610704576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036107495760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b6107566114ef565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107da9190612b60565b6040516020016107ec91815260200190565b6040516020818303038152906040529050610807818361153c565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507781833360405161083a93929190612bd1565b60405180910390a15050565b6000546001600160a01b03163314610871576040516311a8a1bb60e31b815260040160405180910390fd5b610879611587565b6108816115d7565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108e45760405162461bcd60e51b81526004016107409060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610915929190612c0f565b60405180910390a150565b6109286114ef565b8361095f5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610740565b60008585600081811061097457610974612c39565b90506020028101906109869190612c4f565b6109909080612c70565b60405161099e929190612cbe565b604051809103902090506000610a0582888860008181106109c1576109c1612c39565b90506020028101906109d39190612c4f565b602001898960008181106109e9576109e9612c39565b90506020028101906109fb9190612c4f565b610420013561162c565b9050610a13818686866116d1565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610b375787878263ffffffff16818110610a5657610a56612c39565b9050602002810190610a689190612c4f565b610a729080612c70565b604051610a80929190612cbe565b604051809103902092506000610ad5848a8a8563ffffffff16818110610aa857610aa8612c39565b9050602002810190610aba9190612c4f565b6020018b8b8663ffffffff168181106109e9576109e9612c39565b9050828114610b145760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610740565b506000838152600c60205260409020805460ff1916600190811790915501610a30565b5060005b63ffffffff8116871115610bc357610bba88888363ffffffff16818110610b6457610b64612c39565b9050602002810190610b769190612c4f565b610b809080612c70565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061178d92505050565b50600101610b3b565b5050505050505050565b6000546001600160a01b03163314610bf8576040516311a8a1bb60e31b815260040160405180910390fd5b610c0181611ad4565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190612b60565b905090565b6000546001600160a01b03163314610cb8576040516311a8a1bb60e31b815260040160405180910390fd5b610cc0611587565b6000818152600760205260408120549003610d155760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610740565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906109159083815260200190565b6000546001600160a01b03163314610d83576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610da657604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610db89190612ce4565b11610dd6576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610e00576040516323295ef960e01b815260040160405180910390fd5b600154610881906001600160a01b0316611ae6565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015610e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e829190612cfb565b610eb95760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610740565b610ec16114ef565b610881611b45565b600e546001600160a01b031615610f355760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610740565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600d546001600160a01b03163314610fbb5760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608401610740565b610ffc848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b8892505050565b50505050565b6000546001600160a01b0316331461102d576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561105257506001600160a01b03811615155b15611070576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361109e57604051634a2fb73f60e11b815260040160405180910390fd5b610c0181611ccd565b6000546001600160a01b031633146110d2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610915565b6000546001600160a01b0316331461114e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610915565b6001546001600160a01b031633146111cd576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426111df9190612ce4565b11610e005760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314611228576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036112865760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610740565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610915565b6000805b92915050565b336000908152600a602052604081205460ff166113175760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610740565b63ffffffff8085166000908152600b60205260409020541661133a816001612d1d565b63ffffffff8681166000908152600b60205260408120805463ffffffff1916939092169290921790556113917f00000000000000000000000000000000000000000000000000000000000000003384898989611d1b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190612d45565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361145d600184612ce4565b848760405161146f9493929190612d69565b60405180910390a1509093505050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600354600160a01b900460ff16156108815760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610740565b80511561157a5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610740565b61158382611d53565b5050565b600354600160a01b900460ff166108815760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610740565b6115df611587565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600c602052604090205460ff16600281111561165257611652612979565b146116955760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610740565b6116c9848460208060200260405190810160405280929190826020800280828437600092019190915250869150611d829050565b949350505050565b60008481526009602052604090205460ff16610ffc576116f083611e28565b6000611726858460208060200260405190810160405280929190826020800280828437600092019190915250869150611d829050565b905083811461176d5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610740565b506000848152600960205260409020805460ff1916600117905550505050565b60006002600554036117e15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610740565b600260055560006117f28382611f1a565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661182a62ffffff198316611f3e565b63ffffffff161461186c5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610740565b600061187d62ffffff198316611f53565b905060016000828152600c602052604090205460ff1660028111156118a4576118a4612979565b146118db5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610740565b6000818152600c60205260409020805460ff1916600217905561193e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612d8e565b5a10156119765760405162461bcd60e51b8152600401610740906020808252600490820152632167617360e01b604082015260600190565b600061198762ffffff198416611f9c565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006119e462ffffff198916611fad565b6119f362ffffff198a16611fc1565b611a0262ffffff198b16611fd6565b611a1f611a1462ffffff198d16611feb565b62ffffff1916612019565b604051602401611a329493929190612da6565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611a7b578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611ab993929190612dd5565b60405180910390a15050600160055550949695505050505050565b611add81611486565b610c0181610ec9565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611b4d6114ef565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861160f3390565b600e5482906001600160a01b03808316911614611bfb5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608401610740565b6003546001600160a01b03848116911614611c425760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b6044820152606401610740565b8151602014611c7d5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610740565b611c8e611c8983612df6565b612062565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8233604051611cbf929190612c0f565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060868686868686604051602001611d3896959493929190612e1a565b60405160208183030381529060405290509695505050505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516109159190612e74565b8260005b6020811015611e2057600183821c166000858360208110611da957611da9612c39565b6020020151905081600103611de9576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611e16565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611d86565b509392505050565b60008181526008602052604090205460ff1615611e425750565b60008181526007602052604081205490819003611e985760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610740565b600654611ea58243612ce4565b1015611ef35760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610740565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b815160009060208401611f3564ffffffffff8516828461218b565b95945050505050565b60006112c362ffffff198316602860046121d2565b600080611f698360781c6001600160601b031690565b6001600160601b031690506000611f898460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006112c3611faa83612202565b90565b60006112c362ffffff1983168260046121d2565b60006112c362ffffff198316602460046121d2565b60006112c362ffffff19831660046020612213565b60006112c3604c61200981601886901c6001600160601b0316612ce4565b62ffffff1985169190600061236f565b60606000806120318460181c6001600160601b031690565b6001600160601b03169050604051915081925061205184836020016123e9565b508181016020016040529052919050565b806120a05760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610740565b600081815260076020526040902054156120f35760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610740565b60008181526008602052604090205460ff16156121485760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610740565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906109159083815260200190565b6000806121988385612d8e565b90506040518111156121a8575060005b806000036121bd5762ffffff1991505061147f565b5050606092831b9190911790911b1760181b90565b60006121df826020612e87565b6121ea906008612eaa565b60ff166121f8858585612213565b901c949350505050565b60006112c362ffffff198316602c60205b60008160ff166000036122285750600061147f565b61223b8460181c6001600160601b031690565b6001600160601b031661225160ff841685612d8e565b11156122b55761229c61226d8560781c6001600160601b031690565b6001600160601b03166122898660181c6001600160601b031690565b6001600160601b0316858560ff16612540565b60405162461bcd60e51b81526004016107409190612e74565b60208260ff16111561232f5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610740565b6008820260006123488660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806123858660781c6001600160601b031690565b6001600160601b03169050612399866125ae565b846123a48784612d8e565b6123ae9190612d8e565b11156123c15762ffffff199150506116c9565b6123cb8582612d8e565b90506123df8364ffffffffff16828661218b565b9695505050505050565b600062ffffff19808416036124515760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610740565b61245a836125e7565b6124ba5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610740565b60006124cf8460181c6001600160601b031690565b6001600160601b0316905060006124ef8560781c6001600160601b031690565b6001600160601b03169050600060405190508481111561250f5760206060fd5b8285848460045afa506123df6125258760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060600061254d86612624565b915050600061255b86612624565b915050600061256986612624565b915050600061257786612624565b915050838383836040516020016125919493929190612ed3565b604051602081830303815290604052945050505050949350505050565b60006125c38260181c6001600160601b031690565b6125d68360781c6001600160601b031690565b016001600160601b03169050919050565b60006125f38260d81c90565b64ffffffffff1664ffffffffff0361260d57506000919050565b6000612618836125ae565b60405110199392505050565b600080601f5b600f8160ff161115612679576000612643826008612eaa565b60ff1685901c9050612654816126d2565b61ffff16841793508160ff1660101461266f57601084901b93505b506000190161262a565b50600f5b60ff8160ff1610156126cc576000612696826008612eaa565b60ff1685901c90506126a7816126d2565b61ffff16831792508160ff166000146126c257601083901b92505b506000190161267d565b50915091565b60006126e460048360ff16901c612704565b60ff1661ffff919091161760081b6126fb82612704565b60ff1617919050565b600060f08083179060ff8216900361271f5750603092915050565b8060ff1660f1036127335750603192915050565b8060ff1660f2036127475750603292915050565b8060ff1660f30361275b5750603392915050565b8060ff1660f40361276f5750603492915050565b8060ff1660f5036127835750603592915050565b8060ff1660f6036127975750603692915050565b8060ff1660f7036127ab5750603792915050565b8060ff1660f8036127bf5750603892915050565b8060ff1660f9036127d35750603992915050565b8060ff1660fa036127e75750606192915050565b8060ff1660fb036127fb5750606292915050565b8060ff1660fc0361280f5750606392915050565b8060ff1660fd036128235750606492915050565b8060ff1660fe036128375750606592915050565b8060ff1660ff0361284b5750606692915050565b50919050565b60006020828403121561286357600080fd5b5035919050565b80356001600160a01b038116811461288157600080fd5b919050565b60006020828403121561289857600080fd5b61147f8261286a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126128c857600080fd5b813567ffffffffffffffff808211156128e3576128e36128a1565b604051601f8301601f19908116603f0116810190828211818310171561290b5761290b6128a1565b8160405283815286602085880101111561292457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561295657600080fd5b813567ffffffffffffffff81111561296d57600080fd5b6116c9848285016128b7565b634e487b7160e01b600052602160045260246000fd5b60208101600383106129b157634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080600061046086880312156129d057600080fd5b853567ffffffffffffffff808211156129e857600080fd5b818801915088601f8301126129fc57600080fd5b813581811115612a0b57600080fd5b8960208260051b8501011115612a2057600080fd5b602092830197509550508601359250610440860187811115612a4157600080fd5b94979396509194604001933592915050565b60008060008060608587031215612a6957600080fd5b84359350612a796020860161286a565b9250604085013567ffffffffffffffff80821115612a9657600080fd5b818701915087601f830112612aaa57600080fd5b813581811115612ab957600080fd5b886020828501011115612acb57600080fd5b95989497505060200194505050565b803563ffffffff8116811461288157600080fd5b600060208284031215612b0057600080fd5b61147f82612ada565b600080600060608486031215612b1e57600080fd5b612b2784612ada565b925060208401359150604084013567ffffffffffffffff811115612b4a57600080fd5b612b56868287016128b7565b9150509250925092565b600060208284031215612b7257600080fd5b5051919050565b60005b83811015612b94578181015183820152602001612b7c565b83811115610ffc5750506000910152565b60008151808452612bbd816020860160208601612b79565b601f01601f19169290920160200192915050565b606081526000612be46060830186612ba5565b8281036020840152612bf68186612ba5565b91505060018060a01b0383166040830152949350505050565b604081526000612c226040830185612ba5565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612c6657600080fd5b9190910192915050565b6000808335601e19843603018112612c8757600080fd5b83018035915067ffffffffffffffff821115612ca257600080fd5b602001915036819003821315612cb757600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612cf657612cf6612cce565b500390565b600060208284031215612d0d57600080fd5b8151801515811461147f57600080fd5b600063ffffffff808316818516808303821115612d3c57612d3c612cce565b01949350505050565b60008060408385031215612d5857600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006123df6080830184612ba5565b60008219821115612da157612da1612cce565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526123df6080830184612ba5565b8381528215156020820152606060408201526000611f356060830184612ba5565b8051602080830151919081101561284b5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612e6281604c850160208701612b79565b91909101604c01979650505050505050565b60208152600061147f6020830184612ba5565b600060ff821660ff841680821015612ea157612ea1612cce565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ecb57612ecb612cce565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016123df56fea264697066735822122089877754de0224917d43c6507858f0649c1f0f31116afb4610316315dca85ecc64736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
