/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003047380380620030478339810160408190526200003591620003d1565b85888882888888888887808888888888858484620000533362000296565b8263ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e25760405162461bcd60e51b815260206004820152600960248201526832b6b83a3c9030b6b160b91b604482015260640162000095565b6001600160a01b0381166200012e5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff9283166080526001600160a01b0391821660a052811660c05290861660e05282161562000165576200016582620002f5565b8015620001775762000177816200035e565b5050505050508063ffffffff16600003620001bf5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000095565b63ffffffff16610100526001602655620cf850821015620002125760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a98811015620002555760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b61012091909152610140525050602c80546001600160a01b0319166001600160a01b039690961695909517909455506200045e9a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003b457600080fd5b919050565b80516001600160a01b0381168114620003b457600080fd5b600080600080600080600080610100898b031215620003ef57600080fd5b620003fa896200039f565b97506200040a60208a016200039f565b96506200041a60408a01620003b9565b95506200042a60608a01620003b9565b94506200043a60808a01620003b9565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e051610100516101205161014051612b4f620004f8600039600081816102bb015261103d0152600081816105ce0152818161105e01526110e501526000818161047f01526105390152600061027f0152600081816103e3015261088e0152600081816105a70152818161065701526113ee0152600081816103a901528181610d3a0152610f3f0152612b4f6000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80638da5cb5b11610146578063cc394283116100c3578063d88beda211610087578063d88beda2146105c9578063db1b7659146105f0578063ee250e0614610603578063f38a267b1461060c578063fa31de011461062f578063fd54b2281461064257600080fd5b8063cc39428314610563578063cf796c7514610576578063d1851c921461057f578063d232c22014610590578063d69f9d61146105a257600080fd5b8063b46300ec1161010a578063b46300ec146104f3578063b697f531146104fb578063b95a20011461050e578063c2fb26a614610534578063c5b350df1461055b57600080fd5b80638da5cb5b146104a35780639a7c4b71146104b45780639fa92f9d146104c7578063b1f8100d146104cd578063b2f87643146104e057600080fd5b80635bd11efc116101df5780636eb67a51116101a35780636eb67a5114610429578063715018a61461043c5780637f1e9cb01461044457806382646a5814610457578063888370941461046a5780638d3638f41461047d57600080fd5b80635bd11efc146103cb5780635f61e3ec146103de5780636188af0e1461040557806365eaf11b146104185780636a42b8f81461042057600080fd5b80633cf52ffb116102265780633cf52ffb14610340578063450d11f0146103485780634ff746f6146103735780635190bc531461038857806352a9674b146103a457600080fd5b806306661abd14610263578063141684161461027a57806325e3beda146102b6578063272efc69146102dd5780632bbd59ca14610310575b600080fd5b6025545b6040519081526020015b60405180910390f35b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610271565b6102677f000000000000000000000000000000000000000000000000000000000000000081565b6103006102eb3660046123fb565b60296020526000908152604090205460ff1681565b6040519015158152602001610271565b61033361031e366004612416565b602b6020526000908152604090205460ff1681565b6040516102719190612445565b600254610267565b602c5461035b906001600160a01b031681565b6040516001600160a01b039091168152602001610271565b610386610381366004612510565b61064c565b005b6103006103963660046123fb565b6001600160a01b0316301490565b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b6103866103d93660046123fb565b6106f2565b61035b7f000000000000000000000000000000000000000000000000000000000000000081565b610386610413366004612545565b610729565b61026761077f565b62093a80610267565b610386610437366004612416565b610790565b6103866107c4565b602d5461035b906001600160a01b031681565b610386610465366004612510565b610883565b6103866104783660046123fb565b610924565b7f00000000000000000000000000000000000000000000000000000000000000006102a1565b6000546001600160a01b031661035b565b6103866104c23660046125a5565b6109b2565b3061035b565b6103866104db3660046123fb565b610a57565b6103866104ee3660046123fb565b610afc565b610386610b78565b6103866105093660046123fb565b610bb0565b6102a161051c366004612640565b602a6020526000908152604090205463ffffffff1681565b6102a17f000000000000000000000000000000000000000000000000000000000000000081565b610386610c2f565b60035461035b906001600160a01b031681565b61026760045481565b6001546001600160a01b031661035b565b6000546001600160a01b031615610300565b61035b7f000000000000000000000000000000000000000000000000000000000000000081565b6102677f000000000000000000000000000000000000000000000000000000000000000081565b6103006105fe3660046123fb565b610c8a565b61026760275481565b61030061061a366004612416565b60286020526000908152604090205460ff1681565b61038661063d36600461265b565b610c9b565b6025546102679081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106b65760405162461bcd60e51b81526004016106ad9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106e792919061270a565b60405180910390a150565b6000546001600160a01b0316331461071d576040516311a8a1bb60e31b815260040160405180910390fd5b61072681610dda565b50565b61073b83805190602001208383610e43565b6107705760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b60448201526064016106ad565b61077983610ed1565b50505050565b600061078b6005611218565b905090565b6000546001600160a01b031633146107bb576040516311a8a1bb60e31b815260040160405180910390fd5b6107268161122b565b6000546001600160a01b031633146107ef576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361081257604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610824919061274a565b11610842576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561086c576040516323295ef960e01b815260040160405180910390fd5b600154610881906001600160a01b031661126c565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108ea5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016106ad565b6108f3816112cb565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516106e792919061270a565b602d546001600160a01b0316156109905760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016106ad565b602d80546001600160a01b0319166001600160a01b0392909216919091179055565b602c546001600160a01b03163314610a165760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b60648201526084016106ad565b610779848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112d492505050565b6000546001600160a01b03163314610a82576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610aa757506001600160a01b03811615155b15610ac5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610af357604051634a2fb73f60e11b815260040160405180910390fd5b61072681611393565b6000546001600160a01b03163314610b27576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016106e7565b6000610b846005611218565b604051602001610b9691815260200190565b60405160208183030381529060405290506108f3816112cb565b6000546001600160a01b03163314610bdb576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016106e7565b6001546001600160a01b03163314610c5a576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610c6c919061274a565b1161086c5760405163d39c12bb60e01b815260040160405180910390fd5b6000610c95826113e1565b92915050565b3360009081526029602052604090205460ff16610ce95760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106ad565b63ffffffff8084166000908152602a602052604090205416610d0c816001612761565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610d637f0000000000000000000000000000000000000000000000000000000000000000338488888861144d565b80516020820120909150610d78600582611485565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610da560255490565b610daf919061274a565b610db96005611218565b85604051610dca9493929190612789565b60405180910390a1505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610e6957610e6961242f565b14610eac5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106ad565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610f255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106ad565b60026026556000610f3683826115a2565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f6e62ffffff1983166115c6565b63ffffffff1614610fb05760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106ad565b6000610fc162ffffff1983166115db565b905060016000828152602b602052604090205460ff166002811115610fe857610fe861242f565b1461101f5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106ad565b6000818152602b60205260409020805460ff191660021790556110827f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006127ae565b5a10156110ba5760405162461bcd60e51b81526004016106ad906020808252600490820152632167617360e01b604082015260600190565b60006110cb62ffffff198416611624565b6040805161010080825261012082019092529192506000917f000000000000000000000000000000000000000000000000000000000000000090839083602082018180368337019050509050600061112862ffffff198916611635565b61113762ffffff198a16611649565b61114662ffffff198b1661165e565b61116361115862ffffff198d16611673565b62ffffff19166116a1565b60405160240161117694939291906127c6565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d9450838511156111bf578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516111fd939291906127f5565b60405180910390a15050600160265550949695505050505050565b6000610c95826112266116ea565b611bab565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61072681611c7d565b602d5482906001600160a01b038083169116146113475760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b60648201526084016106ad565b81516020146113825760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106ad565b61077961138e83612816565b611cac565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114455760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016106ad565b506001919050565b606086868686868660405160200161146a9695949392919061283a565b60405160208183030381529060405290509695505050505050565b600161149360206002612978565b61149d919061274a565b8260200154106114e25760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b60448201526064016106ad565b60018260200160008282546114f791906127ae565b9091555050602082015460005b60208110156115945781600116600103611533578284826020811061152b5761152b612984565b015550505050565b83816020811061154557611545612984565b01546040805160208101929092528101849052606001604051602081830303815290604052805190602001209250600282611580919061299a565b91508061158c816129bc565b915050611504565b5061159d6129d5565b505050565b8151600090602084016115bd64ffffffffff85168284611cee565b95945050505050565b6000610c9562ffffff19831660286004611d35565b6000806115f18360781c6001600160601b031690565b6001600160601b0316905060006116118460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610c9561163283611d65565b90565b6000610c9562ffffff198316826004611d35565b6000610c9562ffffff19831660246004611d35565b6000610c9562ffffff19831660046020611d76565b6000610c95604c61169181601886901c6001600160601b031661274a565b62ffffff19851691906000611ed2565b60606000806116b98460181c6001600160601b031690565b6001600160601b0316905060405191508192506116d98483602001611f4e565b508181016020016040529052919050565b6116f26123c0565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611c7557600182821c166000868360208110611bd857611bd8612984565b0154905081600103611c15576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611c60565b84868460208110611c2857611c28612984565b6020020151604051602001611c47929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611c6d906129bc565b915050611bb5565b505092915050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516106e791906129eb565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b600080611cfb83856127ae565b9050604051811115611d0b575060005b80600003611d205762ffffff19915050610eca565b5050606092831b9190911790911b1760181b90565b6000611d428260206129fe565b611d4d906008612a21565b60ff16611d5b858585611d76565b901c949350505050565b6000610c9562ffffff198316602c60205b60008160ff16600003611d8b57506000610eca565b611d9e8460181c6001600160601b031690565b6001600160601b0316611db460ff8416856127ae565b1115611e1857611dff611dd08560781c6001600160601b031690565b6001600160601b0316611dec8660181c6001600160601b031690565b6001600160601b0316858560ff166120af565b60405162461bcd60e51b81526004016106ad91906129eb565b60208260ff161115611e925760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106ad565b600882026000611eab8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611ee88660781c6001600160601b031690565b6001600160601b03169050611efc8661211d565b84611f0787846127ae565b611f1191906127ae565b1115611f245762ffffff19915050611f46565b611f2e85826127ae565b9050611f428364ffffffffff168286611cee565b9150505b949350505050565b600062ffffff1980841603611fb65760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106ad565b611fbf83612156565b61201f5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106ad565b60006120348460181c6001600160601b031690565b6001600160601b0316905060006120548560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156120745760206060fd5b8285848460045afa506120a561208a8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b606060006120bc86612193565b91505060006120ca86612193565b91505060006120d886612193565b91505060006120e686612193565b915050838383836040516020016121009493929190612a42565b604051602081830303815290604052945050505050949350505050565b60006121328260181c6001600160601b031690565b6121458360781c6001600160601b031690565b016001600160601b03169050919050565b60006121628260d81c90565b64ffffffffff1664ffffffffff0361217c57506000919050565b60006121878361211d565b60405110199392505050565b600080601f5b600f8160ff1611156121e85760006121b2826008612a21565b60ff1685901c90506121c381612241565b61ffff16841793508160ff166010146121de57601084901b93505b5060001901612199565b50600f5b60ff8160ff16101561223b576000612205826008612a21565b60ff1685901c905061221681612241565b61ffff16831792508160ff1660001461223157601083901b92505b50600019016121ec565b50915091565b600061225360048360ff16901c612273565b60ff1661ffff919091161760081b61226a82612273565b60ff1617919050565b600060f08083179060ff8216900361228e5750603092915050565b8060ff1660f1036122a25750603192915050565b8060ff1660f2036122b65750603292915050565b8060ff1660f3036122ca5750603392915050565b8060ff1660f4036122de5750603492915050565b8060ff1660f5036122f25750603592915050565b8060ff1660f6036123065750603692915050565b8060ff1660f70361231a5750603792915050565b8060ff1660f80361232e5750603892915050565b8060ff1660f9036123425750603992915050565b8060ff1660fa036123565750606192915050565b8060ff1660fb0361236a5750606292915050565b8060ff1660fc0361237e5750606392915050565b8060ff1660fd036123925750606492915050565b8060ff1660fe036123a65750606592915050565b8060ff1660ff036123ba5750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b80356001600160a01b03811681146123f657600080fd5b919050565b60006020828403121561240d57600080fd5b610eca826123df565b60006020828403121561242857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061246757634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261249457600080fd5b813567ffffffffffffffff808211156124af576124af61246d565b604051601f8301601f19908116603f011681019082821181831017156124d7576124d761246d565b816040528381528660208588010111156124f057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561252257600080fd5b813567ffffffffffffffff81111561253957600080fd5b611f4684828501612483565b6000806000610440848603121561255b57600080fd5b833567ffffffffffffffff81111561257257600080fd5b61257e86828701612483565b93505061042084018581111561259357600080fd5b60208501925080359150509250925092565b600080600080606085870312156125bb57600080fd5b843593506125cb602086016123df565b9250604085013567ffffffffffffffff808211156125e857600080fd5b818701915087601f8301126125fc57600080fd5b81358181111561260b57600080fd5b88602082850101111561261d57600080fd5b95989497505060200194505050565b803563ffffffff811681146123f657600080fd5b60006020828403121561265257600080fd5b610eca8261262c565b60008060006060848603121561267057600080fd5b6126798461262c565b925060208401359150604084013567ffffffffffffffff81111561269c57600080fd5b6126a886828701612483565b9150509250925092565b60005b838110156126cd5781810151838201526020016126b5565b838111156107795750506000910152565b600081518084526126f68160208601602086016126b2565b601f01601f19169290920160200192915050565b60408152600061271d60408301856126de565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561275c5761275c612734565b500390565b600063ffffffff80831681851680830382111561278057612780612734565b01949350505050565b8481528360208201528260408201526080606082015260006120a560808301846126de565b600082198211156127c1576127c1612734565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526120a560808301846126de565b83815282151560208201526060604082015260006115bd60608301846126de565b805160208083015191908110156123ba5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161288281604c8501602087016126b2565b91909101604c01979650505050505050565b600181815b808511156128cf5781600019048211156128b5576128b5612734565b808516156128c257918102915b93841c9390800290612899565b509250929050565b6000826128e657506001610c95565b816128f357506000610c95565b816001811461290957600281146129135761292f565b6001915050610c95565b60ff84111561292457612924612734565b50506001821b610c95565b5060208310610133831016604e8410600b8410161715612952575081810a610c95565b61295c8383612894565b806000190482111561297057612970612734565b029392505050565b6000610eca83836128d7565b634e487b7160e01b600052603260045260246000fd5b6000826129b757634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129ce576129ce612734565b5060010190565b634e487b7160e01b600052600160045260246000fd5b602081526000610eca60208301846126de565b600060ff821660ff841680821015612a1857612a18612734565b90039392505050565b600060ff821660ff84168160ff048111821515161561297057612970612734565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016120a556fea26469706673582212209b17b8520a1dacd0911dc1d584e406c276cd0bfe45da4dc3d93c6fc23404c0f964736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
