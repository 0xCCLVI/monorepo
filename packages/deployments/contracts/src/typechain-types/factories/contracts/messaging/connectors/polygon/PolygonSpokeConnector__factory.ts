/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "previous",
        type: "bytes32",
      },
    ],
    name: "AggregateRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "bytes32[32]",
        name: "_proof",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tree",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002ffc38038062002ffc8339810160408190526200003591620003d1565b85888882888888888887808888888888858484620000533362000296565b8263ffffffff166000036200009e5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e25760405162461bcd60e51b815260206004820152600960248201526832b6b83a3c9030b6b160b91b604482015260640162000095565b6001600160a01b0381166200012e5760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000095565b63ffffffff9283166080526001600160a01b0391821660a052811660c05290861660e05282161562000165576200016582620002f5565b8015620001775762000177816200035e565b5050505050508063ffffffff16600003620001bf5760405162461bcd60e51b815260206004820152600760248201526610b237b6b0b4b760c91b604482015260640162000095565b63ffffffff16610100526001602655620cf850821015620002125760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000095565b613a98811015620002555760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000095565b61012091909152610140525050602c80546001600160a01b0319166001600160a01b039690961695909517909455506200045e9a5050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003b457600080fd5b919050565b80516001600160a01b0381168114620003b457600080fd5b600080600080600080600080610100898b031215620003ef57600080fd5b620003fa896200039f565b97506200040a60208a016200039f565b96506200041a60408a01620003b9565b95506200042a60608a01620003b9565b94506200043a60808a01620003b9565b935060a0890151925060c0890151915060e089015190509295985092959890939650565b60805160a05160c05160e051610100516101205161014051612b04620004f8600039600081816102b00152610ff20152600081816105bb01528181611013015261109a0152600081816104740152610526015260006102740152600081816103d8015261087b0152600081816105940152818161064401526113a301526000818161039e01528181610cef0152610ef40152612b046000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c80638d3638f411610146578063cc394283116100c3578063d88beda211610087578063d88beda2146105b6578063db1b7659146105dd578063ee250e06146105f0578063f38a267b146105f9578063fa31de011461061c578063fd54b2281461062f57600080fd5b8063cc39428314610550578063cf796c7514610563578063d1851c921461056c578063d232c2201461057d578063d69f9d611461058f57600080fd5b8063b2f876431161010a578063b2f87643146104d5578063b697f531146104e8578063b95a2001146104fb578063c2fb26a614610521578063c5b350df1461054857600080fd5b80638d3638f4146104725780638da5cb5b146104985780639a7c4b71146104a95780639fa92f9d146104bc578063b1f8100d146104c257600080fd5b80635bd11efc116101d45780636eb67a51116101985780636eb67a511461041e578063715018a6146104315780637f1e9cb01461043957806382646a581461044c578063888370941461045f57600080fd5b80635bd11efc146103c05780635f61e3ec146103d35780636188af0e146103fa57806365eaf11b1461040d5780636a42b8f81461041557600080fd5b80633cf52ffb1161021b5780633cf52ffb14610335578063450d11f01461033d5780634ff746f6146103685780635190bc531461037d57806352a9674b1461039957600080fd5b806306661abd14610258578063141684161461026f57806325e3beda146102ab578063272efc69146102d25780632bbd59ca14610305575b600080fd5b6025545b6040519081526020015b60405180910390f35b6102967f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610266565b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6102f56102e03660046123b0565b60296020526000908152604090205460ff1681565b6040519015158152602001610266565b6103286103133660046123cb565b602b6020526000908152604090205460ff1681565b60405161026691906123fa565b60025461025c565b602c54610350906001600160a01b031681565b6040516001600160a01b039091168152602001610266565b61037b6103763660046124c5565b610639565b005b6102f561038b3660046123b0565b6001600160a01b0316301490565b6102967f000000000000000000000000000000000000000000000000000000000000000081565b61037b6103ce3660046123b0565b6106df565b6103507f000000000000000000000000000000000000000000000000000000000000000081565b61037b6104083660046124fa565b610716565b61025c61076c565b62093a8061025c565b61037b61042c3660046123cb565b61077d565b61037b6107b1565b602d54610350906001600160a01b031681565b61037b61045a3660046124c5565b610870565b61037b61046d3660046123b0565b610911565b7f0000000000000000000000000000000000000000000000000000000000000000610296565b6000546001600160a01b0316610350565b61037b6104b736600461255a565b61099f565b30610350565b61037b6104d03660046123b0565b610a44565b61037b6104e33660046123b0565b610ae9565b61037b6104f63660046123b0565b610b65565b6102966105093660046125f5565b602a6020526000908152604090205463ffffffff1681565b6102967f000000000000000000000000000000000000000000000000000000000000000081565b61037b610be4565b600354610350906001600160a01b031681565b61025c60045481565b6001546001600160a01b0316610350565b6000546001600160a01b0316156102f5565b6103507f000000000000000000000000000000000000000000000000000000000000000081565b61025c7f000000000000000000000000000000000000000000000000000000000000000081565b6102f56105eb3660046123b0565b610c3f565b61025c60275481565b6102f56106073660046123cb565b60286020526000908152604090205460ff1681565b61037b61062a366004612610565b610c50565b60255461025c9081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106a35760405162461bcd60e51b815260040161069a9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106d49291906126bf565b60405180910390a150565b6000546001600160a01b0316331461070a576040516311a8a1bb60e31b815260040160405180910390fd5b61071381610d8f565b50565b61072883805190602001208383610df8565b61075d5760405162461bcd60e51b81526020600482015260066024820152652170726f766560d01b604482015260640161069a565b61076683610e86565b50505050565b600061077860056111cd565b905090565b6000546001600160a01b031633146107a8576040516311a8a1bb60e31b815260040160405180910390fd5b610713816111e0565b6000546001600160a01b031633146107dc576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107ff57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261081191906126ff565b1161082f576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610859576040516323295ef960e01b815260040160405180910390fd5b60015461086e906001600160a01b0316611221565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d75760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161069a565b6108e081611280565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516106d49291906126bf565b602d546001600160a01b03161561097d5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161069a565b602d80546001600160a01b0319166001600160a01b0392909216919091179055565b602c546001600160a01b03163314610a035760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b606482015260840161069a565b610766848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061128992505050565b6000546001600160a01b03163314610a6f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a9457506001600160a01b03811615155b15610ab2576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ae057604051634a2fb73f60e11b815260040160405180910390fd5b61071381611348565b6000546001600160a01b03163314610b14576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016106d4565b6000546001600160a01b03163314610b90576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260296020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016106d4565b6001546001600160a01b03163314610c0f576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610c2191906126ff565b116108595760405163d39c12bb60e01b815260040160405180910390fd5b6000610c4a82611396565b92915050565b3360009081526029602052604090205460ff16610c9e5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161069a565b63ffffffff8084166000908152602a602052604090205416610cc1816001612716565b63ffffffff8581166000908152602a60205260408120805463ffffffff191693909216929092179055610d187f00000000000000000000000000000000000000000000000000000000000000003384888888611402565b80516020820120909150610d2d60058261143a565b7f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f816001610d5a60255490565b610d6491906126ff565b610d6e60056111cd565b85604051610d7f949392919061273e565b60405180910390a1505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000858152602b602052604090205460ff166002811115610e1e57610e1e6123e4565b14610e615760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161069a565b506000838152602b60205260409020805460ff191660019081179091555b9392505050565b6000600260265403610eda5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161069a565b60026026556000610eeb8382611557565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016610f2362ffffff19831661157b565b63ffffffff1614610f655760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161069a565b6000610f7662ffffff198316611590565b905060016000828152602b602052604090205460ff166002811115610f9d57610f9d6123e4565b14610fd45760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161069a565b6000818152602b60205260409020805460ff191660021790556110377f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612763565b5a101561106f5760405162461bcd60e51b815260040161069a906020808252600490820152632167617360e01b604082015260600190565b600061108062ffffff1984166115d9565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006110dd62ffffff1989166115ea565b6110ec62ffffff198a166115fe565b6110fb62ffffff198b16611613565b61111861110d62ffffff198d16611628565b62ffffff1916611656565b60405160240161112b949392919061277b565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611174578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516111b2939291906127aa565b60405180910390a15050600160265550949695505050505050565b6000610c4a826111db61169f565b611b60565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61071381611c32565b602d5482906001600160a01b038083169116146112fc5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b606482015260840161069a565b81516020146113375760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161069a565b610766611343836127cb565b611c61565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113fa5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b604482015260640161069a565b506001919050565b606086868686868660405160200161141f969594939291906127ef565b60405160208183030381529060405290509695505050505050565b60016114486020600261292d565b61145291906126ff565b8260200154106114975760405162461bcd60e51b815260206004820152601060248201526f1b595c9adb19481d1c995948199d5b1b60821b604482015260640161069a565b60018260200160008282546114ac9190612763565b9091555050602082015460005b602081101561154957816001166001036114e857828482602081106114e0576114e0612939565b015550505050565b8381602081106114fa576114fa612939565b01546040805160208101929092528101849052606001604051602081830303815290604052805190602001209250600282611535919061294f565b91508061154181612971565b9150506114b9565b5061155261298a565b505050565b81516000906020840161157264ffffffffff85168284611ca3565b95945050505050565b6000610c4a62ffffff19831660286004611cea565b6000806115a68360781c6001600160601b031690565b6001600160601b0316905060006115c68460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000610c4a6115e783611d1a565b90565b6000610c4a62ffffff198316826004611cea565b6000610c4a62ffffff19831660246004611cea565b6000610c4a62ffffff19831660046020611d2b565b6000610c4a604c61164681601886901c6001600160601b03166126ff565b62ffffff19851691906000611e87565b606060008061166e8460181c6001600160601b031690565b6001600160601b03169050604051915081925061168e8483602001611f03565b508181016020016040529052919050565b6116a7612375565b600081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb560208201527fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d3060408201527f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba8560608201527fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a1934460808201527f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d60a08201527f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a196860c08201527fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f8360e08201527f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af6101008201527fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e06101208201527ff9dc3e7fe016e050eff260334f18a5d4fe391d82092319f5964f2e2eb7c1c3a56101408201527ff8b13a49e282f609c317a833fb8d976d11517c571d1221a265d25af778ecf8926101608201527f3490c6ceeb450aecdc82e28293031d10c7d73bf85e57bf041a97360aa2c5d99c6101808201527fc1df82d9c4b87413eae2ef048f94b4d3554cea73d92b0f7af96e0271c691e2bb6101a08201527f5c67add7c6caf302256adedf7ab114da0acfe870d449a3a489f781d659e8becc6101c08201527fda7bce9f4e8618b6bd2f4132ce798cdc7a60e7e1460a7299e3c6342a579626d26101e08201527f2733e50f526ec2fa19a22b31e8ed50f23cd1fdf94c9154ed3a7609a2f1ff981f6102008201527fe1d3b5c807b281e4683cc6d6315cf95b9ade8641defcb32372f1c126e398ef7a6102208201527f5a2dce0a8a7f68bb74560f8f71837c2c2ebbcbf7fffb42ae1896f13f7c7479a06102408201527fb46a28b6f55540f89444f63de0378e3d121be09e06cc9ded1c20e65876d36aa06102608201527fc65e9645644786b620e2dd2ad648ddfcbf4a7e5b1a3a4ecfe7f64667a3f0b7e26102808201527ff4418588ed35a2458cffeb39b93d26f18d2ab13bdce6aee58e7b99359ec2dfd96102a08201527f5a9c16dc00d6ef18b7933a6f8dc65ccb55667138776f7dea101070dc8796e3776102c08201527f4df84f40ae0c8229d0d6069e5c8f39a7c299677a09d367fc7b05e3bc380ee6526102e08201527fcdc72595f74c7b1043d0e1ffbab734648c838dfb0527d971b602bc216c9619ef6103008201527f0abf5ac974a1ed57f4050aa510dd9c74f508277b39d7973bb2dfccc5eeb0618d6103208201527fb8cd74046ff337f0a7bf2c8e03e10f642c1886798d71806ab1e888d9e5ee87d06103408201527f838c5655cb21c6cb83313b5a631175dff4963772cce9108188b34ac87c81c41e6103608201527f662ee4dd2dd7b2bc707961b1e646c4047669dcb6584f0d8d770daf5d7e7deb2e6103808201527f388ab20e2573d171a88108e79d820e98f26c0b84aa8b2f4aa4968dbb818ea3226103a08201527f93237c50ba75ee485f4c22adf2f741400bdf8d6a9cc7df7ecae576221665d7356103c08201527f8448818bb4ae4562849e949e17ac16e0be16688e156b5cf15e098c627c0056a96103e082015290565b6020820154600090815b6020811015611c2a57600182821c166000868360208110611b8d57611b8d612939565b0154905081600103611bca576040805160208101839052908101869052606001604051602081830303815290604052805190602001209450611c15565b84868460208110611bdd57611bdd612939565b6020020151604051602001611bfc929190918252602082015260400190565b6040516020818303038152906040528051906020012094505b50508080611c2290612971565b915050611b6a565b505092915050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516106d491906129a0565b6027546040805183815260208101929092527fd93b9a9123395d96a15a0cff10295f286f99a0962c9adb978bad3ab6aaea7213910160405180910390a1602755565b600080611cb08385612763565b9050604051811115611cc0575060005b80600003611cd55762ffffff19915050610e7f565b5050606092831b9190911790911b1760181b90565b6000611cf78260206129b3565b611d029060086129d6565b60ff16611d10858585611d2b565b901c949350505050565b6000610c4a62ffffff198316602c60205b60008160ff16600003611d4057506000610e7f565b611d538460181c6001600160601b031690565b6001600160601b0316611d6960ff841685612763565b1115611dcd57611db4611d858560781c6001600160601b031690565b6001600160601b0316611da18660181c6001600160601b031690565b6001600160601b0316858560ff16612064565b60405162461bcd60e51b815260040161069a91906129a0565b60208260ff161115611e475760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161069a565b600882026000611e608660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080611e9d8660781c6001600160601b031690565b6001600160601b03169050611eb1866120d2565b84611ebc8784612763565b611ec69190612763565b1115611ed95762ffffff19915050611efb565b611ee38582612763565b9050611ef78364ffffffffff168286611ca3565b9150505b949350505050565b600062ffffff1980841603611f6b5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161069a565b611f748361210b565b611fd45760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161069a565b6000611fe98460181c6001600160601b031690565b6001600160601b0316905060006120098560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156120295760206060fd5b8285848460045afa5061205a61203f8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b9695505050505050565b6060600061207186612148565b915050600061207f86612148565b915050600061208d86612148565b915050600061209b86612148565b915050838383836040516020016120b594939291906129f7565b604051602081830303815290604052945050505050949350505050565b60006120e78260181c6001600160601b031690565b6120fa8360781c6001600160601b031690565b016001600160601b03169050919050565b60006121178260d81c90565b64ffffffffff1664ffffffffff0361213157506000919050565b600061213c836120d2565b60405110199392505050565b600080601f5b600f8160ff16111561219d5760006121678260086129d6565b60ff1685901c9050612178816121f6565b61ffff16841793508160ff1660101461219357601084901b93505b506000190161214e565b50600f5b60ff8160ff1610156121f05760006121ba8260086129d6565b60ff1685901c90506121cb816121f6565b61ffff16831792508160ff166000146121e657601083901b92505b50600019016121a1565b50915091565b600061220860048360ff16901c612228565b60ff1661ffff919091161760081b61221f82612228565b60ff1617919050565b600060f08083179060ff821690036122435750603092915050565b8060ff1660f1036122575750603192915050565b8060ff1660f20361226b5750603292915050565b8060ff1660f30361227f5750603392915050565b8060ff1660f4036122935750603492915050565b8060ff1660f5036122a75750603592915050565b8060ff1660f6036122bb5750603692915050565b8060ff1660f7036122cf5750603792915050565b8060ff1660f8036122e35750603892915050565b8060ff1660f9036122f75750603992915050565b8060ff1660fa0361230b5750606192915050565b8060ff1660fb0361231f5750606292915050565b8060ff1660fc036123335750606392915050565b8060ff1660fd036123475750606492915050565b8060ff1660fe0361235b5750606592915050565b8060ff1660ff0361236f5750606692915050565b50919050565b6040518061040001604052806020906020820280368337509192915050565b80356001600160a01b03811681146123ab57600080fd5b919050565b6000602082840312156123c257600080fd5b610e7f82612394565b6000602082840312156123dd57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b602081016003831061241c57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261244957600080fd5b813567ffffffffffffffff8082111561246457612464612422565b604051601f8301601f19908116603f0116810190828211818310171561248c5761248c612422565b816040528381528660208588010111156124a557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156124d757600080fd5b813567ffffffffffffffff8111156124ee57600080fd5b611efb84828501612438565b6000806000610440848603121561251057600080fd5b833567ffffffffffffffff81111561252757600080fd5b61253386828701612438565b93505061042084018581111561254857600080fd5b60208501925080359150509250925092565b6000806000806060858703121561257057600080fd5b8435935061258060208601612394565b9250604085013567ffffffffffffffff8082111561259d57600080fd5b818701915087601f8301126125b157600080fd5b8135818111156125c057600080fd5b8860208285010111156125d257600080fd5b95989497505060200194505050565b803563ffffffff811681146123ab57600080fd5b60006020828403121561260757600080fd5b610e7f826125e1565b60008060006060848603121561262557600080fd5b61262e846125e1565b925060208401359150604084013567ffffffffffffffff81111561265157600080fd5b61265d86828701612438565b9150509250925092565b60005b8381101561268257818101518382015260200161266a565b838111156107665750506000910152565b600081518084526126ab816020860160208601612667565b601f01601f19169290920160200192915050565b6040815260006126d26040830185612693565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612711576127116126e9565b500390565b600063ffffffff808316818516808303821115612735576127356126e9565b01949350505050565b84815283602082015282604082015260806060820152600061205a6080830184612693565b60008219821115612776576127766126e9565b500190565b600063ffffffff80871683528086166020840152508360408301526080606083015261205a6080830184612693565b83815282151560208201526060604082015260006115726060830184612693565b8051602080830151919081101561236f5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161283781604c850160208701612667565b91909101604c01979650505050505050565b600181815b8085111561288457816000190482111561286a5761286a6126e9565b8085161561287757918102915b93841c939080029061284e565b509250929050565b60008261289b57506001610c4a565b816128a857506000610c4a565b81600181146128be57600281146128c8576128e4565b6001915050610c4a565b60ff8411156128d9576128d96126e9565b50506001821b610c4a565b5060208310610133831016604e8410600b8410161715612907575081810a610c4a565b6129118383612849565b8060001904821115612925576129256126e9565b029392505050565b6000610e7f838361288c565b634e487b7160e01b600052603260045260246000fd5b60008261296c57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201612983576129836126e9565b5060010190565b634e487b7160e01b600052600160045260246000fd5b602081526000610e7f6020830184612693565b600060ff821660ff8416808210156129cd576129cd6126e9565b90039392505050565b600060ff821660ff84168160ff0481118215151615612925576129256126e9565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161205a56fea26469706673582212204a86e7f6f4e8c5f7e53c3d8443f84521ef64d45d5dcd7b01dea9c9d332fa5fda64736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
