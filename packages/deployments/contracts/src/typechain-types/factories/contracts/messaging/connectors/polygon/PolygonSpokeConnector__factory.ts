/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003be638038062003be683398101604081905262000035916200047f565b878a8a828a8a8a8a8a8a8a808a8a8a8a8a6200005133620002d1565b8463ffffffff166000036200009c5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e85760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000093565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012057620001208162000330565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f45760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000093565b613a98841015620002375760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000093565b6101208590526101408490526001600160a01b0382166200028a5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000093565b506001600160a01b0390811661010052600891909155601080546001600160a01b031916999091169890981790975550620005339f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000346816200035460201b6200190f1760201c565b6200035181620003bd565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6011546001600160a01b0316156200042b5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000093565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200046257600080fd5b919050565b80516001600160a01b03811681146200046257600080fd5b6000806000806000806000806000806101408b8d031215620004a057600080fd5b620004ab8b6200044d565b9950620004bb60208c016200044d565b9850620004cb60408c0162000467565b9750620004db60608c0162000467565b9650620004eb60808c0162000467565b955060a08b0151945060c08b0151935060e08b01519250620005116101008c0162000467565b9150620005226101208c0162000467565b90509295989b9194979a5092959850565b60805160a05160c05160e051610100516101205161014051613612620005d46000396000818161035b0152611d8201526000818161098401528181611da30152611e2a0152600081816107cb01528181610abe01528181610fe00152611840015260006102eb015260006105e101526000818161093a0152610c66015260008181610528015281816106e7015281816117f10152611c8401526136126000f3fe6080604052600436106102cd5760003560e01c80638456cb5911610175578063b697f531116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610972578063db1b7659146109a6578063e0fed010146109c6578063fa31de01146109e657600080fd5b8063d2a3cc7114610908578063d69f9d6114610928578063d7d317b31461095c57600080fd5b8063b697f53114610843578063b95a200114610863578063c5b350df14610896578063cc394283146108ab578063d1851c92146108cb578063d232c220146108e957600080fd5b80639d3117c71161012e5780639d3117c7146107795780639fa92f9d146107a6578063a01892a5146107b9578063ad9c0c2e146107ed578063b1f8100d14610803578063b2f876431461082357600080fd5b80638456cb59146106a357806388837094146106b85780638d3638f4146106d85780638da5cb5b1461070b57806398c9f2b9146107295780639a7c4b711461075957600080fd5b80635190bc53116102345780635f61e3ec116101ed5780636a42b8f8116101c75780636a42b8f8146106385780636b04a9331461064e578063715018a61461066e5780637f1e9cb01461068357600080fd5b80635f61e3ec146105cf57806365eaf11b1461060357806368742da61461061857600080fd5b80635190bc53146104ed57806352a9674b14610516578063572386ca1461054a578063579c16181461057a5780635bd11efc146105905780635c975abb146105b057600080fd5b8063301f07c311610286578063301f07c31461041b5780633cf52ffb1461044b5780633f4ba83a14610460578063450d11f0146104755780634ff746f6146104ad578063508a109b146104cd57600080fd5b806314168416146102d95780631eeaabea1461032757806325e3beda14610349578063272efc691461038b5780632bb1ae7c146103cb5780632bbd59ca146103de57600080fd5b366102d457005b600080fd5b3480156102e557600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561033357600080fd5b50610347610342366004612e64565b610a06565b005b34801561035557600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161031e565b34801561039757600080fd5b506103bb6103a6366004612e99565b600d6020526000908152604090205460ff1681565b604051901515815260200161031e565b6103476103d9366004612f57565b610a7b565b3480156103ea57600080fd5b5061040e6103f9366004612e64565b600f6020526000908152604090205460ff1681565b60405161031e9190612fa2565b34801561042757600080fd5b506103bb610436366004612e64565b600a6020526000908152604090205460ff1681565b34801561045757600080fd5b5060025461037d565b34801561046c57600080fd5b50610347610c1e565b34801561048157600080fd5b50601054610495906001600160a01b031681565b6040516001600160a01b03909116815260200161031e565b3480156104b957600080fd5b506103476104c8366004612f57565b610c5b565b3480156104d957600080fd5b506103476104e8366004612fca565b610cf8565b3480156104f957600080fd5b506103bb610508366004612e99565b6001600160a01b0316301490565b34801561052257600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055657600080fd5b506103bb610565366004612e64565b600c6020526000908152604090205460ff1681565b34801561058657600080fd5b5061037d60055481565b34801561059c57600080fd5b506103476105ab366004612e99565b610fa5565b3480156105bc57600080fd5b50600354600160a01b900460ff166103bb565b3480156105db57600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b34801561060f57600080fd5b5061037d610fdc565b34801561062457600080fd5b50610347610633366004612e99565b611065565b34801561064457600080fd5b5062093a8061037d565b34801561065a57600080fd5b50610347610669366004612e64565b6110e2565b34801561067a57600080fd5b506103476111ad565b34801561068f57600080fd5b50601154610495906001600160a01b031681565b3480156106af57600080fd5b5061034761126a565b3480156106c457600080fd5b506103476106d3366004612e99565b61131e565b3480156106e457600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061030d565b34801561071757600080fd5b506000546001600160a01b0316610495565b34801561073557600080fd5b506103bb610744366004612e64565b600b6020526000908152604090205460ff1681565b34801561076557600080fd5b50610347610774366004613066565b6113ac565b34801561078557600080fd5b5061037d610794366004612e64565b60096020526000908152604090205481565b3480156107b257600080fd5b5030610495565b3480156107c557600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b3480156107f957600080fd5b5061037d60085481565b34801561080f57600080fd5b5061034761081e366004612e99565b611457565b34801561082f57600080fd5b5061034761083e366004612e99565b6114fc565b34801561084f57600080fd5b5061034761085e366004612e99565b611578565b34801561086f57600080fd5b5061030d61087e366004613101565b600e6020526000908152604090205463ffffffff1681565b3480156108a257600080fd5b506103476115f7565b3480156108b757600080fd5b50600354610495906001600160a01b031681565b3480156108d757600080fd5b506001546001600160a01b0316610495565b3480156108f557600080fd5b506000546001600160a01b0316156103bb565b34801561091457600080fd5b50610347610923366004612e99565b611652565b34801561093457600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b34801561096857600080fd5b5061037d60065481565b34801561097e57600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156109b257600080fd5b506103bb6109c1366004612e99565b611714565b3480156109d257600080fd5b506103476109e1366004612e64565b61171e565b3480156109f257600080fd5b5061037d610a0136600461311c565b611752565b6000546001600160a01b03163314610a31576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a765760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b610a83611978565b43600554600654610a949190613189565b1115610ab3576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e91906131a1565b6000818152600c602052604090205490915060ff1615610b945760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a6d565b600081604051602001610ba991815260200190565b6040516020818303038152906040529050610bc481846119c5565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610c1190839086903390613212565b60405180910390a1505050565b6000546001600160a01b03163314610c49576040516311a8a1bb60e31b815260040160405180910390fd5b610c51611a10565b610c59611a60565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cbc5760405162461bcd60e51b8152600401610a6d9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610ced929190613250565b60405180910390a150565b610d00611978565b83610d375760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a6d565b600085856000818110610d4c57610d4c61327a565b9050602002810190610d5e9190613290565b610d6890806132b1565b604051610d769291906132ff565b604051809103902090506000610ddd8288886000818110610d9957610d9961327a565b9050602002810190610dab9190613290565b60200189896000818110610dc157610dc161327a565b9050602002810190610dd39190613290565b6104200135611ab5565b9050610deb81868686611b5a565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610f0f5787878263ffffffff16818110610e2e57610e2e61327a565b9050602002810190610e409190613290565b610e4a90806132b1565b604051610e589291906132ff565b604051809103902092506000610ead848a8a8563ffffffff16818110610e8057610e8061327a565b9050602002810190610e929190613290565b6020018b8b8663ffffffff16818110610dc157610dc161327a565b9050828114610eec5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a6d565b506000838152600f60205260409020805460ff1916600190811790915501610e08565b5060005b63ffffffff8116871115610f9b57610f9288888363ffffffff16818110610f3c57610f3c61327a565b9050602002810190610f4e9190613290565b610f5890806132b1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c1692505050565b50600101610f13565b5050505050505050565b6000546001600160a01b03163314610fd0576040516311a8a1bb60e31b815260040160405180910390fd5b610fd981611f5d565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561103c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106091906131a1565b905090565b6000546001600160a01b03163314611090576040516311a8a1bb60e31b815260040160405180910390fd5b4761109b8282611f6f565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516110d691815260200190565b60405180910390a25050565b6000546001600160a01b0316331461110d576040516311a8a1bb60e31b815260040160405180910390fd5b611115611a10565b600081815260096020526040812054900361116a5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a6d565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610ced9083815260200190565b6000546001600160a01b031633146111d8576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036111fb57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261120d919061330f565b1161122b576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615611255576040516323295ef960e01b815260040160405180910390fd5b600154610c59906001600160a01b031661208d565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156112b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d79190613326565b61130e5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a6d565b611316611978565b610c596120ec565b6011546001600160a01b03161561138a5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610a6d565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b6010546001600160a01b031633146114105760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608401610a6d565b611451848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061212f92505050565b50505050565b6000546001600160a01b03163314611482576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156114a757506001600160a01b03811615155b156114c5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036114f357604051634a2fb73f60e11b815260040160405180910390fd5b610fd981612274565b6000546001600160a01b03163314611527576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610ced565b6000546001600160a01b031633146115a3576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610ced565b6001546001600160a01b03163314611622576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442611634919061330f565b116112555760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461167d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116db5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a6d565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610ced565b6000805b92915050565b6000546001600160a01b03163314611749576040516311a8a1bb60e31b815260040160405180910390fd5b610fd9816122c2565b336000908152600d602052604081205460ff166117a05760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610a6d565b63ffffffff8085166000908152600e6020526040902054166117c3816001613348565b63ffffffff8681166000908152600e60205260408120805463ffffffff19169390921692909217905561181a7f00000000000000000000000000000000000000000000000000000000000000003384898989612340565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611890573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b49190613370565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836118e660018461330f565b84876040516118f89493929190613394565b60405180910390a1509093505050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600354600160a01b900460ff1615610c595760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a6d565b805115611a035760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a6d565b611a0c82612378565b5050565b600354600160a01b900460ff16610c595760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a6d565b611a68611a10565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600f602052604090205460ff166002811115611adb57611adb612f8c565b14611b1e5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a6d565b611b528484602080602002604051908101604052809291908260208002808284376000920191909152508691506123a79050565b949350505050565b6000848152600b602052604090205460ff1661145157611b798361244d565b6000611baf8584602080602002604051908101604052809291908260208002808284376000920191909152508691506123a79050565b9050838114611bf65760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a6d565b506000848152600b60205260409020805460ff1916600117905550505050565b6000600260075403611c6a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a6d565b60026007556000611c7b838261253f565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611cb362ffffff198316612563565b63ffffffff1614611cf55760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a6d565b6000611d0662ffffff198316612578565b905060016000828152600f602052604090205460ff166002811115611d2d57611d2d612f8c565b14611d645760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a6d565b6000818152600f60205260409020805460ff19166002179055611dc77f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613189565b5a1015611dff5760405162461bcd60e51b8152600401610a6d906020808252600490820152632167617360e01b604082015260600190565b6000611e1062ffffff1984166125c1565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611e6d62ffffff1989166125d2565b611e7c62ffffff198a166125e6565b611e8b62ffffff198b166125fb565b611ea8611e9d62ffffff198d16612610565b62ffffff191661263e565b604051602401611ebb94939291906133b9565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611f04578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611f42939291906133e8565b60405180910390a15050600160075550949695505050505050565b611f668161190f565b610fd98161131e565b80471015611fbf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a6d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461200c576040519150601f19603f3d011682016040523d82523d6000602084013e612011565b606091505b50509050806120885760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a6d565b505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6120f4611978565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a983390565b60115482906001600160a01b038083169116146121a25760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608401610a6d565b6003546001600160a01b038481169116146121e95760405162461bcd60e51b815260206004820152600760248201526610b9b2b73232b960c91b6044820152606401610a6d565b81516020146122245760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a6d565b61223561223083613409565b612687565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8233604051612266929190613250565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60055481036123055760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a6d565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610ced565b606086868686868660405160200161235d9695949392919061342d565b60405160208183030381529060405290509695505050505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681604051610ced9190613487565b8260005b602081101561244557600183821c1660008583602081106123ce576123ce61327a565b602002015190508160010361240e57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061243b565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50506001016123ab565b509392505050565b6000818152600a602052604090205460ff16156124675750565b600081815260096020526040812054908190036124bd5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a6d565b6008546124ca824361330f565b10156125185760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a6d565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b81516000906020840161255a64ffffffffff851682846127b0565b95945050505050565b600061171862ffffff198316602860046127f7565b60008061258e8360781c6001600160601b031690565b6001600160601b0316905060006125ae8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006117186125cf83612827565b90565b600061171862ffffff1983168260046127f7565b600061171862ffffff198316602460046127f7565b600061171862ffffff19831660046020612838565b6000611718604c61262e81601886901c6001600160601b031661330f565b62ffffff19851691906000612994565b60606000806126568460181c6001600160601b031690565b6001600160601b0316905060405191508192506126768483602001612a0e565b508181016020016040529052919050565b806126c55760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a6d565b600081815260096020526040902054156127185760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a6d565b6000818152600a602052604090205460ff161561276d5760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a6d565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610ced9083815260200190565b6000806127bd8385613189565b90506040518111156127cd575060005b806000036127e25762ffffff19915050611908565b5050606092831b9190911790911b1760181b90565b600061280482602061349a565b61280f9060086134bd565b60ff1661281d858585612838565b901c949350505050565b600061171862ffffff198316602c60205b60008160ff1660000361284d57506000611908565b6128608460181c6001600160601b031690565b6001600160601b031661287660ff841685613189565b11156128da576128c16128928560781c6001600160601b031690565b6001600160601b03166128ae8660181c6001600160601b031690565b6001600160601b0316858560ff16612b65565b60405162461bcd60e51b8152600401610a6d9190613487565b60208260ff1611156129545760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610a6d565b60088202600061296d8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806129aa8660781c6001600160601b031690565b6001600160601b031690506129be86612bd3565b846129c98784613189565b6129d39190613189565b11156129e65762ffffff19915050611b52565b6129f08582613189565b9050612a048364ffffffffff1682866127b0565b9695505050505050565b600062ffffff1980841603612a765760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610a6d565b612a7f83612c0c565b612adf5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610a6d565b6000612af48460181c6001600160601b031690565b6001600160601b031690506000612b148560781c6001600160601b031690565b6001600160601b031690506000604051905084811115612b345760206060fd5b8285848460045afa50612a04612b4a8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b60606000612b7286612c49565b9150506000612b8086612c49565b9150506000612b8e86612c49565b9150506000612b9c86612c49565b91505083838383604051602001612bb694939291906134e6565b604051602081830303815290604052945050505050949350505050565b6000612be88260181c6001600160601b031690565b612bfb8360781c6001600160601b031690565b016001600160601b03169050919050565b6000612c188260d81c90565b64ffffffffff1664ffffffffff03612c3257506000919050565b6000612c3d83612bd3565b60405110199392505050565b600080601f5b600f811115612c95576000612c658260086135bd565b85901c9050612c7381612ce5565b61ffff168417935081601014612c8b57601084901b93505b5060001901612c4f565b50600f5b60ff811015612cdf576000612caf8260086135bd565b85901c9050612cbd81612ce5565b61ffff168317925081600014612cd557601083901b92505b5060001901612c99565b50915091565b6000612cf760048360ff16901c612d17565b60ff1661ffff919091161760081b612d0e82612d17565b60ff1617919050565b600060f08083179060ff82169003612d325750603092915050565b8060ff1660f103612d465750603192915050565b8060ff1660f203612d5a5750603292915050565b8060ff1660f303612d6e5750603392915050565b8060ff1660f403612d825750603492915050565b8060ff1660f503612d965750603592915050565b8060ff1660f603612daa5750603692915050565b8060ff1660f703612dbe5750603792915050565b8060ff1660f803612dd25750603892915050565b8060ff1660f903612de65750603992915050565b8060ff1660fa03612dfa5750606192915050565b8060ff1660fb03612e0e5750606292915050565b8060ff1660fc03612e225750606392915050565b8060ff1660fd03612e365750606492915050565b8060ff1660fe03612e4a5750606592915050565b8060ff1660ff03612e5e5750606692915050565b50919050565b600060208284031215612e7657600080fd5b5035919050565b80356001600160a01b0381168114612e9457600080fd5b919050565b600060208284031215612eab57600080fd5b61190882612e7d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612edb57600080fd5b813567ffffffffffffffff80821115612ef657612ef6612eb4565b604051601f8301601f19908116603f01168101908282118183101715612f1e57612f1e612eb4565b81604052838152866020858801011115612f3757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612f6957600080fd5b813567ffffffffffffffff811115612f8057600080fd5b611b5284828501612eca565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612fc457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612fe357600080fd5b853567ffffffffffffffff80821115612ffb57600080fd5b818801915088601f83011261300f57600080fd5b81358181111561301e57600080fd5b8960208260051b850101111561303357600080fd5b60209283019750955050860135925061044086018781111561305457600080fd5b94979396509194604001933592915050565b6000806000806060858703121561307c57600080fd5b8435935061308c60208601612e7d565b9250604085013567ffffffffffffffff808211156130a957600080fd5b818701915087601f8301126130bd57600080fd5b8135818111156130cc57600080fd5b8860208285010111156130de57600080fd5b95989497505060200194505050565b803563ffffffff81168114612e9457600080fd5b60006020828403121561311357600080fd5b611908826130ed565b60008060006060848603121561313157600080fd5b61313a846130ed565b925060208401359150604084013567ffffffffffffffff81111561315d57600080fd5b61316986828701612eca565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000821982111561319c5761319c613173565b500190565b6000602082840312156131b357600080fd5b5051919050565b60005b838110156131d55781810151838201526020016131bd565b838111156114515750506000910152565b600081518084526131fe8160208601602086016131ba565b601f01601f19169290920160200192915050565b60608152600061322560608301866131e6565b828103602084015261323781866131e6565b91505060018060a01b0383166040830152949350505050565b60408152600061326360408301856131e6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126132a757600080fd5b9190910192915050565b6000808335601e198436030181126132c857600080fd5b83018035915067ffffffffffffffff8211156132e357600080fd5b6020019150368190038213156132f857600080fd5b9250929050565b8183823760009101908152919050565b60008282101561332157613321613173565b500390565b60006020828403121561333857600080fd5b8151801515811461190857600080fd5b600063ffffffff80831681851680830382111561336757613367613173565b01949350505050565b6000806040838503121561338357600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612a0460808301846131e6565b600063ffffffff808716835280861660208401525083604083015260806060830152612a0460808301846131e6565b838152821515602082015260606040820152600061255a60608301846131e6565b80516020808301519190811015612e5e5760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161347581604c8501602087016131ba565b91909101604c01979650505050505050565b60208152600061190860208301846131e6565b600060ff821660ff8416808210156134b4576134b4613173565b90039392505050565b600060ff821660ff84168160ff04811182151516156134de576134de613173565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201612a04565b60008160001904831182151516156135d7576135d7613173565b50029056fea2646970667358221220791d62ec3985c3c0aaeedf26bce2ed5afa5ba4c86657508b46297262e67f912964736f6c634300080f0033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
