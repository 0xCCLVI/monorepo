/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003da638038062003da6833981016040819052620000359162000483565b878a8a828a8a8a8a8a8a8a808a8a8a8a8a6200005133620002cf565b8463ffffffff166000036200009c5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e85760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000093565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012057620001208162000334565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000093565b613a978411620002355760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000093565b6101208590526101408490526001600160a01b038216620002885760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000093565b506001600160a01b0390811661010052600891909155600f80546001600160a01b031916999091169890981790975550620005379f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6200034a816200035860201b620018f11760201c565b6200035581620003c1565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6010546001600160a01b0316156200042f5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000093565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200046657600080fd5b919050565b80516001600160a01b03811681146200046657600080fd5b6000806000806000806000806000806101408b8d031215620004a457600080fd5b620004af8b62000451565b9950620004bf60208c0162000451565b9850620004cf60408c016200046b565b9750620004df60608c016200046b565b9650620004ef60808c016200046b565b955060a08b0151945060c08b0151935060e08b01519250620005156101008c016200046b565b9150620005266101208c016200046b565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516137ab620005fb600039600081816103400152611f0901526000818161092c01528181611f2a0152611fbc01526000818161075301528181610aa901528181610dfd01528181610f61015281816110ad0152818161182101528181611b2201528181611dd00152611ea1015260006102d0015260006105590152600081816108e20152610c510152600081816104a00152818161066f015281816117c30152611d3401526137ab6000f3fe6080604052600436106102b25760003560e01c80638456cb5911610175578063b697f531116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda21461091a578063db1b76591461094e578063e0fed0101461096e578063fa31de011461098e57600080fd5b8063d2a3cc71146108b0578063d69f9d61146108d0578063d7d317b31461090457600080fd5b8063b697f531146107eb578063b95a20011461080b578063c5b350df1461083e578063cc39428314610853578063d1851c9214610873578063d232c2201461089157600080fd5b80639fa92f9d1161012e5780639fa92f9d1461072e578063a01892a514610741578063a792c29b14610775578063ad9c0c2e14610795578063b1f8100d146107ab578063b2f87643146107cb57600080fd5b80638456cb591461064b5780638d3638f4146106605780638da5cb5b1461069357806398c9f2b9146106b15780639a7c4b71146106e15780639d3117c71461070157600080fd5b8063572386ca1161021957806365eaf11b116101d257806365eaf11b146105ab57806368742da6146105c05780636a42b8f8146105e05780636b04a933146105f6578063715018a6146106165780637f1e9cb01461062b57600080fd5b8063572386ca146104c2578063579c1618146104f25780635bd11efc146105085780635c975abb146105285780635f61e3ec146105475780636159ada11461057b57600080fd5b80633f4ba83a1161026b5780633f4ba83a146103d8578063450d11f0146103ed5780634ff746f614610425578063508a109b146104455780635190bc531461046557806352a9674b1461048e57600080fd5b806314168416146102be5780631eeaabea1461030c57806325e3beda1461032e5780632bb1ae7c14610370578063301f07c3146103835780633cf52ffb146103c357600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561031857600080fd5b5061032c6103273660046130fa565b6109bc565b005b34801561033a57600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610303565b61032c61037e3660046131b6565b610a66565b34801561038f57600080fd5b506103b361039e3660046130fa565b600a6020526000908152604090205460ff1681565b6040519015158152602001610303565b3480156103cf57600080fd5b50600254610362565b3480156103e457600080fd5b5061032c610c09565b3480156103f957600080fd5b50600f5461040d906001600160a01b031681565b6040516001600160a01b039091168152602001610303565b34801561043157600080fd5b5061032c6104403660046131b6565b610c46565b34801561045157600080fd5b5061032c6104603660046131eb565b610cec565b34801561047157600080fd5b506103b36104803660046132a3565b6001600160a01b0316301490565b34801561049a57600080fd5b506102f27f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ce57600080fd5b506103b36104dd3660046130fa565b600c6020526000908152604090205460ff1681565b3480156104fe57600080fd5b5061036260055481565b34801561051457600080fd5b5061032c6105233660046132a3565b611072565b34801561053457600080fd5b50600354600160a01b900460ff166103b3565b34801561055357600080fd5b5061040d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561058757600080fd5b506103b36105963660046132a3565b600d6020526000908152604090205460ff1681565b3480156105b757600080fd5b506103626110a9565b3480156105cc57600080fd5b5061032c6105db3660046132a3565b611132565b3480156105ec57600080fd5b5062093a80610362565b34801561060257600080fd5b5061032c6106113660046130fa565b6111af565b34801561062257600080fd5b5061032c61127a565b34801561063757600080fd5b5060105461040d906001600160a01b031681565b34801561065757600080fd5b5061032c6112a5565b34801561066c57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102f2565b34801561069f57600080fd5b506000546001600160a01b031661040d565b3480156106bd57600080fd5b506103b36106cc3660046130fa565b600b6020526000908152604090205460ff1681565b3480156106ed57600080fd5b5061032c6106fc3660046132be565b611359565b34801561070d57600080fd5b5061036261071c3660046130fa565b60096020526000908152604090205481565b34801561073a57600080fd5b503061040d565b34801561074d57600080fd5b5061040d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561078157600080fd5b5060045461040d906001600160a01b031681565b3480156107a157600080fd5b5061036260085481565b3480156107b757600080fd5b5061032c6107c63660046132a3565b611404565b3480156107d757600080fd5b5061032c6107e63660046132a3565b6114a2565b3480156107f757600080fd5b5061032c6108063660046132a3565b61151e565b34801561081757600080fd5b506102f2610826366004613359565b600e6020526000908152604090205463ffffffff1681565b34801561084a57600080fd5b5061032c61159d565b34801561085f57600080fd5b5060035461040d906001600160a01b031681565b34801561087f57600080fd5b506001546001600160a01b031661040d565b34801561089d57600080fd5b506000546001600160a01b0316156103b3565b3480156108bc57600080fd5b5061032c6108cb3660046132a3565b61160d565b3480156108dc57600080fd5b5061040d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561091057600080fd5b5061036260065481565b34801561092657600080fd5b506103627f000000000000000000000000000000000000000000000000000000000000000081565b34801561095a57600080fd5b506103b36109693660046132a3565b6116e4565b34801561097a57600080fd5b5061032c6109893660046130fa565b6116ee565b34801561099a57600080fd5b506109ae6109a9366004613374565b611722565b60405161030392919061341b565b6000546001600160a01b031633146109e7576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a2c5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610a6e61195a565b43600554600654610a7f919061344a565b1115610a9e576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b29919061345d565b6000818152600c602052604090205490915060ff1615610b7f5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a23565b600081604051602001610b9491815260200190565b6040516020818303038152906040529050610baf81846119a7565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610bfc90839086903390613476565b60405180910390a1505050565b6000546001600160a01b03163314610c34576040516311a8a1bb60e31b815260040160405180910390fd5b610c3c6119f2565b610c44611a42565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ca75760405162461bcd60e51b8152600401610a239060208082526004908201526310a0a6a160e11b604082015260600190565b610cb081611a97565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610ce19291906134b4565b60405180910390a150565b610cf461195a565b610cfc611ab0565b83610d335760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a23565b600085856000818110610d4857610d486134de565b9050602002810190610d5a91906134f4565b610d649080613515565b604051610d72929190613563565b604051809103902090506000610dd98288886000818110610d9557610d956134de565b9050602002810190610da791906134f4565b60200189896000818110610dbd57610dbd6134de565b9050602002810190610dcf91906134f4565b6104200135611b09565b9050610de781868686611c24565b6040516398fae8e960e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610e4957600080fd5b505af1158015610e5d573d6000803e3d6000fd5b5088925060019150505b818163ffffffff161015610fd15788888263ffffffff16818110610e8d57610e8d6134de565b9050602002810190610e9f91906134f4565b610ea99080613515565b604051610eb7929190613563565b604051809103902093506000610f0c858b8b8563ffffffff16818110610edf57610edf6134de565b9050602002810190610ef191906134f4565b6020018c8c8663ffffffff16818110610dbd57610dbd6134de565b9050838114610f4b5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a23565b6040516398fae8e960e01b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610fad57600080fd5b505af1158015610fc1573d6000803e3d6000fd5b5050505081600101915050610e67565b5060005b818163ffffffff16101561105d5761105489898363ffffffff16818110610ffe57610ffe6134de565b905060200281019061101091906134f4565b61101a9080613515565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1e92505050565b50600101610fd5565b5050505061106b6001600755565b5050505050565b6000546001600160a01b0316331461109d576040516311a8a1bb60e31b815260040160405180910390fd5b6110a6816120d5565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112d919061345d565b905090565b6000546001600160a01b0316331461115d576040516311a8a1bb60e31b815260040160405180910390fd5b4761116882826120e7565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516111a391815260200190565b60405180910390a25050565b6000546001600160a01b031633146111da576040516311a8a1bb60e31b815260040160405180910390fd5b6111e26119f2565b60008181526009602052604081205490036112375760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a23565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610ce19083815260200190565b6000546001600160a01b03163314610c44576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156112ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113129190613573565b6113495760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a23565b61135161195a565b610c44612205565b600f546001600160a01b031633146113bd5760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608401610a23565b6113fe848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061224892505050565b50505050565b6000546001600160a01b0316331461142f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561144d575060025415155b1561146b576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361149957604051634a2fb73f60e11b815260040160405180910390fd5b6110a681612346565b6000546001600160a01b031633146114cd576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610ce1565b6000546001600160a01b03163314611549576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610ce1565b6001546001600160a01b031633146115c8576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115da9190613595565b116115f8576040516324e0285f60e21b815260040160405180910390fd5b600154610c44906001600160a01b0316612394565b6000546001600160a01b03163314611638576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116965760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a23565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610ce1565b6000805b92915050565b6000546001600160a01b03163314611719576040516311a8a1bb60e31b815260040160405180910390fd5b6110a6816123f9565b336000908152600d602052604081205460609060ff166117735760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a23565b63ffffffff8086166000908152600e602052604081208054919291909116908261179c836135a8565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006117fb7f00000000000000000000000000000000000000000000000000000000000000006117f2336001600160a01b031690565b848a8a8a612477565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611871573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189591906135cb565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836118c7600184613595565b84876040516118d994939291906135ef565b60405180910390a15090989197509095505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600354600160a01b900460ff1615610c445760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a23565b8051156119e55760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a23565b6119ee826124af565b5050565b600354600160a01b900460ff16610c445760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a23565b611a4a6119f2565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516316c2fdb560e21b815260040160405180910390fd5b600260075403611b025760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a23565b6002600755565b600080604051630546f34b60e21b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611b71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b959190613634565b6002811115611ba657611ba661361e565b14611be65760405162461bcd60e51b815260206004820152601060248201526f214c6561665374617475732e4e6f6e6560801b6044820152606401610a23565b611c1a8484602080602002604051908101604052809291908260208002808284376000920191909152508691506124de9050565b90505b9392505050565b6000848152600b602052604090205460ff166113fe57611c438361282c565b6000611c798584602080602002604051908101604052809291908260208002808284376000920191909152508691506124de9050565b9050838114611cc05760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a23565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611d0f9086815260200190565b60405180910390a35050505050565b600080611d2b838261298c565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611d6362ffffff1983166129b0565b63ffffffff1614611da55760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a23565b6000611db662ffffff1983166129c5565b90506001604051630546f34b60e21b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611e1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e439190613634565b6002811115611e5457611e5461361e565b14611e8b5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a23565b604051630b61f10360e41b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b61f103090602401600060405180830381600087803b158015611eed57600080fd5b505af1158015611f01573d6000803e3d6000fd5b5050505060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f53919061344a565b611f5d9190613595565b5a11611f945760405162461bcd60e51b8152600401610a23906020808252600490820152632167617360e01b604082015260600190565b6000611fa562ffffff198416612a0e565b6040805161010080825261012082019092529192507f00000000000000000000000000000000000000000000000000000000000000009160009082602082018180368337019050509050600061200062ffffff198816612a1f565b61200f62ffffff198916612a33565b61201e62ffffff198a16612a48565b61203b61203062ffffff198c16612a5d565b62ffffff1916612a8b565b60405160240161204e9493929190613655565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050612088858560008685612ad4565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48906120c19088908b908690613684565b60405180910390a150505050505050919050565b6120de816118f1565b6110a681612b5f565b804710156121375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a23565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612184576040519150601f19603f3d011682016040523d82523d6000602084013e612189565b606091505b50509050806122005760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a23565b505050565b61220d61195a565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a7a3390565b60105482906001600160a01b038083169116146122bb5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608401610a23565b81516020146122f65760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a23565b612307612302836136a5565b612bed565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced82336040516123389291906134b4565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600554810361243c5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a23565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610ce1565b6060868686868686604051602001612494969594939291906136cc565b60405160208183030381529060405290509695505050505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681604051610ce19190613726565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b8061286f5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a23565b6000818152600a602052604090205460ff16156128895750565b600081815260096020526040812054908190036128df5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a23565b6008546128ec8243613595565b101561293a5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a23565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b8151600090602084016129a764ffffffffff85168284612d16565b95945050505050565b60006116e862ffffff19831660286004612d53565b6000806129db8360781c6001600160601b031690565b6001600160601b0316905060006129fb8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006116e8612a1c83612d83565b90565b60006116e862ffffff198316826004612d53565b60006116e862ffffff19831660246004612d53565b60006116e862ffffff19831660046020612d94565b60006116e8604c612a7b81601886901c6001600160601b0316613595565b62ffffff19851691906000612e9f565b6060600080612aa38460181c6001600160601b031690565b6001600160601b031690506040519150819250612ac38483602001612f1b565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612afa57612afa613113565b6040519080825280601f01601f191660200182016040528015612b24576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612b45578692505b828152826000602083013e90999098509650505050505050565b6010546001600160a01b031615612bcb5760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610a23565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b80612c2b5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a23565b60008181526009602052604090205415612c7e5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a23565b6000818152600a602052604090205460ff1615612cd35760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a23565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610ce19083815260200190565b600080612d23838561344a565b9050604051811115612d33575060005b80600003612d485762ffffff19915050611c1d565b6129a785858561300e565b6000612d60826020613739565b612d6b906008613752565b60ff16612d79858585612d94565b901c949350505050565b60006116e862ffffff198316602c60205b60008160ff16600003612da957506000611c1d565b612dbc8460181c6001600160601b031690565b6001600160601b0316612dd260ff84168561344a565b1115612e3a57612deb8460781c6001600160601b031690565b612dfe8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a23565b60208260ff161115612e5f5760405163045df3f960e01b815260040160405180910390fd5b600882026000612e788660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612eb58660781c6001600160601b031690565b6001600160601b03169050612ec986613085565b84612ed4878461344a565b612ede919061344a565b1115612ef15762ffffff19915050612f13565b612efb858261344a565b9050612f0f8364ffffffffff168286612d16565b9150505b949350505050565b600062ffffff1980841603612f435760405163148d513360e21b815260040160405180910390fd5b612f4c836130be565b15612f6a57604051632ee0949160e11b815260040160405180910390fd5b6000612f7f8460181c6001600160601b031690565b6001600160601b031690506000612f9f8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612fc05760206060fd5b8386858560045afa905080612fe857604051632af1bd9b60e21b815260040160405180910390fd5b613003612ff58860d81c90565b64ffffffffff16878661300e565b979650505050505050565b60006060601883856001600160601b03821682148015613036575086816001600160601b0316145b61306f5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a23565b96831b90961790911b90941790931b9392505050565b600061309a8260181c6001600160601b031690565b6130ad8360781c6001600160601b031690565b016001600160601b03169050919050565b60006130ca8260d81c90565b64ffffffffff1664ffffffffff036130e457506001919050565b60006130ef83613085565b604051109392505050565b60006020828403121561310c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261313a57600080fd5b813567ffffffffffffffff8082111561315557613155613113565b604051601f8301601f19908116603f0116810190828211818310171561317d5761317d613113565b8160405283815286602085880101111561319657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156131c857600080fd5b813567ffffffffffffffff8111156131df57600080fd5b612f1384828501613129565b6000806000806000610460868803121561320457600080fd5b853567ffffffffffffffff8082111561321c57600080fd5b818801915088601f83011261323057600080fd5b81358181111561323f57600080fd5b8960208260051b850101111561325457600080fd5b60209283019750955050860135925061044086018781111561327557600080fd5b94979396509194604001933592915050565b80356001600160a01b038116811461329e57600080fd5b919050565b6000602082840312156132b557600080fd5b611c1d82613287565b600080600080606085870312156132d457600080fd5b843593506132e460208601613287565b9250604085013567ffffffffffffffff8082111561330157600080fd5b818701915087601f83011261331557600080fd5b81358181111561332457600080fd5b88602082850101111561333657600080fd5b95989497505060200194505050565b803563ffffffff8116811461329e57600080fd5b60006020828403121561336b57600080fd5b611c1d82613345565b60008060006060848603121561338957600080fd5b61339284613345565b925060208401359150604084013567ffffffffffffffff8111156133b557600080fd5b6133c186828701613129565b9150509250925092565b60005b838110156133e65781810151838201526020016133ce565b50506000910152565b600081518084526134078160208601602086016133cb565b601f01601f19169290920160200192915050565b828152604060208201526000611c1a60408301846133ef565b634e487b7160e01b600052601160045260246000fd5b808201808211156116e8576116e8613434565b60006020828403121561346f57600080fd5b5051919050565b60608152600061348960608301866133ef565b828103602084015261349b81866133ef565b91505060018060a01b0383166040830152949350505050565b6040815260006134c760408301856133ef565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261350b57600080fd5b9190910192915050565b6000808335601e1984360301811261352c57600080fd5b83018035915067ffffffffffffffff82111561354757600080fd5b60200191503681900382131561355c57600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561358557600080fd5b81518015158114611c1d57600080fd5b818103818111156116e8576116e8613434565b600063ffffffff8083168181036135c1576135c1613434565b6001019392505050565b600080604083850312156135de57600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061361460808301846133ef565b9695505050505050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561364657600080fd5b815160038110611c1d57600080fd5b600063ffffffff80871683528086166020840152508360408301526080606083015261361460808301846133ef565b83815282151560208201526060604082015260006129a760608301846133ef565b805160208083015191908110156136c6576000198160200360031b1b821691505b50919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161371481604c8501602087016133cb565b91909101604c01979650505050505050565b602081526000611c1d60208301846133ef565b60ff82811682821603908111156116e8576116e8613434565b60ff818116838216029081169081811461376e5761376e613434565b509291505056fea26469706673582212202866e3f0210c6e0c6d28f36380c47c42d2f2896bfe74764fe2d234d956c3c2cd64736f6c63430008110033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
