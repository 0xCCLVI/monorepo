/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonSpokeConnector,
  PolygonSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200382338038062003823833981016040819052620000359162000485565b878a8a828a8a8a8a8a8a8a808a8a8a8a8a6200005133620002d1565b8463ffffffff166000036200009c5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e85760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000093565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200012057620001208162000336565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f45760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000093565b613a98841015620002375760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000093565b6101208590526101408490526001600160a01b0382166200028a5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000093565b506001600160a01b0390811661010052600891909155601080546001600160a01b031916999091169890981790975550620005399f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6200034c816200035a60201b620018321760201c565b6200035781620003c3565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6011546001600160a01b031615620004315760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000093565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200046857600080fd5b919050565b80516001600160a01b03811681146200046857600080fd5b6000806000806000806000806000806101408b8d031215620004a657600080fd5b620004b18b62000453565b9950620004c160208c0162000453565b9850620004d160408c016200046d565b9750620004e160608c016200046d565b9650620004f160808c016200046d565b955060a08b0151945060c08b0151935060e08b01519250620005176101008c016200046d565b9150620005286101208c016200046d565b90509295989b9194979a5092959850565b60805160a05160c05160e051610100516101205161014051613249620005da6000396000818161035b0152611ca601526000818161098401528181611cc70152611d4b0152600081816107ab01528181610abe01528181610ff20152611763015260006102eb015260006105e101526000818161093a0152610c66015260008181610528015281816106c7015281816117050152611ba801526132496000f3fe6080604052600436106102cd5760003560e01c80638456cb5911610175578063b697f531116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610972578063db1b7659146109a6578063e0fed010146109c6578063fa31de01146109e657600080fd5b8063d2a3cc7114610908578063d69f9d6114610928578063d7d317b31461095c57600080fd5b8063b697f53114610843578063b95a200114610863578063c5b350df14610896578063cc394283146108ab578063d1851c92146108cb578063d232c220146108e957600080fd5b80639fa92f9d1161012e5780639fa92f9d14610786578063a01892a514610799578063a792c29b146107cd578063ad9c0c2e146107ed578063b1f8100d14610803578063b2f876431461082357600080fd5b80638456cb59146106a35780638d3638f4146106b85780638da5cb5b146106eb57806398c9f2b9146107095780639a7c4b71146107395780639d3117c71461075957600080fd5b80635190bc53116102345780635f61e3ec116101ed5780636a42b8f8116101c75780636a42b8f8146106385780636b04a9331461064e578063715018a61461066e5780637f1e9cb01461068357600080fd5b80635f61e3ec146105cf57806365eaf11b1461060357806368742da61461061857600080fd5b80635190bc53146104ed57806352a9674b14610516578063572386ca1461054a578063579c16181461057a5780635bd11efc146105905780635c975abb146105b057600080fd5b8063301f07c311610286578063301f07c31461041b5780633cf52ffb1461044b5780633f4ba83a14610460578063450d11f0146104755780634ff746f6146104ad578063508a109b146104cd57600080fd5b806314168416146102d95780631eeaabea1461032757806325e3beda14610349578063272efc691461038b5780632bb1ae7c146103cb5780632bbd59ca146103de57600080fd5b366102d457005b600080fd5b3480156102e557600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561033357600080fd5b50610347610342366004612bb4565b610a06565b005b34801561035557600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161031e565b34801561039757600080fd5b506103bb6103a6366004612be9565b600d6020526000908152604090205460ff1681565b604051901515815260200161031e565b6103476103d9366004612ca7565b610a7b565b3480156103ea57600080fd5b5061040e6103f9366004612bb4565b600f6020526000908152604090205460ff1681565b60405161031e9190612cf2565b34801561042757600080fd5b506103bb610436366004612bb4565b600a6020526000908152604090205460ff1681565b34801561045757600080fd5b5060025461037d565b34801561046c57600080fd5b50610347610c1e565b34801561048157600080fd5b50601054610495906001600160a01b031681565b6040516001600160a01b03909116815260200161031e565b3480156104b957600080fd5b506103476104c8366004612ca7565b610c5b565b3480156104d957600080fd5b506103476104e8366004612d1a565b610cf8565b3480156104f957600080fd5b506103bb610508366004612be9565b6001600160a01b0316301490565b34801561052257600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055657600080fd5b506103bb610565366004612bb4565b600c6020526000908152604090205460ff1681565b34801561058657600080fd5b5061037d60055481565b34801561059c57600080fd5b506103476105ab366004612be9565b610fb7565b3480156105bc57600080fd5b50600354600160a01b900460ff166103bb565b3480156105db57600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b34801561060f57600080fd5b5061037d610fee565b34801561062457600080fd5b50610347610633366004612be9565b611077565b34801561064457600080fd5b5062093a8061037d565b34801561065a57600080fd5b50610347610669366004612bb4565b6110f4565b34801561067a57600080fd5b506103476111bf565b34801561068f57600080fd5b50601154610495906001600160a01b031681565b3480156106af57600080fd5b506103476111ea565b3480156106c457600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061030d565b3480156106f757600080fd5b506000546001600160a01b0316610495565b34801561071557600080fd5b506103bb610724366004612bb4565b600b6020526000908152604090205460ff1681565b34801561074557600080fd5b50610347610754366004612db6565b61129e565b34801561076557600080fd5b5061037d610774366004612bb4565b60096020526000908152604090205481565b34801561079257600080fd5b5030610495565b3480156107a557600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b3480156107d957600080fd5b50600454610495906001600160a01b031681565b3480156107f957600080fd5b5061037d60085481565b34801561080f57600080fd5b5061034761081e366004612be9565b611349565b34801561082f57600080fd5b5061034761083e366004612be9565b6113e7565b34801561084f57600080fd5b5061034761085e366004612be9565b611463565b34801561086f57600080fd5b5061030d61087e366004612e51565b600e6020526000908152604090205463ffffffff1681565b3480156108a257600080fd5b506103476114e2565b3480156108b757600080fd5b50600354610495906001600160a01b031681565b3480156108d757600080fd5b506001546001600160a01b0316610495565b3480156108f557600080fd5b506000546001600160a01b0316156103bb565b34801561091457600080fd5b50610347610923366004612be9565b611552565b34801561093457600080fd5b506104957f000000000000000000000000000000000000000000000000000000000000000081565b34801561096857600080fd5b5061037d60065481565b34801561097e57600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156109b257600080fd5b506103bb6109c1366004612be9565b611629565b3480156109d257600080fd5b506103476109e1366004612bb4565b611633565b3480156109f257600080fd5b5061037d610a01366004612e6c565b611667565b6000546001600160a01b03163314610a31576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a765760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b610a8361189b565b43600554600654610a949190612ed9565b1115610ab3576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e9190612eec565b6000818152600c602052604090205490915060ff1615610b945760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a6d565b600081604051602001610ba991815260200190565b6040516020818303038152906040529050610bc481846118e8565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610c1190839086903390612f55565b60405180910390a1505050565b6000546001600160a01b03163314610c49576040516311a8a1bb60e31b815260040160405180910390fd5b610c51611933565b610c59611983565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cbc5760405162461bcd60e51b8152600401610a6d9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610ced929190612f93565b60405180910390a150565b610d0061189b565b610d086119d8565b83610d3f5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a6d565b600085856000818110610d5457610d54612fbd565b9050602002810190610d669190612fd3565b610d709080612ff4565b604051610d7e929190613042565b604051809103902090506000610de58288886000818110610da157610da1612fbd565b9050602002810190610db39190612fd3565b60200189896000818110610dc957610dc9612fbd565b9050602002810190610ddb9190612fd3565b6104200135611a31565b9050610df381868686611ad6565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610f175787878263ffffffff16818110610e3657610e36612fbd565b9050602002810190610e489190612fd3565b610e529080612ff4565b604051610e60929190613042565b604051809103902092506000610eb5848a8a8563ffffffff16818110610e8857610e88612fbd565b9050602002810190610e9a9190612fd3565b6020018b8b8663ffffffff16818110610dc957610dc9612fbd565b9050828114610ef45760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a6d565b506000838152600f60205260409020805460ff1916600190811790915501610e10565b5060005b63ffffffff8116871115610fa357610f9a88888363ffffffff16818110610f4457610f44612fbd565b9050602002810190610f569190612fd3565b610f609080612ff4565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9292505050565b50600101610f1b565b505050610fb06001600755565b5050505050565b6000546001600160a01b03163314610fe2576040516311a8a1bb60e31b815260040160405180910390fd5b610feb81611e64565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110729190612eec565b905090565b6000546001600160a01b031633146110a2576040516311a8a1bb60e31b815260040160405180910390fd5b476110ad8282611e76565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516110e891815260200190565b60405180910390a25050565b6000546001600160a01b0316331461111f576040516311a8a1bb60e31b815260040160405180910390fd5b611127611933565b600081815260096020526040812054900361117c5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a6d565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610ced9083815260200190565b6000546001600160a01b03163314610c59576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015611233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112579190613052565b61128e5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a6d565b61129661189b565b610c59611f94565b6010546001600160a01b031633146113025760405162461bcd60e51b815260206004820152602160248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e44456044820152602960f91b6064820152608401610a6d565b611343848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611fd792505050565b50505050565b6000546001600160a01b03163314611374576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611392575060025415155b156113b0576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036113de57604051634a2fb73f60e11b815260040160405180910390fd5b610feb816120d5565b6000546001600160a01b03163314611412576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610ced565b6000546001600160a01b0316331461148e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610ced565b6001546001600160a01b0316331461150d576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261151f9190613074565b1161153d5760405163d39c12bb60e01b815260040160405180910390fd5b600154610c59906001600160a01b0316612123565b6000546001600160a01b0316331461157d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115db5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a6d565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610ced565b6000805b92915050565b6000546001600160a01b0316331461165e576040516311a8a1bb60e31b815260040160405180910390fd5b610feb81612188565b336000908152600d602052604081205460ff166116b55760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610a6d565b63ffffffff8085166000908152600e60205260408120805491929190911690826116de83613087565b91906101000a81548163ffffffff021916908363ffffffff1602179055509050600061173d7f0000000000000000000000000000000000000000000000000000000000000000611734336001600160a01b031690565b84898989612206565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156117b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d791906130aa565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611809600184613074565b848760405161181b94939291906130ce565b60405180910390a1509093505050505b9392505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600354600160a01b900460ff1615610c595760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a6d565b8051156119265760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a6d565b61192f8261223e565b5050565b600354600160a01b900460ff16610c595760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a6d565b61198b611933565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260075403611a2a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a6d565b6002600755565b6000806000858152600f602052604090205460ff166002811115611a5757611a57612cdc565b14611a9a5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a6d565b611ace84846020806020026040519081016040528092919082602080028082843760009201919091525086915061226d9050565b949350505050565b6000848152600b602052604090205460ff1661134357611af583612313565b6000611b2b85846020806020026040519081016040528092919082602080028082843760009201919091525086915061226d9050565b9050838114611b725760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a6d565b506000848152600b60205260409020805460ff1916600117905550505050565b600080611b9f8382612448565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611bd762ffffff19831661246c565b63ffffffff1614611c195760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a6d565b6000611c2a62ffffff198316612481565b905060016000828152600f602052604090205460ff166002811115611c5157611c51612cdc565b14611c885760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a6d565b6000818152600f60205260409020805460ff19166002179055611ceb7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ed9565b5a1015611d235760405162461bcd60e51b8152600401610a6d906020808252600490820152632167617360e01b604082015260600190565b6000611d3462ffffff1984166124ca565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611d8f62ffffff1988166124db565b611d9e62ffffff1989166124ef565b611dad62ffffff198a16612504565b611dca611dbf62ffffff198c16612519565b62ffffff1916612547565b604051602401611ddd94939291906130f3565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611e17858560008685612590565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611e509088908b908690613122565b60405180910390a150505050505050919050565b611e6d81611832565b610feb8161261b565b80471015611ec65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a6d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611f13576040519150601f19603f3d011682016040523d82523d6000602084013e611f18565b606091505b5050905080611f8f5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a6d565b505050565b611f9c61189b565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119bb3390565b60115482906001600160a01b0380831691161461204a5760405162461bcd60e51b815260206004820152602b60248201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560448201526a1497d19493d357d493d3d560aa1b6064820152608401610a6d565b81516020146120855760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a6d565b61209661209183613143565b6126a9565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced82336040516120c7929190612f93565b60405180910390a150505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60055481036121cb5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a6d565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610ced565b60608686868686866040516020016122239695949392919061316a565b60405160208183030381529060405290509695505050505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681604051610ced91906131c4565b8260005b602081101561230b57600183821c16600085836020811061229457612294612fbd565b60200201519050816001036122d4576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350612301565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101612271565b509392505050565b806123565760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a6d565b6000818152600a602052604090205460ff16156123705750565b600081815260096020526040812054908190036123c65760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a6d565b6008546123d38243613074565b10156124215760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a6d565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b81516000906020840161246364ffffffffff851682846127d2565b95945050505050565b600061162d62ffffff1983166028600461280f565b6000806124978360781c6001600160601b031690565b6001600160601b0316905060006124b78460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061162d6124d88361283f565b90565b600061162d62ffffff19831682600461280f565b600061162d62ffffff1983166024600461280f565b600061162d62ffffff19831660046020612850565b600061162d604c61253781601886901c6001600160601b0316613074565b62ffffff1985169190600061295b565b606060008061255f8460181c6001600160601b031690565b6001600160601b03169050604051915081925061257f84836020016129d5565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff8111156125b6576125b6612c04565b6040519080825280601f01601f1916602001820160405280156125e0576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612601578692505b828152826000602083013e90999098509650505050505050565b6011546001600160a01b0316156126875760405162461bcd60e51b815260206004820152602a60248201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610a6d565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b806126e75760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a6d565b6000818152600960205260409020541561273a5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a6d565b6000818152600a602052604090205460ff161561278f5760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a6d565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610ced9083815260200190565b6000806127df8385612ed9565b90506040518111156127ef575060005b806000036128045762ffffff1991505061182b565b612463858585612ac8565b600061281c8260206131d7565b6128279060086131f0565b60ff16612835858585612850565b901c949350505050565b600061162d62ffffff198316602c60205b60008160ff166000036128655750600061182b565b6128788460181c6001600160601b031690565b6001600160601b031661288e60ff841685612ed9565b11156128f6576128a78460781c6001600160601b031690565b6128ba8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a6d565b60208260ff16111561291b5760405163045df3f960e01b815260040160405180910390fd5b6008820260006129348660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806129718660781c6001600160601b031690565b6001600160601b0316905061298586612b3f565b846129908784612ed9565b61299a9190612ed9565b11156129ad5762ffffff19915050611ace565b6129b78582612ed9565b90506129cb8364ffffffffff1682866127d2565b9695505050505050565b600062ffffff19808416036129fd5760405163148d513360e21b815260040160405180910390fd5b612a0683612b78565b15612a2457604051632ee0949160e11b815260040160405180910390fd5b6000612a398460181c6001600160601b031690565b6001600160601b031690506000612a598560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612a7a5760206060fd5b8386858560045afa905080612aa257604051632af1bd9b60e21b815260040160405180910390fd5b612abd612aaf8860d81c90565b64ffffffffff168786612ac8565b979650505050505050565b60006060601883856001600160601b03821682148015612af0575086816001600160601b0316145b612b295760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a6d565b96831b90961790911b90941790931b9392505050565b6000612b548260181c6001600160601b031690565b612b678360781c6001600160601b031690565b016001600160601b03169050919050565b6000612b848260d81c90565b64ffffffffff1664ffffffffff03612b9e57506001919050565b6000612ba983612b3f565b604051109392505050565b600060208284031215612bc657600080fd5b5035919050565b80356001600160a01b0381168114612be457600080fd5b919050565b600060208284031215612bfb57600080fd5b61182b82612bcd565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612c2b57600080fd5b813567ffffffffffffffff80821115612c4657612c46612c04565b604051601f8301601f19908116603f01168101908282118183101715612c6e57612c6e612c04565b81604052838152866020858801011115612c8757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612cb957600080fd5b813567ffffffffffffffff811115612cd057600080fd5b611ace84828501612c1a565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612d1457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612d3357600080fd5b853567ffffffffffffffff80821115612d4b57600080fd5b818801915088601f830112612d5f57600080fd5b813581811115612d6e57600080fd5b8960208260051b8501011115612d8357600080fd5b602092830197509550508601359250610440860187811115612da457600080fd5b94979396509194604001933592915050565b60008060008060608587031215612dcc57600080fd5b84359350612ddc60208601612bcd565b9250604085013567ffffffffffffffff80821115612df957600080fd5b818701915087601f830112612e0d57600080fd5b813581811115612e1c57600080fd5b886020828501011115612e2e57600080fd5b95989497505060200194505050565b803563ffffffff81168114612be457600080fd5b600060208284031215612e6357600080fd5b61182b82612e3d565b600080600060608486031215612e8157600080fd5b612e8a84612e3d565b925060208401359150604084013567ffffffffffffffff811115612ead57600080fd5b612eb986828701612c1a565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561162d5761162d612ec3565b600060208284031215612efe57600080fd5b5051919050565b60005b83811015612f20578181015183820152602001612f08565b50506000910152565b60008151808452612f41816020860160208601612f05565b601f01601f19169290920160200192915050565b606081526000612f686060830186612f29565b8281036020840152612f7a8186612f29565b91505060018060a01b0383166040830152949350505050565b604081526000612fa66040830185612f29565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612fea57600080fd5b9190910192915050565b6000808335601e1984360301811261300b57600080fd5b83018035915067ffffffffffffffff82111561302657600080fd5b60200191503681900382131561303b57600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561306457600080fd5b8151801515811461182b57600080fd5b8181038181111561162d5761162d612ec3565b600063ffffffff8083168181036130a0576130a0612ec3565b6001019392505050565b600080604083850312156130bd57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006129cb6080830184612f29565b600063ffffffff8087168352808616602084015250836040830152608060608301526129cb6080830184612f29565b83815282151560208201526060604082015260006124636060830184612f29565b80516020808301519190811015613164576000198160200360031b1b821691505b50919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516131b281604c850160208701612f05565b91909101604c01979650505050505050565b60208152600061182b6020830184612f29565b60ff828116828216039081111561162d5761162d612ec3565b60ff818116838216029081169081811461320c5761320c612ec3565b509291505056fea2646970667358221220288b470469166efbd9328a4ccbf173f1dbf9b05d5c36f523a3b69b6678453cd864736f6c63430008110033";

type PolygonSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonSpokeConnector__factory extends ContractFactory {
  constructor(...args: PolygonSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<PolygonSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonSpokeConnector {
    return super.attach(address) as PolygonSpokeConnector;
  }
  override connect(signer: Signer): PolygonSpokeConnector__factory {
    return super.connect(signer) as PolygonSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonSpokeConnectorInterface {
    return new utils.Interface(_abi) as PolygonSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PolygonSpokeConnector;
  }
}
