/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003a3838038062003a388339810160408190526200003591620003b2565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000317565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004669f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039557600080fd5b919050565b80516001600160a01b03811681146200039557600080fd5b6000806000806000806000806000806101408b8d031215620003d357600080fd5b620003de8b62000380565b9950620003ee60208c0162000380565b9850620003fe60408c016200039a565b97506200040e60608c016200039a565b96506200041e60808c016200039a565b955060a08b0151945060c08b0151935060e08b01519250620004446101008c016200039a565b9150620004556101208c016200039a565b90509295989b9194979a5092959850565b60805160a05160c05160e051610100516101205161014051613523620005156000396000818161031a0152611c0b0152600081816108e301528181611c2c0152611cb301526000818161070a01528181610a1d01528181610f480152611612015260006102aa0152600061056801526000818161089901528181610bc5015281816117d5015261206e0152600081816104af01528181610646015281816115b70152611b0d01526135236000f3fe60806040526004361061028c5760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d6114610887578063d7d317b3146108bb578063d88beda2146108d1578063db1b765914610905578063e0fed01014610925578063fa31de011461094557600080fd5b8063b95a2001146107c2578063c5b350df146107f5578063cc3942831461080a578063d1851c921461082a578063d232c22014610848578063d2a3cc711461086757600080fd5b8063a01892a511610113578063a01892a5146106f8578063a792c29b1461072c578063ad9c0c2e1461074c578063b1f8100d14610762578063b2f8764314610782578063b697f531146107a257600080fd5b80638456cb59146106225780638d3638f4146106375780638da5cb5b1461066a57806398c9f2b9146106885780639d3117c7146106b85780639fa92f9d146106e557600080fd5b80635190bc53116101fe5780635f61e3ec116101b75780635f61e3ec1461055657806365eaf11b146105a257806368742da6146105b75780636a42b8f8146105d75780636b04a933146105ed578063715018a61461060d57600080fd5b80635190bc531461047457806352a9674b1461049d578063572386ca146104d1578063579c1618146105015780635bd11efc146105175780635c975abb1461053757600080fd5b80632bbd59ca116102505780632bbd59ca1461039d578063301f07c3146103da5780633cf52ffb1461040a5780633f4ba83a1461041f5780634ff746f614610434578063508a109b1461045457600080fd5b806314168416146102985780631eeaabea146102e657806325e3beda14610308578063272efc691461034a5780632bb1ae7c1461038a57600080fd5b3661029357005b600080fd5b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102f257600080fd5b50610306610301366004612dee565b610965565b005b34801561031457600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102dd565b34801561035657600080fd5b5061037a610365366004612e1c565b600d6020526000908152604090205460ff1681565b60405190151581526020016102dd565b610306610398366004612edc565b6109da565b3480156103a957600080fd5b506103cd6103b8366004612dee565b600f6020526000908152604090205460ff1681565b6040516102dd9190612f27565b3480156103e657600080fd5b5061037a6103f5366004612dee565b600a6020526000908152604090205460ff1681565b34801561041657600080fd5b5060025461033c565b34801561042b57600080fd5b50610306610b7d565b34801561044057600080fd5b5061030661044f366004612edc565b610bba565b34801561046057600080fd5b5061030661046f366004612f4f565b610c60565b34801561048057600080fd5b5061037a61048f366004612e1c565b6001600160a01b0316301490565b3480156104a957600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104dd57600080fd5b5061037a6104ec366004612dee565b600c6020526000908152604090205460ff1681565b34801561050d57600080fd5b5061033c60055481565b34801561052357600080fd5b50610306610532366004612e1c565b610f0d565b34801561054357600080fd5b50600354600160a01b900460ff1661037a565b34801561056257600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102dd565b3480156105ae57600080fd5b5061033c610f44565b3480156105c357600080fd5b506103066105d2366004612e1c565b610fcd565b3480156105e357600080fd5b5062093a8061033c565b3480156105f957600080fd5b50610306610608366004612dee565b61104a565b34801561061957600080fd5b50610306611115565b34801561062e57600080fd5b50610306611140565b34801561064357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561067657600080fd5b506000546001600160a01b031661058a565b34801561069457600080fd5b5061037a6106a3366004612dee565b600b6020526000908152604090205460ff1681565b3480156106c457600080fd5b5061033c6106d3366004612dee565b60096020526000908152604090205481565b3480156106f157600080fd5b503061058a565b34801561070457600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561073857600080fd5b5060045461058a906001600160a01b031681565b34801561075857600080fd5b5061033c60085481565b34801561076e57600080fd5b5061030661077d366004612e1c565b6111f4565b34801561078e57600080fd5b5061030661079d366004612e1c565b611292565b3480156107ae57600080fd5b506103066107bd366004612e1c565b61130e565b3480156107ce57600080fd5b506102cc6107dd366004612fff565b600e6020526000908152604090205463ffffffff1681565b34801561080157600080fd5b5061030661138d565b34801561081657600080fd5b5060035461058a906001600160a01b031681565b34801561083657600080fd5b506001546001600160a01b031661058a565b34801561085457600080fd5b506000546001600160a01b03161561037a565b34801561087357600080fd5b50610306610882366004612e1c565b6113fd565b34801561089357600080fd5b5061058a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108c757600080fd5b5061033c60065481565b3480156108dd57600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561091157600080fd5b5061037a610920366004612e1c565b6114d4565b34801561093157600080fd5b50610306610940366004612dee565b6114e5565b34801561095157600080fd5b5061033c61096036600461301a565b611519565b6000546001600160a01b03163314610990576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109d55760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b6109e26116e1565b436005546006546109f39190613087565b1115610a12576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d919061309a565b6000818152600c602052604090205490915060ff1615610af35760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109cc565b600081604051602001610b0891815260200190565b6040516020818303038152906040529050610b23818461172e565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b7090839086903390613103565b60405180910390a1505050565b6000546001600160a01b03163314610ba8576040516311a8a1bb60e31b815260040160405180910390fd5b610bb0611847565b610bb8611897565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c1b5760405162461bcd60e51b81526004016109cc9060208082526004908201526310a0a6a160e11b604082015260600190565b610c24816118ec565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610c55929190613141565b60405180910390a150565b610c686116e1565b83610c9f5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109cc565b600085856000818110610cb457610cb461316b565b9050602002810190610cc69190613181565b610cd090806131a2565b604051610cde9291906131f0565b604051809103902090506000610d458288886000818110610d0157610d0161316b565b9050602002810190610d139190613181565b60200189896000818110610d2957610d2961316b565b9050602002810190610d3b9190613181565b610420013561198c565b9050610d5381868686611a31565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610e775787878263ffffffff16818110610d9657610d9661316b565b9050602002810190610da89190613181565b610db290806131a2565b604051610dc09291906131f0565b604051809103902092506000610e15848a8a8563ffffffff16818110610de857610de861316b565b9050602002810190610dfa9190613181565b6020018b8b8663ffffffff16818110610d2957610d2961316b565b9050828114610e545760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109cc565b506000838152600f60205260409020805460ff1916600190811790915501610d70565b5060005b63ffffffff8116871115610f0357610efa88888363ffffffff16818110610ea457610ea461316b565b9050602002810190610eb69190613181565b610ec090806131a2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611aee92505050565b50600101610e7b565b5050505050505050565b6000546001600160a01b03163314610f38576040516311a8a1bb60e31b815260040160405180910390fd5b610f4181611dea565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc8919061309a565b905090565b6000546001600160a01b03163314610ff8576040516311a8a1bb60e31b815260040160405180910390fd5b476110038282611e53565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161103e91815260200190565b60405180910390a25050565b6000546001600160a01b03163314611075576040516311a8a1bb60e31b815260040160405180910390fd5b61107d611847565b60008181526009602052604081205490036110d25760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109cc565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610c559083815260200190565b6000546001600160a01b03163314610bb8576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015611189573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ad9190613200565b6111e45760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109cc565b6111ec6116e1565b610bb8611f71565b6000546001600160a01b0316331461121f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561123d575060025415155b1561125b576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361128957604051634a2fb73f60e11b815260040160405180910390fd5b610f4181611fb4565b6000546001600160a01b031633146112bd576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610c55565b6000546001600160a01b03163314611339576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610c55565b6001546001600160a01b031633146113b8576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426113ca9190613222565b116113e85760405163d39c12bb60e01b815260040160405180910390fd5b600154610bb8906001600160a01b0316612002565b6000546001600160a01b03163314611428576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036114865760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109cc565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610c55565b60006114df82612067565b92915050565b6000546001600160a01b03163314611510576040516311a8a1bb60e31b815260040160405180910390fd5b610f41816120ad565b336000908152600d602052604081205460ff166115675760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016109cc565b63ffffffff8085166000908152600e602052604081208054919291909116908261159083613235565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006115ec7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b031660001b8489898961212b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116869190613258565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836116b8600184613222565b84876040516116ca949392919061327c565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610bb85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109cc565b80511561176c5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109cc565b6000634ff746f660e01b8360405160240161178791906132a1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a9261181092919091169085906004016132b4565b600060405180830381600087803b15801561182a57600080fd5b505af115801561183e573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610bb85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109cc565b61189f611847565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611901906001600160a01b0316612067565b6119405760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016109cc565b805160201461197b5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109cc565b610f41611987826132d8565b612163565b6000806000858152600f602052604090205460ff1660028111156119b2576119b2612f11565b146119f55760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109cc565b611a2984846020806020026040519081016040528092919082602080028082843760009201919091525086915061228c9050565b949350505050565b6000848152600b602052604090205460ff16611ae857611a5083612332565b6000611a8685846020806020026040519081016040528092919082602080028082843760009201919091525086915061228c9050565b9050838114611acd5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109cc565b506000848152600b60205260409020805460ff191660011790555b50505050565b6000611af8612467565b6000611b0483826124c0565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611b3c62ffffff1983166124e4565b63ffffffff1614611b7e5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109cc565b6000611b8f62ffffff1983166124f9565b905060016000828152600f602052604090205460ff166002811115611bb657611bb6612f11565b14611bed5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109cc565b6000818152600f60205260409020805460ff19166002179055611c507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613087565b5a1015611c885760405162461bcd60e51b81526004016109cc906020808252600490820152632167617360e01b604082015260600190565b6000611c9962ffffff198416612542565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611cf662ffffff198916612553565b611d0562ffffff198a16612567565b611d1462ffffff198b1661257c565b611d31611d2662ffffff198d16612591565b62ffffff19166125bf565b604051602401611d4494939291906132fc565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611d8d578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611dcb9392919061332b565b60405180910390a15050505050505050611de56001600755565b919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611ea35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611ef0576040519150601f19603f3d011682016040523d82523d6000602084013e611ef5565b606091505b5050905080611f6c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109cc565b505050565b611f796116e1565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118cf3390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006120927f0000000000000000000000000000000000000000000000000000000000000000612608565b6001600160a01b0316826001600160a01b0316149050919050565b60055481036120f05760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109cc565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610c55565b60608686868686866040516020016121489695949392919061334c565b60405160208183030381529060405290509695505050505050565b806121a15760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109cc565b600081815260096020526040902054156121f45760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109cc565b6000818152600a602052604090205460ff16156122495760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109cc565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610c559083815260200190565b8260005b602081101561232a57600183821c1660008583602081106122b3576122b361316b565b60200201519050816001036122f3576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350612320565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101612290565b509392505050565b806123755760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109cc565b6000818152600a602052604090205460ff161561238f5750565b600081815260096020526040812054908190036123e55760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109cc565b6008546123f28243613222565b10156124405760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109cc565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b6002600754036124b95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109cc565b6002600755565b8151600090602084016124db64ffffffffff85168284612692565b95945050505050565b60006114df62ffffff198316602860046126d9565b60008061250f8360781c6001600160601b031690565b6001600160601b03169050600061252f8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006114df61255083612709565b90565b60006114df62ffffff1983168260046126d9565b60006114df62ffffff198316602460046126d9565b60006114df62ffffff1983166004602061271a565b60006114df604c6125af81601886901c6001600160601b0316613222565b62ffffff19851691906000612876565b60606000806125d78460181c6001600160601b031690565b6001600160601b0316905060405191508192506125f784836020016128f0565b508181016020016040529052919050565b600061261382612a90565b6126305760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561266e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114df91906133a6565b60008061269f8385613087565b90506040518111156126af575060005b806000036126c45762ffffff199150506116da565b5050606092831b9190911790911b1760181b90565b60006126e68260206133c3565b6126f19060086133dc565b60ff166126ff85858561271a565b901c949350505050565b60006114df62ffffff198316602c60205b60008160ff1660000361272f575060006116da565b6127428460181c6001600160601b031690565b6001600160601b031661275860ff841685613087565b11156127bc576127a36127748560781c6001600160601b031690565b6001600160601b03166127908660181c6001600160601b031690565b6001600160601b0316858560ff16612af4565b60405162461bcd60e51b81526004016109cc91906132a1565b60208260ff1611156128365760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016109cc565b60088202600061284f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60008061288c8660781c6001600160601b031690565b6001600160601b031690506128a086612b62565b846128ab8784613087565b6128b59190613087565b11156128c85762ffffff19915050611a29565b6128d28582613087565b90506128e68364ffffffffff168286612692565b9695505050505050565b600062ffffff19808416036129585760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016109cc565b61296183612b9b565b6129c15760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016109cc565b60006129d68460181c6001600160601b031690565b6001600160601b0316905060006129f68560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612a175760206060fd5b8386858560045afa905080612a5d5760405162461bcd60e51b815260206004820152600c60248201526b6964656e74697479204f4f4760a01b60448201526064016109cc565b612a85612a6a8860d81c90565b64ffffffffff60601b606091821b168817901b851760181b90565b979650505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ad0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114df9190613200565b60606000612b0186612bd8565b9150506000612b0f86612bd8565b9150506000612b1d86612bd8565b9150506000612b2b86612bd8565b91505083838383604051602001612b4594939291906133ff565b604051602081830303815290604052945050505050949350505050565b6000612b778260181c6001600160601b031690565b612b8a8360781c6001600160601b031690565b016001600160601b03169050919050565b6000612ba78260d81c90565b64ffffffffff1664ffffffffff03612bc157506000919050565b6000612bcc83612b62565b60405110199392505050565b600080601f5b600f811115612c24576000612bf48260086134d6565b85901c9050612c0281612c74565b61ffff168417935081601014612c1a57601084901b93505b5060001901612bde565b50600f5b60ff811015612c6e576000612c3e8260086134d6565b85901c9050612c4c81612c74565b61ffff168317925081600014612c6457601083901b92505b5060001901612c28565b50915091565b6000612c8660048360ff16901c612ca1565b60081b61ff00169050612c9882612ca1565b60ff1617919050565b600060f08083179060ff82169003612cbc5750603092915050565b8060ff1660f103612cd05750603192915050565b8060ff1660f203612ce45750603292915050565b8060ff1660f303612cf85750603392915050565b8060ff1660f403612d0c5750603492915050565b8060ff1660f503612d205750603592915050565b8060ff1660f603612d345750603692915050565b8060ff1660f703612d485750603792915050565b8060ff1660f803612d5c5750603892915050565b8060ff1660f903612d705750603992915050565b8060ff1660fa03612d845750606192915050565b8060ff1660fb03612d985750606292915050565b8060ff1660fc03612dac5750606392915050565b8060ff1660fd03612dc05750606492915050565b8060ff1660fe03612dd45750606592915050565b8060ff1660ff03612de85750606692915050565b50919050565b600060208284031215612e0057600080fd5b5035919050565b6001600160a01b0381168114610f4157600080fd5b600060208284031215612e2e57600080fd5b81356116da81612e07565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612e6057600080fd5b813567ffffffffffffffff80821115612e7b57612e7b612e39565b604051601f8301601f19908116603f01168101908282118183101715612ea357612ea3612e39565b81604052838152866020858801011115612ebc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612eee57600080fd5b813567ffffffffffffffff811115612f0557600080fd5b611a2984828501612e4f565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612f4957634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612f6857600080fd5b853567ffffffffffffffff80821115612f8057600080fd5b818801915088601f830112612f9457600080fd5b813581811115612fa357600080fd5b8960208260051b8501011115612fb857600080fd5b602092830197509550508601359250610440860187811115612fd957600080fd5b94979396509194604001933592915050565b803563ffffffff81168114611de557600080fd5b60006020828403121561301157600080fd5b6116da82612feb565b60008060006060848603121561302f57600080fd5b61303884612feb565b925060208401359150604084013567ffffffffffffffff81111561305b57600080fd5b61306786828701612e4f565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156114df576114df613071565b6000602082840312156130ac57600080fd5b5051919050565b60005b838110156130ce5781810151838201526020016130b6565b50506000910152565b600081518084526130ef8160208601602086016130b3565b601f01601f19169290920160200192915050565b60608152600061311660608301866130d7565b828103602084015261312881866130d7565b91505060018060a01b0383166040830152949350505050565b60408152600061315460408301856130d7565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261319857600080fd5b9190910192915050565b6000808335601e198436030181126131b957600080fd5b83018035915067ffffffffffffffff8211156131d457600080fd5b6020019150368190038213156131e957600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561321257600080fd5b815180151581146116da57600080fd5b818103818111156114df576114df613071565b600063ffffffff80831681810361324e5761324e613071565b6001019392505050565b6000806040838503121561326b57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006128e660808301846130d7565b6020815260006116da60208301846130d7565b6001600160a01b0383168152604060208201819052600090611a29908301846130d7565b80516020808301519190811015612de85760001960209190910360031b1b16919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526128e660808301846130d7565b83815282151560208201526060604082015260006124db60608301846130d7565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161339481604c8501602087016130b3565b91909101604c01979650505050505050565b6000602082840312156133b857600080fd5b81516116da81612e07565b60ff82811682821603908111156114df576114df613071565b60ff81811683821602908116908181146133f8576133f8613071565b5092915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016128e6565b80820281158282048414176114df576114df61307156fea264697066735822122019feb5dad5276cda2f7f95a03ddb287f5f626fb572e1ed17a788ee573245be5a64736f6c63430008110033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
