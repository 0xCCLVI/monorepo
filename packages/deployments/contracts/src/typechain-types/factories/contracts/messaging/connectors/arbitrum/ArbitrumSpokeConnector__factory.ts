/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "AliasedSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "SnapshotRootSaved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aliasedSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastCompletedSnapshotId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snapshotRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003eae38038062003eae8339810160408190526200003591620004ae565b89898989898989898989808a8a8a8a8a6200005033620002bd565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000322565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620002ad95508b9450506200039692505050565b5050505050505050505062000587565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6200032d8162000396565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60a0516040516326ddea8360e11b81526001600160a01b038381166004830152600060248301819052921690634dbbd50690604401602060405180830381865afa158015620003e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040f919062000562565b601154604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1601180546001600160a01b0319166001600160a01b039290921691909117905550565b805163ffffffff811681146200049157600080fd5b919050565b80516001600160a01b03811681146200049157600080fd5b6000806000806000806000806000806101408b8d031215620004cf57600080fd5b620004da8b6200047c565b9950620004ea60208c016200047c565b9850620004fa60408c0162000496565b97506200050a60608c0162000496565b96506200051a60808c0162000496565b955060a08b0151945060c08b0151935060e08b01519250620005406101008c0162000496565b9150620005516101208c0162000496565b90509295989b9194979a5092959850565b6000602082840312156200057557600080fd5b620005808262000496565b9392505050565b60805160a05160c05160e05161010051610120516101405161386a620006446000396000818161035b0152611f3001526000818161098801528181611f510152611fde01526000818161079801528181610b050152818161102f0152818161166f0152818161170b0152611868015260006102eb015260006105de01526000818161093e01528181611a68015281816123840152612c4c015260008181610525015281816106d40152818161180a0152611e30015261386a6000f3fe6080604052600436106102cd5760003560e01c80638456cb5911610175578063b95a2001116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610976578063db1b7659146109aa578063e0fed010146109ca578063fa31de01146109ea57600080fd5b8063d2a3cc711461090c578063d69f9d611461092c578063d7d317b31461096057600080fd5b8063b95a200114610850578063c5b350df14610883578063cc39428314610898578063d1745e4f146108b8578063d1851c92146108cf578063d232c220146108ed57600080fd5b8063a01892a51161012e578063a01892a514610786578063a792c29b146107ba578063ad9c0c2e146107da578063b1f8100d146107f0578063b2f8764314610810578063b697f5311461083057600080fd5b80638456cb59146106b05780638d3638f4146106c55780638da5cb5b146106f857806398c9f2b9146107165780639d3117c7146107465780639fa92f9d1461077357600080fd5b806351cc57cc116102345780635f61e3ec116101ed57806368742da6116101c757806368742da6146106455780636a42b8f8146106655780636b04a9331461067b578063715018a61461069b57600080fd5b80635f61e3ec146105cc5780636159ada11461060057806365eaf11b1461063057600080fd5b806351cc57cc146104e657806352a9674b14610513578063572386ca14610547578063579c1618146105775780635bd11efc1461058d5780635c975abb146105ad57600080fd5b8063361d88ac11610286578063361d88ac1461041b5780633cf52ffb146104535780633f4ba83a146104685780634ff746f61461047d578063508a109b1461049d5780635190bc53146104bd57600080fd5b806314168416146102d95780631eeaabea1461032757806325e3beda146103495780632bb1ae7c1461038b5780632bbd59ca1461039e578063301f07c3146103db57600080fd5b366102d457005b600080fd5b3480156102e557600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561033357600080fd5b506103476103423660046131f8565b610a18565b005b34801561035557600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161031e565b6103476103993660046132b4565b610ac2565b3480156103aa57600080fd5b506103ce6103b93660046131f8565b600f6020526000908152604090205460ff1681565b60405161031e91906132ff565b3480156103e757600080fd5b5061040b6103f63660046131f8565b600a6020526000908152604090205460ff1681565b604051901515815260200161031e565b34801561042757600080fd5b5060115461043b906001600160a01b031681565b6040516001600160a01b03909116815260200161031e565b34801561045f57600080fd5b5060025461037d565b34801561047457600080fd5b50610347610c65565b34801561048957600080fd5b506103476104983660046132b4565b610ca2565b3480156104a957600080fd5b506103476104b8366004613327565b610d32565b3480156104c957600080fd5b5061040b6104d83660046133d8565b6001600160a01b0316301490565b3480156104f257600080fd5b5061037d6105013660046131f8565b60106020526000908152604090205481565b34801561051f57600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055357600080fd5b5061040b6105623660046131f8565b600c6020526000908152604090205460ff1681565b34801561058357600080fd5b5061037d60055481565b34801561059957600080fd5b506103476105a83660046133d8565b610ff4565b3480156105b957600080fd5b50600354600160a01b900460ff1661040b565b3480156105d857600080fd5b5061043b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561060c57600080fd5b5061040b61061b3660046133d8565b600d6020526000908152604090205460ff1681565b34801561063c57600080fd5b5061037d61102b565b34801561065157600080fd5b506103476106603660046133d8565b6110b4565b34801561067157600080fd5b5062093a8061037d565b34801561068757600080fd5b506103476106963660046131f8565b611131565b3480156106a757600080fd5b506103476111fc565b3480156106bc57600080fd5b50610347611227565b3480156106d157600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061030d565b34801561070457600080fd5b506000546001600160a01b031661043b565b34801561072257600080fd5b5061040b6107313660046131f8565b600b6020526000908152604090205460ff1681565b34801561075257600080fd5b5061037d6107613660046131f8565b60096020526000908152604090205481565b34801561077f57600080fd5b503061043b565b34801561079257600080fd5b5061043b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107c657600080fd5b5060045461043b906001600160a01b031681565b3480156107e657600080fd5b5061037d60085481565b3480156107fc57600080fd5b5061034761080b3660046133d8565b6112db565b34801561081c57600080fd5b5061034761082b3660046133d8565b611379565b34801561083c57600080fd5b5061034761084b3660046133d8565b6113f5565b34801561085c57600080fd5b5061030d61086b36600461340e565b600e6020526000908152604090205463ffffffff1681565b34801561088f57600080fd5b50610347611474565b3480156108a457600080fd5b5060035461043b906001600160a01b031681565b3480156108c457600080fd5b50610708420461037d565b3480156108db57600080fd5b506001546001600160a01b031661043b565b3480156108f957600080fd5b506000546001600160a01b03161561040b565b34801561091857600080fd5b506103476109273660046133d8565b6114e4565b34801561093857600080fd5b5061043b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561096c57600080fd5b5061037d60065481565b34801561098257600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156109b657600080fd5b5061040b6109c53660046133d8565b6115bb565b3480156109d657600080fd5b506103476109e53660046131f8565b6115cc565b3480156109f657600080fd5b50610a0a610a05366004613429565b611600565b60405161031e9291906134d0565b6000546001600160a01b03163314610a43576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a885760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610aca611939565b43600554600654610adb91906134ff565b1115610afa576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190613512565b6000818152600c602052604090205490915060ff1615610bdb5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a7f565b600081604051602001610bf091815260200190565b6040516020818303038152906040529050610c0b8184611986565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610c589083908690339061352b565b60405180910390a1505050565b6000546001600160a01b03163314610c90576040516311a8a1bb60e31b815260040160405180910390fd5b610c98611ada565b610ca0611b2a565b565b6011546001600160a01b03163314610ced5760405162461bcd60e51b815260206004820152600e60248201526d10b0b634b0b9b2b229b2b73232b960911b6044820152606401610a7f565b610cf681611b7f565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d27929190613569565b60405180910390a150565b610d3a611939565b610d42611c1f565b83610d795760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a7f565b600085856000818110610d8e57610d8e613593565b9050602002810190610da091906135a9565b610daa90806135ca565b604051610db8929190613618565b604051809103902090506000610e1f8288886000818110610ddb57610ddb613593565b9050602002810190610ded91906135a9565b60200189896000818110610e0357610e03613593565b9050602002810190610e1591906135a9565b6104200135611c78565b9050610e2d81868686611d1f565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610f535788888263ffffffff16818110610e7257610e72613593565b9050602002810190610e8491906135a9565b610e8e90806135ca565b604051610e9c929190613618565b604051809103902093506000610ef1858b8b8563ffffffff16818110610ec457610ec4613593565b9050602002810190610ed691906135a9565b6020018c8c8663ffffffff16818110610e0357610e03613593565b9050838114610f305760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a7f565b506000848152600f60205260409020805460ff1916600190811790915501610e4c565b5060005b818163ffffffff161015610fdf57610fd689898363ffffffff16818110610f8057610f80613593565b9050602002810190610f9291906135a9565b610f9c90806135ca565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e1a92505050565b50600101610f57565b50505050610fed6001600755565b5050505050565b6000546001600160a01b0316331461101f576040516311a8a1bb60e31b815260040160405180910390fd5b611028816120f7565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110af9190613512565b905090565b6000546001600160a01b031633146110df576040516311a8a1bb60e31b815260040160405180910390fd5b476110ea8282612169565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161112591815260200190565b60405180910390a25050565b6000546001600160a01b0316331461115c576040516311a8a1bb60e31b815260040160405180910390fd5b611164611ada565b60008181526009602052604081205490036111b95760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a7f565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d279083815260200190565b6000546001600160a01b03163314610ca0576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015611270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112949190613628565b6112cb5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a7f565b6112d3611939565b610ca0612287565b6000546001600160a01b03163314611306576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611324575060025415155b15611342576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361137057604051634a2fb73f60e11b815260040160405180910390fd5b611028816122ca565b6000546001600160a01b031633146113a4576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d27565b6000546001600160a01b03163314611420576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d27565b6001546001600160a01b0316331461149f576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114b1919061364a565b116114cf576040516324e0285f60e21b815260040160405180910390fd5b600154610ca0906001600160a01b0316612318565b6000546001600160a01b0316331461150f576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361156d5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a7f565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d27565b60006115c68261237d565b92915050565b6000546001600160a01b031633146115f7576040516311a8a1bb60e31b815260040160405180910390fd5b611028816123c3565b336000908152600d602052604081205460609060ff166116515760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a7f565b610708420460008181526010602052604081205490036117ba5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ef9190613512565b90508060106000848152602001908152602001600020819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611767573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178b9190613512565b604051829084907f7ab06ac7a4d1b913d3302154561c33502bc3786196bf36757232034393d6143890600090a4505b63ffffffff8087166000908152600e60205260408120805491929190911690826117e38361365d565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006118427f0000000000000000000000000000000000000000000000000000000000000000611839336001600160a01b031690565b848b8b8b612441565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156118b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118dc9190613680565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361190e60018461364a565b848760405161192094939291906136a4565b60405180910390a1509099919850909650505050505050565b600354600160a01b900460ff1615610ca05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a7f565b81516020146119c15760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a7f565b8051156119ff5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a7f565b6000634ff746f660e01b83604051602401611a1a91906136d3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a92611aa392919091169085906004016136e6565b600060405180830381600087803b158015611abd57600080fd5b505af1158015611ad1573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610ca05760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a7f565b611b32611ada565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611b94906001600160a01b031661237d565b611bd35760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610a7f565b8051602014611c0e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a7f565b611028611c1a8261370a565b612479565b600260075403611c715760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a7f565b6002600755565b6000806000858152600f602052604090205460ff166002811115611c9e57611c9e6132e9565b14611ce15760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a7f565b611d158484602080602002604051908101604052809291908260208002808284376000920191909152508691506125a29050565b90505b9392505050565b6000848152600b602052604090205460ff16611e1457611d3e836128f0565b6000611d748584602080602002604051908101604052809291908260208002808284376000920191909152508691506125a29050565b9050838114611dbb5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a7f565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611e0a9086815260200190565b60405180910390a3505b50505050565b600080611e278382612a50565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611e5f62ffffff198316612a74565b63ffffffff1614611ea15760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a7f565b6000611eb262ffffff198316612a89565b905060016000828152600f602052604090205460ff166002811115611ed957611ed96132e9565b14611f105760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a7f565b6000818152600f60205260409020805460ff191660021790556001611f757f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006134ff565b611f7f919061364a565b5a11611fb65760405162461bcd60e51b8152600401610a7f906020808252600490820152632167617360e01b604082015260600190565b6000611fc762ffffff198416612ad2565b6040805161010080825261012082019092529192507f00000000000000000000000000000000000000000000000000000000000000009160009082602082018180368337019050509050600061202262ffffff198816612ae3565b61203162ffffff198916612af7565b61204062ffffff198a16612b0c565b61205d61205262ffffff198c16612b21565b62ffffff1916612b4f565b6040516024016120709493929190613731565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17905290506120aa858560008685612b98565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48906120e39088908b908690613760565b60405180910390a150505050505050919050565b61210081612c23565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156121b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a7f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612206576040519150601f19603f3d011682016040523d82523d6000602084013e61220b565b606091505b50509050806122825760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a7f565b505050565b61228f611939565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b623390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006123a87f0000000000000000000000000000000000000000000000000000000000000000612d26565b6001600160a01b0316826001600160a01b0316149050919050565b60055481036124065760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a7f565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d27565b606086868686868660405160200161245e96959493929190613781565b60405160208183030381529060405290509695505050505050565b806124b75760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a7f565b6000818152600960205260409020541561250a5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a7f565b6000818152600a602052604090205460ff161561255f5760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a7f565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d279083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806129335760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a7f565b6000818152600a602052604090205460ff161561294d5750565b600081815260096020526040812054908190036129a35760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a7f565b6008546129b0824361364a565b10156129fe5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a7f565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612a6b64ffffffffff85168284612db0565b95945050505050565b60006115c662ffffff19831660286004612ded565b600080612a9f8360781c6001600160601b031690565b6001600160601b031690506000612abf8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115c6612ae083612e1d565b90565b60006115c662ffffff198316826004612ded565b60006115c662ffffff19831660246004612ded565b60006115c662ffffff19831660046020612e2e565b60006115c6604c612b3f81601886901c6001600160601b031661364a565b62ffffff19851691906000612f39565b6060600080612b678460181c6001600160601b031690565b6001600160601b031690506040519150819250612b878483602001612fb5565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612bbe57612bbe613211565b6040519080825280601f01601f191660200182016040528015612be8576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612c09578692505b828152826000602083013e90999098509650505050505050565b6040516326ddea8360e11b81526001600160a01b038281166004830152600060248301819052917f000000000000000000000000000000000000000000000000000000000000000090911690634dbbd50690604401602060405180830381865afa158015612c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cb991906137db565b601154604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1601180546001600160a01b0319166001600160a01b039290921691909117905550565b6000612d31826130a8565b612d4e5760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c691906137db565b600080612dbd83856134ff565b9050604051811115612dcd575060005b80600003612de25762ffffff19915050611d18565b612a6b85858561310c565b6000612dfa8260206137f8565b612e05906008613811565b60ff16612e13858585612e2e565b901c949350505050565b60006115c662ffffff198316602c60205b60008160ff16600003612e4357506000611d18565b612e568460181c6001600160601b031690565b6001600160601b0316612e6c60ff8416856134ff565b1115612ed457612e858460781c6001600160601b031690565b612e988560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a7f565b60208260ff161115612ef95760405163045df3f960e01b815260040160405180910390fd5b600882026000612f128660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612f4f8660781c6001600160601b031690565b6001600160601b03169050612f6386613183565b84612f6e87846134ff565b612f7891906134ff565b1115612f8b5762ffffff19915050612fad565b612f9585826134ff565b9050612fa98364ffffffffff168286612db0565b9150505b949350505050565b600062ffffff1980841603612fdd5760405163148d513360e21b815260040160405180910390fd5b612fe6836131bc565b1561300457604051632ee0949160e11b815260040160405180910390fd5b60006130198460181c6001600160601b031690565b6001600160601b0316905060006130398560781c6001600160601b031690565b6001600160601b0316905060008060405191508582111561305a5760206060fd5b8386858560045afa90508061308257604051632af1bd9b60e21b815260040160405180910390fd5b61309d61308f8860d81c90565b64ffffffffff16878661310c565b979650505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c69190613628565b60006060601883856001600160601b03821682148015613134575086816001600160601b0316145b61316d5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a7f565b96831b90961790911b90941790931b9392505050565b60006131988260181c6001600160601b031690565b6131ab8360781c6001600160601b031690565b016001600160601b03169050919050565b60006131c88260d81c90565b64ffffffffff1664ffffffffff036131e257506001919050565b60006131ed83613183565b604051109392505050565b60006020828403121561320a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261323857600080fd5b813567ffffffffffffffff8082111561325357613253613211565b604051601f8301601f19908116603f0116810190828211818310171561327b5761327b613211565b8160405283815286602085880101111561329457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156132c657600080fd5b813567ffffffffffffffff8111156132dd57600080fd5b612fad84828501613227565b634e487b7160e01b600052602160045260246000fd5b602081016003831061332157634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561334057600080fd5b853567ffffffffffffffff8082111561335857600080fd5b818801915088601f83011261336c57600080fd5b81358181111561337b57600080fd5b8960208260051b850101111561339057600080fd5b6020928301975095505086013592506104408601878111156133b157600080fd5b94979396509194604001933592915050565b6001600160a01b038116811461102857600080fd5b6000602082840312156133ea57600080fd5b8135611d18816133c3565b803563ffffffff8116811461340957600080fd5b919050565b60006020828403121561342057600080fd5b611d18826133f5565b60008060006060848603121561343e57600080fd5b613447846133f5565b925060208401359150604084013567ffffffffffffffff81111561346a57600080fd5b61347686828701613227565b9150509250925092565b60005b8381101561349b578181015183820152602001613483565b50506000910152565b600081518084526134bc816020860160208601613480565b601f01601f19169290920160200192915050565b828152604060208201526000611d1560408301846134a4565b634e487b7160e01b600052601160045260246000fd5b808201808211156115c6576115c66134e9565b60006020828403121561352457600080fd5b5051919050565b60608152600061353e60608301866134a4565b828103602084015261355081866134a4565b91505060018060a01b0383166040830152949350505050565b60408152600061357c60408301856134a4565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126135c057600080fd5b9190910192915050565b6000808335601e198436030181126135e157600080fd5b83018035915067ffffffffffffffff8211156135fc57600080fd5b60200191503681900382131561361157600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561363a57600080fd5b81518015158114611d1857600080fd5b818103818111156115c6576115c66134e9565b600063ffffffff808316818103613676576136766134e9565b6001019392505050565b6000806040838503121561369357600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006136c960808301846134a4565b9695505050505050565b602081526000611d1860208301846134a4565b6001600160a01b0383168152604060208201819052600090611d15908301846134a4565b8051602080830151919081101561372b576000198160200360031b1b821691505b50919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526136c960808301846134a4565b8381528215156020820152606060408201526000612a6b60608301846134a4565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c83015282516137c981604c850160208701613480565b91909101604c01979650505050505050565b6000602082840312156137ed57600080fd5b8151611d18816133c3565b60ff82811682821603908111156115c6576115c66134e9565b60ff818116838216029081169081811461382d5761382d6134e9565b509291505056fea26469706673582212209fb772c4b468eb9b67df87ca151b83140ad085df135b8e86999ee9fda0f0b6b064736f6c63430008110033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
