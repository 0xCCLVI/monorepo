/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "AliasedSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aliasedSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003d6238038062003d628339810160408190526200003591620004ae565b89898989898989898989808a8a8a8a8a6200005033620002bd565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000322565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620002ad95508b9450506200039692505050565b5050505050505050505062000587565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6200032d8162000396565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60a0516040516326ddea8360e11b81526001600160a01b038381166004830152600060248301819052921690634dbbd50690604401602060405180830381865afa158015620003e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040f919062000562565b601054604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1601080546001600160a01b0319166001600160a01b039290921691909117905550565b805163ffffffff811681146200049157600080fd5b919050565b80516001600160a01b03811681146200049157600080fd5b6000806000806000806000806000806101408b8d031215620004cf57600080fd5b620004da8b6200047c565b9950620004ea60208c016200047c565b9850620004fa60408c0162000496565b97506200050a60608c0162000496565b96506200051a60808c0162000496565b955060a08b0151945060c08b0151935060e08b01519250620005406101008c0162000496565b9150620005516101208c0162000496565b90509295989b9194979a5092959850565b6000602082840312156200057557600080fd5b620005808262000496565b9392505050565b60805160a05160c05160e05161010051610120516101405161372c62000636600039600081816103250152611df201526000818161090e01528181611e130152611ea001526000818161073501528181610a8b01528181610fb5015261172b015260006102b50152600061057b0152600081816108c40152818161192a015281816122460152612b0e0152600081816104c201528181610671015281816116cd0152611cf2015261372c6000f3fe6080604052600436106102975760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d61146108b2578063d7d317b3146108e6578063d88beda2146108fc578063db1b765914610930578063e0fed01014610950578063fa31de011461097057600080fd5b8063b95a2001146107ed578063c5b350df14610820578063cc39428314610835578063d1851c9214610855578063d232c22014610873578063d2a3cc711461089257600080fd5b8063a01892a511610113578063a01892a514610723578063a792c29b14610757578063ad9c0c2e14610777578063b1f8100d1461078d578063b2f87643146107ad578063b697f531146107cd57600080fd5b80638456cb591461064d5780638d3638f4146106625780638da5cb5b1461069557806398c9f2b9146106b35780639d3117c7146106e35780639fa92f9d1461071057600080fd5b806352a9674b116101fe5780636159ada1116101b75780636159ada11461059d57806365eaf11b146105cd57806368742da6146105e25780636a42b8f8146106025780636b04a93314610618578063715018a61461063857600080fd5b806352a9674b146104b0578063572386ca146104e4578063579c1618146105145780635bd11efc1461052a5780635c975abb1461054a5780635f61e3ec1461056957600080fd5b8063361d88ac11610250578063361d88ac146103e55780633cf52ffb1461041d5780633f4ba83a146104325780634ff746f614610447578063508a109b146104675780635190bc531461048757600080fd5b806314168416146102a35780631eeaabea146102f157806325e3beda146103135780632bb1ae7c146103555780632bbd59ca14610368578063301f07c3146103a557600080fd5b3661029e57005b600080fd5b3480156102af57600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102fd57600080fd5b5061031161030c3660046130ba565b61099e565b005b34801561031f57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102e8565b610311610363366004613176565b610a48565b34801561037457600080fd5b506103986103833660046130ba565b600f6020526000908152604090205460ff1681565b6040516102e891906131c1565b3480156103b157600080fd5b506103d56103c03660046130ba565b600a6020526000908152604090205460ff1681565b60405190151581526020016102e8565b3480156103f157600080fd5b50601054610405906001600160a01b031681565b6040516001600160a01b0390911681526020016102e8565b34801561042957600080fd5b50600254610347565b34801561043e57600080fd5b50610311610beb565b34801561045357600080fd5b50610311610462366004613176565b610c28565b34801561047357600080fd5b506103116104823660046131e9565b610cb8565b34801561049357600080fd5b506103d56104a236600461329a565b6001600160a01b0316301490565b3480156104bc57600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f057600080fd5b506103d56104ff3660046130ba565b600c6020526000908152604090205460ff1681565b34801561052057600080fd5b5061034760055481565b34801561053657600080fd5b5061031161054536600461329a565b610f7a565b34801561055657600080fd5b50600354600160a01b900460ff166103d5565b34801561057557600080fd5b506104057f000000000000000000000000000000000000000000000000000000000000000081565b3480156105a957600080fd5b506103d56105b836600461329a565b600d6020526000908152604090205460ff1681565b3480156105d957600080fd5b50610347610fb1565b3480156105ee57600080fd5b506103116105fd36600461329a565b61103a565b34801561060e57600080fd5b5062093a80610347565b34801561062457600080fd5b506103116106333660046130ba565b6110b7565b34801561064457600080fd5b50610311611182565b34801561065957600080fd5b506103116111ad565b34801561066e57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156106a157600080fd5b506000546001600160a01b0316610405565b3480156106bf57600080fd5b506103d56106ce3660046130ba565b600b6020526000908152604090205460ff1681565b3480156106ef57600080fd5b506103476106fe3660046130ba565b60096020526000908152604090205481565b34801561071c57600080fd5b5030610405565b34801561072f57600080fd5b506104057f000000000000000000000000000000000000000000000000000000000000000081565b34801561076357600080fd5b50600454610405906001600160a01b031681565b34801561078357600080fd5b5061034760085481565b34801561079957600080fd5b506103116107a836600461329a565b611261565b3480156107b957600080fd5b506103116107c836600461329a565b6112ff565b3480156107d957600080fd5b506103116107e836600461329a565b6113ce565b3480156107f957600080fd5b506102d76108083660046132d0565b600e6020526000908152604090205463ffffffff1681565b34801561082c57600080fd5b506103116114a0565b34801561084157600080fd5b50600354610405906001600160a01b031681565b34801561086157600080fd5b506001546001600160a01b0316610405565b34801561087f57600080fd5b506000546001600160a01b0316156103d5565b34801561089e57600080fd5b506103116108ad36600461329a565b611510565b3480156108be57600080fd5b506104057f000000000000000000000000000000000000000000000000000000000000000081565b3480156108f257600080fd5b5061034760065481565b34801561090857600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b34801561093c57600080fd5b506103d561094b36600461329a565b6115e7565b34801561095c57600080fd5b5061031161096b3660046130ba565b6115f8565b34801561097c57600080fd5b5061099061098b3660046132eb565b61162c565b6040516102e8929190613392565b6000546001600160a01b031633146109c9576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a0e5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610a506117fb565b43600554600654610a6191906133c1565b1115610a80576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b91906133d4565b6000818152600c602052604090205490915060ff1615610b615760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a05565b600081604051602001610b7691815260200190565b6040516020818303038152906040529050610b918184611848565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610bde908390869033906133ed565b60405180910390a1505050565b6000546001600160a01b03163314610c16576040516311a8a1bb60e31b815260040160405180910390fd5b610c1e61199c565b610c266119ec565b565b6010546001600160a01b03163314610c735760405162461bcd60e51b815260206004820152600e60248201526d10b0b634b0b9b2b229b2b73232b960911b6044820152606401610a05565b610c7c81611a41565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610cad92919061342b565b60405180910390a150565b610cc06117fb565b610cc8611ae1565b83610cff5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a05565b600085856000818110610d1457610d14613455565b9050602002810190610d26919061346b565b610d30908061348c565b604051610d3e9291906134da565b604051809103902090506000610da58288886000818110610d6157610d61613455565b9050602002810190610d73919061346b565b60200189896000818110610d8957610d89613455565b9050602002810190610d9b919061346b565b6104200135611b3a565b9050610db381868686611be1565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610ed95788888263ffffffff16818110610df857610df8613455565b9050602002810190610e0a919061346b565b610e14908061348c565b604051610e229291906134da565b604051809103902093506000610e77858b8b8563ffffffff16818110610e4a57610e4a613455565b9050602002810190610e5c919061346b565b6020018c8c8663ffffffff16818110610d8957610d89613455565b9050838114610eb65760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a05565b506000848152600f60205260409020805460ff1916600190811790915501610dd2565b5060005b818163ffffffff161015610f6557610f5c89898363ffffffff16818110610f0657610f06613455565b9050602002810190610f18919061346b565b610f22908061348c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611cdc92505050565b50600101610edd565b50505050610f736001600755565b5050505050565b6000546001600160a01b03163314610fa5576040516311a8a1bb60e31b815260040160405180910390fd5b610fae81611fb9565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103591906133d4565b905090565b6000546001600160a01b03163314611065576040516311a8a1bb60e31b815260040160405180910390fd5b47611070828261202b565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516110ab91815260200190565b60405180910390a25050565b6000546001600160a01b031633146110e2576040516311a8a1bb60e31b815260040160405180910390fd5b6110ea61199c565b600081815260096020526040812054900361113f5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a05565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610cad9083815260200190565b6000546001600160a01b03163314610c26576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156111f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121a91906134ea565b6112515760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a05565b6112596117fb565b610c26612149565b6000546001600160a01b0316331461128c576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156112aa575060025415155b156112c8576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036112f657604051634a2fb73f60e11b815260040160405180910390fd5b610fae8161218c565b6000546001600160a01b0316331461132a576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff1661137d5760405162461bcd60e51b815260206004820152600860248201526708585b1b1bddd95960c21b6044820152606401610a05565b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610cad565b6000546001600160a01b031633146113f9576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff161561144c5760405162461bcd60e51b8152602060048201526007602482015266185b1b1bddd95960ca1b6044820152606401610a05565b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610cad565b6001546001600160a01b031633146114cb576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114dd919061350c565b116114fb576040516324e0285f60e21b815260040160405180910390fd5b600154610c26906001600160a01b03166121da565b6000546001600160a01b0316331461153b576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115995760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a05565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610cad565b60006115f28261223f565b92915050565b6000546001600160a01b03163314611623576040516311a8a1bb60e31b815260040160405180910390fd5b610fae81612285565b336000908152600d602052604081205460609060ff1661167d5760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a05565b63ffffffff8086166000908152600e60205260408120805491929190911690826116a68361351f565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006117057f00000000000000000000000000000000000000000000000000000000000000006116fc336001600160a01b031690565b848a8a8a612303565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561177b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179f9190613542565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836117d160018461350c565b84876040516117e39493929190613566565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610c265760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a05565b81516020146118835760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a05565b8051156118c15760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a05565b6000634ff746f660e01b836040516024016118dc9190613595565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a9261196592919091169085906004016135a8565b600060405180830381600087803b15801561197f57600080fd5b505af1158015611993573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610c265760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a05565b6119f461199c565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611a56906001600160a01b031661223f565b611a955760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610a05565b8051602014611ad05760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a05565b610fae611adc826135cc565b61233b565b600260075403611b335760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a05565b6002600755565b6000806000858152600f602052604090205460ff166002811115611b6057611b606131ab565b14611ba35760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a05565b611bd78484602080602002604051908101604052809291908260208002808284376000920191909152508691506124649050565b90505b9392505050565b6000848152600b602052604090205460ff16611cd657611c00836127b2565b6000611c368584602080602002604051908101604052809291908260208002808284376000920191909152508691506124649050565b9050838114611c7d5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a05565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611ccc9086815260200190565b60405180910390a3505b50505050565b600080611ce98382612912565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611d2162ffffff198316612936565b63ffffffff1614611d635760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a05565b6000611d7462ffffff19831661294b565b905060016000828152600f602052604090205460ff166002811115611d9b57611d9b6131ab565b14611dd25760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a05565b6000818152600f60205260409020805460ff191660021790556001611e377f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006133c1565b611e41919061350c565b5a11611e785760405162461bcd60e51b8152600401610a05906020808252600490820152632167617360e01b604082015260600190565b6000611e8962ffffff198416612994565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611ee462ffffff1988166129a5565b611ef362ffffff1989166129b9565b611f0262ffffff198a166129ce565b611f1f611f1462ffffff198c166129e3565b62ffffff1916612a11565b604051602401611f3294939291906135f3565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611f6c858560008685612a5a565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611fa59088908b908690613622565b60405180910390a150505050505050919050565b611fc281612ae5565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8047101561207b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a05565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146120c8576040519150601f19603f3d011682016040523d82523d6000602084013e6120cd565b606091505b50509050806121445760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a05565b505050565b6121516117fb565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a243390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600061226a7f0000000000000000000000000000000000000000000000000000000000000000612be8565b6001600160a01b0316826001600160a01b0316149050919050565b60055481036122c85760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a05565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610cad565b606086868686868660405160200161232096959493929190613643565b60405160208183030381529060405290509695505050505050565b806123795760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a05565b600081815260096020526040902054156123cc5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a05565b6000818152600a602052604090205460ff16156124215760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a05565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610cad9083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806127f55760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a05565b6000818152600a602052604090205460ff161561280f5750565b600081815260096020526040812054908190036128655760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a05565b600854612872824361350c565b10156128c05760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a05565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b81516000906020840161292d64ffffffffff85168284612c72565b95945050505050565b60006115f262ffffff19831660286004612caf565b6000806129618360781c6001600160601b031690565b6001600160601b0316905060006129818460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115f26129a283612cdf565b90565b60006115f262ffffff198316826004612caf565b60006115f262ffffff19831660246004612caf565b60006115f262ffffff19831660046020612cf0565b60006115f2604c612a0181601886901c6001600160601b031661350c565b62ffffff19851691906000612dfb565b6060600080612a298460181c6001600160601b031690565b6001600160601b031690506040519150819250612a498483602001612e77565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612a8057612a806130d3565b6040519080825280601f01601f191660200182016040528015612aaa576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612acb578692505b828152826000602083013e90999098509650505050505050565b6040516326ddea8360e11b81526001600160a01b038281166004830152600060248301819052917f000000000000000000000000000000000000000000000000000000000000000090911690634dbbd50690604401602060405180830381865afa158015612b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b7b919061369d565b601054604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1601080546001600160a01b0319166001600160a01b039290921691909117905550565b6000612bf382612f6a565b612c105760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c4e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f2919061369d565b600080612c7f83856133c1565b9050604051811115612c8f575060005b80600003612ca45762ffffff19915050611bda565b61292d858585612fce565b6000612cbc8260206136ba565b612cc79060086136d3565b60ff16612cd5858585612cf0565b901c949350505050565b60006115f262ffffff198316602c60205b60008160ff16600003612d0557506000611bda565b612d188460181c6001600160601b031690565b6001600160601b0316612d2e60ff8416856133c1565b1115612d9657612d478460781c6001600160601b031690565b612d5a8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a05565b60208260ff161115612dbb5760405163045df3f960e01b815260040160405180910390fd5b600882026000612dd48660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612e118660781c6001600160601b031690565b6001600160601b03169050612e2586613045565b84612e3087846133c1565b612e3a91906133c1565b1115612e4d5762ffffff19915050612e6f565b612e5785826133c1565b9050612e6b8364ffffffffff168286612c72565b9150505b949350505050565b600062ffffff1980841603612e9f5760405163148d513360e21b815260040160405180910390fd5b612ea88361307e565b15612ec657604051632ee0949160e11b815260040160405180910390fd5b6000612edb8460181c6001600160601b031690565b6001600160601b031690506000612efb8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612f1c5760206060fd5b8386858560045afa905080612f4457604051632af1bd9b60e21b815260040160405180910390fd5b612f5f612f518860d81c90565b64ffffffffff168786612fce565b979650505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612faa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f291906134ea565b60006060601883856001600160601b03821682148015612ff6575086816001600160601b0316145b61302f5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a05565b96831b90961790911b90941790931b9392505050565b600061305a8260181c6001600160601b031690565b61306d8360781c6001600160601b031690565b016001600160601b03169050919050565b600061308a8260d81c90565b64ffffffffff1664ffffffffff036130a457506001919050565b60006130af83613045565b604051109392505050565b6000602082840312156130cc57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126130fa57600080fd5b813567ffffffffffffffff80821115613115576131156130d3565b604051601f8301601f19908116603f0116810190828211818310171561313d5761313d6130d3565b8160405283815286602085880101111561315657600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561318857600080fd5b813567ffffffffffffffff81111561319f57600080fd5b612e6f848285016130e9565b634e487b7160e01b600052602160045260246000fd5b60208101600383106131e357634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561320257600080fd5b853567ffffffffffffffff8082111561321a57600080fd5b818801915088601f83011261322e57600080fd5b81358181111561323d57600080fd5b8960208260051b850101111561325257600080fd5b60209283019750955050860135925061044086018781111561327357600080fd5b94979396509194604001933592915050565b6001600160a01b0381168114610fae57600080fd5b6000602082840312156132ac57600080fd5b8135611bda81613285565b803563ffffffff811681146132cb57600080fd5b919050565b6000602082840312156132e257600080fd5b611bda826132b7565b60008060006060848603121561330057600080fd5b613309846132b7565b925060208401359150604084013567ffffffffffffffff81111561332c57600080fd5b613338868287016130e9565b9150509250925092565b60005b8381101561335d578181015183820152602001613345565b50506000910152565b6000815180845261337e816020860160208601613342565b601f01601f19169290920160200192915050565b828152604060208201526000611bd76040830184613366565b634e487b7160e01b600052601160045260246000fd5b808201808211156115f2576115f26133ab565b6000602082840312156133e657600080fd5b5051919050565b6060815260006134006060830186613366565b82810360208401526134128186613366565b91505060018060a01b0383166040830152949350505050565b60408152600061343e6040830185613366565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261348257600080fd5b9190910192915050565b6000808335601e198436030181126134a357600080fd5b83018035915067ffffffffffffffff8211156134be57600080fd5b6020019150368190038213156134d357600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156134fc57600080fd5b81518015158114611bda57600080fd5b818103818111156115f2576115f26133ab565b600063ffffffff808316818103613538576135386133ab565b6001019392505050565b6000806040838503121561355557600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061358b6080830184613366565b9695505050505050565b602081526000611bda6020830184613366565b6001600160a01b0383168152604060208201819052600090611bd790830184613366565b805160208083015191908110156135ed576000198160200360031b1b821691505b50919050565b600063ffffffff80871683528086166020840152508360408301526080606083015261358b6080830184613366565b838152821515602082015260606040820152600061292d6060830184613366565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161368b81604c850160208701613342565b91909101604c01979650505050505050565b6000602082840312156136af57600080fd5b8151611bda81613285565b60ff82811682821603908111156115f2576115f26133ab565b60ff81811683821602908116908181146136ef576136ef6133ab565b509291505056fea2646970667358221220001674e1be1e4b7f97f909e5e7a4d83bb4eee74a3558c208734f73ccbac02ce064736f6c63430008110033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
