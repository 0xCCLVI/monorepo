/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "AliasedSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aliasedSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003dff38038062003dff8339810160408190526200003591620004ae565b89898989898989898989808a8a8a8a8a6200005033620002bd565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000322565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620002ad95508b9450506200039692505050565b5050505050505050505062000587565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6200032d8162000396565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60a0516040516326ddea8360e11b81526001600160a01b038381166004830152600060248301819052921690634dbbd50690604401602060405180830381865afa158015620003e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200040f919062000562565b600e54604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1600e80546001600160a01b0319166001600160a01b039290921691909117905550565b805163ffffffff811681146200049157600080fd5b919050565b80516001600160a01b03811681146200049157600080fd5b6000806000806000806000806000806101408b8d031215620004cf57600080fd5b620004da8b6200047c565b9950620004ea60208c016200047c565b9850620004fa60408c0162000496565b97506200050a60608c0162000496565b96506200051a60808c0162000496565b955060a08b0151945060c08b0151935060e08b01519250620005406101008c0162000496565b9150620005516101208c0162000496565b90509295989b9194979a5092959850565b6000602082840312156200057557600080fd5b620005808262000496565b9392505050565b60805160a05160c05160e0516101005161012051610140516137a6620006596000396000818161030f0152611ec701526000818161088801528181611ee80152611f7a0152600081816106e201528181610a0501528181610d4101528181610ea501528181610ff1015281816116bf0152818161178c01528181611bb10152611e5f0152600061029f0152600061052801526000818161083e01528181611988015281816123200152612be001526000818161046f0152818161061e0152818161173d0152611dc401526137a66000f3fe6080604052600436106102815760003560e01c80638456cb591161014f578063b697f531116100c1578063d69f9d611161007a578063d69f9d611461082c578063d7d317b314610860578063d88beda214610876578063db1b7659146108aa578063e0fed010146108ca578063fa31de01146108ea57600080fd5b8063b697f5311461077a578063c5b350df1461079a578063cc394283146107af578063d1851c92146107cf578063d232c220146107ed578063d2a3cc711461080c57600080fd5b80639fa92f9d116101135780639fa92f9d146106bd578063a01892a5146106d0578063a792c29b14610704578063ad9c0c2e14610724578063b1f8100d1461073a578063b2f876431461075a57600080fd5b80638456cb59146105fa5780638d3638f41461060f5780638da5cb5b1461064257806398c9f2b9146106605780639d3117c71461069057600080fd5b806352a9674b116101f35780636159ada1116101ac5780636159ada11461054a57806365eaf11b1461057a57806368742da61461058f5780636a42b8f8146105af5780636b04a933146105c5578063715018a6146105e557600080fd5b806352a9674b1461045d578063572386ca14610491578063579c1618146104c15780635bd11efc146104d75780635c975abb146104f75780635f61e3ec1461051657600080fd5b8063361d88ac11610245578063361d88ac146103925780633cf52ffb146103ca5780633f4ba83a146103df5780634ff746f6146103f4578063508a109b146104145780635190bc531461043457600080fd5b8063141684161461028d5780631eeaabea146102db57806325e3beda146102fd5780632bb1ae7c1461033f578063301f07c31461035257600080fd5b3661028857005b600080fd5b34801561029957600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102e757600080fd5b506102fb6102f636600461318c565b610918565b005b34801561030957600080fd5b506103317f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102d2565b6102fb61034d366004613248565b6109c2565b34801561035e57600080fd5b5061038261036d36600461318c565b600a6020526000908152604090205460ff1681565b60405190151581526020016102d2565b34801561039e57600080fd5b50600e546103b2906001600160a01b031681565b6040516001600160a01b0390911681526020016102d2565b3480156103d657600080fd5b50600254610331565b3480156103eb57600080fd5b506102fb610b63565b34801561040057600080fd5b506102fb61040f366004613248565b610ba0565b34801561042057600080fd5b506102fb61042f36600461327d565b610c30565b34801561044057600080fd5b5061038261044f36600461332e565b6001600160a01b0316301490565b34801561046957600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561049d57600080fd5b506103826104ac36600461318c565b600c6020526000908152604090205460ff1681565b3480156104cd57600080fd5b5061033160055481565b3480156104e357600080fd5b506102fb6104f236600461332e565b610fb6565b34801561050357600080fd5b50600354600160a01b900460ff16610382565b34801561052257600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561055657600080fd5b5061038261056536600461332e565b600d6020526000908152604090205460ff1681565b34801561058657600080fd5b50610331610fed565b34801561059b57600080fd5b506102fb6105aa36600461332e565b611076565b3480156105bb57600080fd5b5062093a80610331565b3480156105d157600080fd5b506102fb6105e036600461318c565b6110f3565b3480156105f157600080fd5b506102fb6111b6565b34801561060657600080fd5b506102fb6111e1565b34801561061b57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102c1565b34801561064e57600080fd5b506000546001600160a01b03166103b2565b34801561066c57600080fd5b5061038261067b36600461318c565b600b6020526000908152604090205460ff1681565b34801561069c57600080fd5b506103316106ab36600461318c565b60096020526000908152604090205481565b3480156106c957600080fd5b50306103b2565b3480156106dc57600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561071057600080fd5b506004546103b2906001600160a01b031681565b34801561073057600080fd5b5061033160085481565b34801561074657600080fd5b506102fb61075536600461332e565b611295565b34801561076657600080fd5b506102fb61077536600461332e565b611333565b34801561078657600080fd5b506102fb61079536600461332e565b6113fa565b3480156107a657600080fd5b506102fb6114c4565b3480156107bb57600080fd5b506003546103b2906001600160a01b031681565b3480156107db57600080fd5b506001546001600160a01b03166103b2565b3480156107f957600080fd5b506000546001600160a01b031615610382565b34801561081857600080fd5b506102fb61082736600461332e565b611534565b34801561083857600080fd5b506103b27f000000000000000000000000000000000000000000000000000000000000000081565b34801561086c57600080fd5b5061033160065481565b34801561088257600080fd5b506103317f000000000000000000000000000000000000000000000000000000000000000081565b3480156108b657600080fd5b506103826108c536600461332e565b61160b565b3480156108d657600080fd5b506102fb6108e536600461318c565b61161c565b3480156108f657600080fd5b5061090a61090536600461335d565b611650565b6040516102d2929190613406565b6000546001600160a01b03163314610943576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109885760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b6109ca611859565b436005546006546109db9190613435565b11156109fa576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a859190613448565b6000818152600c602052604090205490915060ff1615610adb5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b604482015260640161097f565b6000818152600c60209081526040808320805460ff1916600117905551610b089184910190815260200190565b6040516020818303038152906040529050610b2381846118a6565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077818433604051610b5693929190613461565b60405180910390a1505050565b6000546001600160a01b03163314610b8e576040516311a8a1bb60e31b815260040160405180910390fd5b610b966119fa565b610b9e611a4a565b565b600e546001600160a01b03163314610beb5760405162461bcd60e51b815260206004820152600e60248201526d10b0b634b0b9b2b229b2b73232b960911b604482015260640161097f565b610bf481611a9f565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610c2592919061349f565b60405180910390a150565b610c38611859565b610c40611b3f565b83610c775760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b604482015260640161097f565b600085856000818110610c8c57610c8c6134c9565b9050602002810190610c9e91906134df565b610ca89080613500565b604051610cb692919061354e565b604051809103902090506000610d1d8288886000818110610cd957610cd96134c9565b9050602002810190610ceb91906134df565b60200189896000818110610d0157610d016134c9565b9050602002810190610d1391906134df565b6104200135611b98565b9050610d2b81868686611cb3565b6040516398fae8e960e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610d8d57600080fd5b505af1158015610da1573d6000803e3d6000fd5b5088925060019150505b818163ffffffff161015610f155788888263ffffffff16818110610dd157610dd16134c9565b9050602002810190610de391906134df565b610ded9080613500565b604051610dfb92919061354e565b604051809103902093506000610e50858b8b8563ffffffff16818110610e2357610e236134c9565b9050602002810190610e3591906134df565b6020018c8c8663ffffffff16818110610d0157610d016134c9565b9050838114610e8f5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b604482015260640161097f565b6040516398fae8e960e01b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610ef157600080fd5b505af1158015610f05573d6000803e3d6000fd5b5050505081600101915050610dab565b5060005b818163ffffffff161015610fa157610f9889898363ffffffff16818110610f4257610f426134c9565b9050602002810190610f5491906134df565b610f5e9080613500565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dae92505050565b50600101610f19565b50505050610faf6001600755565b5050505050565b6000546001600160a01b03163314610fe1576040516311a8a1bb60e31b815260040160405180910390fd5b610fea81612093565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110719190613448565b905090565b6000546001600160a01b031633146110a1576040516311a8a1bb60e31b815260040160405180910390fd5b476110ac8282612105565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516110e791815260200190565b60405180910390a25050565b6000546001600160a01b0316331461111e576040516311a8a1bb60e31b815260040160405180910390fd5b6111266119fa565b600081815260096020526040812054900361117b5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b604482015260640161097f565b6000818152600960205260408082208290555182917ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73991a250565b6000546001600160a01b03163314610b9e576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561122a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124e919061355e565b6112855760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161097f565b61128d611859565b610b9e612223565b6000546001600160a01b031633146112c0576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156112de575060025415155b156112fc576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361132a57604051634a2fb73f60e11b815260040160405180910390fd5b610fea81612266565b6000546001600160a01b0316331461135e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff166113b15760405162461bcd60e51b815260206004820152600860248201526708585b1b1bddd95960c21b604482015260640161097f565b6001600160a01b0381166000818152600d6020526040808220805460ff19169055517f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9190a250565b6000546001600160a01b03163314611425576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff16156114785760405162461bcd60e51b8152602060048201526007602482015266185b1b1bddd95960ca1b604482015260640161097f565b6001600160a01b0381166000818152600d6020526040808220805460ff19166001179055517fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879190a250565b6001546001600160a01b031633146114ef576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115019190613580565b1161151f576040516324e0285f60e21b815260040160405180910390fd5b600154610b9e906001600160a01b03166122b4565b6000546001600160a01b0316331461155f576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115bd5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e61676572000000000000000000604482015260640161097f565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610c25565b600061161682612319565b92915050565b6000546001600160a01b03163314611647576040516311a8a1bb60e31b815260040160405180910390fd5b610fea8161235f565b336000908152600d602052604081205460609060ff166116a15760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b604482015260640161097f565b604051630c132ab560e01b815263ffffffff861660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630c132ab5906024016020604051808303816000875af1158015611710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117349190613593565b905060006117667f000000000000000000000000000000000000000000000000000000000000000033848a8a8a6123dd565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156117dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180091906135b0565b909250905081611811600183613580565b847f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8760405161184191906135d4565b60405180910390a45090989197509095505050505050565b600354600160a01b900460ff1615610b9e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161097f565b81516020146118e15760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161097f565b80511561191f5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b604482015260640161097f565b6000634ff746f660e01b8360405160240161193a91906135d4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a926119c392919091169085906004016135e7565b600060405180830381600087803b1580156119dd57600080fd5b505af11580156119f1573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610b9e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161097f565b611a526119fa565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611ab4906001600160a01b0316612319565b611af35760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161097f565b8051602014611b2e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161097f565b610fea611b3a8261360b565b612415565b600260075403611b915760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161097f565b6002600755565b600080604051630546f34b60e21b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c249190613648565b6002811115611c3557611c35613632565b14611c755760405162461bcd60e51b815260206004820152601060248201526f214c6561665374617475732e4e6f6e6560801b604482015260640161097f565b611ca98484602080602002604051908101604052809291908260208002808284376000920191909152508691506125369050565b90505b9392505050565b6000848152600b602052604090205460ff16611da857611cd283612884565b6000611d088584602080602002604051908101604052809291908260208002808284376000920191909152508691506125369050565b9050838114611d4f5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b604482015260640161097f565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611d9e9086815260200190565b60405180910390a3505b50505050565b600080611dbb83826129e4565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611df362ffffff198316612a08565b63ffffffff1614611e355760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161097f565b6000611e4662ffffff198316612a1d565b604051630b61f10360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b61f103090602401600060405180830381600087803b158015611eab57600080fd5b505af1158015611ebf573d6000803e3d6000fd5b5050505060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f119190613435565b611f1b9190613580565b5a11611f525760405162461bcd60e51b815260040161097f906020808252600490820152632167617360e01b604082015260600190565b6000611f6362ffffff198416612a66565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611fbe62ffffff198816612a77565b611fcd62ffffff198916612a8b565b611fdc62ffffff198a16612aa0565b611ff9611fee62ffffff198c16612ab5565b62ffffff1916612ae3565b60405160240161200c9493929190613669565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050612046858560008685612b2c565b604051919950925086907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe489061207f908b9086906136a2565b60405180910390a250505050505050919050565b61209c81612bb7565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156121555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161097f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146121a2576040519150601f19603f3d011682016040523d82523d6000602084013e6121a7565b606091505b505090508061221e5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161097f565b505050565b61222b611859565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a823390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006123447f0000000000000000000000000000000000000000000000000000000000000000612cba565b6001600160a01b0316826001600160a01b0316149050919050565b60055481036123a25760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b604482015260640161097f565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610c25565b60608686868686866040516020016123fa969594939291906136bd565b60405160208183030381529060405290509695505050505050565b806124535760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b604482015260640161097f565b600081815260096020526040902054156124a65760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b604482015260640161097f565b6000818152600a602052604090205460ff16156124fb5760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b604482015260640161097f565b6000818152600960205260408082204390555182917f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc891a250565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806128c75760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b604482015260640161097f565b6000818152600a602052604090205460ff16156128e15750565b600081815260096020526040812054908190036129375760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b604482015260640161097f565b6008546129448243613580565b10156129925760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f7420217665726966696564000000000000000000604482015260640161097f565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b8151600090602084016129ff64ffffffffff85168284612d44565b95945050505050565b600061161662ffffff19831660286004612d81565b600080612a338360781c6001600160601b031690565b6001600160601b031690506000612a538460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000611616612a7483612db1565b90565b600061161662ffffff198316826004612d81565b600061161662ffffff19831660246004612d81565b600061161662ffffff19831660046020612dc2565b6000611616604c612ad381601886901c6001600160601b0316613580565b62ffffff19851691906000612ecd565b6060600080612afb8460181c6001600160601b031690565b6001600160601b031690506040519150819250612b1b8483602001612f49565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612b5257612b526131a5565b6040519080825280601f01601f191660200182016040528015612b7c576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612b9d578692505b828152826000602083013e90999098509650505050505050565b6040516326ddea8360e11b81526001600160a01b038281166004830152600060248301819052917f000000000000000000000000000000000000000000000000000000000000000090911690634dbbd50690604401602060405180830381865afa158015612c29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4d9190613717565b600e54604080516001600160a01b03928316815291831660208301529192507f138b2e0015ac8e1842fbb73cdefea5574fd42dd33df05e84271a7adc811d6b3d910160405180910390a1600e80546001600160a01b0319166001600160a01b039290921691909117905550565b6000612cc58261303c565b612ce25760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d20573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116169190613717565b600080612d518385613435565b9050604051811115612d61575060005b80600003612d765762ffffff19915050611cac565b6129ff8585856130a0565b6000612d8e826020613734565b612d9990600861374d565b60ff16612da7858585612dc2565b901c949350505050565b600061161662ffffff198316602c60205b60008160ff16600003612dd757506000611cac565b612dea8460181c6001600160601b031690565b6001600160601b0316612e0060ff841685613435565b1115612e6857612e198460781c6001600160601b031690565b612e2c8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff8316606482015260840161097f565b60208260ff161115612e8d5760405163045df3f960e01b815260040160405180910390fd5b600882026000612ea68660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612ee38660781c6001600160601b031690565b6001600160601b03169050612ef786613117565b84612f028784613435565b612f0c9190613435565b1115612f1f5762ffffff19915050612f41565b612f298582613435565b9050612f3d8364ffffffffff168286612d44565b9150505b949350505050565b600062ffffff1980841603612f715760405163148d513360e21b815260040160405180910390fd5b612f7a83613150565b15612f9857604051632ee0949160e11b815260040160405180910390fd5b6000612fad8460181c6001600160601b031690565b6001600160601b031690506000612fcd8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612fee5760206060fd5b8386858560045afa90508061301657604051632af1bd9b60e21b815260040160405180910390fd5b6130316130238860d81c90565b64ffffffffff1687866130a0565b979650505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561307c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611616919061355e565b60006060601883856001600160601b038216821480156130c8575086816001600160601b0316145b6131015760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b604482015260640161097f565b96831b90961790911b90941790931b9392505050565b600061312c8260181c6001600160601b031690565b61313f8360781c6001600160601b031690565b016001600160601b03169050919050565b600061315c8260d81c90565b64ffffffffff1664ffffffffff0361317657506001919050565b600061318183613117565b604051109392505050565b60006020828403121561319e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126131cc57600080fd5b813567ffffffffffffffff808211156131e7576131e76131a5565b604051601f8301601f19908116603f0116810190828211818310171561320f5761320f6131a5565b8160405283815286602085880101111561322857600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561325a57600080fd5b813567ffffffffffffffff81111561327157600080fd5b612f41848285016131bb565b6000806000806000610460868803121561329657600080fd5b853567ffffffffffffffff808211156132ae57600080fd5b818801915088601f8301126132c257600080fd5b8135818111156132d157600080fd5b8960208260051b85010111156132e657600080fd5b60209283019750955050860135925061044086018781111561330757600080fd5b94979396509194604001933592915050565b6001600160a01b0381168114610fea57600080fd5b60006020828403121561334057600080fd5b8135611cac81613319565b63ffffffff81168114610fea57600080fd5b60008060006060848603121561337257600080fd5b833561337d8161334b565b925060208401359150604084013567ffffffffffffffff8111156133a057600080fd5b6133ac868287016131bb565b9150509250925092565b60005b838110156133d15781810151838201526020016133b9565b50506000910152565b600081518084526133f28160208601602086016133b6565b601f01601f19169290920160200192915050565b828152604060208201526000611ca960408301846133da565b634e487b7160e01b600052601160045260246000fd5b808201808211156116165761161661341f565b60006020828403121561345a57600080fd5b5051919050565b60608152600061347460608301866133da565b828103602084015261348681866133da565b91505060018060a01b0383166040830152949350505050565b6040815260006134b260408301856133da565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126134f657600080fd5b9190910192915050565b6000808335601e1984360301811261351757600080fd5b83018035915067ffffffffffffffff82111561353257600080fd5b60200191503681900382131561354757600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561357057600080fd5b81518015158114611cac57600080fd5b818103818111156116165761161661341f565b6000602082840312156135a557600080fd5b8151611cac8161334b565b600080604083850312156135c357600080fd5b505080516020909101519092909150565b602081526000611cac60208301846133da565b6001600160a01b0383168152604060208201819052600090611ca9908301846133da565b8051602080830151919081101561362c576000198160200360031b1b821691505b50919050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561365a57600080fd5b815160038110611cac57600080fd5b600063ffffffff80871683528086166020840152508360408301526080606083015261369860808301846133da565b9695505050505050565b8215158152604060208201526000611ca960408301846133da565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161370581604c8501602087016133b6565b91909101604c01979650505050505050565b60006020828403121561372957600080fd5b8151611cac81613319565b60ff82811682821603908111156116165761161661341f565b60ff81811683821602908116908181146137695761376961341f565b509291505056fea264697066735822122067e1028ded986e9fe309a1da053dba1af6b555cc273ae3ac38155ac15f69890f64736f6c63430008110033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
