/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620037f1380380620037f18339810160408190526200003591620003ac565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000311565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260065550620004609f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200038f57600080fd5b919050565b80516001600160a01b03811681146200038f57600080fd5b6000806000806000806000806000806101408b8d031215620003cd57600080fd5b620003d88b6200037a565b9950620003e860208c016200037a565b9850620003f860408c0162000394565b97506200040860608c0162000394565b96506200041860808c0162000394565b955060a08b0151945060c08b0151935060e08b015192506200043e6101008c0162000394565b91506200044f6101208c0162000394565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516132e26200050f600039600081816102e30152611b0c01526000818161083001528181611b2d0152611bb401526000818161068d0152818161091301528181610dca01526114c401526000610273015260006104eb0152600081816107fc01528181610a47015281816116870152611f65015260008181610478015281816105c9015281816114750152611a0e01526132e26000f3fe6080604052600436106102555760003560e01c80638456cb5911610139578063b697f531116100b6578063d232c2201161007a578063d232c220146107ab578063d2a3cc71146107ca578063d69f9d61146107ea578063d88beda21461081e578063db1b765914610852578063fa31de011461087257600080fd5b8063b697f53114610705578063b95a200114610725578063c5b350df14610758578063cc3942831461076d578063d1851c921461078d57600080fd5b80639fa92f9d116100fd5780639fa92f9d14610668578063a01892a51461067b578063ad9c0c2e146106af578063b1f8100d146106c5578063b2f87643146106e557600080fd5b80638456cb59146105a55780638d3638f4146105ba5780638da5cb5b146105ed57806398c9f2b91461060b5780639d3117c71461063b57600080fd5b8063508a109b116101d25780635f61e3ec116101965780635f61e3ec146104d957806365eaf11b1461052557806368742da61461053a5780636a42b8f81461055a5780636b04a93314610570578063715018a61461059057600080fd5b8063508a109b1461041d5780635190bc531461043d57806352a9674b146104665780635bd11efc1461049a5780635c975abb146104ba57600080fd5b80632bbd59ca116102195780632bbd59ca14610366578063301f07c3146103a35780633cf52ffb146103d35780633f4ba83a146103e85780634ff746f6146103fd57600080fd5b806314168416146102615780631eeaabea146102af57806325e3beda146102d1578063272efc69146103135780632bb1ae7c1461035357600080fd5b3661025c57005b600080fd5b34801561026d57600080fd5b506102957f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102bb57600080fd5b506102cf6102ca366004612b99565b610892565b005b3480156102dd57600080fd5b506103057f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102a6565b34801561031f57600080fd5b5061034361032e366004612bc7565b600a6020526000908152604090205460ff1681565b60405190151581526020016102a6565b6102cf610361366004612c87565b610907565b34801561037257600080fd5b50610396610381366004612b99565b600c6020526000908152604090205460ff1681565b6040516102a69190612cd2565b3480156103af57600080fd5b506103436103be366004612b99565b60086020526000908152604090205460ff1681565b3480156103df57600080fd5b50600254610305565b3480156103f457600080fd5b506102cf6109ff565b34801561040957600080fd5b506102cf610418366004612c87565b610a3c565b34801561042957600080fd5b506102cf610438366004612cfa565b610ae2565b34801561044957600080fd5b50610343610458366004612bc7565b6001600160a01b0316301490565b34801561047257600080fd5b506102957f000000000000000000000000000000000000000000000000000000000000000081565b3480156104a657600080fd5b506102cf6104b5366004612bc7565b610d8f565b3480156104c657600080fd5b50600354600160a01b900460ff16610343565b3480156104e557600080fd5b5061050d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102a6565b34801561053157600080fd5b50610305610dc6565b34801561054657600080fd5b506102cf610555366004612bc7565b610e4f565b34801561056657600080fd5b5062093a80610305565b34801561057c57600080fd5b506102cf61058b366004612b99565b610ecc565b34801561059c57600080fd5b506102cf610f97565b3480156105b157600080fd5b506102cf611054565b3480156105c657600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610295565b3480156105f957600080fd5b506000546001600160a01b031661050d565b34801561061757600080fd5b50610343610626366004612b99565b60096020526000908152604090205460ff1681565b34801561064757600080fd5b50610305610656366004612b99565b60076020526000908152604090205481565b34801561067457600080fd5b503061050d565b34801561068757600080fd5b5061050d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106bb57600080fd5b5061030560065481565b3480156106d157600080fd5b506102cf6106e0366004612bc7565b611108565b3480156106f157600080fd5b506102cf610700366004612bc7565b6111ad565b34801561071157600080fd5b506102cf610720366004612bc7565b611229565b34801561073157600080fd5b50610295610740366004612daf565b600b6020526000908152604090205463ffffffff1681565b34801561076457600080fd5b506102cf6112a8565b34801561077957600080fd5b5060035461050d906001600160a01b031681565b34801561079957600080fd5b506001546001600160a01b031661050d565b3480156107b757600080fd5b506000546001600160a01b031615610343565b3480156107d657600080fd5b506102cf6107e5366004612bc7565b611303565b3480156107f657600080fd5b5061050d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561082a57600080fd5b506103057f000000000000000000000000000000000000000000000000000000000000000081565b34801561085e57600080fd5b5061034361086d366004612bc7565b6113c5565b34801561087e57600080fd5b5061030561088d366004612dca565b6113d6565b6000546001600160a01b031633146108bd576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036109025760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b61090f611593565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190612e21565b6040516020016109a591815260200190565b60405160208183030381529060405290506109c081836115e0565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778183336040516109f393929190612e92565b60405180910390a15050565b6000546001600160a01b03163314610a2a576040516311a8a1bb60e31b815260040160405180910390fd5b610a326116f9565b610a3a611749565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a9d5760405162461bcd60e51b81526004016108f99060208082526004908201526310a0a6a160e11b604082015260600190565b610aa68161179e565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610ad7929190612ed0565b60405180910390a150565b610aea611593565b83610b215760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016108f9565b600085856000818110610b3657610b36612efa565b9050602002810190610b489190612f10565b610b529080612f31565b604051610b60929190612f7f565b604051809103902090506000610bc78288886000818110610b8357610b83612efa565b9050602002810190610b959190612f10565b60200189896000818110610bab57610bab612efa565b9050602002810190610bbd9190612f10565b610420013561183e565b9050610bd5818686866118e3565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610cf95787878263ffffffff16818110610c1857610c18612efa565b9050602002810190610c2a9190612f10565b610c349080612f31565b604051610c42929190612f7f565b604051809103902092506000610c97848a8a8563ffffffff16818110610c6a57610c6a612efa565b9050602002810190610c7c9190612f10565b6020018b8b8663ffffffff16818110610bab57610bab612efa565b9050828114610cd65760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016108f9565b506000838152600c60205260409020805460ff1916600190811790915501610bf2565b5060005b63ffffffff8116871115610d8557610d7c88888363ffffffff16818110610d2657610d26612efa565b9050602002810190610d389190612f10565b610d429080612f31565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119a092505050565b50600101610cfd565b5050505050505050565b6000546001600160a01b03163314610dba576040516311a8a1bb60e31b815260040160405180910390fd5b610dc381611ce7565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4a9190612e21565b905090565b6000546001600160a01b03163314610e7a576040516311a8a1bb60e31b815260040160405180910390fd5b47610e858282611d50565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d82604051610ec091815260200190565b60405180910390a25050565b6000546001600160a01b03163314610ef7576040516311a8a1bb60e31b815260040160405180910390fd5b610eff6116f9565b6000818152600760205260408120549003610f545760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016108f9565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610ad79083815260200190565b6000546001600160a01b03163314610fc2576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610fe557604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610ff79190612fa5565b11611015576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561103f576040516323295ef960e01b815260040160405180910390fd5b600154610a3a906001600160a01b0316611e6e565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561109d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c19190612fbc565b6110f85760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016108f9565b611100611593565b610a3a611ecd565b6000546001600160a01b03163314611133576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561115857506001600160a01b03811615155b15611176576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036111a457604051634a2fb73f60e11b815260040160405180910390fd5b610dc381611f10565b6000546001600160a01b031633146111d8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610ad7565b6000546001600160a01b03163314611254576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610ad7565b6001546001600160a01b031633146112d3576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426112e59190612fa5565b1161103f5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461132e576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361138c5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016108f9565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610ad7565b60006113d082611f5e565b92915050565b336000908152600a602052604081205460ff166114245760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016108f9565b63ffffffff8085166000908152600b602052604090205416611447816001612fde565b63ffffffff8681166000908152600b60205260408120805463ffffffff19169390921692909217905561149e7f00000000000000000000000000000000000000000000000000000000000000003384898989611fa4565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115389190613006565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361156a600184612fa5565b848760405161157c949392919061302a565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610a3a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108f9565b80511561161e5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016108f9565b6000634ff746f660e01b83604051602401611639919061304f565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a926116c29291909116908590600401613062565b600060405180830381600087803b1580156116dc57600080fd5b505af11580156116f0573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610a3a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108f9565b6117516116f9565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6003546117b3906001600160a01b0316611f5e565b6117f25760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016108f9565b805160201461182d5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016108f9565b610dc361183982613086565b611fdc565b6000806000858152600c602052604090205460ff16600281111561186457611864612cbc565b146118a75760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016108f9565b6118db8484602080602002604051908101604052809291908260208002808284376000920191909152508691506121059050565b949350505050565b60008481526009602052604090205460ff1661199a57611902836121ab565b60006119388584602080602002604051908101604052809291908260208002808284376000920191909152508691506121059050565b905083811461197f5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016108f9565b506000848152600960205260409020805460ff191660011790555b50505050565b60006002600554036119f45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108f9565b60026005556000611a05838261229d565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611a3d62ffffff1983166122c1565b63ffffffff1614611a7f5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016108f9565b6000611a9062ffffff1983166122d6565b905060016000828152600c602052604090205460ff166002811115611ab757611ab7612cbc565b14611aee5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016108f9565b6000818152600c60205260409020805460ff19166002179055611b517f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006130aa565b5a1015611b895760405162461bcd60e51b81526004016108f9906020808252600490820152632167617360e01b604082015260600190565b6000611b9a62ffffff19841661231f565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611bf762ffffff198916612330565b611c0662ffffff198a16612344565b611c1562ffffff198b16612359565b611c32611c2762ffffff198d1661236e565b62ffffff191661239c565b604051602401611c4594939291906130c2565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611c8e578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611ccc939291906130f1565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611da05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016108f9565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611ded576040519150601f19603f3d011682016040523d82523d6000602084013e611df2565b606091505b5050905080611e695760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016108f9565b505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611ed5611593565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117813390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000611f897f00000000000000000000000000000000000000000000000000000000000000006123e5565b6001600160a01b0316826001600160a01b0316149050919050565b6060868686868686604051602001611fc196959493929190613112565b60405160208183030381529060405290509695505050505050565b8061201a5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016108f9565b6000818152600760205260409020541561206d5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016108f9565b60008181526008602052604090205460ff16156120c25760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016108f9565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610ad79083815260200190565b8260005b60208110156121a357600183821c16600085836020811061212c5761212c612efa565b602002015190508160010361216c576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350612199565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101612109565b509392505050565b60008181526008602052604090205460ff16156121c55750565b6000818152600760205260408120549081900361221b5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016108f9565b6006546122288243612fa5565b10156122765760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016108f9565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b8151600090602084016122b864ffffffffff8516828461246f565b95945050505050565b60006113d062ffffff198316602860046124b6565b6000806122ec8360781c6001600160601b031690565b6001600160601b03169050600061230c8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006113d061232d836124e6565b90565b60006113d062ffffff1983168260046124b6565b60006113d062ffffff198316602460046124b6565b60006113d062ffffff198316600460206124f7565b60006113d0604c61238c81601886901c6001600160601b0316612fa5565b62ffffff19851691906000612653565b60606000806123b48460181c6001600160601b031690565b6001600160601b0316905060405191508192506123d484836020016126cd565b508181016020016040529052919050565b60006123f082612824565b61240d5760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa15801561244b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d0919061316c565b60008061247c83856130aa565b905060405181111561248c575060005b806000036124a15762ffffff1991505061158c565b5050606092831b9190911790911b1760181b90565b60006124c3826020613189565b6124ce9060086131ac565b60ff166124dc8585856124f7565b901c949350505050565b60006113d062ffffff198316602c60205b60008160ff1660000361250c5750600061158c565b61251f8460181c6001600160601b031690565b6001600160601b031661253560ff8416856130aa565b1115612599576125806125518560781c6001600160601b031690565b6001600160601b031661256d8660181c6001600160601b031690565b6001600160601b0316858560ff16612888565b60405162461bcd60e51b81526004016108f9919061304f565b60208260ff1611156126135760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016108f9565b60088202600061262c8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806126698660781c6001600160601b031690565b6001600160601b0316905061267d866128f6565b8461268887846130aa565b61269291906130aa565b11156126a55762ffffff199150506118db565b6126af85826130aa565b90506126c38364ffffffffff16828661246f565b9695505050505050565b600062ffffff19808416036127355760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016108f9565b61273e8361292f565b61279e5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016108f9565b60006127b38460181c6001600160601b031690565b6001600160601b0316905060006127d38560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156127f35760206060fd5b8285848460045afa506126c36128098760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d09190612fbc565b606060006128958661296c565b91505060006128a38661296c565b91505060006128b18661296c565b91505060006128bf8661296c565b915050838383836040516020016128d994939291906131d5565b604051602081830303815290604052945050505050949350505050565b600061290b8260181c6001600160601b031690565b61291e8360781c6001600160601b031690565b016001600160601b03169050919050565b600061293b8260d81c90565b64ffffffffff1664ffffffffff0361295557506000919050565b6000612960836128f6565b60405110199392505050565b600080601f5b600f8160ff1611156129c157600061298b8260086131ac565b60ff1685901c905061299c81612a1a565b61ffff16841793508160ff166010146129b757601084901b93505b5060001901612972565b50600f5b60ff8160ff161015612a145760006129de8260086131ac565b60ff1685901c90506129ef81612a1a565b61ffff16831792508160ff16600014612a0a57601083901b92505b50600019016129c5565b50915091565b6000612a2c60048360ff16901c612a4c565b60ff1661ffff919091161760081b612a4382612a4c565b60ff1617919050565b600060f08083179060ff82169003612a675750603092915050565b8060ff1660f103612a7b5750603192915050565b8060ff1660f203612a8f5750603292915050565b8060ff1660f303612aa35750603392915050565b8060ff1660f403612ab75750603492915050565b8060ff1660f503612acb5750603592915050565b8060ff1660f603612adf5750603692915050565b8060ff1660f703612af35750603792915050565b8060ff1660f803612b075750603892915050565b8060ff1660f903612b1b5750603992915050565b8060ff1660fa03612b2f5750606192915050565b8060ff1660fb03612b435750606292915050565b8060ff1660fc03612b575750606392915050565b8060ff1660fd03612b6b5750606492915050565b8060ff1660fe03612b7f5750606592915050565b8060ff1660ff03612b935750606692915050565b50919050565b600060208284031215612bab57600080fd5b5035919050565b6001600160a01b0381168114610dc357600080fd5b600060208284031215612bd957600080fd5b813561158c81612bb2565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612c0b57600080fd5b813567ffffffffffffffff80821115612c2657612c26612be4565b604051601f8301601f19908116603f01168101908282118183101715612c4e57612c4e612be4565b81604052838152866020858801011115612c6757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612c9957600080fd5b813567ffffffffffffffff811115612cb057600080fd5b6118db84828501612bfa565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612cf457634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006104608688031215612d1357600080fd5b853567ffffffffffffffff80821115612d2b57600080fd5b818801915088601f830112612d3f57600080fd5b813581811115612d4e57600080fd5b8960208260051b8501011115612d6357600080fd5b602092830197509550508601359250610440860187811115612d8457600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612daa57600080fd5b919050565b600060208284031215612dc157600080fd5b61158c82612d96565b600080600060608486031215612ddf57600080fd5b612de884612d96565b925060208401359150604084013567ffffffffffffffff811115612e0b57600080fd5b612e1786828701612bfa565b9150509250925092565b600060208284031215612e3357600080fd5b5051919050565b60005b83811015612e55578181015183820152602001612e3d565b8381111561199a5750506000910152565b60008151808452612e7e816020860160208601612e3a565b601f01601f19169290920160200192915050565b606081526000612ea56060830186612e66565b8281036020840152612eb78186612e66565b91505060018060a01b0383166040830152949350505050565b604081526000612ee36040830185612e66565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612f2757600080fd5b9190910192915050565b6000808335601e19843603018112612f4857600080fd5b83018035915067ffffffffffffffff821115612f6357600080fd5b602001915036819003821315612f7857600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612fb757612fb7612f8f565b500390565b600060208284031215612fce57600080fd5b8151801515811461158c57600080fd5b600063ffffffff808316818516808303821115612ffd57612ffd612f8f565b01949350505050565b6000806040838503121561301957600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006126c36080830184612e66565b60208152600061158c6020830184612e66565b6001600160a01b03831681526040602082018190526000906118db90830184612e66565b80516020808301519190811015612b935760001960209190910360031b1b16919050565b600082198211156130bd576130bd612f8f565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526126c36080830184612e66565b83815282151560208201526060604082015260006122b86060830184612e66565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161315a81604c850160208701612e3a565b91909101604c01979650505050505050565b60006020828403121561317e57600080fd5b815161158c81612bb2565b600060ff821660ff8416808210156131a3576131a3612f8f565b90039392505050565b600060ff821660ff84168160ff04811182151516156131cd576131cd612f8f565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016126c356fea264697066735822122004346cf5034d7970b92a8cd0fff47ff4295f587db74550db6d07ab93659f5c9664736f6c634300080f0033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
