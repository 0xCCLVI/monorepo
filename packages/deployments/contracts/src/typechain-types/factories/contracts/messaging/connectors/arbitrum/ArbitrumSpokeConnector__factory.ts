/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "current",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "pending",
        type: "bytes32",
      },
    ],
    name: "AggregateRootsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootCurrent",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPending",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregateRootPendingBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatorPath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregatorIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_current",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_pending",
        type: "bytes32",
      },
    ],
    name: "setAggregateRoots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620032d8380380620032d883398101604081905262000035916200040f565b8a8a8a8a8a8a8a8a8a8a8a808b8b8b8b8b8b6200005233620002d4565b8563ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012157620001218262000333565b8015620001335762000133816200039c565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b03909616610100026001600160a81b031990961695909517909455505060016006555050620cf850851015620002005760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002435760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b038216620002965760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b816001600160a01b0316610100816001600160a01b0316815250508260078190555050505050505050505050505050505050505050505050620004ce565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003f257600080fd5b919050565b80516001600160a01b0381168114620003f257600080fd5b60008060008060008060008060008060006101608c8e0312156200043257600080fd5b6200043d8c620003dd565b9a506200044d60208d01620003dd565b99506200045d60408d01620003f7565b98506200046d60608d01620003f7565b97506200047d60808d01620003f7565b965060a08c0151955060c08c0151945060e08c015193506101008c01519250620004ab6101208d01620003f7565b9150620004bc6101408d01620003f7565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612d5b6200057d600039600081816102d40152611a2c0152600081816105f901528181611a4d0152611ad40152600081816104bb015281816107f701528181610bcb01526112ac0152600061027e015260006103f90152600081816105d201528181610721015281816116f90152611c0e0152600081816103b4015281816104720152818161125d015261192e0152612d5b6000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80639aa44d0011610151578063c5b350df116100c3578063d2a3cc7111610087578063d2a3cc71146105ba578063d69f9d61146105cd578063d88beda2146105f4578063db1b76591461061b578063f38a267b1461062e578063fa31de011461065157600080fd5b8063c5b350df14610573578063cc3942831461057b578063cf796c751461058e578063d1851c9214610597578063d232c220146105a857600080fd5b8063b2f8764311610115578063b2f87643146104f9578063b39af4661461050c578063b46300ec1461051f578063b697f53114610527578063b95a20011461053a578063c1ca16221461056057600080fd5b80639aa44d00146104a75780639fa92f9d146104b0578063a01892a5146104b6578063ad9c0c2e146104dd578063b1f8100d146104e657600080fd5b80635bd11efc116101ea5780636a42b8f8116101ae5780636a42b8f8146104445780636eb67a511461044d578063715018a6146104605780638456cb59146104685780638d3638f4146104705780638da5cb5b1461049657600080fd5b80635bd11efc146103d65780635c975abb146103e95780635f61e3ec146103f457806364fd5f841461043357806365eaf11b1461043c57600080fd5b80633cf52ffb1161023c5780633cf52ffb146103675780633f4ba83a1461036f5780633fc40eaa146103775780634ff746f6146103805780635190bc531461039357806352a9674b146103af57600080fd5b806314168416146102795780631eeaabea146102ba57806325e3beda146102cf578063272efc69146103045780632bbd59ca14610337575b600080fd5b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102cd6102c8366004612615565b610664565b005b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b610327610312366004612643565b600c6020526000908152604090205460ff1681565b60405190151581526020016102b1565b61035a610345366004612615565b600e6020526000908152604090205460ff1681565b6040516102b19190612676565b6002546102f6565b6102cd6106d9565b6102f660095481565b6102cd61038e366004612741565b610716565b6103276103a1366004612643565b6001600160a01b0316301490565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6102cd6103e4366004612643565b6107bc565b60055460ff16610327565b61041b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b6102f6600a5481565b6102f66107f3565b62093a806102f6565b6102cd61045b366004612615565b61087c565b6102cd6108b0565b6102cd61096d565b7f00000000000000000000000000000000000000000000000000000000000000006102a0565b6000546001600160a01b031661041b565b6102f660085481565b3061041b565b61041b7f000000000000000000000000000000000000000000000000000000000000000081565b6102f660075481565b6102cd6104f4366004612643565b610a24565b6102cd610507366004612643565b610ac9565b6102cd61051a366004612776565b610b45565b6102cd610bbf565b6102cd610535366004612643565b610ca8565b6102a06105483660046127b1565b600d6020526000908152604090205463ffffffff1681565b6102cd61056e3660046127cc565b610d27565b6102cd61108b565b60035461041b906001600160a01b031681565b6102f660045481565b6001546001600160a01b031661041b565b6000546001600160a01b031615610327565b6102cd6105c8366004612643565b6110e6565b61041b7f000000000000000000000000000000000000000000000000000000000000000081565b6102f67f000000000000000000000000000000000000000000000000000000000000000081565b610327610629366004612643565b6111ad565b61032761063c366004612615565b600b6020526000908152604090205460ff1681565b6102f661065f366004612864565b6111be565b6000546001600160a01b0316331461068f576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036106d45760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b6000546001600160a01b03163314610704576040516311a8a1bb60e31b815260040160405180910390fd5b61070c61137b565b6107146113c4565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405162461bcd60e51b81526004016106cb9060208082526004908201526310a0a6a160e11b604082015260600190565b61078081611416565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516107b1929190612917565b60405180910390a150565b6000546001600160a01b031633146107e7576040516311a8a1bb60e31b815260040160405180910390fd5b6107f0816114b6565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190612941565b905090565b6000546001600160a01b031633146108a7576040516311a8a1bb60e31b815260040160405180910390fd5b6107f08161151f565b6000546001600160a01b031633146108db576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036108fe57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426109109190612970565b1161092e576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610958576040516323295ef960e01b815260040160405180910390fd5b600154610714906001600160a01b0316611560565b6005546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156109b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109dd9190612987565b610a145760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106cb565b610a1c6115bf565b610714611605565b6000546001600160a01b03163314610a4f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a7457506001600160a01b03811615155b15610a92576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ac057604051634a2fb73f60e11b815260040160405180910390fd5b6107f081611642565b6000546001600160a01b03163314610af4576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad91016107b1565b6000546001600160a01b03163314610b70576040516311a8a1bb60e31b815260040160405180910390fd5b610b7861137b565b6008829055600981905560408051838152602081018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce76910160405180910390a15050565b610bc76115bf565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4b9190612941565b604051602001610c5d91815260200190565b6040516020818303038152906040529050610c7781611690565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516107b1929190612917565b6000546001600160a01b03163314610cd3576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600c6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d8791016107b1565b610d2f6115bf565b82610d665760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106cb565b600084846000818110610d7b57610d7b6129a9565b9050602002810190610d8d91906129bf565b610d9790806129e0565b604051610da5929190612a2e565b604051809103902090506000610e0c8287876000818110610dc857610dc86129a9565b9050602002810190610dda91906129bf565b60200188886000818110610df057610df06129a9565b9050602002810190610e0291906129bf565b610420013561176a565b6000818152600b602052604090205490915060ff16610ed2576000600a544311610e3857600854610e3c565b6009545b90506000610e7483876020806020026040519081016040528092919082602080028082843760009201919091525089915061180f9050565b9050818114610eb65760405162461bcd60e51b815260206004820152600e60248201526d085859d9dc9959d85d19549bdbdd60921b60448201526064016106cb565b50506000818152600b60205260409020805460ff191660011790555b6000828152600e60205260409020805460ff191660019081179091555b63ffffffff8116861115610ff65786868263ffffffff16818110610f1557610f156129a9565b9050602002810190610f2791906129bf565b610f3190806129e0565b604051610f3f929190612a2e565b604051809103902092506000610f948489898563ffffffff16818110610f6757610f676129a9565b9050602002810190610f7991906129bf565b6020018a8a8663ffffffff16818110610df057610df06129a9565b9050828114610fd35760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106cb565b506000838152600e60205260409020805460ff1916600190811790915501610eef565b5060005b63ffffffff81168611156110825761107987878363ffffffff16818110611023576110236129a9565b905060200281019061103591906129bf565b61103f90806129e0565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118c092505050565b50600101610ffa565b50505050505050565b6001546001600160a01b031633146110b6576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426110c89190612970565b116109585760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314611111576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b036101009091048116908216036111745760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106cb565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c906020016107b1565b60006111b882611c07565b92915050565b336000908152600c602052604081205460ff1661120c5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106cb565b63ffffffff8085166000908152600d60205260409020541661122f816001612a3e565b63ffffffff8681166000908152600d60205260408120805463ffffffff1916939092169290921790556112867f00000000000000000000000000000000000000000000000000000000000000003384898989611c4d565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156112fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113209190612a66565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611352600184612970565b84876040516113649493929190612a8a565b60405180910390a1509093505050505b9392505050565b60055460ff166107145760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106cb565b6113cc61137b565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035461142b906001600160a01b0316611c07565b61146a5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106cb565b80516020146114a55760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106cb565b6107f06114b182612aaf565b611c85565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60055460ff16156107145760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106cb565b61160d6115bf565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113f93390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000634ff746f660e01b826040516024016116ab9190612ad3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a926117349291909116908590600401612ae6565b600060405180830381600087803b15801561174e57600080fd5b505af1158015611762573d6000803e3d6000fd5b505050505050565b6000806000858152600e602052604090205460ff16600281111561179057611790612660565b146117d35760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106cb565b61180784846020806020026040519081016040528092919082602080028082843760009201919091525086915061180f9050565b949350505050565b8260005b60208110156118b857600183821c166000858360208110611836576118366129a9565b60200201519050816001036118765760408051602081018390529081018590526060016040516020818303038152906040528051906020012093506118a3565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505080806118b090612b0a565b915050611813565b509392505050565b60006002600654036119145760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106cb565b600260065560006119258382611d19565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661195d62ffffff198316611d3d565b63ffffffff161461199f5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106cb565b60006119b062ffffff198316611d52565b905060016000828152600e602052604090205460ff1660028111156119d7576119d7612660565b14611a0e5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106cb565b6000818152600e60205260409020805460ff19166002179055611a717f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b23565b5a1015611aa95760405162461bcd60e51b81526004016106cb906020808252600490820152632167617360e01b604082015260600190565b6000611aba62ffffff198416611d9b565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611b1762ffffff198916611dac565b611b2662ffffff198a16611dc0565b611b3562ffffff198b16611dd5565b611b52611b4762ffffff198d16611dea565b62ffffff1916611e18565b604051602401611b659493929190612b3b565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611bae578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611bec93929190612b6a565b60405180910390a15050600160065550949695505050505050565b6000611c327f0000000000000000000000000000000000000000000000000000000000000000611e61565b6001600160a01b0316826001600160a01b0316149050919050565b6060868686868686604051602001611c6a96959493929190612b8b565b60405160208183030381529060405290509695505050505050565b600754600a54611c959190612b23565b4311611cd25760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016106cb565b6009805460088190559082905543600a5560408051918252602082018390527fbe4fbf2f787f5368b702855f62c5a32d491f12b2caf62d0481ebf44e0354ce7691016107b1565b815160009060208401611d3464ffffffffff85168284611eeb565b95945050505050565b60006111b862ffffff19831660286004611f32565b600080611d688360781c6001600160601b031690565b6001600160601b031690506000611d888460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006111b8611da983611f62565b90565b60006111b862ffffff198316826004611f32565b60006111b862ffffff19831660246004611f32565b60006111b862ffffff19831660046020611f73565b60006111b8604c611e0881601886901c6001600160601b0316612970565b62ffffff198516919060006120cf565b6060600080611e308460181c6001600160601b031690565b6001600160601b031690506040519150819250611e508483602001612149565b508181016020016040529052919050565b6000611e6c826122a0565b611e895760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ec7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190612be5565b600080611ef88385612b23565b9050604051811115611f08575060005b80600003611f1d5762ffffff19915050611374565b5050606092831b9190911790911b1760181b90565b6000611f3f826020612c02565b611f4a906008612c25565b60ff16611f58858585611f73565b901c949350505050565b60006111b862ffffff198316602c60205b60008160ff16600003611f8857506000611374565b611f9b8460181c6001600160601b031690565b6001600160601b0316611fb160ff841685612b23565b111561201557611ffc611fcd8560781c6001600160601b031690565b6001600160601b0316611fe98660181c6001600160601b031690565b6001600160601b0316858560ff16612304565b60405162461bcd60e51b81526004016106cb9190612ad3565b60208260ff16111561208f5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106cb565b6008820260006120a88660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806120e58660781c6001600160601b031690565b6001600160601b031690506120f986612372565b846121048784612b23565b61210e9190612b23565b11156121215762ffffff19915050611807565b61212b8582612b23565b905061213f8364ffffffffff168286611eeb565b9695505050505050565b600062ffffff19808416036121b15760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106cb565b6121ba836123ab565b61221a5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106cb565b600061222f8460181c6001600160601b031690565b6001600160601b03169050600061224f8560781c6001600160601b031690565b6001600160601b03169050600060405190508481111561226f5760206060fd5b8285848460045afa5061213f6122858760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190612987565b60606000612311866123e8565b915050600061231f866123e8565b915050600061232d866123e8565b915050600061233b866123e8565b915050838383836040516020016123559493929190612c4e565b604051602081830303815290604052945050505050949350505050565b60006123878260181c6001600160601b031690565b61239a8360781c6001600160601b031690565b016001600160601b03169050919050565b60006123b78260d81c90565b64ffffffffff1664ffffffffff036123d157506000919050565b60006123dc83612372565b60405110199392505050565b600080601f5b600f8160ff16111561243d576000612407826008612c25565b60ff1685901c905061241881612496565b61ffff16841793508160ff1660101461243357601084901b93505b50600019016123ee565b50600f5b60ff8160ff16101561249057600061245a826008612c25565b60ff1685901c905061246b81612496565b61ffff16831792508160ff1660001461248657601083901b92505b5060001901612441565b50915091565b60006124a860048360ff16901c6124c8565b60ff1661ffff919091161760081b6124bf826124c8565b60ff1617919050565b600060f08083179060ff821690036124e35750603092915050565b8060ff1660f1036124f75750603192915050565b8060ff1660f20361250b5750603292915050565b8060ff1660f30361251f5750603392915050565b8060ff1660f4036125335750603492915050565b8060ff1660f5036125475750603592915050565b8060ff1660f60361255b5750603692915050565b8060ff1660f70361256f5750603792915050565b8060ff1660f8036125835750603892915050565b8060ff1660f9036125975750603992915050565b8060ff1660fa036125ab5750606192915050565b8060ff1660fb036125bf5750606292915050565b8060ff1660fc036125d35750606392915050565b8060ff1660fd036125e75750606492915050565b8060ff1660fe036125fb5750606592915050565b8060ff1660ff0361260f5750606692915050565b50919050565b60006020828403121561262757600080fd5b5035919050565b6001600160a01b03811681146107f057600080fd5b60006020828403121561265557600080fd5b81356113748161262e565b634e487b7160e01b600052602160045260246000fd5b602081016003831061269857634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126126c557600080fd5b813567ffffffffffffffff808211156126e0576126e061269e565b604051601f8301601f19908116603f011681019082821181831017156127085761270861269e565b8160405283815286602085880101111561272157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561275357600080fd5b813567ffffffffffffffff81111561276a57600080fd5b611807848285016126b4565b6000806040838503121561278957600080fd5b50508035926020909101359150565b803563ffffffff811681146127ac57600080fd5b919050565b6000602082840312156127c357600080fd5b61137482612798565b60008060008061044085870312156127e357600080fd5b843567ffffffffffffffff808211156127fb57600080fd5b818701915087601f83011261280f57600080fd5b81358181111561281e57600080fd5b8860208260051b850101111561283357600080fd5b60208301965080955050505061042085018681111561285157600080fd5b9396929550505060209290920191903590565b60008060006060848603121561287957600080fd5b61288284612798565b925060208401359150604084013567ffffffffffffffff8111156128a557600080fd5b6128b1868287016126b4565b9150509250925092565b60005b838110156128d65781810151838201526020016128be565b838111156128e5576000848401525b50505050565b600081518084526129038160208601602086016128bb565b601f01601f19169290920160200192915050565b60408152600061292a60408301856128eb565b905060018060a01b03831660208301529392505050565b60006020828403121561295357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156129825761298261295a565b500390565b60006020828403121561299957600080fd5b8151801515811461137457600080fd5b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126129d657600080fd5b9190910192915050565b6000808335601e198436030181126129f757600080fd5b83018035915067ffffffffffffffff821115612a1257600080fd5b602001915036819003821315612a2757600080fd5b9250929050565b8183823760009101908152919050565b600063ffffffff808316818516808303821115612a5d57612a5d61295a565b01949350505050565b60008060408385031215612a7957600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061213f60808301846128eb565b8051602080830151919081101561260f5760001960209190910360031b1b16919050565b60208152600061137460208301846128eb565b6001600160a01b0383168152604060208201819052600090611807908301846128eb565b600060018201612b1c57612b1c61295a565b5060010190565b60008219821115612b3657612b3661295a565b500190565b600063ffffffff80871683528086166020840152508360408301526080606083015261213f60808301846128eb565b8381528215156020820152606060408201526000611d3460608301846128eb565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612bd381604c8501602087016128bb565b91909101604c01979650505050505050565b600060208284031215612bf757600080fd5b81516113748161262e565b600060ff821660ff841680821015612c1c57612c1c61295a565b90039392505050565b600060ff821660ff84168160ff0481118215151615612c4657612c4661295a565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161213f56fea26469706673582212202f84137b8f78098aebfd5015742e4d3377b621738a21c65b2e8a7fb51c288afb64736f6c634300080f0033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
