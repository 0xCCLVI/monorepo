/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPaused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "setWatcherPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620033303803806200333083398101604081905262000035916200040a565b8a8a8a8a8a8a8a8a8a8a8a808b8b8b8b8b8b6200005233620002cf565b8563ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e052821615620001215762000121826200032e565b80156200013357620001338162000397565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039690961695909517909455505060016006555050620cf850851015620001fb5760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a988410156200023e5760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b038216620002915760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b816001600160a01b0316610100816001600160a01b0316815250508260078190555050505050505050505050505050505050505050505050620004c9565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003ed57600080fd5b919050565b80516001600160a01b0381168114620003ed57600080fd5b60008060008060008060008060008060006101608c8e0312156200042d57600080fd5b620004388c620003d8565b9a506200044860208d01620003d8565b99506200045860408d01620003f2565b98506200046860608d01620003f2565b97506200047860808d01620003f2565b965060a08c0151955060c08c0151945060e08c015193506101008c01519250620004a66101208d01620003f2565b9150620004b76101408d01620003f2565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612db862000578600039600081816102be01526117020152600081816106310152818161172301526117aa0152600081816104fb01528181610ab301528181610f4d01526112c501526000610268015260006103fd01526000818161060a015281816106f901528181611a9d0152611b150152600081816103c3015281816104780152818161127601526116040152612db86000f3fe608060405234801561001057600080fd5b506004361061025e5760003560e01c80639d3117c711610146578063b95a2001116100c3578063d232c22011610087578063d232c220146105e0578063d2a3cc71146105f2578063d69f9d6114610605578063d88beda21461062c578063db1b765914610653578063fa31de011461066657600080fd5b8063b95a200114610585578063c5b350df146105ab578063cc394283146105b3578063cf796c75146105c6578063d1851c92146105cf57600080fd5b8063b187bd261161010a578063b187bd2614610539578063b1f8100d14610544578063b2f8764314610557578063b46300ec1461056a578063b697f5311461057257600080fd5b80639d3117c7146104d05780639fa92f9d146104f0578063a01892a5146104f6578063ad9c0c2e1461051d578063b0c273cc1461052657600080fd5b806352a9674b116101df5780636b04a933116101a35780636b04a933146104485780636eb67a511461045b578063715018a61461046e5780638d3638f4146104765780638da5cb5b1461049c57806398c9f2b9146104ad57600080fd5b806352a9674b146103be5780635bd11efc146103e55780635f61e3ec146103f857806365eaf11b146104375780636a42b8f81461043f57600080fd5b8063301f07c311610226578063301f07c3146103515780633cf52ffb146103745780634ff746f61461037c578063508a109b1461038f5780635190bc53146103a257600080fd5b806314168416146102635780631eeaabea146102a457806325e3beda146102b9578063272efc69146102ee5780632bbd59ca14610321575b600080fd5b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102b76102b236600461266e565b610679565b005b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161029b565b6103116102fc36600461269c565b600b6020526000908152604090205460ff1681565b604051901515815260200161029b565b61034461032f36600461266e565b600d6020526000908152604090205460ff1681565b60405161029b91906126cf565b61031161035f36600461266e565b60096020526000908152604090205460ff1681565b6002546102e0565b6102b761038a36600461279a565b6106ee565b6102b761039d3660046127cf565b610794565b6103116103b036600461269c565b6001600160a01b0316301490565b61028a7f000000000000000000000000000000000000000000000000000000000000000081565b6102b76103f336600461269c565b610a78565b61041f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161029b565b6102e0610aaf565b62093a806102e0565b6102b761045636600461266e565b610b38565b6102b761046936600461266e565b610c37565b6102b7610c6b565b7f000000000000000000000000000000000000000000000000000000000000000061028a565b6000546001600160a01b031661041f565b6103116104bb36600461266e565b600a6020526000908152604090205460ff1681565b6102e06104de36600461266e565b60086020526000908152604090205481565b3061041f565b61041f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e060075481565b6102b7610534366004612879565b610d2a565b600e5460ff16610311565b6102b761055236600461269c565b610e28565b6102b761056536600461269c565b610ecd565b6102b7610f49565b6102b761058036600461269c565b61102a565b61028a6105933660046128af565b600c6020526000908152604090205463ffffffff1681565b6102b76110a9565b60035461041f906001600160a01b031681565b6102e060045481565b6001546001600160a01b031661041f565b6000546001600160a01b031615610311565b6102b761060036600461269c565b611104565b61041f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e07f000000000000000000000000000000000000000000000000000000000000000081565b61031161066136600461269c565b6111c6565b6102e06106743660046128ca565b6111d7565b6000546001600160a01b031633146106a4576040516311a8a1bb60e31b815260040160405180910390fd5b60075481036106e95760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600755565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461074f5760405162461bcd60e51b81526004016106e09060208082526004908201526310a0a6a160e11b604082015260600190565b61075881611394565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610789929190612979565b60405180910390a150565b600e5460ff16156107d35760405162461bcd60e51b8152602060048201526009602482015268085d5b9c185d5cd95960ba1b60448201526064016106e0565b8361080a5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016106e0565b60008585600081811061081f5761081f6129a3565b905060200281019061083191906129b9565b61083b90806129da565b604051610849929190612a28565b6040518091039020905060006108b0828888600081811061086c5761086c6129a3565b905060200281019061087e91906129b9565b60200189896000818110610894576108946129a3565b90506020028101906108a691906129b9565b6104200135611434565b90506108be818686866114d9565b6000828152600d60205260409020805460ff191660019081179091555b63ffffffff81168711156109e25787878263ffffffff16818110610901576109016129a3565b905060200281019061091391906129b9565b61091d90806129da565b60405161092b929190612a28565b604051809103902092506000610980848a8a8563ffffffff16818110610953576109536129a3565b905060200281019061096591906129b9565b6020018b8b8663ffffffff16818110610894576108946129a3565b90508281146109bf5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016106e0565b506000838152600d60205260409020805460ff19166001908117909155016108db565b5060005b63ffffffff8116871115610a6e57610a6588888363ffffffff16818110610a0f57610a0f6129a3565b9050602002810190610a2191906129b9565b610a2b90806129da565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061159692505050565b506001016109e6565b5050505050505050565b6000546001600160a01b03163314610aa3576040516311a8a1bb60e31b815260040160405180910390fd5b610aac816118dd565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b339190612a38565b905090565b6000546001600160a01b03163314610b63576040516311a8a1bb60e31b815260040160405180910390fd5b600e5460ff16610b9f5760405162461bcd60e51b8152602060048201526007602482015266085c185d5cd95960ca1b60448201526064016106e0565b6000818152600860205260408120549003610bf45760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016106e0565b60008181526008602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906107899083815260200190565b6000546001600160a01b03163314610c62576040516311a8a1bb60e31b815260040160405180910390fd5b610aac81611946565b6000546001600160a01b03163314610c96576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610cb957604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610ccb9190612a67565b11610ce9576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610d13576040516323295ef960e01b815260040160405180910390fd5b600154610d28906001600160a01b0316611987565b565b6005546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d969190612a7e565b610dcd5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106e0565b600e5481151560ff909116151503610e155760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b60448201526064016106e0565b600e805460ff1916911515919091179055565b6000546001600160a01b03163314610e53576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610e7857506001600160a01b03811615155b15610e96576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ec457604051634a2fb73f60e11b815260040160405180910390fd5b610aac816119e6565b6000546001600160a01b03163314610ef8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610789565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcd9190612a38565b604051602001610fdf91815260200190565b6040516020818303038152906040529050610ff981611a34565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610789929190612979565b6000546001600160a01b03163314611055576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600b6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610789565b6001546001600160a01b031633146110d4576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426110e69190612a67565b11610d135760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461112f576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b039081169082160361118d5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106e0565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610789565b60006111d182611b0e565b92915050565b336000908152600b602052604081205460ff166112255760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016106e0565b63ffffffff8085166000908152600c602052604090205416611248816001612a9b565b63ffffffff8681166000908152600c60205260408120805463ffffffff19169390921692909217905561129f7f00000000000000000000000000000000000000000000000000000000000000003384898989611b54565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113399190612ac3565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f8361136b600184612a67565b848760405161137d9493929190612ae7565b60405180910390a1509093505050505b9392505050565b6003546113a9906001600160a01b0316611b0e565b6113e85760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016106e0565b80516020146114235760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016106e0565b610aac61142f82612b0c565b611b8c565b6000806000858152600d602052604090205460ff16600281111561145a5761145a6126b9565b1461149d5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016106e0565b6114d1848460208060200260405190810160405280929190826020800280828437600092019190915250869150611bcf9050565b949350505050565b6000848152600a602052604090205460ff16611590576114f883611c80565b600061152e858460208060200260405190810160405280929190826020800280828437600092019190915250869150611bcf9050565b90508381146115755760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016106e0565b506000848152600a60205260409020805460ff191660011790555b50505050565b60006002600654036115ea5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106e0565b600260065560006115fb8382611d72565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661163362ffffff198316611d96565b63ffffffff16146116755760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016106e0565b600061168662ffffff198316611dab565b905060016000828152600d602052604090205460ff1660028111156116ad576116ad6126b9565b146116e45760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016106e0565b6000818152600d60205260409020805460ff191660021790556117477f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612b30565b5a101561177f5760405162461bcd60e51b81526004016106e0906020808252600490820152632167617360e01b604082015260600190565b600061179062ffffff198416611df4565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006117ed62ffffff198916611e05565b6117fc62ffffff198a16611e19565b61180b62ffffff198b16611e2e565b61182861181d62ffffff198d16611e43565b62ffffff1916611e71565b60405160240161183b9493929190612b48565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611884578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a846040516118c293929190612b77565b60405180910390a15050600160065550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000634ff746f660e01b82604051602401611a4f9190612b98565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a92611ad89291909116908590600401612bab565b600060405180830381600087803b158015611af257600080fd5b505af1158015611b06573d6000803e3d6000fd5b505050505050565b6000611b397f0000000000000000000000000000000000000000000000000000000000000000611eba565b6001600160a01b0316826001600160a01b0316149050919050565b6060868686868686604051602001611b7196959493929190612bcf565b60405160208183030381529060405290509695505050505050565b60008181526008602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906107899083815260200190565b8260005b6020811015611c7857600183821c166000858360208110611bf657611bf66129a3565b6020020151905081600103611c36576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611c63565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50508080611c7090612c29565b915050611bd3565b509392505050565b60008181526009602052604090205460ff1615611c9a5750565b60008181526008602052604081205490819003611cf05760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016106e0565b600754611cfd8243612a67565b1015611d4b5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016106e0565b506000908152600960209081526040808320805460ff191660011790556008909152812055565b815160009060208401611d8d64ffffffffff85168284611f44565b95945050505050565b60006111d162ffffff19831660286004611f8b565b600080611dc18360781c6001600160601b031690565b6001600160601b031690506000611de18460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006111d1611e0283611fbb565b90565b60006111d162ffffff198316826004611f8b565b60006111d162ffffff19831660246004611f8b565b60006111d162ffffff19831660046020611fcc565b60006111d1604c611e6181601886901c6001600160601b0316612a67565b62ffffff19851691906000612128565b6060600080611e898460181c6001600160601b031690565b6001600160601b031690506040519150819250611ea984836020016121a2565b508181016020016040529052919050565b6000611ec5826122f9565b611ee25760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f20573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190612c42565b600080611f518385612b30565b9050604051811115611f61575060005b80600003611f765762ffffff1991505061138d565b5050606092831b9190911790911b1760181b90565b6000611f98826020612c5f565b611fa3906008612c82565b60ff16611fb1858585611fcc565b901c949350505050565b60006111d162ffffff198316602c60205b60008160ff16600003611fe15750600061138d565b611ff48460181c6001600160601b031690565b6001600160601b031661200a60ff841685612b30565b111561206e576120556120268560781c6001600160601b031690565b6001600160601b03166120428660181c6001600160601b031690565b6001600160601b0316858560ff1661235d565b60405162461bcd60e51b81526004016106e09190612b98565b60208260ff1611156120e85760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016106e0565b6008820260006121018660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60008061213e8660781c6001600160601b031690565b6001600160601b03169050612152866123cb565b8461215d8784612b30565b6121679190612b30565b111561217a5762ffffff199150506114d1565b6121848582612b30565b90506121988364ffffffffff168286611f44565b9695505050505050565b600062ffffff198084160361220a5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016106e0565b61221383612404565b6122735760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016106e0565b60006122888460181c6001600160601b031690565b6001600160601b0316905060006122a88560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156122c85760206060fd5b8285848460045afa506121986122de8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612339573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d19190612a7e565b6060600061236a86612441565b915050600061237886612441565b915050600061238686612441565b915050600061239486612441565b915050838383836040516020016123ae9493929190612cab565b604051602081830303815290604052945050505050949350505050565b60006123e08260181c6001600160601b031690565b6123f38360781c6001600160601b031690565b016001600160601b03169050919050565b60006124108260d81c90565b64ffffffffff1664ffffffffff0361242a57506000919050565b6000612435836123cb565b60405110199392505050565b600080601f5b600f8160ff161115612496576000612460826008612c82565b60ff1685901c9050612471816124ef565b61ffff16841793508160ff1660101461248c57601084901b93505b5060001901612447565b50600f5b60ff8160ff1610156124e95760006124b3826008612c82565b60ff1685901c90506124c4816124ef565b61ffff16831792508160ff166000146124df57601083901b92505b506000190161249a565b50915091565b600061250160048360ff16901c612521565b60ff1661ffff919091161760081b61251882612521565b60ff1617919050565b600060f08083179060ff8216900361253c5750603092915050565b8060ff1660f1036125505750603192915050565b8060ff1660f2036125645750603292915050565b8060ff1660f3036125785750603392915050565b8060ff1660f40361258c5750603492915050565b8060ff1660f5036125a05750603592915050565b8060ff1660f6036125b45750603692915050565b8060ff1660f7036125c85750603792915050565b8060ff1660f8036125dc5750603892915050565b8060ff1660f9036125f05750603992915050565b8060ff1660fa036126045750606192915050565b8060ff1660fb036126185750606292915050565b8060ff1660fc0361262c5750606392915050565b8060ff1660fd036126405750606492915050565b8060ff1660fe036126545750606592915050565b8060ff1660ff036126685750606692915050565b50919050565b60006020828403121561268057600080fd5b5035919050565b6001600160a01b0381168114610aac57600080fd5b6000602082840312156126ae57600080fd5b813561138d81612687565b634e487b7160e01b600052602160045260246000fd5b60208101600383106126f157634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261271e57600080fd5b813567ffffffffffffffff80821115612739576127396126f7565b604051601f8301601f19908116603f01168101908282118183101715612761576127616126f7565b8160405283815286602085880101111561277a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156127ac57600080fd5b813567ffffffffffffffff8111156127c357600080fd5b6114d18482850161270d565b600080600080600061046086880312156127e857600080fd5b853567ffffffffffffffff8082111561280057600080fd5b818801915088601f83011261281457600080fd5b81358181111561282357600080fd5b8960208260051b850101111561283857600080fd5b60209283019750955050860135925061044086018781111561285957600080fd5b94979396509194604001933592915050565b8015158114610aac57600080fd5b60006020828403121561288b57600080fd5b813561138d8161286b565b803563ffffffff811681146128aa57600080fd5b919050565b6000602082840312156128c157600080fd5b61138d82612896565b6000806000606084860312156128df57600080fd5b6128e884612896565b925060208401359150604084013567ffffffffffffffff81111561290b57600080fd5b6129178682870161270d565b9150509250925092565b60005b8381101561293c578181015183820152602001612924565b838111156115905750506000910152565b60008151808452612965816020860160208601612921565b601f01601f19169290920160200192915050565b60408152600061298c604083018561294d565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126129d057600080fd5b9190910192915050565b6000808335601e198436030181126129f157600080fd5b83018035915067ffffffffffffffff821115612a0c57600080fd5b602001915036819003821315612a2157600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612a4a57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612a7957612a79612a51565b500390565b600060208284031215612a9057600080fd5b815161138d8161286b565b600063ffffffff808316818516808303821115612aba57612aba612a51565b01949350505050565b60008060408385031215612ad657600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612198608083018461294d565b805160208083015191908110156126685760001960209190910360031b1b16919050565b60008219821115612b4357612b43612a51565b500190565b600063ffffffff808716835280861660208401525083604083015260806060830152612198608083018461294d565b8381528215156020820152606060408201526000611d8d606083018461294d565b60208152600061138d602083018461294d565b6001600160a01b03831681526040602082018190526000906114d19083018461294d565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612c1781604c850160208701612921565b91909101604c01979650505050505050565b600060018201612c3b57612c3b612a51565b5060010190565b600060208284031215612c5457600080fd5b815161138d81612687565b600060ff821660ff841680821015612c7957612c79612a51565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ca357612ca3612a51565b029392505050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161219856fea264697066735822122054aea9c9cb8f2b4a9e41e2fd678ef111667343ac0e5024939ee6095aedd7ac2e64736f6c634300080f0033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
