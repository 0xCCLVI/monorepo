/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumSpokeConnector,
  ArbitrumSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003a3f38038062003a3f8339810160408190526200003591620003b0565b89898989898989898989808a8a8a8a8a6200005033620002b0565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000315565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004649f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039357600080fd5b919050565b80516001600160a01b03811681146200039357600080fd5b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b6200037e565b9950620003ec60208c016200037e565b9850620003fc60408c0162000398565b97506200040c60608c0162000398565b96506200041c60808c0162000398565b955060a08b0151945060c08b0151935060e08b01519250620004426101008c0162000398565b9150620004536101208c0162000398565b90509295989b9194979a5092959850565b60805160a05160c05160e05161010051610120516101405161352c620005136000396000818161031a0152611d230152600081816108e301528181611d440152611dd101526000818161070a01528181610a5201528181610f92015261165f015260006102aa0152600061053801526000818161089901528181610bfa0152818161185d015261216e01526000818161047f01528181610646015281816116010152611c23015261352c6000f3fe60806040526004361061028c5760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d6114610887578063d7d317b3146108bb578063d88beda2146108d1578063db1b765914610905578063e0fed01014610925578063fa31de011461094557600080fd5b8063b95a2001146107c2578063c5b350df146107f5578063cc3942831461080a578063d1851c921461082a578063d232c22014610848578063d2a3cc711461086757600080fd5b8063a01892a511610113578063a01892a5146106f8578063a792c29b1461072c578063ad9c0c2e1461074c578063b1f8100d14610762578063b2f8764314610782578063b697f531146107a257600080fd5b80638456cb59146106225780638d3638f4146106375780638da5cb5b1461066a57806398c9f2b9146106885780639d3117c7146106b85780639fa92f9d146106e557600080fd5b806352a9674b116101fe5780636159ada1116101b75780636159ada11461057257806365eaf11b146105a257806368742da6146105b75780636a42b8f8146105d75780636b04a933146105ed578063715018a61461060d57600080fd5b806352a9674b1461046d578063572386ca146104a1578063579c1618146104d15780635bd11efc146104e75780635c975abb146105075780635f61e3ec1461052657600080fd5b8063301f07c311610250578063301f07c31461039a5780633cf52ffb146103da5780633f4ba83a146103ef5780634ff746f614610404578063508a109b146104245780635190bc531461044457600080fd5b806314168416146102985780631eeaabea146102e657806325e3beda146103085780632bb1ae7c1461034a5780632bbd59ca1461035d57600080fd5b3661029357005b600080fd5b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102f257600080fd5b50610306610301366004612edd565b610965565b005b34801561031457600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102dd565b610306610358366004612f99565b610a0f565b34801561036957600080fd5b5061038d610378366004612edd565b600f6020526000908152604090205460ff1681565b6040516102dd9190612fe4565b3480156103a657600080fd5b506103ca6103b5366004612edd565b600a6020526000908152604090205460ff1681565b60405190151581526020016102dd565b3480156103e657600080fd5b5060025461033c565b3480156103fb57600080fd5b50610306610bb2565b34801561041057600080fd5b5061030661041f366004612f99565b610bef565b34801561043057600080fd5b5061030661043f36600461300c565b610c95565b34801561045057600080fd5b506103ca61045f3660046130bd565b6001600160a01b0316301490565b34801561047957600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104ad57600080fd5b506103ca6104bc366004612edd565b600c6020526000908152604090205460ff1681565b3480156104dd57600080fd5b5061033c60055481565b3480156104f357600080fd5b506103066105023660046130bd565b610f57565b34801561051357600080fd5b50600354600160a01b900460ff166103ca565b34801561053257600080fd5b5061055a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102dd565b34801561057e57600080fd5b506103ca61058d3660046130bd565b600d6020526000908152604090205460ff1681565b3480156105ae57600080fd5b5061033c610f8e565b3480156105c357600080fd5b506103066105d23660046130bd565b611017565b3480156105e357600080fd5b5062093a8061033c565b3480156105f957600080fd5b50610306610608366004612edd565b611094565b34801561061957600080fd5b5061030661115f565b34801561062e57600080fd5b5061030661118a565b34801561064357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561067657600080fd5b506000546001600160a01b031661055a565b34801561069457600080fd5b506103ca6106a3366004612edd565b600b6020526000908152604090205460ff1681565b3480156106c457600080fd5b5061033c6106d3366004612edd565b60096020526000908152604090205481565b3480156106f157600080fd5b503061055a565b34801561070457600080fd5b5061055a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561073857600080fd5b5060045461055a906001600160a01b031681565b34801561075857600080fd5b5061033c60085481565b34801561076e57600080fd5b5061030661077d3660046130bd565b61123e565b34801561078e57600080fd5b5061030661079d3660046130bd565b6112dc565b3480156107ae57600080fd5b506103066107bd3660046130bd565b611358565b3480156107ce57600080fd5b506102cc6107dd3660046130f3565b600e6020526000908152604090205463ffffffff1681565b34801561080157600080fd5b506103066113d7565b34801561081657600080fd5b5060035461055a906001600160a01b031681565b34801561083657600080fd5b506001546001600160a01b031661055a565b34801561085457600080fd5b506000546001600160a01b0316156103ca565b34801561087357600080fd5b506103066108823660046130bd565b611447565b34801561089357600080fd5b5061055a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108c757600080fd5b5061033c60065481565b3480156108dd57600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561091157600080fd5b506103ca6109203660046130bd565b61151e565b34801561093157600080fd5b50610306610940366004612edd565b61152f565b34801561095157600080fd5b5061033c61096036600461310e565b611563565b6000546001600160a01b03163314610990576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109d55760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610a1761172e565b43600554600654610a28919061317b565b1115610a47576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad2919061318e565b6000818152600c602052604090205490915060ff1615610b285760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109cc565b600081604051602001610b3d91815260200190565b6040516020818303038152906040529050610b58818461177b565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610ba5908390869033906131f7565b60405180910390a1505050565b6000546001600160a01b03163314610bdd576040516311a8a1bb60e31b815260040160405180910390fd5b610be56118cf565b610bed61191f565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c505760405162461bcd60e51b81526004016109cc9060208082526004908201526310a0a6a160e11b604082015260600190565b610c5981611974565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610c8a929190613235565b60405180910390a150565b610c9d61172e565b610ca5611a14565b83610cdc5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109cc565b600085856000818110610cf157610cf161325f565b9050602002810190610d039190613275565b610d0d9080613296565b604051610d1b9291906132e4565b604051809103902090506000610d828288886000818110610d3e57610d3e61325f565b9050602002810190610d509190613275565b60200189896000818110610d6657610d6661325f565b9050602002810190610d789190613275565b6104200135611a6d565b9050610d9081868686611b12565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610eb65788888263ffffffff16818110610dd557610dd561325f565b9050602002810190610de79190613275565b610df19080613296565b604051610dff9291906132e4565b604051809103902093506000610e54858b8b8563ffffffff16818110610e2757610e2761325f565b9050602002810190610e399190613275565b6020018c8c8663ffffffff16818110610d6657610d6661325f565b9050838114610e935760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109cc565b506000848152600f60205260409020805460ff1916600190811790915501610daf565b5060005b818163ffffffff161015610f4257610f3989898363ffffffff16818110610ee357610ee361325f565b9050602002810190610ef59190613275565b610eff9080613296565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c0d92505050565b50600101610eba565b50505050610f506001600755565b5050505050565b6000546001600160a01b03163314610f82576040516311a8a1bb60e31b815260040160405180910390fd5b610f8b81611eea565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611012919061318e565b905090565b6000546001600160a01b03163314611042576040516311a8a1bb60e31b815260040160405180910390fd5b4761104d8282611f53565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161108891815260200190565b60405180910390a25050565b6000546001600160a01b031633146110bf576040516311a8a1bb60e31b815260040160405180910390fd5b6110c76118cf565b600081815260096020526040812054900361111c5760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109cc565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610c8a9083815260200190565b6000546001600160a01b03163314610bed576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156111d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f791906132f4565b61122e5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109cc565b61123661172e565b610bed612071565b6000546001600160a01b03163314611269576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611287575060025415155b156112a5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036112d357604051634a2fb73f60e11b815260040160405180910390fd5b610f8b816120b4565b6000546001600160a01b03163314611307576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610c8a565b6000546001600160a01b03163314611383576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610c8a565b6001546001600160a01b03163314611402576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114149190613316565b11611432576040516324e0285f60e21b815260040160405180910390fd5b600154610bed906001600160a01b0316612102565b6000546001600160a01b03163314611472576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036114d05760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109cc565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610c8a565b600061152982612167565b92915050565b6000546001600160a01b0316331461155a576040516311a8a1bb60e31b815260040160405180910390fd5b610f8b816121ad565b336000908152600d602052604081205460ff166115b15760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b60448201526064016109cc565b63ffffffff8085166000908152600e60205260408120805491929190911690826115da83613329565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006116397f0000000000000000000000000000000000000000000000000000000000000000611630336001600160a01b031690565b8489898961222b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156116af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d3919061334c565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611705600184613316565b84876040516117179493929190613370565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610bed5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109cc565b81516020146117b65760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109cc565b8051156117f45760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109cc565b6000634ff746f660e01b8360405160240161180f9190613395565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925260035491516349460b4d60e11b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263928c169a9261189892919091169085906004016133a8565b600060405180830381600087803b1580156118b257600080fd5b505af11580156118c6573d6000803e3d6000fd5b50505050505050565b600354600160a01b900460ff16610bed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109cc565b6119276118cf565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600354611989906001600160a01b0316612167565b6119c85760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016109cc565b8051602014611a035760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109cc565b610f8b611a0f826133cc565b612263565b600260075403611a665760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109cc565b6002600755565b6000806000858152600f602052604090205460ff166002811115611a9357611a93612fce565b14611ad65760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109cc565b611b0a84846020806020026040519081016040528092919082602080028082843760009201919091525086915061238c9050565b949350505050565b6000848152600b602052604090205460ff16611c0757611b31836126da565b6000611b6785846020806020026040519081016040528092919082602080028082843760009201919091525086915061238c9050565b9050838114611bae5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109cc565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611bfd9086815260200190565b60405180910390a3505b50505050565b600080611c1a838261283a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611c5262ffffff19831661285e565b63ffffffff1614611c945760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109cc565b6000611ca562ffffff198316612873565b905060016000828152600f602052604090205460ff166002811115611ccc57611ccc612fce565b14611d035760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109cc565b6000818152600f60205260409020805460ff191660021790556001611d687f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061317b565b611d729190613316565b5a11611da95760405162461bcd60e51b81526004016109cc906020808252600490820152632167617360e01b604082015260600190565b6000611dba62ffffff1984166128bc565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611e1562ffffff1988166128cd565b611e2462ffffff1989166128e1565b611e3362ffffff198a166128f6565b611e50611e4562ffffff198c1661290b565b62ffffff1916612939565b604051602401611e6394939291906133f3565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050611e9d858560008685612982565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe4890611ed69088908b908690613422565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611fa35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611ff0576040519150601f19603f3d011682016040523d82523d6000602084013e611ff5565b606091505b505090508061206c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109cc565b505050565b61207961172e565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119573390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60006121927f0000000000000000000000000000000000000000000000000000000000000000612a0d565b6001600160a01b0316826001600160a01b0316149050919050565b60055481036121f05760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109cc565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610c8a565b606086868686868660405160200161224896959493929190613443565b60405160208183030381529060405290509695505050505050565b806122a15760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109cc565b600081815260096020526040902054156122f45760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109cc565b6000818152600a602052604090205460ff16156123495760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109cc565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610c8a9083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b8061271d5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109cc565b6000818152600a602052604090205460ff16156127375750565b6000818152600960205260408120549081900361278d5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109cc565b60085461279a8243613316565b10156127e85760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109cc565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b81516000906020840161285564ffffffffff85168284612a97565b95945050505050565b600061152962ffffff19831660286004612ad4565b6000806128898360781c6001600160601b031690565b6001600160601b0316905060006128a98460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115296128ca83612b04565b90565b600061152962ffffff198316826004612ad4565b600061152962ffffff19831660246004612ad4565b600061152962ffffff19831660046020612b15565b6000611529604c61292981601886901c6001600160601b0316613316565b62ffffff19851691906000612c20565b60606000806129518460181c6001600160601b031690565b6001600160601b0316905060405191508192506129718483602001612c9a565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff8111156129a8576129a8612ef6565b6040519080825280601f01601f1916602001820160405280156129d2576020820181803683370190505b5090506000808751602089018b8e8ef191503d9250868311156129f3578692505b828152826000602083013e90999098509650505050505050565b6000612a1882612d8d565b612a355760405163253a6fc960e11b815260040160405180910390fd5b816001600160a01b031663d74523b36040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611529919061349d565b600080612aa4838561317b565b9050604051811115612ab4575060005b80600003612ac95762ffffff19915050611727565b612855858585612df1565b6000612ae18260206134ba565b612aec9060086134d3565b60ff16612afa858585612b15565b901c949350505050565b600061152962ffffff198316602c60205b60008160ff16600003612b2a57506000611727565b612b3d8460181c6001600160601b031690565b6001600160601b0316612b5360ff84168561317b565b1115612bbb57612b6c8460781c6001600160601b031690565b612b7f8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016109cc565b60208260ff161115612be05760405163045df3f960e01b815260040160405180910390fd5b600882026000612bf98660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612c368660781c6001600160601b031690565b6001600160601b03169050612c4a86612e68565b84612c55878461317b565b612c5f919061317b565b1115612c725762ffffff19915050611b0a565b612c7c858261317b565b9050612c908364ffffffffff168286612a97565b9695505050505050565b600062ffffff1980841603612cc25760405163148d513360e21b815260040160405180910390fd5b612ccb83612ea1565b15612ce957604051632ee0949160e11b815260040160405180910390fd5b6000612cfe8460181c6001600160601b031690565b6001600160601b031690506000612d1e8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612d3f5760206060fd5b8386858560045afa905080612d6757604051632af1bd9b60e21b815260040160405180910390fd5b612d82612d748860d81c90565b64ffffffffff168786612df1565b979650505050505050565b6000816001600160a01b031663175a260b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612dcd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152991906132f4565b60006060601883856001600160601b03821682148015612e19575086816001600160601b0316145b612e525760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016109cc565b96831b90961790911b90941790931b9392505050565b6000612e7d8260181c6001600160601b031690565b612e908360781c6001600160601b031690565b016001600160601b03169050919050565b6000612ead8260d81c90565b64ffffffffff1664ffffffffff03612ec757506001919050565b6000612ed283612e68565b604051109392505050565b600060208284031215612eef57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612f1d57600080fd5b813567ffffffffffffffff80821115612f3857612f38612ef6565b604051601f8301601f19908116603f01168101908282118183101715612f6057612f60612ef6565b81604052838152866020858801011115612f7957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612fab57600080fd5b813567ffffffffffffffff811115612fc257600080fd5b611b0a84828501612f0c565b634e487b7160e01b600052602160045260246000fd5b602081016003831061300657634e487b7160e01b600052602160045260246000fd5b91905290565b6000806000806000610460868803121561302557600080fd5b853567ffffffffffffffff8082111561303d57600080fd5b818801915088601f83011261305157600080fd5b81358181111561306057600080fd5b8960208260051b850101111561307557600080fd5b60209283019750955050860135925061044086018781111561309657600080fd5b94979396509194604001933592915050565b6001600160a01b0381168114610f8b57600080fd5b6000602082840312156130cf57600080fd5b8135611727816130a8565b803563ffffffff811681146130ee57600080fd5b919050565b60006020828403121561310557600080fd5b611727826130da565b60008060006060848603121561312357600080fd5b61312c846130da565b925060208401359150604084013567ffffffffffffffff81111561314f57600080fd5b61315b86828701612f0c565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561152957611529613165565b6000602082840312156131a057600080fd5b5051919050565b60005b838110156131c25781810151838201526020016131aa565b50506000910152565b600081518084526131e38160208601602086016131a7565b601f01601f19169290920160200192915050565b60608152600061320a60608301866131cb565b828103602084015261321c81866131cb565b91505060018060a01b0383166040830152949350505050565b60408152600061324860408301856131cb565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261328c57600080fd5b9190910192915050565b6000808335601e198436030181126132ad57600080fd5b83018035915067ffffffffffffffff8211156132c857600080fd5b6020019150368190038213156132dd57600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561330657600080fd5b8151801515811461172757600080fd5b8181038181111561152957611529613165565b600063ffffffff80831681810361334257613342613165565b6001019392505050565b6000806040838503121561335f57600080fd5b505080516020909101519092909150565b848152836020820152826040820152608060608201526000612c9060808301846131cb565b60208152600061172760208301846131cb565b6001600160a01b0383168152604060208201819052600090611b0a908301846131cb565b805160208083015191908110156133ed576000198160200360031b1b821691505b50919050565b600063ffffffff808716835280861660208401525083604083015260806060830152612c9060808301846131cb565b838152821515602082015260606040820152600061285560608301846131cb565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161348b81604c8501602087016131a7565b91909101604c01979650505050505050565b6000602082840312156134af57600080fd5b8151611727816130a8565b60ff828116828216039081111561152957611529613165565b60ff81811683821602908116908181146134ef576134ef613165565b509291505056fea2646970667358221220c6e0bccea47b0808dc8b4388e16236347c665f0a7b2548eebc25542ada9746af64736f6c63430008110033";

type ArbitrumSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumSpokeConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<ArbitrumSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumSpokeConnector {
    return super.attach(address) as ArbitrumSpokeConnector;
  }
  override connect(signer: Signer): ArbitrumSpokeConnector__factory {
    return super.connect(signer) as ArbitrumSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumSpokeConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumSpokeConnector;
  }
}
