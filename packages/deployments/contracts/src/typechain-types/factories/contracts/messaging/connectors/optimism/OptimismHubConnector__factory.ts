/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_xDomainCalldata",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "verifyXDomainMessage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002e5b38038062002e5b8339810160408190526200003591620002fa565b8686868686868585858585856200004c33620001bf565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b826200021e565b80156200012d576200012d8162000287565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039c909c169b909b17909a5550620003869e505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620002dd57600080fd5b919050565b80516001600160a01b0381168114620002dd57600080fd5b600080600080600080600060e0888a0312156200031657600080fd5b6200032188620002c8565b96506200033160208901620002c8565b95506200034160408901620002e2565b94506200035160608901620002e2565b93506200036160808901620002e2565b925060a088015191506200037860c08901620002e2565b905092959891949750929550565b60805160a05160c05160e051612a71620003ea6000396000818161017c01526108ba0152600081816102190152818161066d01526108f50152600081816103180152818161035801528181610b550152610df2015260006101df0152612a716000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806382646a58116100b8578063cc3942831161007c578063cc394283146102d4578063cf796c75146102e7578063d1851c92146102f0578063d232c22014610301578063d69f9d6114610313578063db1b76591461033a57600080fd5b806382646a58146102725780638da5cb5b1461028557806393d4850214610296578063b1f8100d146102b9578063c5b350df146102cc57600080fd5b80635bd11efc1161010a5780635bd11efc146102015780635f61e3ec146102145780636a42b8f81461023b5780636e2edb4e146102445780636eb67a5114610257578063715018a61461026a57600080fd5b80630f329ef81461014757806314168416146101775780633cf52ffb146101b35780634ff746f6146101c557806352a9674b146101da575b600080fd5b60055461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161016e565b6002545b60405190815260200161016e565b6101d86101d336600461233a565b61034d565b005b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b6101d861020f36600461238b565b6103fc565b61015a7f000000000000000000000000000000000000000000000000000000000000000081565b62093a806101b7565b6101d8610252366004612588565b610433565b6101d861026536600461261a565b61056f565b6101d86105a3565b6101d861028036600461233a565b610662565b6000546001600160a01b031661015a565b6102a96102a4366004612633565b610703565b604051901515815260200161016e565b6101d86102c736600461238b565b610728565b6101d86107cd565b60035461015a906001600160a01b031681565b6101b760045481565b6001546001600160a01b031661015a565b6000546001600160a01b0316156102a9565b61015a7f000000000000000000000000000000000000000000000000000000000000000081565b6102a961034836600461238b565b610828565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103b75760405162461bcd60e51b81526004016103ae9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b6103c081610833565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516103f19291906126f2565b60405180910390a150565b6000546001600160a01b03163314610427576040516311a8a1bb60e31b815260040160405180910390fd5b61043081610957565b50565b6003546001600160a01b038581169116146104835760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016103ae565b6001600160a01b03851630146104c35760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016103ae565b60006104d1868686866109c0565b90506104dd8183610703565b6105125760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016103ae565b604051309061052290869061271c565b6000604051808303816000865af19150503d806000811461055f576040519150601f19603f3d011682016040523d82523d6000602084013e610564565b606091505b505050505050505050565b6000546001600160a01b0316331461059a576040516311a8a1bb60e31b815260040160405180910390fd5b61043081610a0d565b6000546001600160a01b031633146105ce576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036105f157604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610603919061274e565b11610621576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561064b576040516323295ef960e01b815260040160405180910390fd5b600154610660906001600160a01b0316610a4e565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106c95760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016103ae565b6106d281610aad565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516103f19291906126f2565b600061070e82610b8d565b801561071f575061071f8383610c0e565b90505b92915050565b6000546001600160a01b03163314610753576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561077857506001600160a01b03811615155b15610796576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036107c457604051634a2fb73f60e11b815260040160405180910390fd5b61043081610d9d565b6001546001600160a01b031633146107f8576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261080a919061274e565b1161064b5760405163d39c12bb60e01b815260040160405180910390fd5b600061072282610deb565b805160201461086e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103ae565b600061087982612765565b60008181526006602052604090205490915060ff166109535760008181526006602052604090819020805460ff19166001179055516378ffd0a160e01b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906378ffd0a1906044015b600060405180830381600087803b15801561093a57600080fd5b505af115801561094e573d6000803e3d6000fd5b505050505b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6060848484846040516024016109d9949392919061278c565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051602014610ae85760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103ae565b6000634ff746f660e01b82604051602401610b0391906127c9565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b9461092094909216928792016127dc565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610bcd939192909190600401612816565b602060405180830381865afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072291906128c1565b600080836007602160991b01604051602001610c2b9291906128e3565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b9183019190915291506000908190610c9f9060340160408051601f1981840301815291905260608701518751610e17565b9092509050600182151514610d325760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016103ae565b6000610d3d82610e40565b9050610d9284604051602001610d5591815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151610f04565b979650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006107227f000000000000000000000000000000000000000000000000000000000000000083610f28565b600060606000610e2686610fe9565b9050610e3381868661101b565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290610e6d836110f6565b90506040518060800160405280610e9d83600081518110610e9057610e9061291a565b6020026020010151611129565b8152602001610eb883600181518110610e9057610e9061291a565b8152602001610ee083600281518110610ed357610ed361291a565b6020026020010151611130565b8152602001610efb83600381518110610ed357610ed361291a565b90529392505050565b600080610f1086610fe9565b9050610f1e81868686611232565b9695505050505050565b6000336001600160a01b03841614610f6c5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016103ae565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd89190612930565b6001600160a01b0316149392505050565b6060818051906020012060405160200161100591815260200190565b6040516020818303038152906040529050919050565b60006060600061102a85611268565b9050600080600061103c848a89611362565b815192955090935091501580806110505750815b61109c5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016103ae565b6000816110b857604051806020016040528060008152506110e4565b6110e4866110c760018861274e565b815181106110d7576110d761291a565b6020026020010151611781565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610722906117ab565b6000610722825b60006021826000015111156111875760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103ae565b600080600061119585611997565b9194509250905060008160018111156111b0576111b061294d565b146111fd5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103ae565b600083866020015161120f9190612963565b80519091506020841015610f1e5760208490036101000a90049695505050505050565b600080600061124287868661101b565b91509150818015610d925750805160208083019190912087519188019190912014610d92565b60606000611275836110f6565b9050600081516001600160401b038111156112925761129261223b565b6040519080825280602002602001820160405280156112d757816020015b60408051808201909152606080825260208201528152602001906001900390816112b05790505b50905060005b825181101561135a57600061130a8483815181106112fd576112fd61291a565b6020026020010151611ce1565b90506040518060400160405280828152602001611326836110f6565b81525083838151811061133b5761133b61291a565b60200260200101819052505080806113529061297b565b9150506112dd565b509392505050565b6000606081808061137287611d71565b90506000869050600080611399604051806040016040528060608152602001606081525090565b60005b8c51811015611759578c81815181106113b7576113b761291a565b6020026020010151915082846113cd9190612963565b93506113da600188612963565b965083600003611435578151805160209091012085146114305760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016103ae565b6114f2565b815151602011611497578151805160209091012085146114305760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016103ae565b846114a58360000151611eab565b146114f25760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016103ae565b6114fe60106001612963565b8260200151510361157057855184146117595760008685815181106115255761152561291a565b602001015160f81c60f81b60f81c9050600083602001518260ff16815181106115505761155061291a565b6020026020010151905061156381611ed3565b9650600194505050611747565b6002826020015151036116ff57600061158883611f10565b905060008160008151811061159f5761159f61291a565b016020015160f81c905060006115b66002836129aa565b6115c19060026129cc565b905060006115d2848360ff16611f34565b905060006115e08b8a611f34565b905060006115ee8383611f6a565b905060ff851660021480611605575060ff85166003145b1561163f5780835114801561161a5750808251145b1561162c57611629818b612963565b99505b50600160ff1b9950611759945050505050565b60ff85161580611652575060ff85166001145b156116a857825181146116725750600160ff1b9950611759945050505050565b611699886020015160018151811061168c5761168c61291a565b6020026020010151611ed3565b9a509750611747945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016103ae565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016103ae565b806117518161297b565b91505061139c565b50600160ff1b84148661176c8786611f34565b909e909d50909b509950505050505050505050565b602081015180516060916107229161179b9060019061274e565b815181106112fd576112fd61291a565b60606000806117b984611997565b919350909150600190508160018111156117d5576117d561294d565b146118225760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016103ae565b6040805160208082526104208201909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161183b5790505090506000835b865181101561198c57602082106118d45760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016103ae565b6000806119116040518060400160405280858c600001516118f5919061274e565b8152602001858c6020015161190a9190612963565b9052611997565b50915091506040518060400160405280838361192d9190612963565b8152602001848b602001516119429190612963565b8152508585815181106119575761195761291a565b602090810291909101015261196d600185612963565b93506119798183612963565b6119839084612963565b92505050611868565b508152949350505050565b6000806000808460000151116119ef5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016103ae565b6020840151805160001a607f8111611a14576000600160009450945094505050611cda565b60b78111611a90576000611a2960808361274e565b905080876000015111611a7e5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016103ae565b60019550935060009250611cda915050565b60bf8111611b7f576000611aa560b78361274e565b905080876000015111611afa5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016103ae565b600183015160208290036101000a9004611b148183612963565b885111611b635760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016103ae565b611b6e826001612963565b9650945060009350611cda92505050565b60f78111611bfa576000611b9460c08361274e565b905080876000015111611be95760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016103ae565b600195509350849250611cda915050565b6000611c0760f78361274e565b905080876000015111611c5c5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016103ae565b600183015160208290036101000a9004611c768183612963565b885111611cbe5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016103ae565b611cc9826001612963565b9650945060019350611cda92505050565b9193909250565b60606000806000611cf185611997565b919450925090506000816001811115611d0c57611d0c61294d565b14611d595760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016103ae565b611d6885602001518484611fe6565b95945050505050565b6060600082516002611d8391906129ef565b6001600160401b03811115611d9a57611d9a61223b565b6040519080825280601f01601f191660200182016040528015611dc4576020820181803683370190505b50905060005b8351811015611ea4576004848281518110611de757611de761291a565b01602001516001600160f81b031916901c82611e048360026129ef565b81518110611e1457611e1461291a565b60200101906001600160f81b031916908160001a9053506010848281518110611e3f57611e3f61291a565b0160200151611e51919060f81c6129aa565b60f81b82611e608360026129ef565b611e6b906001612963565b81518110611e7b57611e7b61291a565b60200101906001600160f81b031916908160001a90535080611e9c8161297b565b915050611dca565b5092915050565b6000602082511015611ebf57506020015190565b818060200190518101906107229190612a0e565b60006060602083600001511015611ef457611eed836120c3565b9050611f00565b611efd83611ce1565b90505b611f0981611eab565b9392505050565b6060610722611f2f83602001516000815181106112fd576112fd61291a565b611d71565b606082518210611f535750604080516020810190915260008152610722565b61071f8383848651611f65919061274e565b6120ce565b6000805b808451118015611f7e5750808351115b8015611fcf5750828181518110611f9757611f9761291a565b602001015160f81c60f81b6001600160f81b031916848281518110611fbe57611fbe61291a565b01602001516001600160f81b031916145b1561071f5780611fde8161297b565b915050611f6e565b60606000826001600160401b038111156120025761200261223b565b6040519080825280601f01601f19166020018201604052801561202c576020820181803683370190505b509050805160000361203f579050611f09565b600061204b8587612963565b90506020820160005b61205f602087612a27565b8110156120965782518252612075602084612963565b9250612082602083612963565b91508061208e8161297b565b915050612054565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b606061072282612225565b6060816120dc81601f612963565b101561211b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103ae565b826121268382612963565b10156121655760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103ae565b61216f8284612963565b845110156121b35760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103ae565b6060821580156121d2576040519150600082526020820160405261221c565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561220b5780518352602092830192016121f3565b5050858452601f01601f1916604052505b50949350505050565b6060610722826020015160008460000151611fe6565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b03811182821017156122735761227361223b565b60405290565b604080519081016001600160401b03811182821017156122735761227361223b565b604051601f8201601f191681016001600160401b03811182821017156122c3576122c361223b565b604052919050565b600082601f8301126122dc57600080fd5b81356001600160401b038111156122f5576122f561223b565b612308601f8201601f191660200161229b565b81815284602083860101111561231d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561234c57600080fd5b81356001600160401b0381111561236257600080fd5b61236e848285016122cb565b949350505050565b6001600160a01b038116811461043057600080fd5b60006020828403121561239d57600080fd5b813561071f81612376565b600060a082840312156123ba57600080fd5b6123c2612251565b90508135815260208201356020820152604082013560408201526060820135606082015260808201356001600160401b038111156123ff57600080fd5b61240b848285016122cb565b60808301525092915050565b60006040828403121561242957600080fd5b612431612279565b9050813581526020808301356001600160401b038082111561245257600080fd5b818501915085601f83011261246657600080fd5b8135818111156124785761247861223b565b8060051b915061248984830161229b565b81815291830184019184810190888411156124a357600080fd5b938501935b838510156124c1578435825293850193908501906124a8565b808688015250505050505092915050565b600060a082840312156124e457600080fd5b6124ec612251565b90508135815260208201356001600160401b038082111561250c57600080fd5b612518858386016123a8565b6020840152604084013591508082111561253157600080fd5b61253d85838601612417565b6040840152606084013591508082111561255657600080fd5b612562858386016122cb565b6060840152608084013591508082111561257b57600080fd5b5061240b848285016122cb565b600080600080600060a086880312156125a057600080fd5b85356125ab81612376565b945060208601356125bb81612376565b935060408601356001600160401b03808211156125d757600080fd5b6125e389838a016122cb565b945060608801359350608088013591508082111561260057600080fd5b5061260d888289016124d2565b9150509295509295909350565b60006020828403121561262c57600080fd5b5035919050565b6000806040838503121561264657600080fd5b82356001600160401b038082111561265d57600080fd5b612669868387016122cb565b9350602085013591508082111561267f57600080fd5b5061268c858286016124d2565b9150509250929050565b60005b838110156126b1578181015183820152602001612699565b838111156126c0576000848401525b50505050565b600081518084526126de816020860160208601612696565b601f01601f19169290920160200192915050565b60408152600061270560408301856126c6565b905060018060a01b03831660208301529392505050565b6000825161272e818460208701612696565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b60008282101561276057612760612738565b500390565b80516020808301519190811015612786576000198160200360031b1b821691505b50919050565b6001600160a01b038581168252841660208201526080604082018190526000906127b8908301856126c6565b905082606083015295945050505050565b60208152600061071f60208301846126c6565b6001600160a01b0384168152606060208201819052600090612800908301856126c6565b905063ffffffff83166040830152949350505050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e08501526128616101008501826126c6565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b808410156128b35784518252938501936001939093019290850190612893565b509998505050505050505050565b6000602082840312156128d357600080fd5b8151801515811461071f57600080fd5b600083516128f5818460208801612696565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561294257600080fd5b815161071f81612376565b634e487b7160e01b600052602160045260246000fd5b6000821982111561297657612976612738565b500190565b60006001820161298d5761298d612738565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806129bd576129bd612994565b8060ff84160691505092915050565b600060ff821660ff8416808210156129e6576129e6612738565b90039392505050565b6000816000190483118215151615612a0957612a09612738565b500290565b600060208284031215612a2057600080fd5b5051919050565b600082612a3657612a36612994565b50049056fea26469706673582212201b3d0b2866593e4ddb5cf24e9008f14d4c76669f4c27e2103afed1c59267dc6464736f6c634300080f0033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
