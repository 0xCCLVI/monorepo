/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620033b8380380620033b88339810160408190526200003591620002fa565b8686868686868585858585856200004c33620001bf565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b826200021e565b80156200012d576200012d8162000287565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039c909c169b909b17909a5550620003869e505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620002dd57600080fd5b919050565b80516001600160a01b0381168114620002dd57600080fd5b600080600080600080600060e0888a0312156200031657600080fd5b6200032188620002c8565b96506200033160208901620002c8565b95506200034160408901620002e2565b94506200035160608901620002e2565b93506200036160808901620002e2565b925060a088015191506200037860c08901620002e2565b905092959891949750929550565b60805160a05160c05160e051612fce620003ea6000396000818161017c015261091f015260008181610219015281816106f1015261095a0152600081816103280152818161036801528181610d5d0152610dea015260006101df0152612fce6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806382646a58116100b8578063cc3942831161007c578063cc394283146102e4578063cf796c75146102f7578063d1851c9214610300578063d232c22014610311578063d69f9d6114610323578063db1b76591461034a57600080fd5b806382646a58146102725780638da5cb5b14610285578063b1f8100d14610296578063c1f0808a146102a9578063c5b350df146102dc57600080fd5b80635bd11efc1161010a5780635bd11efc146102015780635f61e3ec146102145780636a42b8f81461023b5780636e2edb4e146102445780636eb67a5114610257578063715018a61461026a57600080fd5b80630f329ef81461014757806314168416146101775780633cf52ffb146101b35780634ff746f6146101c557806352a9674b146101da575b600080fd5b60055461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161016e565b6002545b60405190815260200161016e565b6101d86101d3366004612809565b61035d565b005b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b6101d861020f36600461285b565b61040c565b61015a7f000000000000000000000000000000000000000000000000000000000000000081565b62093a806101b7565b6101d86102523660046129c1565b610443565b6101d8610265366004612afa565b6105f3565b6101d8610627565b6101d8610280366004612809565b6106e6565b6000546001600160a01b031661015a565b6101d86102a436600461285b565b610787565b6102cc6102b7366004612afa565b60066020526000908152604090205460ff1681565b604051901515815260200161016e565b6101d861082c565b60035461015a906001600160a01b031681565b6101b760045481565b6001546001600160a01b031661015a565b6000546001600160a01b0316156102cc565b61015a7f000000000000000000000000000000000000000000000000000000000000000081565b6102cc61035836600461285b565b610887565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103c75760405162461bcd60e51b81526004016103be9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b6103d081610898565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610401929190612b6f565b60405180910390a150565b6000546001600160a01b03163314610437576040516311a8a1bb60e31b815260040160405180910390fd5b610440816109bc565b50565b6003546001600160a01b038581169116146104935760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016103be565b6001600160a01b03851630146104d35760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016103be565b60006104e186868686610a25565b90506104ed8183610a72565b6105225760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016103be565b600061052e8582610a95565b9050600061056561054d6020601885901c6001600160601b0316612baf565b62ffffff198416906001600160601b03166020610ab9565b90506105918160405160200161057d91815260200190565b604051602081830303815290604052610898565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced816040516020016105c591815260200190565b60408051601f19818403018152908290526105e1913390612b6f565b60405180910390a15050505050505050565b6000546001600160a01b0316331461061e576040516311a8a1bb60e31b815260040160405180910390fd5b61044081610c15565b6000546001600160a01b03163314610652576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361067557604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106879190612bd7565b116106a5576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156106cf576040516323295ef960e01b815260040160405180910390fd5b6001546106e4906001600160a01b0316610c56565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461074d5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016103be565b61075681610cb5565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610401929190612b6f565b6000546001600160a01b031633146107b2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156107d757506001600160a01b03811615155b156107f5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361082357604051634a2fb73f60e11b815260040160405180910390fd5b61044081610d95565b6001546001600160a01b03163314610857576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108699190612bd7565b116106cf5760405163d39c12bb60e01b815260040160405180910390fd5b600061089282610de3565b92915050565b80516020146108d35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103be565b60006108de82612bee565b60008181526006602052604090205490915060ff166109b85760008181526006602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa906044015b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050505b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610a3e9493929190612c12565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610a7d82610e0f565b8015610a8e5750610a8e8383610e90565b9392505050565b815160009060208401610ab064ffffffffff8516828461101f565b95945050505050565b60008160ff16600003610ace57506000610a8e565b610ae18460181c6001600160601b031690565b6001600160601b0316610af760ff841685612c4f565b1115610b5b57610b42610b138560781c6001600160601b031690565b6001600160601b0316610b2f8660181c6001600160601b031690565b6001600160601b0316858560ff16611066565b60405162461bcd60e51b81526004016103be9190612c67565b60208260ff161115610bd55760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016103be565b600882026000610bee8660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051602014610cf05760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016103be565b6000634ff746f660e01b82604051602401610d0b9190612c67565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b946109859490921692879201612c7a565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006108927f0000000000000000000000000000000000000000000000000000000000000000836110d4565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610e4f939192909190600401612cb4565b602060405180830381865afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108929190612d5f565b600080836007602160991b01604051602001610ead929190612d81565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b9183019190915291506000908190610f219060340160408051601f1981840301815291905260608701518751611195565b9092509050600182151514610fb45760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016103be565b6000610fbf826111be565b905061101484604051602001610fd791815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151611282565b979650505050505050565b60008061102c8385612c4f565b905060405181111561103c575060005b806000036110515762ffffff19915050610a8e565b5050606092831b9190911790911b1760181b90565b60606000611073866112a6565b9150506000611081866112a6565b915050600061108f866112a6565b915050600061109d866112a6565b915050838383836040516020016110b79493929190612db8565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b038416146111185760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016103be565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111849190612e8f565b6001600160a01b0316149392505050565b6000606060006111a486611342565b90506111b1818686611374565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906111eb8361144f565b9050604051806080016040528061121b8360008151811061120e5761120e612eac565b6020026020010151611482565b81526020016112368360018151811061120e5761120e612eac565b815260200161125e8360028151811061125157611251612eac565b6020026020010151611489565b81526020016112798360038151811061125157611251612eac565b90529392505050565b60008061128e86611342565b905061129c8186868661158b565b9695505050505050565b600080601f5b600f8111156112f25760006112c2826008612ec2565b85901c90506112d0816115c1565b61ffff1684179350816010146112e857601084901b93505b50600019016112ac565b50600f5b60ff81101561133c57600061130c826008612ec2565b85901c905061131a816115c1565b61ffff16831792508160001461133257601083901b92505b50600019016112f6565b50915091565b6060818051906020012060405160200161135e91815260200190565b6040516020818303038152906040529050919050565b600060606000611383856115f3565b90506000806000611395848a896116ee565b815192955090935091501580806113a95750815b6113f55760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016103be565b600081611411576040518060200160405280600081525061143d565b61143d86611420600188612bd7565b8151811061143057611430612eac565b6020026020010151611b0d565b919b919a509098505050505050505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061089290611b37565b6000610892825b60006021826000015111156114e05760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103be565b60008060006114ee85611d23565b91945092509050600081600181111561150957611509612ee1565b146115565760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016103be565b60008386602001516115689190612c4f565b8051909150602084101561129c5760208490036101000a90049695505050505050565b600080600061159b878686611374565b915091508180156110145750805160208083019190912087519188019190912014611014565b60006115d360048360ff16901c61206d565b60ff1661ffff919091161760081b6115ea8261206d565b60ff1617919050565b606060006116008361144f565b90506000815167ffffffffffffffff81111561161e5761161e612706565b60405190808252806020026020018201604052801561166357816020015b604080518082019091526060808252602082015281526020019060019003908161163c5790505b50905060005b82518110156116e657600061169684838151811061168957611689612eac565b60200260200101516121ba565b905060405180604001604052808281526020016116b28361144f565b8152508383815181106116c7576116c7612eac565b60200260200101819052505080806116de90612ef7565b915050611669565b509392505050565b600060608180806116fe87612241565b90506000869050600080611725604051806040016040528060608152602001606081525090565b60005b8c51811015611ae5578c818151811061174357611743612eac565b6020026020010151915082846117599190612c4f565b9350611766600188612c4f565b9650836000036117c1578151805160209091012085146117bc5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016103be565b61187e565b815151602011611823578151805160209091012085146117bc5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016103be565b84611831836000015161237c565b1461187e5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016103be565b61188a60106001612c4f565b826020015151036118fc5785518414611ae55760008685815181106118b1576118b1612eac565b602001015160f81c60f81b60f81c9050600083602001518260ff16815181106118dc576118dc612eac565b602002602001015190506118ef816123a4565b9650600194505050611ad3565b600282602001515103611a8b576000611914836123da565b905060008160008151811061192b5761192b612eac565b016020015160f81c90506000611942600283612f26565b61194d906002612f48565b9050600061195e848360ff166123fe565b9050600061196c8b8a6123fe565b9050600061197a8383612434565b905060ff851660021480611991575060ff85166003145b156119cb578083511480156119a65750808251145b156119b8576119b5818b612c4f565b99505b50600160ff1b9950611ae5945050505050565b60ff851615806119de575060ff85166001145b15611a3457825181146119fe5750600160ff1b9950611ae5945050505050565b611a258860200151600181518110611a1857611a18612eac565b60200260200101516123a4565b9a509750611ad3945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016103be565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016103be565b80611add81612ef7565b915050611728565b50600160ff1b841486611af887866123fe565b909e909d50909b509950505050505050505050565b6020810151805160609161089291611b2790600190612bd7565b8151811061168957611689612eac565b6060600080611b4584611d23565b91935090915060019050816001811115611b6157611b61612ee1565b14611bae5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016103be565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611bc75790505090506000835b8651811015611d185760208210611c605760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016103be565b600080611c9d6040518060400160405280858c60000151611c819190612bd7565b8152602001858c60200151611c969190612c4f565b9052611d23565b509150915060405180604001604052808383611cb99190612c4f565b8152602001848b60200151611cce9190612c4f565b815250858581518110611ce357611ce3612eac565b6020908102919091010152611cf9600185612c4f565b9350611d058183612c4f565b611d0f9084612c4f565b92505050611bf4565b508152949350505050565b600080600080846000015111611d7b5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016103be565b6020840151805160001a607f8111611da0576000600160009450945094505050612066565b60b78111611e1c576000611db5608083612bd7565b905080876000015111611e0a5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016103be565b60019550935060009250612066915050565b60bf8111611f0b576000611e3160b783612bd7565b905080876000015111611e865760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016103be565b600183015160208290036101000a9004611ea08183612c4f565b885111611eef5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016103be565b611efa826001612c4f565b965094506000935061206692505050565b60f78111611f86576000611f2060c083612bd7565b905080876000015111611f755760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016103be565b600195509350849250612066915050565b6000611f9360f783612bd7565b905080876000015111611fe85760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016103be565b600183015160208290036101000a90046120028183612c4f565b88511161204a5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016103be565b612055826001612c4f565b965094506001935061206692505050565b9193909250565b600060f08083179060ff821690036120885750603092915050565b8060ff1660f10361209c5750603192915050565b8060ff1660f2036120b05750603292915050565b8060ff1660f3036120c45750603392915050565b8060ff1660f4036120d85750603492915050565b8060ff1660f5036120ec5750603592915050565b8060ff1660f6036121005750603692915050565b8060ff1660f7036121145750603792915050565b8060ff1660f8036121285750603892915050565b8060ff1660f90361213c5750603992915050565b8060ff1660fa036121505750606192915050565b8060ff1660fb036121645750606292915050565b8060ff1660fc036121785750606392915050565b8060ff1660fd0361218c5750606492915050565b8060ff1660fe036121a05750606592915050565b8060ff1660ff036121b45750606692915050565b50919050565b606060008060006121ca85611d23565b9194509250905060008160018111156121e5576121e5612ee1565b146122325760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016103be565b610ab0856020015184846124b0565b60606000825160026122539190612ec2565b67ffffffffffffffff81111561226b5761226b612706565b6040519080825280601f01601f191660200182016040528015612295576020820181803683370190505b50905060005b83518110156123755760048482815181106122b8576122b8612eac565b01602001516001600160f81b031916901c826122d5836002612ec2565b815181106122e5576122e5612eac565b60200101906001600160f81b031916908160001a905350601084828151811061231057612310612eac565b0160200151612322919060f81c612f26565b60f81b82612331836002612ec2565b61233c906001612c4f565b8151811061234c5761234c612eac565b60200101906001600160f81b031916908160001a9053508061236d81612ef7565b91505061229b565b5092915050565b600060208251101561239057506020015190565b818060200190518101906108929190612f6b565b600060606020836000015110156123c5576123be8361258e565b90506123d1565b6123ce836121ba565b90505b610a8e8161237c565b60606108926123f9836020015160008151811061168957611689612eac565b612241565b60608251821061241d5750604080516020810190915260008152610892565b610a8e838384865161242f9190612bd7565b612599565b6000805b8084511180156124485750808351115b8015612499575082818151811061246157612461612eac565b602001015160f81c60f81b6001600160f81b03191684828151811061248857612488612eac565b01602001516001600160f81b031916145b15610a8e57806124a881612ef7565b915050612438565b606060008267ffffffffffffffff8111156124cd576124cd612706565b6040519080825280601f01601f1916602001820160405280156124f7576020820181803683370190505b509050805160000361250a579050610a8e565b60006125168587612c4f565b90506020820160005b61252a602087612f84565b8110156125615782518252612540602084612c4f565b925061254d602083612c4f565b91508061255981612ef7565b91505061251f565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610892826126f0565b6060816125a781601f612c4f565b10156125e65760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103be565b826125f18382612c4f565b10156126305760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016103be565b61263a8284612c4f565b8451101561267e5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016103be565b60608215801561269d57604051915060008252602082016040526126e7565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156126d65780518352602092830192016126be565b5050858452601f01601f1916604052505b50949350505050565b60606108928260200151600084600001516124b0565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561273f5761273f612706565b60405290565b60405160a0810167ffffffffffffffff8111828210171561273f5761273f612706565b604051601f8201601f1916810167ffffffffffffffff8111828210171561279157612791612706565b604052919050565b600082601f8301126127aa57600080fd5b813567ffffffffffffffff8111156127c4576127c4612706565b6127d7601f8201601f1916602001612768565b8181528460208386010111156127ec57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561281b57600080fd5b813567ffffffffffffffff81111561283257600080fd5b61283e84828501612799565b949350505050565b6001600160a01b038116811461044057600080fd5b60006020828403121561286d57600080fd5b8135610a8e81612846565b600060a0828403121561288a57600080fd5b60405160a0810167ffffffffffffffff82821081831117156128ae576128ae612706565b816040528293508435835260208501356020840152604085013560408401526060850135606084015260808501359150808211156128eb57600080fd5b506128f885828601612799565b6080830152505092915050565b60006040828403121561291757600080fd5b61291f61271c565b90508135815260208083013567ffffffffffffffff8082111561294157600080fd5b818501915085601f83011261295557600080fd5b81358181111561296757612967612706565b8060051b9150612978848301612768565b818152918301840191848101908884111561299257600080fd5b938501935b838510156129b057843582529385019390850190612997565b808688015250505050505092915050565b600080600080600060a086880312156129d957600080fd5b85356129e481612846565b945060208601356129f481612846565b9350604086013567ffffffffffffffff80821115612a1157600080fd5b612a1d89838a01612799565b9450606088013593506080880135915080821115612a3a57600080fd5b9087019060a0828a031215612a4e57600080fd5b612a56612745565b82358152602083013582811115612a6c57600080fd5b612a788b828601612878565b602083015250604083013582811115612a9057600080fd5b612a9c8b828601612905565b604083015250606083013582811115612ab457600080fd5b612ac08b828601612799565b606083015250608083013582811115612ad857600080fd5b612ae48b828601612799565b6080830152508093505050509295509295909350565b600060208284031215612b0c57600080fd5b5035919050565b60005b83811015612b2e578181015183820152602001612b16565b83811115612b3d576000848401525b50505050565b60008151808452612b5b816020860160208601612b13565b601f01601f19169290920160200192915050565b604081526000612b826040830185612b43565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0383811690831681811015612bcf57612bcf612b99565b039392505050565b600082821015612be957612be9612b99565b500390565b805160208083015191908110156121b45760001960209190910360031b1b16919050565b6001600160a01b03858116825284166020820152608060408201819052600090612c3e90830185612b43565b905082606083015295945050505050565b60008219821115612c6257612c62612b99565b500190565b602081526000610a8e6020830184612b43565b6001600160a01b0384168152606060208201819052600090612c9e90830185612b43565b905063ffffffff83166040830152949350505050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612cff610100850182612b43565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612d515784518252938501936001939093019290850190612d31565b509998505050505050505050565b600060208284031215612d7157600080fd5b81518015158114610a8e57600080fd5b60008351612d93818460208801612b13565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161129c565b600060208284031215612ea157600080fd5b8151610a8e81612846565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612edc57612edc612b99565b500290565b634e487b7160e01b600052602160045260246000fd5b600060018201612f0957612f09612b99565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612f3957612f39612f10565b8060ff84160691505092915050565b600060ff821660ff841680821015612f6257612f62612b99565b90039392505050565b600060208284031215612f7d57600080fd5b5051919050565b600082612f9357612f93612f10565b50049056fea2646970667358221220df1f2ede0c2ae7c7cd71a7f11b49bae6311976e42158504460883511464def7f64736f6c634300080f0033";

type OptimismHubConnectorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: OptimismHubConnectorConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {},
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {},
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OptimismHubConnector {
    return new Contract(address, _abi, signerOrProvider) as OptimismHubConnector;
  }
}
