/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162003640380380620036408339810160408190526200003591620002f9565b8080888888888884848484846200004c33620001be565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021d565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200028660201b60201c565b5050600580546001600160a01b0319166001600160a01b0393909316929092179091555062000385945050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002dc57600080fd5b919050565b80516001600160a01b0381168114620002dc57600080fd5b600080600080600080600060e0888a0312156200031557600080fd5b6200032088620002c7565b96506200033060208901620002c7565b95506200034060408901620002e1565b94506200035060608901620002e1565b93506200036060808901620002e1565b92506200037060a08901620002e1565b915060c0880151905092959891949750929550565b60805160a05160c05160e051613257620003e9600039600081816101890152610b3801526000818161027a015281816104560152610b730152600081816104090152818161050b01528181610a290152610f220152600061022601526132576000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610385578063cc3942831461039a578063d1851c92146103ba578063d232c220146103d8578063d69f9d61146103f7578063db1b76591461042b57600080fd5b8063715018a6146102d25780637850b020146102e75780638da5cb5b14610307578063b1f8100d14610325578063c1f0808a1461034557600080fd5b806352a9674b116100f257806352a9674b146102145780635bd11efc146102485780635f61e3ec146102685780636a42b8f81461029c5780636e2edb4e146102b257600080fd5b80630f329ef81461013a57806314168416146101775780633cf52ffb146101c057806348e6fa23146101df5780634ff746f6146101f457600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5060055461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b506101ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161016e565b3480156101cc57600080fd5b506002545b60405190815260200161016e565b6101f26101ed3660046129c7565b61044b565b005b34801561020057600080fd5b506101f261020f366004612a2b565b610500565b34801561022057600080fd5b506101ab7f000000000000000000000000000000000000000000000000000000000000000081565b34801561025457600080fd5b506101f2610263366004612a7d565b6105a6565b34801561027457600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a857600080fd5b5062093a806101d1565b3480156102be57600080fd5b506101f26102cd366004612be3565b6105dd565b3480156102de57600080fd5b506101f261078d565b3480156102f357600080fd5b506101f2610302366004612d1c565b61084c565b34801561031357600080fd5b506000546001600160a01b031661015a565b34801561033157600080fd5b506101f2610340366004612a7d565b610880565b34801561035157600080fd5b50610375610360366004612d1c565b60066020526000908152604090205460ff1681565b604051901515815260200161016e565b34801561039157600080fd5b506101f2610925565b3480156103a657600080fd5b5060035461015a906001600160a01b031681565b3480156103c657600080fd5b506001546001600160a01b031661015a565b3480156103e457600080fd5b506000546001600160a01b031615610375565b34801561040357600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043757600080fd5b50610375610446366004612a7d565b610980565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b75760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104c18282610991565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516104f493929190612d91565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105615760405162461bcd60e51b81526004016104ae9060208082526004908201526310a0a6a160e11b604082015260600190565b61056a81610ab1565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161059b929190612dcf565b60405180910390a150565b6000546001600160a01b031633146105d1576040516311a8a1bb60e31b815260040160405180910390fd5b6105da81610bd4565b50565b6003546001600160a01b0385811691161461062d5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104ae565b6001600160a01b038516301461066d5760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104ae565b600061067b86868686610c3d565b90506106878183610c8a565b6106bc5760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104ae565b60006106c88582610cad565b905060006106ff6106e76020601885901c6001600160601b0316612e0f565b62ffffff198416906001600160601b03166020610cd1565b905061072b8160405160200161071791815260200190565b604051602081830303815290604052610ab1565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161075f91815260200190565b60408051601f198184030181529082905261077b913390612dcf565b60405180910390a15050505050505050565b6000546001600160a01b031633146107b8576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107db57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107ed9190612e37565b1161080b576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610835576040516323295ef960e01b815260040160405180910390fd5b60015461084a906001600160a01b0316610e2d565b565b6000546001600160a01b03163314610877576040516311a8a1bb60e31b815260040160405180910390fd5b6105da81610e8c565b6000546001600160a01b031633146108ab576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156108d057506001600160a01b03811615155b156108ee576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361091c57604051634a2fb73f60e11b815260040160405180910390fd5b6105da81610ecd565b6001546001600160a01b03163314610950576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426109629190612e37565b116108355760405163d39c12bb60e01b815260040160405180910390fd5b600061098b82610f1b565b92915050565b81516020146109cc5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104ae565b6000634ff746f660e01b836040516024016109e79190612e4e565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b911683610a5c86610f47565b6040518463ffffffff1660e01b8152600401610a7a93929190612e61565b600060405180830381600087803b158015610a9457600080fd5b505af1158015610aa8573d6000803e3d6000fd5b50505050505050565b8051602014610aec5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104ae565b6000610af782612e9b565b60008181526006602052604090205490915060ff16610bd05760008181526006602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b158015610bb757600080fd5b505af1158015610bcb573d6000803e3d6000fd5b505050505b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c569493929190612ebf565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c9582610fa5565b8015610ca65750610ca68383611026565b9392505050565b815160009060208401610cc864ffffffffff851682846111b5565b95945050505050565b60008160ff16600003610ce657506000610ca6565b610cf98460181c6001600160601b031690565b6001600160601b0316610d0f60ff841685612efc565b1115610d7357610d5a610d2b8560781c6001600160601b031690565b6001600160601b0316610d478660181c6001600160601b031690565b6001600160601b0316858560ff166111fc565b60405162461bcd60e51b81526004016104ae9190612e4e565b60208260ff161115610ded5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016104ae565b600882026000610e068660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600061098b7f00000000000000000000000000000000000000000000000000000000000000008361126a565b60008151602014610f895760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104ae565b61098b82806020019051810190610fa09190612f14565b61132b565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610fe5939192909190600401612f2d565b602060405180830381865afa158015611002573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098b9190612fd8565b600080836007602160991b01604051602001611043929190612ffa565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b91830191909152915060009081906110b79060340160408051601f1981840301815291905260608701518751611341565b909250905060018215151461114a5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104ae565b60006111558261136a565b90506111aa8460405160200161116d91815260200190565b60408051601f1981840301815290829052600160f81b6020830152906021016040516020818303038152906040528860800151846040015161142e565b979650505050505050565b6000806111c28385612efc565b90506040518111156111d2575060005b806000036111e75762ffffff19915050610ca6565b5050606092831b9190911790911b1760181b90565b6060600061120986611452565b915050600061121786611452565b915050600061122586611452565b915050600061123386611452565b9150508383838360405160200161124d9493929190613031565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b038416146112ae5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104ae565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a9190613108565b6001600160a01b0316149392505050565b600060045482111561133d5760045491505b5090565b60006060600061135086611500565b905061135d818686611532565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906113978361160d565b905060405180608001604052806113c7836000815181106113ba576113ba613125565b6020026020010151611640565b81526020016113e2836001815181106113ba576113ba613125565b815260200161140a836002815181106113fd576113fd613125565b6020026020010151611647565b8152602001611425836003815181106113fd576113fd613125565b90529392505050565b60008061143a86611500565b905061144881868686611749565b9695505050505050565b600080601f5b600f8160ff1611156114a757600061147182600861313b565b60ff1685901c90506114828161177f565b61ffff16841793508160ff1660101461149d57601084901b93505b5060001901611458565b50600f5b60ff8160ff1610156114fa5760006114c482600861313b565b60ff1685901c90506114d58161177f565b61ffff16831792508160ff166000146114f057601083901b92505b50600019016114ab565b50915091565b6060818051906020012060405160200161151c91815260200190565b6040516020818303038152906040529050919050565b600060606000611541856117b1565b90506000806000611553848a896118ac565b815192955090935091501580806115675750815b6115b35760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104ae565b6000816115cf57604051806020016040528060008152506115fb565b6115fb866115de600188612e37565b815181106115ee576115ee613125565b6020026020010151611ccb565b919b919a509098505050505050505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061098b90611cf5565b600061098b825b600060218260000151111561169e5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104ae565b60008060006116ac85611ee1565b9194509250905060008160018111156116c7576116c7613164565b146117145760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104ae565b60008386602001516117269190612efc565b805190915060208410156114485760208490036101000a90049695505050505050565b6000806000611759878686611532565b915091508180156111aa57508051602080830191909120875191880191909120146111aa565b600061179160048360ff16901c61222b565b60ff1661ffff919091161760081b6117a88261222b565b60ff1617919050565b606060006117be8361160d565b90506000815167ffffffffffffffff8111156117dc576117dc6128c4565b60405190808252806020026020018201604052801561182157816020015b60408051808201909152606080825260208201528152602001906001900390816117fa5790505b50905060005b82518110156118a457600061185484838151811061184757611847613125565b6020026020010151612378565b905060405180604001604052808281526020016118708361160d565b81525083838151811061188557611885613125565b602002602001018190525050808061189c9061317a565b915050611827565b509392505050565b600060608180806118bc876123ff565b905060008690506000806118e3604051806040016040528060608152602001606081525090565b60005b8c51811015611ca3578c818151811061190157611901613125565b6020026020010151915082846119179190612efc565b9350611924600188612efc565b96508360000361197f5781518051602090910120851461197a5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104ae565b611a3c565b8151516020116119e15781518051602090910120851461197a5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104ae565b846119ef836000015161253a565b14611a3c5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104ae565b611a4860106001612efc565b82602001515103611aba5785518414611ca3576000868581518110611a6f57611a6f613125565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611a9a57611a9a613125565b60200260200101519050611aad81612562565b9650600194505050611c91565b600282602001515103611c49576000611ad283612598565b9050600081600081518110611ae957611ae9613125565b016020015160f81c90506000611b006002836131a9565b611b0b9060026131cb565b90506000611b1c848360ff166125bc565b90506000611b2a8b8a6125bc565b90506000611b3883836125f2565b905060ff851660021480611b4f575060ff85166003145b15611b8957808351148015611b645750808251145b15611b7657611b73818b612efc565b99505b50600160ff1b9950611ca3945050505050565b60ff85161580611b9c575060ff85166001145b15611bf25782518114611bbc5750600160ff1b9950611ca3945050505050565b611be38860200151600181518110611bd657611bd6613125565b6020026020010151612562565b9a509750611c91945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104ae565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104ae565b80611c9b8161317a565b9150506118e6565b50600160ff1b841486611cb687866125bc565b909e909d50909b509950505050505050505050565b6020810151805160609161098b91611ce590600190612e37565b8151811061184757611847613125565b6060600080611d0384611ee1565b91935090915060019050816001811115611d1f57611d1f613164565b14611d6c5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104ae565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611d855790505090506000835b8651811015611ed65760208210611e1e5760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104ae565b600080611e5b6040518060400160405280858c60000151611e3f9190612e37565b8152602001858c60200151611e549190612efc565b9052611ee1565b509150915060405180604001604052808383611e779190612efc565b8152602001848b60200151611e8c9190612efc565b815250858581518110611ea157611ea1613125565b6020908102919091010152611eb7600185612efc565b9350611ec38183612efc565b611ecd9084612efc565b92505050611db2565b508152949350505050565b600080600080846000015111611f395760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104ae565b6020840151805160001a607f8111611f5e576000600160009450945094505050612224565b60b78111611fda576000611f73608083612e37565b905080876000015111611fc85760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104ae565b60019550935060009250612224915050565b60bf81116120c9576000611fef60b783612e37565b9050808760000151116120445760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104ae565b600183015160208290036101000a900461205e8183612efc565b8851116120ad5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104ae565b6120b8826001612efc565b965094506000935061222492505050565b60f781116121445760006120de60c083612e37565b9050808760000151116121335760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104ae565b600195509350849250612224915050565b600061215160f783612e37565b9050808760000151116121a65760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104ae565b600183015160208290036101000a90046121c08183612efc565b8851116122085760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104ae565b612213826001612efc565b965094506001935061222492505050565b9193909250565b600060f08083179060ff821690036122465750603092915050565b8060ff1660f10361225a5750603192915050565b8060ff1660f20361226e5750603292915050565b8060ff1660f3036122825750603392915050565b8060ff1660f4036122965750603492915050565b8060ff1660f5036122aa5750603592915050565b8060ff1660f6036122be5750603692915050565b8060ff1660f7036122d25750603792915050565b8060ff1660f8036122e65750603892915050565b8060ff1660f9036122fa5750603992915050565b8060ff1660fa0361230e5750606192915050565b8060ff1660fb036123225750606292915050565b8060ff1660fc036123365750606392915050565b8060ff1660fd0361234a5750606492915050565b8060ff1660fe0361235e5750606592915050565b8060ff1660ff036123725750606692915050565b50919050565b6060600080600061238885611ee1565b9194509250905060008160018111156123a3576123a3613164565b146123f05760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104ae565b610cc88560200151848461266e565b606060008251600261241191906131ee565b67ffffffffffffffff811115612429576124296128c4565b6040519080825280601f01601f191660200182016040528015612453576020820181803683370190505b50905060005b835181101561253357600484828151811061247657612476613125565b01602001516001600160f81b031916901c826124938360026131ee565b815181106124a3576124a3613125565b60200101906001600160f81b031916908160001a90535060108482815181106124ce576124ce613125565b01602001516124e0919060f81c6131a9565b60f81b826124ef8360026131ee565b6124fa906001612efc565b8151811061250a5761250a613125565b60200101906001600160f81b031916908160001a9053508061252b8161317a565b915050612459565b5092915050565b600060208251101561254e57506020015190565b8180602001905181019061098b9190612f14565b600060606020836000015110156125835761257c8361274c565b905061258f565b61258c83612378565b90505b610ca68161253a565b606061098b6125b7836020015160008151811061184757611847613125565b6123ff565b6060825182106125db575060408051602081019091526000815261098b565b610ca683838486516125ed9190612e37565b612757565b6000805b8084511180156126065750808351115b8015612657575082818151811061261f5761261f613125565b602001015160f81c60f81b6001600160f81b03191684828151811061264657612646613125565b01602001516001600160f81b031916145b15610ca657806126668161317a565b9150506125f6565b606060008267ffffffffffffffff81111561268b5761268b6128c4565b6040519080825280601f01601f1916602001820160405280156126b5576020820181803683370190505b50905080516000036126c8579050610ca6565b60006126d48587612efc565b90506020820160005b6126e860208761320d565b81101561271f57825182526126fe602084612efc565b925061270b602083612efc565b9150806127178161317a565b9150506126dd565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b606061098b826128ae565b60608161276581601f612efc565b10156127a45760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104ae565b826127af8382612efc565b10156127ee5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104ae565b6127f88284612efc565b8451101561283c5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104ae565b60608215801561285b57604051915060008252602082016040526128a5565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561289457805183526020928301920161287c565b5050858452601f01601f1916604052505b50949350505050565b606061098b82602001516000846000015161266e565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156128fd576128fd6128c4565b60405290565b60405160a0810167ffffffffffffffff811182821017156128fd576128fd6128c4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561294f5761294f6128c4565b604052919050565b600082601f83011261296857600080fd5b813567ffffffffffffffff811115612982576129826128c4565b612995601f8201601f1916602001612926565b8181528460208386010111156129aa57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156129da57600080fd5b823567ffffffffffffffff808211156129f257600080fd5b6129fe86838701612957565b93506020850135915080821115612a1457600080fd5b50612a2185828601612957565b9150509250929050565b600060208284031215612a3d57600080fd5b813567ffffffffffffffff811115612a5457600080fd5b612a6084828501612957565b949350505050565b6001600160a01b03811681146105da57600080fd5b600060208284031215612a8f57600080fd5b8135610ca681612a68565b600060a08284031215612aac57600080fd5b60405160a0810167ffffffffffffffff8282108183111715612ad057612ad06128c4565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526080850135915080821115612b0d57600080fd5b50612b1a85828601612957565b6080830152505092915050565b600060408284031215612b3957600080fd5b612b416128da565b90508135815260208083013567ffffffffffffffff80821115612b6357600080fd5b818501915085601f830112612b7757600080fd5b813581811115612b8957612b896128c4565b8060051b9150612b9a848301612926565b8181529183018401918481019088841115612bb457600080fd5b938501935b83851015612bd257843582529385019390850190612bb9565b808688015250505050505092915050565b600080600080600060a08688031215612bfb57600080fd5b8535612c0681612a68565b94506020860135612c1681612a68565b9350604086013567ffffffffffffffff80821115612c3357600080fd5b612c3f89838a01612957565b9450606088013593506080880135915080821115612c5c57600080fd5b9087019060a0828a031215612c7057600080fd5b612c78612903565b82358152602083013582811115612c8e57600080fd5b612c9a8b828601612a9a565b602083015250604083013582811115612cb257600080fd5b612cbe8b828601612b27565b604083015250606083013582811115612cd657600080fd5b612ce28b828601612957565b606083015250608083013582811115612cfa57600080fd5b612d068b828601612957565b6080830152508093505050509295509295909350565b600060208284031215612d2e57600080fd5b5035919050565b60005b83811015612d50578181015183820152602001612d38565b83811115612d5f576000848401525b50505050565b60008151808452612d7d816020860160208601612d35565b601f01601f19169290920160200192915050565b606081526000612da46060830186612d65565b8281036020840152612db68186612d65565b91505060018060a01b0383166040830152949350505050565b604081526000612de26040830185612d65565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60006001600160601b0383811690831681811015612e2f57612e2f612df9565b039392505050565b600082821015612e4957612e49612df9565b500390565b602081526000610ca66020830184612d65565b6001600160a01b0384168152606060208201819052600090612e8590830185612d65565b905063ffffffff83166040830152949350505050565b805160208083015191908110156123725760001960209190910360031b1b16919050565b6001600160a01b03858116825284166020820152608060408201819052600090612eeb90830185612d65565b905082606083015295945050505050565b60008219821115612f0f57612f0f612df9565b500190565b600060208284031215612f2657600080fd5b5051919050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612f78610100850182612d65565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612fca5784518252938501936001939093019290850190612faa565b509998505050505050505050565b600060208284031215612fea57600080fd5b81518015158114610ca657600080fd5b6000835161300c818460208801612d35565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611448565b60006020828403121561311a57600080fd5b8151610ca681612a68565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168160ff048111821515161561315c5761315c612df9565b029392505050565b634e487b7160e01b600052602160045260246000fd5b60006001820161318c5761318c612df9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806131bc576131bc613193565b8060ff84160691505092915050565b600060ff821660ff8416808210156131e5576131e5612df9565b90039392505050565b600081600019048311821515161561320857613208612df9565b500290565b60008261321c5761321c613193565b50049056fea2646970667358221220ef02ffe718befefc2a56b65de8e36b706b8396a977d1417dec14905e4ed2740e64736f6c634300080f0033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
