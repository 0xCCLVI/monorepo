/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162003555380380620035558339810160408190526200003591620002f9565b8080888888888884848484846200004c33620001be565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021d565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200028660201b60201c565b5050600580546001600160a01b0319166001600160a01b0393909316929092179091555062000385945050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002dc57600080fd5b919050565b80516001600160a01b0381168114620002dc57600080fd5b600080600080600080600060e0888a0312156200031557600080fd5b6200032088620002c7565b96506200033060208901620002c7565b95506200034060408901620002e1565b94506200035060608901620002e1565b93506200036060808901620002e1565b92506200037060a08901620002e1565b915060c0880151905092959891949750929550565b60805160a05160c05160e05161316c620003e960003960008181610189015261074001526000818161027a01528181610456015261077b0152600081816104090152818161050b01528181610ad60152610ec501526000610226015261316c6000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610385578063cc3942831461039a578063d1851c92146103ba578063d232c220146103d8578063d69f9d61146103f7578063db1b76591461042b57600080fd5b8063715018a6146102d25780637850b020146102e75780638da5cb5b14610307578063b1f8100d14610325578063c1f0808a1461034557600080fd5b806352a9674b116100f257806352a9674b146102145780635bd11efc146102485780635f61e3ec146102685780636a42b8f81461029c5780636e2edb4e146102b257600080fd5b80630f329ef81461013a57806314168416146101775780633cf52ffb146101c057806348e6fa23146101df5780634ff746f6146101f457600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5060055461015a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018357600080fd5b506101ab7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161016e565b3480156101cc57600080fd5b506002545b60405190815260200161016e565b6101f26101ed366004612958565b61044b565b005b34801561020057600080fd5b506101f261020f3660046129bc565b610500565b34801561022057600080fd5b506101ab7f000000000000000000000000000000000000000000000000000000000000000081565b34801561025457600080fd5b506101f2610263366004612a0e565b6105a6565b34801561027457600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a857600080fd5b5062093a806101d1565b3480156102be57600080fd5b506101f26102cd366004612b74565b6105dd565b3480156102de57600080fd5b506101f261083a565b3480156102f357600080fd5b506101f2610302366004612cad565b6108f9565b34801561031357600080fd5b506000546001600160a01b031661015a565b34801561033157600080fd5b506101f2610340366004612a0e565b61092d565b34801561035157600080fd5b50610375610360366004612cad565b60066020526000908152604090205460ff1681565b604051901515815260200161016e565b34801561039157600080fd5b506101f26109d2565b3480156103a657600080fd5b5060035461015a906001600160a01b031681565b3480156103c657600080fd5b506001546001600160a01b031661015a565b3480156103e457600080fd5b506000546001600160a01b031615610375565b34801561040357600080fd5b5061015a7f000000000000000000000000000000000000000000000000000000000000000081565b34801561043757600080fd5b50610375610446366004612a0e565b610a2d565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104b75760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104c18282610a3e565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516104f493929190612d16565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105615760405162461bcd60e51b81526004016104ae9060208082526004908201526310a0a6a160e11b604082015260600190565b61056a81610b5e565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161059b929190612d54565b60405180910390a150565b6000546001600160a01b031633146105d1576040516311a8a1bb60e31b815260040160405180910390fd5b6105da81610b77565b50565b6003546001600160a01b0385811691161461062d5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104ae565b6001600160a01b038516301461066d5760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104ae565b600061067b86868686610be0565b90506106878183610c2d565b6106bc5760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104ae565b60006106c88582610c50565b905060006106ff6106e76020601885901c6001600160601b0316612d94565b62ffffff198416906001600160601b03166020610c74565b60008181526006602052604090205490915060ff166108305760008181526006602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b1580156107bf57600080fd5b505af11580156107d3573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161080b91815260200190565b60408051601f1981840301815290829052610827913390612d54565b60405180910390a15b5050505050505050565b6000546001600160a01b03163314610865576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361088857604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261089a9190612db4565b116108b8576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156108e2576040516323295ef960e01b815260040160405180910390fd5b6001546108f7906001600160a01b0316610dd0565b565b6000546001600160a01b03163314610924576040516311a8a1bb60e31b815260040160405180910390fd5b6105da81610e2f565b6000546001600160a01b03163314610958576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561097d57506001600160a01b03811615155b1561099b576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109c957604051634a2fb73f60e11b815260040160405180910390fd5b6105da81610e70565b6001546001600160a01b031633146109fd576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a0f9190612db4565b116108e25760405163d39c12bb60e01b815260040160405180910390fd5b6000610a3882610ebe565b92915050565b8151602014610a795760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104ae565b6000634ff746f660e01b83604051602401610a949190612dc7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b911683610b0986610eea565b6040518463ffffffff1660e01b8152600401610b2793929190612dda565b600060405180830381600087803b158015610b4157600080fd5b505af1158015610b55573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610bf99493929190612e14565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c3882610f48565b8015610c495750610c498383610fc9565b9392505050565b815160009060208401610c6b64ffffffffff85168284611158565b95945050505050565b60008160ff16600003610c8957506000610c49565b610c9c8460181c6001600160601b031690565b6001600160601b0316610cb260ff841685612e51565b1115610d1657610cfd610cce8560781c6001600160601b031690565b6001600160601b0316610cea8660181c6001600160601b031690565b6001600160601b0316858560ff1661119f565b60405162461bcd60e51b81526004016104ae9190612dc7565b60208260ff161115610d905760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016104ae565b600882026000610da98660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a387f00000000000000000000000000000000000000000000000000000000000000008361120d565b60008151602014610f2c5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104ae565b610a3882806020019051810190610f439190612e64565b6112ce565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610f88939192909190600401612e7d565b602060405180830381865afa158015610fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190612f28565b600080836007602160991b01604051602001610fe6929190612f4a565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b918301919091529150600090819061105a9060340160408051601f19818403018152919052606087015187516112e4565b90925090506001821515146110ed5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104ae565b60006110f88261130d565b905061114d8460405160200161111091815260200190565b60408051601f1981840301815290829052600160f81b602083015290602101604051602081830303815290604052886080015184604001516113d1565b979650505050505050565b6000806111658385612e51565b9050604051811115611175575060005b8060000361118a5762ffffff19915050610c49565b5050606092831b9190911790911b1760181b90565b606060006111ac866113f5565b91505060006111ba866113f5565b91505060006111c8866113f5565b91505060006111d6866113f5565b915050838383836040516020016111f09493929190612f81565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b038416146112515760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104ae565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bd9190613058565b6001600160a01b0316149392505050565b60006004548211156112e05760045491505b5090565b6000606060006112f386611491565b90506113008186866114c3565b9250925050935093915050565b60408051608081018252600080825260208201819052918101829052606081018290529061133a8361159e565b9050604051806080016040528061136a8360008151811061135d5761135d613075565b60200260200101516115d1565b81526020016113858360018151811061135d5761135d613075565b81526020016113ad836002815181106113a0576113a0613075565b60200260200101516115d8565b81526020016113c8836003815181106113a0576113a0613075565b90529392505050565b6000806113dd86611491565b90506113eb818686866116da565b9695505050505050565b600080601f5b600f81111561144157600061141182600861308b565b85901c905061141f81611710565b61ffff16841793508160101461143757601084901b93505b50600019016113fb565b50600f5b60ff81101561148b57600061145b82600861308b565b85901c905061146981611710565b61ffff16831792508160001461148157601083901b92505b5060001901611445565b50915091565b606081805190602001206040516020016114ad91815260200190565b6040516020818303038152906040529050919050565b6000606060006114d285611742565b905060008060006114e4848a8961183d565b815192955090935091501580806114f85750815b6115445760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104ae565b600081611560576040518060200160405280600081525061158c565b61158c8661156f600188612db4565b8151811061157f5761157f613075565b6020026020010151611c5c565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a3890611c86565b6000610a38825b600060218260000151111561162f5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104ae565b600080600061163d85611e72565b919450925090506000816001811115611658576116586130a2565b146116a55760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104ae565b60008386602001516116b79190612e51565b805190915060208410156113eb5760208490036101000a90049695505050505050565b60008060006116ea8786866114c3565b9150915081801561114d575080516020808301919091208751918801919091201461114d565b600061172260048360ff16901c6121bc565b60ff1661ffff919091161760081b611739826121bc565b60ff1617919050565b6060600061174f8361159e565b90506000815167ffffffffffffffff81111561176d5761176d612855565b6040519080825280602002602001820160405280156117b257816020015b604080518082019091526060808252602082015281526020019060019003908161178b5790505b50905060005b82518110156118355760006117e58483815181106117d8576117d8613075565b6020026020010151612309565b905060405180604001604052808281526020016118018361159e565b81525083838151811061181657611816613075565b602002602001018190525050808061182d906130b8565b9150506117b8565b509392505050565b6000606081808061184d87612390565b90506000869050600080611874604051806040016040528060608152602001606081525090565b60005b8c51811015611c34578c818151811061189257611892613075565b6020026020010151915082846118a89190612e51565b93506118b5600188612e51565b9650836000036119105781518051602090910120851461190b5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104ae565b6119cd565b8151516020116119725781518051602090910120851461190b5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104ae565b8461198083600001516124cb565b146119cd5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104ae565b6119d960106001612e51565b82602001515103611a4b5785518414611c34576000868581518110611a0057611a00613075565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611a2b57611a2b613075565b60200260200101519050611a3e816124f3565b9650600194505050611c22565b600282602001515103611bda576000611a6383612529565b9050600081600081518110611a7a57611a7a613075565b016020015160f81c90506000611a916002836130e7565b611a9c906002613109565b90506000611aad848360ff1661254d565b90506000611abb8b8a61254d565b90506000611ac98383612583565b905060ff851660021480611ae0575060ff85166003145b15611b1a57808351148015611af55750808251145b15611b0757611b04818b612e51565b99505b50600160ff1b9950611c34945050505050565b60ff85161580611b2d575060ff85166001145b15611b835782518114611b4d5750600160ff1b9950611c34945050505050565b611b748860200151600181518110611b6757611b67613075565b60200260200101516124f3565b9a509750611c22945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104ae565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104ae565b80611c2c816130b8565b915050611877565b50600160ff1b841486611c47878661254d565b909e909d50909b509950505050505050505050565b60208101518051606091610a3891611c7690600190612db4565b815181106117d8576117d8613075565b6060600080611c9484611e72565b91935090915060019050816001811115611cb057611cb06130a2565b14611cfd5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104ae565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611d165790505090506000835b8651811015611e675760208210611daf5760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104ae565b600080611dec6040518060400160405280858c60000151611dd09190612db4565b8152602001858c60200151611de59190612e51565b9052611e72565b509150915060405180604001604052808383611e089190612e51565b8152602001848b60200151611e1d9190612e51565b815250858581518110611e3257611e32613075565b6020908102919091010152611e48600185612e51565b9350611e548183612e51565b611e5e9084612e51565b92505050611d43565b508152949350505050565b600080600080846000015111611eca5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104ae565b6020840151805160001a607f8111611eef5760006001600094509450945050506121b5565b60b78111611f6b576000611f04608083612db4565b905080876000015111611f595760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104ae565b600195509350600092506121b5915050565b60bf811161205a576000611f8060b783612db4565b905080876000015111611fd55760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104ae565b600183015160208290036101000a9004611fef8183612e51565b88511161203e5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104ae565b612049826001612e51565b96509450600093506121b592505050565b60f781116120d557600061206f60c083612db4565b9050808760000151116120c45760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104ae565b6001955093508492506121b5915050565b60006120e260f783612db4565b9050808760000151116121375760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104ae565b600183015160208290036101000a90046121518183612e51565b8851116121995760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104ae565b6121a4826001612e51565b96509450600193506121b592505050565b9193909250565b600060f08083179060ff821690036121d75750603092915050565b8060ff1660f1036121eb5750603192915050565b8060ff1660f2036121ff5750603292915050565b8060ff1660f3036122135750603392915050565b8060ff1660f4036122275750603492915050565b8060ff1660f50361223b5750603592915050565b8060ff1660f60361224f5750603692915050565b8060ff1660f7036122635750603792915050565b8060ff1660f8036122775750603892915050565b8060ff1660f90361228b5750603992915050565b8060ff1660fa0361229f5750606192915050565b8060ff1660fb036122b35750606292915050565b8060ff1660fc036122c75750606392915050565b8060ff1660fd036122db5750606492915050565b8060ff1660fe036122ef5750606592915050565b8060ff1660ff036123035750606692915050565b50919050565b6060600080600061231985611e72565b919450925090506000816001811115612334576123346130a2565b146123815760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104ae565b610c6b856020015184846125ff565b60606000825160026123a2919061308b565b67ffffffffffffffff8111156123ba576123ba612855565b6040519080825280601f01601f1916602001820160405280156123e4576020820181803683370190505b50905060005b83518110156124c457600484828151811061240757612407613075565b01602001516001600160f81b031916901c8261242483600261308b565b8151811061243457612434613075565b60200101906001600160f81b031916908160001a905350601084828151811061245f5761245f613075565b0160200151612471919060f81c6130e7565b60f81b8261248083600261308b565b61248b906001612e51565b8151811061249b5761249b613075565b60200101906001600160f81b031916908160001a905350806124bc816130b8565b9150506123ea565b5092915050565b60006020825110156124df57506020015190565b81806020019051810190610a389190612e64565b600060606020836000015110156125145761250d836126dd565b9050612520565b61251d83612309565b90505b610c49816124cb565b6060610a3861254883602001516000815181106117d8576117d8613075565b612390565b60608251821061256c5750604080516020810190915260008152610a38565b610c49838384865161257e9190612db4565b6126e8565b6000805b8084511180156125975750808351115b80156125e857508281815181106125b0576125b0613075565b602001015160f81c60f81b6001600160f81b0319168482815181106125d7576125d7613075565b01602001516001600160f81b031916145b15610c4957806125f7816130b8565b915050612587565b606060008267ffffffffffffffff81111561261c5761261c612855565b6040519080825280601f01601f191660200182016040528015612646576020820181803683370190505b5090508051600003612659579050610c49565b60006126658587612e51565b90506020820160005b612679602087613122565b8110156126b0578251825261268f602084612e51565b925061269c602083612e51565b9150806126a8816130b8565b91505061266e565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a388261283f565b6060816126f681601f612e51565b10156127355760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104ae565b826127408382612e51565b101561277f5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104ae565b6127898284612e51565b845110156127cd5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104ae565b6060821580156127ec5760405191506000825260208201604052612836565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561282557805183526020928301920161280d565b5050858452601f01601f1916604052505b50949350505050565b6060610a388260200151600084600001516125ff565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561288e5761288e612855565b60405290565b60405160a0810167ffffffffffffffff8111828210171561288e5761288e612855565b604051601f8201601f1916810167ffffffffffffffff811182821017156128e0576128e0612855565b604052919050565b600082601f8301126128f957600080fd5b813567ffffffffffffffff81111561291357612913612855565b612926601f8201601f19166020016128b7565b81815284602083860101111561293b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561296b57600080fd5b823567ffffffffffffffff8082111561298357600080fd5b61298f868387016128e8565b935060208501359150808211156129a557600080fd5b506129b2858286016128e8565b9150509250929050565b6000602082840312156129ce57600080fd5b813567ffffffffffffffff8111156129e557600080fd5b6129f1848285016128e8565b949350505050565b6001600160a01b03811681146105da57600080fd5b600060208284031215612a2057600080fd5b8135610c49816129f9565b600060a08284031215612a3d57600080fd5b60405160a0810167ffffffffffffffff8282108183111715612a6157612a61612855565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526080850135915080821115612a9e57600080fd5b50612aab858286016128e8565b6080830152505092915050565b600060408284031215612aca57600080fd5b612ad261286b565b90508135815260208083013567ffffffffffffffff80821115612af457600080fd5b818501915085601f830112612b0857600080fd5b813581811115612b1a57612b1a612855565b8060051b9150612b2b8483016128b7565b8181529183018401918481019088841115612b4557600080fd5b938501935b83851015612b6357843582529385019390850190612b4a565b808688015250505050505092915050565b600080600080600060a08688031215612b8c57600080fd5b8535612b97816129f9565b94506020860135612ba7816129f9565b9350604086013567ffffffffffffffff80821115612bc457600080fd5b612bd089838a016128e8565b9450606088013593506080880135915080821115612bed57600080fd5b9087019060a0828a031215612c0157600080fd5b612c09612894565b82358152602083013582811115612c1f57600080fd5b612c2b8b828601612a2b565b602083015250604083013582811115612c4357600080fd5b612c4f8b828601612ab8565b604083015250606083013582811115612c6757600080fd5b612c738b8286016128e8565b606083015250608083013582811115612c8b57600080fd5b612c978b8286016128e8565b6080830152508093505050509295509295909350565b600060208284031215612cbf57600080fd5b5035919050565b60005b83811015612ce1578181015183820152602001612cc9565b50506000910152565b60008151808452612d02816020860160208601612cc6565b601f01601f19169290920160200192915050565b606081526000612d296060830186612cea565b8281036020840152612d3b8186612cea565b91505060018060a01b0383166040830152949350505050565b604081526000612d676040830185612cea565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b038281168282160390808211156124c4576124c4612d7e565b81810381811115610a3857610a38612d7e565b602081526000610c496020830184612cea565b6001600160a01b0384168152606060208201819052600090612dfe90830185612cea565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612e4090830185612cea565b905082606083015295945050505050565b80820180821115610a3857610a38612d7e565b600060208284031215612e7657600080fd5b5051919050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612ec8610100850182612cea565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612f1a5784518252938501936001939093019290850190612efa565b509998505050505050505050565b600060208284031215612f3a57600080fd5b81518015158114610c4957600080fd5b60008351612f5c818460208801612cc6565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016113eb565b60006020828403121561306a57600080fd5b8151610c49816129f9565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610a3857610a38612d7e565b634e487b7160e01b600052602160045260246000fd5b6000600182016130ca576130ca612d7e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806130fa576130fa6130d1565b8060ff84160691505092915050565b60ff8281168282160390811115610a3857610a38612d7e565b600082613131576131316130d1565b50049056fea2646970667358221220f86872231d56eff0bd059e2aec79d0b2bb848b8d70988d9a1cff3f8435babcf864736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
