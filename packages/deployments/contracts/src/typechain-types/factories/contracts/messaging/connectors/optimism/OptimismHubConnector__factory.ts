/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200350d3803806200350d8339810160408190526200003591620002eb565b8080888888888884848484846200004c33620001aa565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200020f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027860201b60201c565b5050506001600160a01b03166101005250620003779350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002ce57600080fd5b919050565b80516001600160a01b0381168114620002ce57600080fd5b600080600080600080600060e0888a0312156200030757600080fd5b6200031288620002b9565b96506200032260208901620002b9565b95506200033260408901620002d3565b94506200034260608901620002d3565b93506200035260808901620002d3565b92506200036260a08901620002d3565b915060c0880151905092959891949750929550565b60805160a05160c05160e05161010051613120620003ed6000396000818161014c0152610f2401526000818161019d015261075401526000818161028e0152818161046a015261078f01526000818161041d0152818161051f01528181610afd0152610ed90152600061023a01526131206000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610399578063cc394283146103ae578063d1851c92146103ce578063d232c220146103ec578063d69f9d611461040b578063db1b76591461043f57600080fd5b8063715018a6146102e65780637850b020146102fb5780638da5cb5b1461031b578063b1f8100d14610339578063c1f0808a1461035957600080fd5b806352a9674b116100f257806352a9674b146102285780635bd11efc1461025c5780635f61e3ec1461027c5780636a42b8f8146102b05780636e2edb4e146102c657600080fd5b80630f329ef81461013a578063141684161461018b5780633cf52ffb146101d457806348e6fa23146101f35780634ff746f61461020857600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019757600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610182565b3480156101e057600080fd5b506002545b604051908152602001610182565b61020661020136600461290c565b61045f565b005b34801561021457600080fd5b50610206610223366004612970565b610514565b34801561023457600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026857600080fd5b506102066102773660046129c2565b6105ba565b34801561028857600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bc57600080fd5b5062093a806101e5565b3480156102d257600080fd5b506102066102e1366004612b28565b6105f1565b3480156102f257600080fd5b5061020661084e565b34801561030757600080fd5b50610206610316366004612c61565b610902565b34801561032757600080fd5b506000546001600160a01b031661016e565b34801561034557600080fd5b506102066103543660046129c2565b610936565b34801561036557600080fd5b50610389610374366004612c61565b60056020526000908152604090205460ff1681565b6040519015158152602001610182565b3480156103a557600080fd5b506102066109d4565b3480156103ba57600080fd5b5060035461016e906001600160a01b031681565b3480156103da57600080fd5b506001546001600160a01b031661016e565b3480156103f857600080fd5b506000546001600160a01b031615610389565b34801561041757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044b57600080fd5b5061038961045a3660046129c2565b610a44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104d58282610a55565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161050893929190612cca565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105755760405162461bcd60e51b81526004016104c29060208082526004908201526310a0a6a160e11b604082015260600190565b61057e81610b6c565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105af929190612d08565b60405180910390a150565b6000546001600160a01b031633146105e5576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610b85565b50565b6003546001600160a01b038581169116146106415760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104c2565b6001600160a01b03851630146106815760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104c2565b600061068f86868686610bee565b905061069b8183610c3b565b6106d05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104c2565b60006106dc8582610c5e565b905060006107136106fb6020601885901c6001600160601b0316612d48565b62ffffff198416906001600160601b03166020610c82565b60008181526005602052604090205490915060ff166108445760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161081f91815260200190565b60408051601f198184030181529082905261083b913390612d08565b60405180910390a15b5050505050505050565b6000546001600160a01b03163314610879576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361089c57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108ae9190612d68565b116108cc576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156108f6576040516323295ef960e01b815260040160405180910390fd5b6109006000610dde565b565b6000546001600160a01b0316331461092d576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610e43565b6000546001600160a01b03163314610961576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561097f575060025415155b1561099d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109cb57604051634a2fb73f60e11b815260040160405180910390fd5b6105ee81610e84565b6001546001600160a01b031633146109ff576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a119190612d68565b11610a2f5760405163d39c12bb60e01b815260040160405180910390fd5b600154610900906001600160a01b0316610dde565b6000610a4f82610ed2565b92915050565b8151602014610a905760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c2565b6000634ff746f660e01b83604051602401610aab9190612d7b565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b94610b359490921692879201612d8e565b600060405180830381600087803b158015610b4f57600080fd5b505af1158015610b63573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c079493929190612dc8565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c4682610efe565b8015610c575750610c578383610f98565b9392505050565b815160009060208401610c7964ffffffffff85168284611127565b95945050505050565b60008160ff16600003610c9757506000610c57565b610caa8460181c6001600160601b031690565b6001600160601b0316610cc060ff841685612e05565b1115610d2457610d0b610cdc8560781c6001600160601b031690565b6001600160601b0316610cf88660181c6001600160601b031690565b6001600160601b0316858560ff1661116e565b60405162461bcd60e51b81526004016104c29190612d7b565b60208260ff161115610d9e5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016104c2565b600882026000610db78660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a4f7f0000000000000000000000000000000000000000000000000000000000000000836111dc565b805160208201516040808401519051634d69ee5760e01b81526000936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693634d69ee5793610f5793600401612e18565b602060405180830381865afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190612ec3565b600080836007602160991b01604051602001610fb5929190612ee5565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b91830191909152915060009081906110299060340160408051601f198184030181529190526060870151875161129d565b90925090506001821515146110bc5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104c2565b60006110c7826112c6565b905061111c846040516020016110df91815260200190565b60408051601f1981840301815290829052600160f81b6020830152906021016040516020818303038152906040528860800151846040015161138a565b979650505050505050565b6000806111348385612e05565b9050604051811115611144575060005b806000036111595762ffffff19915050610c57565b5050606092831b9190911790911b1760181b90565b6060600061117b866113ae565b9150506000611189866113ae565b9150506000611197866113ae565b91505060006111a5866113ae565b915050838383836040516020016111bf9493929190612f1c565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b038416146112205760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104c2565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c9190612ff3565b6001600160a01b0316149392505050565b6000606060006112ac8661144a565b90506112b981868661147c565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906112f383611557565b905060405180608001604052806113238360008151811061131657611316613010565b602002602001015161158a565b815260200161133e8360018151811061131657611316613010565b81526020016113668360028151811061135957611359613010565b6020026020010151611591565b81526020016113818360038151811061135957611359613010565b90529392505050565b6000806113968661144a565b90506113a481868686611693565b9695505050505050565b600080601f5b600f8111156113fa5760006113ca826008613026565b85901c90506113d8816116c9565b61ffff1684179350816010146113f057601084901b93505b50600019016113b4565b50600f5b60ff811015611444576000611414826008613026565b85901c9050611422816116c9565b61ffff16831792508160001461143a57601083901b92505b50600019016113fe565b50915091565b6060818051906020012060405160200161146691815260200190565b6040516020818303038152906040529050919050565b60006060600061148b856116f6565b9050600080600061149d848a896117f1565b815192955090935091501580806114b15750815b6114fd5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104c2565b6000816115195760405180602001604052806000815250611545565b61154586611528600188612d68565b8151811061153857611538613010565b6020026020010151611c10565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a4f90611c3a565b6000610a4f825b60006021826000015111156115e85760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b60008060006115f685611e26565b9194509250905060008160018111156116115761161161303d565b1461165e5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b60008386602001516116709190612e05565b805190915060208410156113a45760208490036101000a90049695505050505050565b60008060006116a387868661147c565b9150915081801561111c575080516020808301919091208751918801919091201461111c565b60006116db60048360ff16901c612170565b60081b61ff001690506116ed82612170565b60ff1617919050565b6060600061170383611557565b90506000815167ffffffffffffffff81111561172157611721612809565b60405190808252806020026020018201604052801561176657816020015b604080518082019091526060808252602082015281526020019060019003908161173f5790505b50905060005b82518110156117e957600061179984838151811061178c5761178c613010565b60200260200101516122bd565b905060405180604001604052808281526020016117b583611557565b8152508383815181106117ca576117ca613010565b60200260200101819052505080806117e190613053565b91505061176c565b509392505050565b6000606081808061180187612344565b90506000869050600080611828604051806040016040528060608152602001606081525090565b60005b8c51811015611be8578c818151811061184657611846613010565b60200260200101519150828461185c9190612e05565b9350611869600188612e05565b9650836000036118c4578151805160209091012085146118bf5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104c2565b611981565b815151602011611926578151805160209091012085146118bf5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104c2565b84611934836000015161247f565b146119815760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104c2565b61198d60106001612e05565b826020015151036119ff5785518414611be85760008685815181106119b4576119b4613010565b602001015160f81c60f81b60f81c9050600083602001518260ff16815181106119df576119df613010565b602002602001015190506119f2816124a7565b9650600194505050611bd6565b600282602001515103611b8e576000611a17836124dd565b9050600081600081518110611a2e57611a2e613010565b016020015160f81c90506000611a45600283613082565b611a509060026130a4565b90506000611a61848360ff16612501565b90506000611a6f8b8a612501565b90506000611a7d8383612537565b905060ff851660021480611a94575060ff85166003145b15611ace57808351148015611aa95750808251145b15611abb57611ab8818b612e05565b99505b50600160ff1b9950611be8945050505050565b60ff85161580611ae1575060ff85166001145b15611b375782518114611b015750600160ff1b9950611be8945050505050565b611b288860200151600181518110611b1b57611b1b613010565b60200260200101516124a7565b9a509750611bd6945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104c2565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104c2565b80611be081613053565b91505061182b565b50600160ff1b841486611bfb8786612501565b909e909d50909b509950505050505050505050565b60208101518051606091610a4f91611c2a90600190612d68565b8151811061178c5761178c613010565b6060600080611c4884611e26565b91935090915060019050816001811115611c6457611c6461303d565b14611cb15760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104c2565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611cca5790505090506000835b8651811015611e1b5760208210611d635760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104c2565b600080611da06040518060400160405280858c60000151611d849190612d68565b8152602001858c60200151611d999190612e05565b9052611e26565b509150915060405180604001604052808383611dbc9190612e05565b8152602001848b60200151611dd19190612e05565b815250858581518110611de657611de6613010565b6020908102919091010152611dfc600185612e05565b9350611e088183612e05565b611e129084612e05565b92505050611cf7565b508152949350505050565b600080600080846000015111611e7e5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104c2565b6020840151805160001a607f8111611ea3576000600160009450945094505050612169565b60b78111611f1f576000611eb8608083612d68565b905080876000015111611f0d5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104c2565b60019550935060009250612169915050565b60bf811161200e576000611f3460b783612d68565b905080876000015111611f895760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104c2565b600183015160208290036101000a9004611fa38183612e05565b885111611ff25760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104c2565b611ffd826001612e05565b965094506000935061216992505050565b60f7811161208957600061202360c083612d68565b9050808760000151116120785760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104c2565b600195509350849250612169915050565b600061209660f783612d68565b9050808760000151116120eb5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104c2565b600183015160208290036101000a90046121058183612e05565b88511161214d5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104c2565b612158826001612e05565b965094506001935061216992505050565b9193909250565b600060f08083179060ff8216900361218b5750603092915050565b8060ff1660f10361219f5750603192915050565b8060ff1660f2036121b35750603292915050565b8060ff1660f3036121c75750603392915050565b8060ff1660f4036121db5750603492915050565b8060ff1660f5036121ef5750603592915050565b8060ff1660f6036122035750603692915050565b8060ff1660f7036122175750603792915050565b8060ff1660f80361222b5750603892915050565b8060ff1660f90361223f5750603992915050565b8060ff1660fa036122535750606192915050565b8060ff1660fb036122675750606292915050565b8060ff1660fc0361227b5750606392915050565b8060ff1660fd0361228f5750606492915050565b8060ff1660fe036122a35750606592915050565b8060ff1660ff036122b75750606692915050565b50919050565b606060008060006122cd85611e26565b9194509250905060008160018111156122e8576122e861303d565b146123355760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104c2565b610c79856020015184846125b3565b60606000825160026123569190613026565b67ffffffffffffffff81111561236e5761236e612809565b6040519080825280601f01601f191660200182016040528015612398576020820181803683370190505b50905060005b83518110156124785760048482815181106123bb576123bb613010565b01602001516001600160f81b031916901c826123d8836002613026565b815181106123e8576123e8613010565b60200101906001600160f81b031916908160001a905350601084828151811061241357612413613010565b0160200151612425919060f81c613082565b60f81b82612434836002613026565b61243f906001612e05565b8151811061244f5761244f613010565b60200101906001600160f81b031916908160001a9053508061247081613053565b91505061239e565b5092915050565b600060208251101561249357506020015190565b81806020019051810190610a4f91906130bd565b600060606020836000015110156124c8576124c183612691565b90506124d4565b6124d1836122bd565b90505b610c578161247f565b6060610a4f6124fc836020015160008151811061178c5761178c613010565b612344565b6060825182106125205750604080516020810190915260008152610a4f565b610c5783838486516125329190612d68565b61269c565b6000805b80845111801561254b5750808351115b801561259c575082818151811061256457612564613010565b602001015160f81c60f81b6001600160f81b03191684828151811061258b5761258b613010565b01602001516001600160f81b031916145b15610c5757806125ab81613053565b91505061253b565b606060008267ffffffffffffffff8111156125d0576125d0612809565b6040519080825280601f01601f1916602001820160405280156125fa576020820181803683370190505b509050805160000361260d579050610c57565b60006126198587612e05565b90506020820160005b61262d6020876130d6565b8110156126645782518252612643602084612e05565b9250612650602083612e05565b91508061265c81613053565b915050612622565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a4f826127f3565b6060816126aa81601f612e05565b10156126e95760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b826126f48382612e05565b10156127335760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b61273d8284612e05565b845110156127815760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104c2565b6060821580156127a057604051915060008252602082016040526127ea565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156127d95780518352602092830192016127c1565b5050858452601f01601f1916604052505b50949350505050565b6060610a4f8260200151600084600001516125b3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561284257612842612809565b60405290565b60405160a0810167ffffffffffffffff8111828210171561284257612842612809565b604051601f8201601f1916810167ffffffffffffffff8111828210171561289457612894612809565b604052919050565b600082601f8301126128ad57600080fd5b813567ffffffffffffffff8111156128c7576128c7612809565b6128da601f8201601f191660200161286b565b8181528460208386010111156128ef57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561291f57600080fd5b823567ffffffffffffffff8082111561293757600080fd5b6129438683870161289c565b9350602085013591508082111561295957600080fd5b506129668582860161289c565b9150509250929050565b60006020828403121561298257600080fd5b813567ffffffffffffffff81111561299957600080fd5b6129a58482850161289c565b949350505050565b6001600160a01b03811681146105ee57600080fd5b6000602082840312156129d457600080fd5b8135610c57816129ad565b600060a082840312156129f157600080fd5b60405160a0810167ffffffffffffffff8282108183111715612a1557612a15612809565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526080850135915080821115612a5257600080fd5b50612a5f8582860161289c565b6080830152505092915050565b600060408284031215612a7e57600080fd5b612a8661281f565b90508135815260208083013567ffffffffffffffff80821115612aa857600080fd5b818501915085601f830112612abc57600080fd5b813581811115612ace57612ace612809565b8060051b9150612adf84830161286b565b8181529183018401918481019088841115612af957600080fd5b938501935b83851015612b1757843582529385019390850190612afe565b808688015250505050505092915050565b600080600080600060a08688031215612b4057600080fd5b8535612b4b816129ad565b94506020860135612b5b816129ad565b9350604086013567ffffffffffffffff80821115612b7857600080fd5b612b8489838a0161289c565b9450606088013593506080880135915080821115612ba157600080fd5b9087019060a0828a031215612bb557600080fd5b612bbd612848565b82358152602083013582811115612bd357600080fd5b612bdf8b8286016129df565b602083015250604083013582811115612bf757600080fd5b612c038b828601612a6c565b604083015250606083013582811115612c1b57600080fd5b612c278b82860161289c565b606083015250608083013582811115612c3f57600080fd5b612c4b8b82860161289c565b6080830152508093505050509295509295909350565b600060208284031215612c7357600080fd5b5035919050565b60005b83811015612c95578181015183820152602001612c7d565b50506000910152565b60008151808452612cb6816020860160208601612c7a565b601f01601f19169290920160200192915050565b606081526000612cdd6060830186612c9e565b8281036020840152612cef8186612c9e565b91505060018060a01b0383166040830152949350505050565b604081526000612d1b6040830185612c9e565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b0382811682821603908082111561247857612478612d32565b81810381811115610a4f57610a4f612d32565b602081526000610c576020830184612c9e565b6001600160a01b0384168152606060208201819052600090612db290830185612c9e565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612df490830185612c9e565b905082606083015295945050505050565b80820180821115610a4f57610a4f612d32565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612e63610100850182612c9e565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612eb55784518252938501936001939093019290850190612e95565b509998505050505050505050565b600060208284031215612ed557600080fd5b81518015158114610c5757600080fd5b60008351612ef7818460208801612c7a565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016113a4565b60006020828403121561300557600080fd5b8151610c57816129ad565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610a4f57610a4f612d32565b634e487b7160e01b600052602160045260246000fd5b60006001820161306557613065612d32565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff8316806130955761309561306c565b8060ff84160691505092915050565b60ff8281168282160390811115610a4f57610a4f612d32565b6000602082840312156130cf57600080fd5b5051919050565b6000826130e5576130e561306c565b50049056fea264697066735822122065650a4e6dafd10f0a0f0127641af67605b829ad906b30c64d860dd16dace75064736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
