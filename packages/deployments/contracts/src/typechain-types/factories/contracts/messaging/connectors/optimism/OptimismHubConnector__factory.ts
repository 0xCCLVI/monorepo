/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002deb38038062002deb8339810160408190526200003591620002fa565b8686868686868585858585856200004c33620001bf565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b826200021e565b80156200012d576200012d8162000287565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039c909c169b909b17909a5550620003869e505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620002dd57600080fd5b919050565b80516001600160a01b0381168114620002dd57600080fd5b600080600080600080600060e0888a0312156200031657600080fd5b6200032188620002c8565b96506200033160208901620002c8565b95506200034160408901620002e2565b94506200035160608901620002e2565b93506200036160808901620002e2565b925060a088015191506200037860c08901620002e2565b905092959891949750929550565b60805160a05160c05160e051612a01620003ea60003960008181610171015261087901526000818161020e0152818161064b01526108b40152600081816102f60152818161033601528181610b370152610bc4015260006101d40152612a016000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063cc3942831161007c578063cc394283146102a6578063cf796c75146102b9578063d1851c92146102c2578063d232c220146102d3578063d69f9d61146102f1578063db1b76591461031857600080fd5b8063715018a61461025f57806382646a58146102675780638da5cb5b1461027a578063b1f8100d1461028b578063c5b350df1461029e57600080fd5b80635bd11efc116100ff5780635bd11efc146101f65780635f61e3ec146102095780636a42b8f8146102305780636e2edb4e146102395780636eb67a511461024c57600080fd5b80630f329ef81461013c578063141684161461016c5780633cf52ffb146101a85780634ff746f6146101ba57806352a9674b146101cf575b600080fd5b60055461014f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101937f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610163565b6002545b604051908152602001610163565b6101cd6101c836600461231c565b61032b565b005b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6101cd61020436600461236e565b6103da565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b62093a806101ac565b6101cd6102473660046124d4565b610411565b6101cd61025a36600461260d565b61054d565b6101cd610581565b6101cd61027536600461231c565b610640565b6000546001600160a01b031661014f565b6101cd61029936600461236e565b6106e1565b6101cd610786565b60035461014f906001600160a01b031681565b6101ac60045481565b6001546001600160a01b031661014f565b6000546001600160a01b0316155b6040519015158152602001610163565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e161032636600461236e565b6107e1565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103955760405162461bcd60e51b815260040161038c9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b61039e816107f2565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516103cf929190612682565b60405180910390a150565b6000546001600160a01b03163314610405576040516311a8a1bb60e31b815260040160405180910390fd5b61040e81610916565b50565b6003546001600160a01b038581169116146104615760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161038c565b6001600160a01b03851630146104a15760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b604482015260640161038c565b60006104af8686868661097f565b90506104bb81836109cc565b6104f05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b604482015260640161038c565b60405130906105009086906126ac565b6000604051808303816000865af19150503d806000811461053d576040519150601f19603f3d011682016040523d82523d6000602084013e610542565b606091505b505050505050505050565b6000546001600160a01b03163314610578576040516311a8a1bb60e31b815260040160405180910390fd5b61040e816109ef565b6000546001600160a01b031633146105ac576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036105cf57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426105e191906126de565b116105ff576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610629576040516323295ef960e01b815260040160405180910390fd5b60015461063e906001600160a01b0316610a30565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106a75760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161038c565b6106b081610a8f565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516103cf929190612682565b6000546001600160a01b0316331461070c576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561073157506001600160a01b03811615155b1561074f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361077d57604051634a2fb73f60e11b815260040160405180910390fd5b61040e81610b6f565b6001546001600160a01b031633146107b1576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107c391906126de565b116106295760405163d39c12bb60e01b815260040160405180910390fd5b60006107ec82610bbd565b92915050565b805160201461082d5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161038c565b6000610838826126f5565b60008181526006602052604090205490915060ff166109125760008181526006602052604090819020805460ff19166001179055516378ffd0a160e01b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906378ffd0a1906044015b600060405180830381600087803b1580156108f957600080fd5b505af115801561090d573d6000803e3d6000fd5b505050505b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610998949392919061271c565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b60006109d782610be9565b80156109e857506109e88383610c6a565b9392505050565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051602014610aca5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161038c565b6000634ff746f660e01b82604051602401610ae59190612759565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b946108df949092169287920161276c565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006107ec7f000000000000000000000000000000000000000000000000000000000000000083610df9565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610c299391929091906004016127a6565b602060405180830381865afa158015610c46573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ec9190612851565b600080836007602160991b01604051602001610c87929190612873565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b9183019190915291506000908190610cfb9060340160408051601f1981840301815291905260608701518751610eba565b9092509050600182151514610d8e5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a40161038c565b6000610d9982610ee3565b9050610dee84604051602001610db191815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151610fa7565b979650505050505050565b6000336001600160a01b03841614610e3d5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b604482015260640161038c565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea991906128aa565b6001600160a01b0316149392505050565b600060606000610ec986610fcb565b9050610ed6818686610ffd565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290610f10836110d8565b90506040518060800160405280610f4083600081518110610f3357610f336128c7565b602002602001015161110b565b8152602001610f5b83600181518110610f3357610f336128c7565b8152602001610f8383600281518110610f7657610f766128c7565b6020026020010151611112565b8152602001610f9e83600381518110610f7657610f766128c7565b90529392505050565b600080610fb386610fcb565b9050610fc181868686611214565b9695505050505050565b60608180519060200120604051602001610fe791815260200190565b6040516020818303038152906040529050919050565b60006060600061100c8561124a565b9050600080600061101e848a89611345565b815192955090935091501580806110325750815b61107e5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e000000000000604482015260640161038c565b60008161109a57604051806020016040528060008152506110c6565b6110c6866110a96001886126de565b815181106110b9576110b96128c7565b6020026020010151611764565b919b919a509098505050505050505050565b6040805180820182526000808252602091820152815180830190925282518252808301908201526060906107ec9061178e565b60006107ec825b60006021826000015111156111695760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161038c565b60008060006111778561197a565b919450925090506000816001811115611192576111926128dd565b146111df5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161038c565b60008386602001516111f191906128f3565b80519091506020841015610fc15760208490036101000a90049695505050505050565b6000806000611224878686610ffd565b91509150818015610dee5750805160208083019190912087519188019190912014610dee565b60606000611257836110d8565b90506000815167ffffffffffffffff81111561127557611275612219565b6040519080825280602002602001820160405280156112ba57816020015b60408051808201909152606080825260208201528152602001906001900390816112935790505b50905060005b825181101561133d5760006112ed8483815181106112e0576112e06128c7565b6020026020010151611cc4565b90506040518060400160405280828152602001611309836110d8565b81525083838151811061131e5761131e6128c7565b60200260200101819052505080806113359061290b565b9150506112c0565b509392505050565b6000606081808061135587611d54565b9050600086905060008061137c604051806040016040528060608152602001606081525090565b60005b8c5181101561173c578c818151811061139a5761139a6128c7565b6020026020010151915082846113b091906128f3565b93506113bd6001886128f3565b965083600003611418578151805160209091012085146114135760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b604482015260640161038c565b6114d5565b81515160201161147a578151805160209091012085146114135760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c20686173680000000000604482015260640161038c565b846114888360000151611e8f565b146114d55760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f64652068617368000000000000604482015260640161038c565b6114e1601060016128f3565b82602001515103611553578551841461173c576000868581518110611508576115086128c7565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611533576115336128c7565b6020026020010151905061154681611eb7565b965060019450505061172a565b6002826020015151036116e257600061156b83611eed565b9050600081600081518110611582576115826128c7565b016020015160f81c9050600061159960028361293a565b6115a490600261295c565b905060006115b5848360ff16611f11565b905060006115c38b8a611f11565b905060006115d18383611f47565b905060ff8516600214806115e8575060ff85166003145b15611622578083511480156115fd5750808251145b1561160f5761160c818b6128f3565b99505b50600160ff1b995061173c945050505050565b60ff85161580611635575060ff85166001145b1561168b57825181146116555750600160ff1b995061173c945050505050565b61167c886020015160018151811061166f5761166f6128c7565b6020026020010151611eb7565b9a50975061172a945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b606482015260840161038c565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e000000604482015260640161038c565b806117348161290b565b91505061137f565b50600160ff1b84148661174f8786611f11565b909e909d50909b509950505050505050505050565b602081015180516060916107ec9161177e906001906126de565b815181106112e0576112e06128c7565b606060008061179c8461197a565b919350909150600190508160018111156117b8576117b86128dd565b146118055760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e000000000000000000604482015260640161038c565b6040805160208082526104208201909252600091816020015b604080518082019091526000808252602082015281526020019060019003908161181e5790505090506000835b865181101561196f57602082106118b75760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b606482015260840161038c565b6000806118f46040518060400160405280858c600001516118d891906126de565b8152602001858c602001516118ed91906128f3565b905261197a565b50915091506040518060400160405280838361191091906128f3565b8152602001848b6020015161192591906128f3565b81525085858151811061193a5761193a6128c7565b60209081029190910101526119506001856128f3565b935061195c81836128f3565b61196690846128f3565b9250505061184b565b508152949350505050565b6000806000808460000151116119d25760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e0000000000000000604482015260640161038c565b6020840151805160001a607f81116119f7576000600160009450945094505050611cbd565b60b78111611a73576000611a0c6080836126de565b905080876000015111611a615760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e00000000000000604482015260640161038c565b60019550935060009250611cbd915050565b60bf8111611b62576000611a8860b7836126de565b905080876000015111611add5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e00604482015260640161038c565b600183015160208290036101000a9004611af781836128f3565b885111611b465760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e0000000000000000604482015260640161038c565b611b518260016128f3565b9650945060009350611cbd92505050565b60f78111611bdd576000611b7760c0836126de565b905080876000015111611bcc5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e000000000000000000604482015260640161038c565b600195509350849250611cbd915050565b6000611bea60f7836126de565b905080876000015111611c3f5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e000000604482015260640161038c565b600183015160208290036101000a9004611c5981836128f3565b885111611ca15760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b604482015260640161038c565b611cac8260016128f3565b9650945060019350611cbd92505050565b9193909250565b60606000806000611cd48561197a565b919450925090506000816001811115611cef57611cef6128dd565b14611d3c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e0000000000000000604482015260640161038c565b611d4b85602001518484611fc3565b95945050505050565b6060600082516002611d66919061297f565b67ffffffffffffffff811115611d7e57611d7e612219565b6040519080825280601f01601f191660200182016040528015611da8576020820181803683370190505b50905060005b8351811015611e88576004848281518110611dcb57611dcb6128c7565b01602001516001600160f81b031916901c82611de883600261297f565b81518110611df857611df86128c7565b60200101906001600160f81b031916908160001a9053506010848281518110611e2357611e236128c7565b0160200151611e35919060f81c61293a565b60f81b82611e4483600261297f565b611e4f9060016128f3565b81518110611e5f57611e5f6128c7565b60200101906001600160f81b031916908160001a90535080611e808161290b565b915050611dae565b5092915050565b6000602082511015611ea357506020015190565b818060200190518101906107ec919061299e565b60006060602083600001511015611ed857611ed1836120a1565b9050611ee4565b611ee183611cc4565b90505b6109e881611e8f565b60606107ec611f0c83602001516000815181106112e0576112e06128c7565b611d54565b606082518210611f3057506040805160208101909152600081526107ec565b6109e88383848651611f4291906126de565b6120ac565b6000805b808451118015611f5b5750808351115b8015611fac5750828181518110611f7457611f746128c7565b602001015160f81c60f81b6001600160f81b031916848281518110611f9b57611f9b6128c7565b01602001516001600160f81b031916145b156109e85780611fbb8161290b565b915050611f4b565b606060008267ffffffffffffffff811115611fe057611fe0612219565b6040519080825280601f01601f19166020018201604052801561200a576020820181803683370190505b509050805160000361201d5790506109e8565b600061202985876128f3565b90506020820160005b61203d6020876129b7565b81101561207457825182526120536020846128f3565b92506120606020836128f3565b91508061206c8161290b565b915050612032565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b60606107ec82612203565b6060816120ba81601f6128f3565b10156120f95760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161038c565b8261210483826128f3565b10156121435760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161038c565b61214d82846128f3565b845110156121915760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161038c565b6060821580156121b057604051915060008252602082016040526121fa565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156121e95780518352602092830192016121d1565b5050858452601f01601f1916604052505b50949350505050565b60606107ec826020015160008460000151611fc3565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561225257612252612219565b60405290565b60405160a0810167ffffffffffffffff8111828210171561225257612252612219565b604051601f8201601f1916810167ffffffffffffffff811182821017156122a4576122a4612219565b604052919050565b600082601f8301126122bd57600080fd5b813567ffffffffffffffff8111156122d7576122d7612219565b6122ea601f8201601f191660200161227b565b8181528460208386010111156122ff57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561232e57600080fd5b813567ffffffffffffffff81111561234557600080fd5b612351848285016122ac565b949350505050565b6001600160a01b038116811461040e57600080fd5b60006020828403121561238057600080fd5b81356109e881612359565b600060a0828403121561239d57600080fd5b60405160a0810167ffffffffffffffff82821081831117156123c1576123c1612219565b816040528293508435835260208501356020840152604085013560408401526060850135606084015260808501359150808211156123fe57600080fd5b5061240b858286016122ac565b6080830152505092915050565b60006040828403121561242a57600080fd5b61243261222f565b90508135815260208083013567ffffffffffffffff8082111561245457600080fd5b818501915085601f83011261246857600080fd5b81358181111561247a5761247a612219565b8060051b915061248b84830161227b565b81815291830184019184810190888411156124a557600080fd5b938501935b838510156124c3578435825293850193908501906124aa565b808688015250505050505092915050565b600080600080600060a086880312156124ec57600080fd5b85356124f781612359565b9450602086013561250781612359565b9350604086013567ffffffffffffffff8082111561252457600080fd5b61253089838a016122ac565b945060608801359350608088013591508082111561254d57600080fd5b9087019060a0828a03121561256157600080fd5b612569612258565b8235815260208301358281111561257f57600080fd5b61258b8b82860161238b565b6020830152506040830135828111156125a357600080fd5b6125af8b828601612418565b6040830152506060830135828111156125c757600080fd5b6125d38b8286016122ac565b6060830152506080830135828111156125eb57600080fd5b6125f78b8286016122ac565b6080830152508093505050509295509295909350565b60006020828403121561261f57600080fd5b5035919050565b60005b83811015612641578181015183820152602001612629565b83811115612650576000848401525b50505050565b6000815180845261266e816020860160208601612626565b601f01601f19169290920160200192915050565b6040815260006126956040830185612656565b905060018060a01b03831660208301529392505050565b600082516126be818460208701612626565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000828210156126f0576126f06126c8565b500390565b80516020808301519190811015612716576000198160200360031b1b821691505b50919050565b6001600160a01b0385811682528416602082015260806040820181905260009061274890830185612656565b905082606083015295945050505050565b6020815260006109e86020830184612656565b6001600160a01b038416815260606020820181905260009061279090830185612656565b905063ffffffff83166040830152949350505050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e08501526127f1610100850182612656565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b808410156128435784518252938501936001939093019290850190612823565b509998505050505050505050565b60006020828403121561286357600080fd5b815180151581146109e857600080fd5b60008351612885818460208801612626565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b6000602082840312156128bc57600080fd5b81516109e881612359565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b60008219821115612906576129066126c8565b500190565b60006001820161291d5761291d6126c8565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff83168061294d5761294d612924565b8060ff84160691505092915050565b600060ff821660ff841680821015612976576129766126c8565b90039392505050565b6000816000190483118215151615612999576129996126c8565b500290565b6000602082840312156129b057600080fd5b5051919050565b6000826129c6576129c6612924565b50049056fea26469706673582212202e85659e95870013c82b74eac48e43244d7bea3b6aaa10140617ff4e021802de64736f6c634300080f0033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
