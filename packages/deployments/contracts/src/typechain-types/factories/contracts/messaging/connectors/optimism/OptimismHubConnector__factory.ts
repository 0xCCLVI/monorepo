/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620031ce380380620031ce8339810160408190526200003591620002eb565b8080888888888884848484846200004c33620001aa565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200020f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027860201b60201c565b5050506001600160a01b03166101005250620003779350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002ce57600080fd5b919050565b80516001600160a01b0381168114620002ce57600080fd5b600080600080600080600060e0888a0312156200030757600080fd5b6200031288620002b9565b96506200032260208901620002b9565b95506200033260408901620002d3565b94506200034260608901620002d3565b93506200035260808901620002d3565b92506200036260a08901620002d3565b915060c0880151905092959891949750929550565b60805160a05160c05160e05161010051612de1620003ed6000396000818161014c0152610ed301526000818161019d015261075401526000818161028e0152818161046a015261078f01526000818161041d0152818161051f01528181610afd0152610e880152600061023a0152612de16000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610399578063cc394283146103ae578063d1851c92146103ce578063d232c220146103ec578063d69f9d611461040b578063db1b76591461043f57600080fd5b8063715018a6146102e65780637850b020146102fb5780638da5cb5b1461031b578063b1f8100d14610339578063c1f0808a1461035957600080fd5b806352a9674b116100f257806352a9674b146102285780635bd11efc1461025c5780635f61e3ec1461027c5780636a42b8f8146102b05780636e2edb4e146102c657600080fd5b80630f329ef81461013a578063141684161461018b5780633cf52ffb146101d457806348e6fa23146101f35780634ff746f61461020857600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019757600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610182565b3480156101e057600080fd5b506002545b604051908152602001610182565b6102066102013660046126a4565b61045f565b005b34801561021457600080fd5b50610206610223366004612708565b610514565b34801561023457600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026857600080fd5b5061020661027736600461275a565b6105ba565b34801561028857600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bc57600080fd5b5062093a806101e5565b3480156102d257600080fd5b506102066102e13660046128c0565b6105f1565b3480156102f257600080fd5b5061020661084e565b34801561030757600080fd5b506102066103163660046129f9565b610902565b34801561032757600080fd5b506000546001600160a01b031661016e565b34801561034557600080fd5b5061020661035436600461275a565b610936565b34801561036557600080fd5b506103896103743660046129f9565b60056020526000908152604090205460ff1681565b6040519015158152602001610182565b3480156103a557600080fd5b506102066109d4565b3480156103ba57600080fd5b5060035461016e906001600160a01b031681565b3480156103da57600080fd5b506001546001600160a01b031661016e565b3480156103f857600080fd5b506000546001600160a01b031615610389565b34801561041757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044b57600080fd5b5061038961045a36600461275a565b610a44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104d58282610a55565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161050893929190612a62565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105755760405162461bcd60e51b81526004016104c29060208082526004908201526310a0a6a160e11b604082015260600190565b61057e81610b6c565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105af929190612aa0565b60405180910390a150565b6000546001600160a01b031633146105e5576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610b85565b50565b6003546001600160a01b038581169116146106415760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104c2565b6001600160a01b03851630146106815760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104c2565b600061068f86868686610bee565b905061069b8183610c3b565b6106d05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104c2565b60006106dc8582610c5e565b905060006107136106fb6020601885901c6001600160601b0316612ae0565b62ffffff198416906001600160601b03166020610c82565b60008181526005602052604090205490915060ff166108445760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161081f91815260200190565b60408051601f198184030181529082905261083b913390612aa0565b60405180910390a15b5050505050505050565b6000546001600160a01b03163314610879576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361089c57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108ae9190612b00565b116108cc576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156108f6576040516323295ef960e01b815260040160405180910390fd5b6109006000610d8d565b565b6000546001600160a01b0316331461092d576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610df2565b6000546001600160a01b03163314610961576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561097f575060025415155b1561099d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109cb57604051634a2fb73f60e11b815260040160405180910390fd5b6105ee81610e33565b6001546001600160a01b031633146109ff576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a119190612b00565b11610a2f5760405163d39c12bb60e01b815260040160405180910390fd5b600154610900906001600160a01b0316610d8d565b6000610a4f82610e81565b92915050565b8151602014610a905760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c2565b6000634ff746f660e01b83604051602401610aab9190612b13565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b94610b359490921692879201612b26565b600060405180830381600087803b158015610b4f57600080fd5b505af1158015610b63573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c079493929190612b60565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c4682610ead565b8015610c575750610c578383610f47565b9392505050565b815160009060208401610c7964ffffffffff851682846110d6565b95945050505050565b60008160ff16600003610c9757506000610c57565b610caa8460181c6001600160601b031690565b6001600160601b0316610cc060ff841685612b9d565b1115610d2857610cd98460781c6001600160601b031690565b610cec8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016104c2565b60208260ff161115610d4d5760405163045df3f960e01b815260040160405180910390fd5b600882026000610d668660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a4f7f000000000000000000000000000000000000000000000000000000000000000083611113565b805160208201516040808401519051634d69ee5760e01b81526000936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693634d69ee5793610f0693600401612bb0565b602060405180830381865afa158015610f23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190612c5b565b600080836007602160991b01604051602001610f64929190612c7d565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b9183019190915291506000908190610fd89060340160408051601f19818403018152919052606087015187516111d4565b909250905060018215151461106b5760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104c2565b6000611076826111fd565b90506110cb8460405160200161108e91815260200190565b60408051601f1981840301815290829052600160f81b602083015290602101604051602081830303815290604052886080015184604001516112c1565b979650505050505050565b6000806110e38385612b9d565b90506040518111156110f3575060005b806000036111085762ffffff19915050610c57565b610c798585856112e5565b6000336001600160a01b038416146111575760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104c2565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561119f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c39190612cb4565b6001600160a01b0316149392505050565b6000606060006111e38661135c565b90506111f081868661138e565b9250925050935093915050565b60408051608081018252600080825260208201819052918101829052606081018290529061122a83611469565b9050604051806080016040528061125a8360008151811061124d5761124d612cd1565b602002602001015161149c565b81526020016112758360018151811061124d5761124d612cd1565b815260200161129d8360028151811061129057611290612cd1565b60200260200101516114a3565b81526020016112b88360038151811061129057611290612cd1565b90529392505050565b6000806112cd8661135c565b90506112db818686866115a5565b9695505050505050565b60006060601883856001600160601b0382168214801561130d575086816001600160601b0316145b6113465760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016104c2565b96831b90961790911b90941790931b9392505050565b6060818051906020012060405160200161137891815260200190565b6040516020818303038152906040529050919050565b60006060600061139d856115db565b905060008060006113af848a896116d6565b815192955090935091501580806113c35750815b61140f5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104c2565b60008161142b5760405180602001604052806000815250611457565b6114578661143a600188612b00565b8151811061144a5761144a612cd1565b6020026020010151611af5565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a4f90611b1f565b6000610a4f825b60006021826000015111156114fa5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b600080600061150885611d0b565b91945092509050600081600181111561152357611523612ce7565b146115705760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b60008386602001516115829190612b9d565b805190915060208410156112db5760208490036101000a90049695505050505050565b60008060006115b587868661138e565b915091508180156110cb57508051602080830191909120875191880191909120146110cb565b606060006115e883611469565b90506000815167ffffffffffffffff811115611606576116066125a1565b60405190808252806020026020018201604052801561164b57816020015b60408051808201909152606080825260208201528152602001906001900390816116245790505b50905060005b82518110156116ce57600061167e84838151811061167157611671612cd1565b6020026020010151612055565b9050604051806040016040528082815260200161169a83611469565b8152508383815181106116af576116af612cd1565b60200260200101819052505080806116c690612cfd565b915050611651565b509392505050565b600060608180806116e6876120dc565b9050600086905060008061170d604051806040016040528060608152602001606081525090565b60005b8c51811015611acd578c818151811061172b5761172b612cd1565b6020026020010151915082846117419190612b9d565b935061174e600188612b9d565b9650836000036117a9578151805160209091012085146117a45760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104c2565b611866565b81515160201161180b578151805160209091012085146117a45760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104c2565b846118198360000151612217565b146118665760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104c2565b61187260106001612b9d565b826020015151036118e45785518414611acd57600086858151811061189957611899612cd1565b602001015160f81c60f81b60f81c9050600083602001518260ff16815181106118c4576118c4612cd1565b602002602001015190506118d78161223f565b9650600194505050611abb565b600282602001515103611a735760006118fc83612275565b905060008160008151811061191357611913612cd1565b016020015160f81c9050600061192a600283612d2c565b611935906002612d4e565b90506000611946848360ff16612299565b905060006119548b8a612299565b9050600061196283836122cf565b905060ff851660021480611979575060ff85166003145b156119b35780835114801561198e5750808251145b156119a05761199d818b612b9d565b99505b50600160ff1b9950611acd945050505050565b60ff851615806119c6575060ff85166001145b15611a1c57825181146119e65750600160ff1b9950611acd945050505050565b611a0d8860200151600181518110611a0057611a00612cd1565b602002602001015161223f565b9a509750611abb945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104c2565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104c2565b80611ac581612cfd565b915050611710565b50600160ff1b841486611ae08786612299565b909e909d50909b509950505050505050505050565b60208101518051606091610a4f91611b0f90600190612b00565b8151811061167157611671612cd1565b6060600080611b2d84611d0b565b91935090915060019050816001811115611b4957611b49612ce7565b14611b965760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104c2565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611baf5790505090506000835b8651811015611d005760208210611c485760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104c2565b600080611c856040518060400160405280858c60000151611c699190612b00565b8152602001858c60200151611c7e9190612b9d565b9052611d0b565b509150915060405180604001604052808383611ca19190612b9d565b8152602001848b60200151611cb69190612b9d565b815250858581518110611ccb57611ccb612cd1565b6020908102919091010152611ce1600185612b9d565b9350611ced8183612b9d565b611cf79084612b9d565b92505050611bdc565b508152949350505050565b600080600080846000015111611d635760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104c2565b6020840151805160001a607f8111611d8857600060016000945094509450505061204e565b60b78111611e04576000611d9d608083612b00565b905080876000015111611df25760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104c2565b6001955093506000925061204e915050565b60bf8111611ef3576000611e1960b783612b00565b905080876000015111611e6e5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104c2565b600183015160208290036101000a9004611e888183612b9d565b885111611ed75760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104c2565b611ee2826001612b9d565b965094506000935061204e92505050565b60f78111611f6e576000611f0860c083612b00565b905080876000015111611f5d5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104c2565b60019550935084925061204e915050565b6000611f7b60f783612b00565b905080876000015111611fd05760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104c2565b600183015160208290036101000a9004611fea8183612b9d565b8851116120325760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104c2565b61203d826001612b9d565b965094506001935061204e92505050565b9193909250565b6060600080600061206585611d0b565b91945092509050600081600181111561208057612080612ce7565b146120cd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104c2565b610c798560200151848461234b565b60606000825160026120ee9190612d67565b67ffffffffffffffff811115612106576121066125a1565b6040519080825280601f01601f191660200182016040528015612130576020820181803683370190505b50905060005b835181101561221057600484828151811061215357612153612cd1565b01602001516001600160f81b031916901c82612170836002612d67565b8151811061218057612180612cd1565b60200101906001600160f81b031916908160001a90535060108482815181106121ab576121ab612cd1565b01602001516121bd919060f81c612d2c565b60f81b826121cc836002612d67565b6121d7906001612b9d565b815181106121e7576121e7612cd1565b60200101906001600160f81b031916908160001a9053508061220881612cfd565b915050612136565b5092915050565b600060208251101561222b57506020015190565b81806020019051810190610a4f9190612d7e565b600060606020836000015110156122605761225983612429565b905061226c565b61226983612055565b90505b610c5781612217565b6060610a4f612294836020015160008151811061167157611671612cd1565b6120dc565b6060825182106122b85750604080516020810190915260008152610a4f565b610c5783838486516122ca9190612b00565b612434565b6000805b8084511180156122e35750808351115b801561233457508281815181106122fc576122fc612cd1565b602001015160f81c60f81b6001600160f81b03191684828151811061232357612323612cd1565b01602001516001600160f81b031916145b15610c57578061234381612cfd565b9150506122d3565b606060008267ffffffffffffffff811115612368576123686125a1565b6040519080825280601f01601f191660200182016040528015612392576020820181803683370190505b50905080516000036123a5579050610c57565b60006123b18587612b9d565b90506020820160005b6123c5602087612d97565b8110156123fc57825182526123db602084612b9d565b92506123e8602083612b9d565b9150806123f481612cfd565b9150506123ba565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a4f8261258b565b60608161244281601f612b9d565b10156124815760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b8261248c8382612b9d565b10156124cb5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b6124d58284612b9d565b845110156125195760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104c2565b6060821580156125385760405191506000825260208201604052612582565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015612571578051835260209283019201612559565b5050858452601f01601f1916604052505b50949350505050565b6060610a4f82602001516000846000015161234b565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156125da576125da6125a1565b60405290565b60405160a0810167ffffffffffffffff811182821017156125da576125da6125a1565b604051601f8201601f1916810167ffffffffffffffff8111828210171561262c5761262c6125a1565b604052919050565b600082601f83011261264557600080fd5b813567ffffffffffffffff81111561265f5761265f6125a1565b612672601f8201601f1916602001612603565b81815284602083860101111561268757600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156126b757600080fd5b823567ffffffffffffffff808211156126cf57600080fd5b6126db86838701612634565b935060208501359150808211156126f157600080fd5b506126fe85828601612634565b9150509250929050565b60006020828403121561271a57600080fd5b813567ffffffffffffffff81111561273157600080fd5b61273d84828501612634565b949350505050565b6001600160a01b03811681146105ee57600080fd5b60006020828403121561276c57600080fd5b8135610c5781612745565b600060a0828403121561278957600080fd5b60405160a0810167ffffffffffffffff82821081831117156127ad576127ad6125a1565b816040528293508435835260208501356020840152604085013560408401526060850135606084015260808501359150808211156127ea57600080fd5b506127f785828601612634565b6080830152505092915050565b60006040828403121561281657600080fd5b61281e6125b7565b90508135815260208083013567ffffffffffffffff8082111561284057600080fd5b818501915085601f83011261285457600080fd5b813581811115612866576128666125a1565b8060051b9150612877848301612603565b818152918301840191848101908884111561289157600080fd5b938501935b838510156128af57843582529385019390850190612896565b808688015250505050505092915050565b600080600080600060a086880312156128d857600080fd5b85356128e381612745565b945060208601356128f381612745565b9350604086013567ffffffffffffffff8082111561291057600080fd5b61291c89838a01612634565b945060608801359350608088013591508082111561293957600080fd5b9087019060a0828a03121561294d57600080fd5b6129556125e0565b8235815260208301358281111561296b57600080fd5b6129778b828601612777565b60208301525060408301358281111561298f57600080fd5b61299b8b828601612804565b6040830152506060830135828111156129b357600080fd5b6129bf8b828601612634565b6060830152506080830135828111156129d757600080fd5b6129e38b828601612634565b6080830152508093505050509295509295909350565b600060208284031215612a0b57600080fd5b5035919050565b60005b83811015612a2d578181015183820152602001612a15565b50506000910152565b60008151808452612a4e816020860160208601612a12565b601f01601f19169290920160200192915050565b606081526000612a756060830186612a36565b8281036020840152612a878186612a36565b91505060018060a01b0383166040830152949350505050565b604081526000612ab36040830185612a36565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b0382811682821603908082111561221057612210612aca565b81810381811115610a4f57610a4f612aca565b602081526000610c576020830184612a36565b6001600160a01b0384168152606060208201819052600090612b4a90830185612a36565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612b8c90830185612a36565b905082606083015295945050505050565b80820180821115610a4f57610a4f612aca565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612bfb610100850182612a36565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612c4d5784518252938501936001939093019290850190612c2d565b509998505050505050505050565b600060208284031215612c6d57600080fd5b81518015158114610c5757600080fd5b60008351612c8f818460208801612a12565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600060208284031215612cc657600080fd5b8151610c5781612745565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600060018201612d0f57612d0f612aca565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612d3f57612d3f612d16565b8060ff84160691505092915050565b60ff8281168282160390811115610a4f57610a4f612aca565b8082028115828204841417610a4f57610a4f612aca565b600060208284031215612d9057600080fd5b5051919050565b600082612da657612da6612d16565b50049056fea2646970667358221220063845d5d20b00fcd0f4e0f195211eb0e80b6074fa82fe2549d6ba9b8952192964736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
