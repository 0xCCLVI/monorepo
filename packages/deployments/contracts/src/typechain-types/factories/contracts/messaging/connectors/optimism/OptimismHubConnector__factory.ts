/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b50604051620031f6380380620031f68339810160408190526200003591620002eb565b8080888888888884848484846200004c33620001aa565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200020f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027860201b60201c565b5050506001600160a01b03166101005250620003779350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002ce57600080fd5b919050565b80516001600160a01b0381168114620002ce57600080fd5b600080600080600080600060e0888a0312156200030757600080fd5b6200031288620002b9565b96506200032260208901620002b9565b95506200033260408901620002d3565b94506200034260608901620002d3565b93506200035260808901620002d3565b92506200036260a08901620002d3565b915060c0880151905092959891949750929550565b60805160a05160c05160e05161010051612e09620003ed600039600081816101570152610f110152600081816101a801526107920152600081816102cc015281816104a801526107cd01526000818161045b0152818161055d01528181610b3b0152610ec6015260006102450152612e096000f3fe6080604052600436106101395760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df146103d7578063cc394283146103ec578063d1851c921461040c578063d232c2201461042a578063d69f9d6114610449578063db1b76591461047d57600080fd5b8063715018a6146103245780637850b020146103395780638da5cb5b14610359578063b1f8100d14610377578063c1f0808a1461039757600080fd5b806352a9674b116100fd57806352a9674b146102335780635bd11efc146102675780635c36b186146102875780635f61e3ec146102ba5780636a42b8f8146102ee5780636e2edb4e1461030457600080fd5b80630f329ef81461014557806314168416146101965780633cf52ffb146101df57806348e6fa23146101fe5780634ff746f61461021357600080fd5b3661014057005b600080fd5b34801561015157600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a257600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161018d565b3480156101eb57600080fd5b506002545b60405190815260200161018d565b61021161020c3660046126c5565b61049d565b005b34801561021f57600080fd5b5061021161022e366004612729565b610552565b34801561023f57600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561027357600080fd5b5061021161028236600461277b565b6105f8565b34801561029357600080fd5b506040805180820182526004815263706f6e6760e01b6020820152905161018d91906127e8565b3480156102c657600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b3480156102fa57600080fd5b5062093a806101f0565b34801561031057600080fd5b5061021161031f366004612944565b61062f565b34801561033057600080fd5b5061021161088c565b34801561034557600080fd5b50610211610354366004612a7d565b610940565b34801561036557600080fd5b506000546001600160a01b0316610179565b34801561038357600080fd5b5061021161039236600461277b565b610974565b3480156103a357600080fd5b506103c76103b2366004612a7d565b60056020526000908152604090205460ff1681565b604051901515815260200161018d565b3480156103e357600080fd5b50610211610a12565b3480156103f857600080fd5b50600354610179906001600160a01b031681565b34801561041857600080fd5b506001546001600160a01b0316610179565b34801561043657600080fd5b506000546001600160a01b0316156103c7565b34801561045557600080fd5b506101797f000000000000000000000000000000000000000000000000000000000000000081565b34801561048957600080fd5b506103c761049836600461277b565b610a82565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105095760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6105138282610a93565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161054693929190612a96565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b35760405162461bcd60e51b81526004016105009060208082526004908201526310a0a6a160e11b604082015260600190565b6105bc81610baa565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105ed929190612ad4565b60405180910390a150565b6000546001600160a01b03163314610623576040516311a8a1bb60e31b815260040160405180910390fd5b61062c81610bc3565b50565b6003546001600160a01b0385811691161461067f5760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b6044820152606401610500565b6001600160a01b03851630146106bf5760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b6044820152606401610500565b60006106cd86868686610c2c565b90506106d98183610c79565b61070e5760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b6044820152606401610500565b600061071a8582610c9c565b905060006107516107396020601885901c6001600160601b0316612b14565b62ffffff198416906001600160601b03166020610cc0565b60008181526005602052604090205490915060ff166108825760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161085d91815260200190565b60408051601f1981840301815290829052610879913390612ad4565b60405180910390a15b5050505050505050565b6000546001600160a01b031633146108b7576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426108c99190612b3b565b116108e7576040516324e0285f60e21b815260040160405180910390fd5b60025460000361090a57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610934576040516323295ef960e01b815260040160405180910390fd5b61093e6000610dcb565b565b6000546001600160a01b0316331461096b576040516311a8a1bb60e31b815260040160405180910390fd5b61062c81610e30565b6000546001600160a01b0316331461099f576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156109bd575060025415155b156109db576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610a0957604051634a2fb73f60e11b815260040160405180910390fd5b61062c81610e71565b6001546001600160a01b03163314610a3d576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a4f9190612b3b565b11610a6d576040516324e0285f60e21b815260040160405180910390fd5b60015461093e906001600160a01b0316610dcb565b6000610a8d82610ebf565b92915050565b8151602014610ace5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610500565b6000634ff746f660e01b83604051602401610ae991906127e8565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b94610b739490921692879201612b4e565b600060405180830381600087803b158015610b8d57600080fd5b505af1158015610ba1573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c459493929190612b88565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c8482610eeb565b8015610c955750610c958383610f85565b9392505050565b815160009060208401610cb764ffffffffff85168284611114565b95945050505050565b60008160ff16600003610cd557506000610c95565b610ce88460181c6001600160601b031690565b6001600160601b0316610cfe60ff841685612bc5565b1115610d6657610d178460781c6001600160601b031690565b610d2a8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610500565b60208260ff161115610d8b5760405163045df3f960e01b815260040160405180910390fd5b600882026000610da48660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a8d7f000000000000000000000000000000000000000000000000000000000000000083611151565b805160208201516040808401519051634d69ee5760e01b81526000936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693634d69ee5793610f4493600401612bd8565b602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8d9190612c83565b600080836007602160991b01604051602001610fa2929190612ca5565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b91830191909152915060009081906110169060340160408051601f1981840301815291905260608701518751611212565b90925090506001821515146110a95760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a401610500565b60006110b48261123b565b9050611109846040516020016110cc91815260200190565b60408051601f1981840301815290829052600160f81b602083015290602101604051602081830303815290604052886080015184604001516112ff565b979650505050505050565b6000806111218385612bc5565b9050604051811115611131575060005b806000036111465762ffffff19915050610c95565b610cb7858585611323565b6000336001600160a01b038416146111955760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b6044820152606401610500565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112019190612cdc565b6001600160a01b0316149392505050565b6000606060006112218661139a565b905061122e8186866113cc565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290611268836114a7565b905060405180608001604052806112988360008151811061128b5761128b612cf9565b60200260200101516114da565b81526020016112b38360018151811061128b5761128b612cf9565b81526020016112db836002815181106112ce576112ce612cf9565b60200260200101516114e1565b81526020016112f6836003815181106112ce576112ce612cf9565b90529392505050565b60008061130b8661139a565b9050611319818686866115e2565b9695505050505050565b60006060601883856001600160601b0382168214801561134b575086816001600160601b0316145b6113845760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610500565b96831b90961790911b90941790931b9392505050565b606081805190602001206040516020016113b691815260200190565b6040516020818303038152906040529050919050565b6000606060006113db85611618565b905060008060006113ed848a8961170c565b815192955090935091501580806114015750815b61144d5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e0000000000006044820152606401610500565b6000816114695760405180602001604052806000815250611495565b61149586611478600188612b3b565b8151811061148857611488612cf9565b6020026020010151611b22565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a8d90611b4c565b6000610a8d825b600060228260000151106115375760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610500565b600080600061154585611d38565b91945092509050600081600181111561156057611560612d0f565b146115ad5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e0000000000006044820152606401610500565b60008386602001516115bf9190612bc5565b805190915060208410156113195760208490036101000a90049695505050505050565b60008060006115f28786866113cc565b915091508180156111095750805160208083019190912087519188019190912014611109565b60606000611625836114a7565b90506000815167ffffffffffffffff811115611643576116436125c2565b60405190808252806020026020018201604052801561168857816020015b60408051808201909152606080825260208201528152602001906001900390816116615790505b50825190915060005b818110156117025760006116bd8583815181106116b0576116b0612cf9565b6020026020010151612086565b905060405180604001604052808281526020016116d9836114a7565b8152508483815181106116ee576116ee612cf9565b602090810291909101015250600101611691565b5090949350505050565b6000606081808061171c8761210d565b90506000869050600080611743604051806040016040528060608152602001606081525090565b8b5160005b81811015611af9578d818151811061176257611762612cf9565b6020026020010151925083856117789190612bc5565b9450611785600189612bc5565b9750846000036117e0578251805160209091012086146117db5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b6044820152606401610500565b61189e565b825151601f1015611843578251805160209091012086146117db5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c206861736800000000006044820152606401610500565b856118518460000151612242565b1461189e5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f646520686173680000000000006044820152606401610500565b6001908101906118b090601090612bc5565b836020015151036119225786518514611af95760008786815181106118d7576118d7612cf9565b602001015160f81c60f81b60f81c9050600084602001518260ff168151811061190257611902612cf9565b602002602001015190506119158161226a565b9750600195505050611748565b600283602001515103611ab157600061193a846122a0565b905060008160008151811061195157611951612cf9565b016020015160f81c90506000611968600283612d3b565b611973906002612d5d565b90506000611984848360ff166122c4565b905060006119928c8b6122c4565b905060006119a083836122fa565b905060ff8516600214806119b7575060ff85166003145b156119f1578083511480156119cc5750808251145b156119de576119db818c612bc5565b9a505b50600160ff1b9a50611af9945050505050565b60ff85161580611a04575060ff85166001145b15611a5a5782518114611a245750600160ff1b9a50611af9945050505050565b611a4b8960200151600181518110611a3e57611a3e612cf9565b602002602001015161226a565b9b509850611748945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b6064820152608401610500565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e0000006044820152606401610500565b50600160ff1b851487611b0c88876122c4565b909f909e50909c509a5050505050505050505050565b60208101518051606091610a8d91611b3c90600190612b3b565b815181106116b0576116b0612cf9565b6060600080611b5a84611d38565b91935090915060019050816001811115611b7657611b76612d0f565b14611bc35760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e0000000000000000006044820152606401610500565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611bdc5790505090506000835b8651811015611d2d5760208210611c755760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b6064820152608401610500565b600080611cb26040518060400160405280858c60000151611c969190612b3b565b8152602001858c60200151611cab9190612bc5565b9052611d38565b509150915060405180604001604052808383611cce9190612bc5565b8152602001848b60200151611ce39190612bc5565b815250858581518110611cf857611cf8612cf9565b6020908102919091010152611d0e600185612bc5565b9350611d1a8183612bc5565b611d249084612bc5565b92505050611c09565b508152949350505050565b600080600080846000015111611d905760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e00000000000000006044820152606401610500565b6020840151805160001a6080811015611db657600060016000945094509450505061207f565b60b8811015611e33576000611dcc608083612b3b565b905080876000015111611e215760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e000000000000006044820152606401610500565b6001955093506000925061207f915050565b60c0811015611f23576000611e4960b783612b3b565b905080876000015111611e9e5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e006044820152606401610500565b600183015160208290036101000a9004611eb88183612bc5565b885111611f075760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e00000000000000006044820152606401610500565b611f12826001612bc5565b965094506000935061207f92505050565b60f8811015611f9f576000611f3960c083612b3b565b905080876000015111611f8e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e0000000000000000006044820152606401610500565b60019550935084925061207f915050565b6000611fac60f783612b3b565b9050808760000151116120015760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e0000006044820152606401610500565b600183015160208290036101000a900461201b8183612bc5565b8851116120635760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b6044820152606401610500565b61206e826001612bc5565b965094506001935061207f92505050565b9193909250565b6060600080600061209685611d38565b9194509250905060008160018111156120b1576120b1612d0f565b146120fe5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e00000000000000006044820152606401610500565b610cb785602001518484612376565b606060008251600261211f9190612d76565b67ffffffffffffffff811115612137576121376125c2565b6040519080825280601f01601f191660200182016040528015612161576020820181803683370190505b50835190915060005b8181101561223957600485828151811061218657612186612cf9565b01602001516001600160f81b031916901c836121a3836002612d76565b815181106121b3576121b3612cf9565b60200101906001600160f81b031916908160001a90535060108582815181106121de576121de612cf9565b01602001516121f0919060f81c612d3b565b60f81b836121ff836002612d76565b61220a906001612bc5565b8151811061221a5761221a612cf9565b60200101906001600160f81b031916908160001a90535060010161216a565b50909392505050565b600060208251101561225657506020015190565b81806020019051810190610a8d9190612d8d565b6000606060208360000151101561228b576122848361244a565b9050612297565b61229483612086565b90505b610c9581612242565b6060610a8d6122bf83602001516000815181106116b0576116b0612cf9565b61210d565b6060825182106122e35750604080516020810190915260008152610a8d565b610c9583838486516122f59190612b3b565b612455565b6000805b80845111801561230e5750808351115b801561235f575082818151811061232757612327612cf9565b602001015160f81c60f81b6001600160f81b03191684828151811061234e5761234e612cf9565b01602001516001600160f81b031916145b15610c95578061236e81612da6565b9150506122fe565b606060008267ffffffffffffffff811115612393576123936125c2565b6040519080825280601f01601f1916602001820160405280156123bd576020820181803683370190505b50905080516000036123d0579050610c95565b60006123dc8587612bc5565b90506020820160005b6123f0602087612dbf565b81101561241d5782518252612406602084612bc5565b9250612413602083612bc5565b91506001016123e5565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a8d826125ac565b60608161246381601f612bc5565b10156124a25760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610500565b826124ad8382612bc5565b10156124ec5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610500565b6124f68284612bc5565b8451101561253a5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610500565b60608215801561255957604051915060008252602082016040526125a3565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561259257805183526020928301920161257a565b5050858452601f01601f1916604052505b50949350505050565b6060610a8d826020015160008460000151612376565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156125fb576125fb6125c2565b60405290565b60405160a0810167ffffffffffffffff811182821017156125fb576125fb6125c2565b604051601f8201601f1916810167ffffffffffffffff8111828210171561264d5761264d6125c2565b604052919050565b600082601f83011261266657600080fd5b813567ffffffffffffffff811115612680576126806125c2565b612693601f8201601f1916602001612624565b8181528460208386010111156126a857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156126d857600080fd5b823567ffffffffffffffff808211156126f057600080fd5b6126fc86838701612655565b9350602085013591508082111561271257600080fd5b5061271f85828601612655565b9150509250929050565b60006020828403121561273b57600080fd5b813567ffffffffffffffff81111561275257600080fd5b61275e84828501612655565b949350505050565b6001600160a01b038116811461062c57600080fd5b60006020828403121561278d57600080fd5b8135610c9581612766565b60005b838110156127b357818101518382015260200161279b565b50506000910152565b600081518084526127d4816020860160208601612798565b601f01601f19169290920160200192915050565b602081526000610c9560208301846127bc565b600060a0828403121561280d57600080fd5b60405160a0810167ffffffffffffffff8282108183111715612831576128316125c2565b8160405282935084358352602085013560208401526040850135604084015260608501356060840152608085013591508082111561286e57600080fd5b5061287b85828601612655565b6080830152505092915050565b60006040828403121561289a57600080fd5b6128a26125d8565b90508135815260208083013567ffffffffffffffff808211156128c457600080fd5b818501915085601f8301126128d857600080fd5b8135818111156128ea576128ea6125c2565b8060051b91506128fb848301612624565b818152918301840191848101908884111561291557600080fd5b938501935b838510156129335784358252938501939085019061291a565b808688015250505050505092915050565b600080600080600060a0868803121561295c57600080fd5b853561296781612766565b9450602086013561297781612766565b9350604086013567ffffffffffffffff8082111561299457600080fd5b6129a089838a01612655565b94506060880135935060808801359150808211156129bd57600080fd5b9087019060a0828a0312156129d157600080fd5b6129d9612601565b823581526020830135828111156129ef57600080fd5b6129fb8b8286016127fb565b602083015250604083013582811115612a1357600080fd5b612a1f8b828601612888565b604083015250606083013582811115612a3757600080fd5b612a438b828601612655565b606083015250608083013582811115612a5b57600080fd5b612a678b828601612655565b6080830152508093505050509295509295909350565b600060208284031215612a8f57600080fd5b5035919050565b606081526000612aa960608301866127bc565b8281036020840152612abb81866127bc565b91505060018060a01b0383166040830152949350505050565b604081526000612ae760408301856127bc565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b03828116828216039080821115612b3457612b34612afe565b5092915050565b81810381811115610a8d57610a8d612afe565b6001600160a01b0384168152606060208201819052600090612b72908301856127bc565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612bb4908301856127bc565b905082606083015295945050505050565b80820180821115610a8d57610a8d612afe565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612c236101008501826127bc565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612c755784518252938501936001939093019290850190612c55565b509998505050505050505050565b600060208284031215612c9557600080fd5b81518015158114610c9557600080fd5b60008351612cb7818460208801612798565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600060208284031215612cee57600080fd5b8151610c9581612766565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600060ff831680612d4e57612d4e612d25565b8060ff84160691505092915050565b60ff8281168282160390811115610a8d57610a8d612afe565b8082028115828204841417610a8d57610a8d612afe565b600060208284031215612d9f57600080fd5b5051919050565b600060018201612db857612db8612afe565b5060010190565b600082612dce57612dce612d25565b50049056fea2646970667358221220691606d45605c65675d93512e25f43ecc4b707588f74f99abc565f98b58d218964736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
