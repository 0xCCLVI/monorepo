/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200324b3803806200324b8339810160408190526200003591620002eb565b8080888888888884848484846200004c33620001aa565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200020f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027860201b60201c565b5050506001600160a01b03166101005250620003779350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002ce57600080fd5b919050565b80516001600160a01b0381168114620002ce57600080fd5b600080600080600080600060e0888a0312156200030757600080fd5b6200031288620002b9565b96506200032260208901620002b9565b95506200033260408901620002d3565b94506200034260608901620002d3565b93506200035260808901620002d3565b92506200036260a08901620002d3565b915060c0880151905092959891949750929550565b60805160a05160c05160e05161010051612e5e620003ed6000396000818161014c0152610f3a01526000818161019d015261075401526000818161028e0152818161046a015261078f01526000818161041d0152818161051f01528181610aed0152610e910152600061023a0152612e5e6000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610399578063cc394283146103ae578063d1851c92146103ce578063d232c220146103ec578063d69f9d611461040b578063db1b76591461043f57600080fd5b8063715018a6146102e65780637850b020146102fb5780638da5cb5b1461031b578063b1f8100d14610339578063c1f0808a1461035957600080fd5b806352a9674b116100f257806352a9674b146102285780635bd11efc1461025c5780635f61e3ec1461027c5780636a42b8f8146102b05780636e2edb4e146102c657600080fd5b80630f329ef81461013a578063141684161461018b5780633cf52ffb146101d457806348e6fa23146101f35780634ff746f61461020857600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019757600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610182565b3480156101e057600080fd5b506002545b604051908152602001610182565b610206610201366004612721565b61045f565b005b34801561021457600080fd5b50610206610223366004612785565b610514565b34801561023457600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026857600080fd5b506102066102773660046127d7565b6105ba565b34801561028857600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bc57600080fd5b5062093a806101e5565b3480156102d257600080fd5b506102066102e136600461293d565b6105f1565b3480156102f257600080fd5b5061020661084e565b34801561030757600080fd5b50610206610316366004612a76565b610902565b34801561032757600080fd5b506000546001600160a01b031661016e565b34801561034557600080fd5b506102066103543660046127d7565b610936565b34801561036557600080fd5b50610389610374366004612a76565b60056020526000908152604090205460ff1681565b6040519015158152602001610182565b3480156103a557600080fd5b506102066109d4565b3480156103ba57600080fd5b5060035461016e906001600160a01b031681565b3480156103da57600080fd5b506001546001600160a01b031661016e565b3480156103f857600080fd5b506000546001600160a01b031615610389565b34801561041757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044b57600080fd5b5061038961045a3660046127d7565b610a44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104d58282610a55565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161050893929190612adf565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105755760405162461bcd60e51b81526004016104c29060208082526004908201526310a0a6a160e11b604082015260600190565b61057e81610b75565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105af929190612b1d565b60405180910390a150565b6000546001600160a01b031633146105e5576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610b8e565b50565b6003546001600160a01b038581169116146106415760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104c2565b6001600160a01b03851630146106815760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104c2565b600061068f86868686610bf7565b905061069b8183610c44565b6106d05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104c2565b60006106dc8582610c67565b905060006107136106fb6020601885901c6001600160601b0316612b5d565b62ffffff198416906001600160601b03166020610c8b565b60008181526005602052604090205490915060ff166108445760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161081f91815260200190565b60408051601f198184030181529082905261083b913390612b1d565b60405180910390a15b5050505050505050565b6000546001600160a01b03163314610879576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361089c57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108ae9190612b7d565b116108cc576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156108f6576040516323295ef960e01b815260040160405180910390fd5b6109006000610d96565b565b6000546001600160a01b0316331461092d576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610dfb565b6000546001600160a01b03163314610961576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561097f575060025415155b1561099d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109cb57604051634a2fb73f60e11b815260040160405180910390fd5b6105ee81610e3c565b6001546001600160a01b031633146109ff576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a119190612b7d565b11610a2f5760405163d39c12bb60e01b815260040160405180910390fd5b600154610900906001600160a01b0316610d96565b6000610a4f82610e8a565b92915050565b8151602014610a905760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c2565b6000634ff746f660e01b83604051602401610aab9190612b90565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b911683610b2086610eb6565b6040518463ffffffff1660e01b8152600401610b3e93929190612ba3565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c109493929190612bdd565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c4f82610f14565b8015610c605750610c608383610fae565b9392505050565b815160009060208401610c8264ffffffffff8516828461113d565b95945050505050565b60008160ff16600003610ca057506000610c60565b610cb38460181c6001600160601b031690565b6001600160601b0316610cc960ff841685612c1a565b1115610d3157610ce28460781c6001600160601b031690565b610cf58560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016104c2565b60208260ff161115610d565760405163045df3f960e01b815260040160405180910390fd5b600882026000610d6f8660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a4f7f00000000000000000000000000000000000000000000000000000000000000008361117a565b60008151602014610ef85760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104c2565b610a4f82806020019051810190610f0f9190612c2d565b61123b565b805160208201516040808401519051634d69ee5760e01b81526000936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693634d69ee5793610f6d93600401612c46565b602060405180830381865afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190612cf1565b600080836007602160991b01604051602001610fcb929190612d13565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b918301919091529150600090819061103f9060340160408051601f1981840301815291905260608701518751611251565b90925090506001821515146110d25760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104c2565b60006110dd8261127a565b9050611132846040516020016110f591815260200190565b60408051601f1981840301815290829052600160f81b6020830152906021016040516020818303038152906040528860800151846040015161133e565b979650505050505050565b60008061114a8385612c1a565b905060405181111561115a575060005b8060000361116f5762ffffff19915050610c60565b610c82858585611362565b6000336001600160a01b038416146111be5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104c2565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190612d4a565b6001600160a01b0316149392505050565b600060045482111561124d5760045491505b5090565b600060606000611260866113d9565b905061126d81868661140b565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906112a7836114e6565b905060405180608001604052806112d7836000815181106112ca576112ca612d67565b6020026020010151611519565b81526020016112f2836001815181106112ca576112ca612d67565b815260200161131a8360028151811061130d5761130d612d67565b6020026020010151611520565b81526020016113358360038151811061130d5761130d612d67565b90529392505050565b60008061134a866113d9565b905061135881868686611622565b9695505050505050565b60006060601883856001600160601b0382168214801561138a575086816001600160601b0316145b6113c35760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016104c2565b96831b90961790911b90941790931b9392505050565b606081805190602001206040516020016113f591815260200190565b6040516020818303038152906040529050919050565b60006060600061141a85611658565b9050600080600061142c848a89611753565b815192955090935091501580806114405750815b61148c5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104c2565b6000816114a857604051806020016040528060008152506114d4565b6114d4866114b7600188612b7d565b815181106114c7576114c7612d67565b6020026020010151611b72565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a4f90611b9c565b6000610a4f825b60006021826000015111156115775760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b600080600061158585611d88565b9194509250905060008160018111156115a0576115a0612d7d565b146115ed5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b60008386602001516115ff9190612c1a565b805190915060208410156113585760208490036101000a90049695505050505050565b600080600061163287868661140b565b915091508180156111325750805160208083019190912087519188019190912014611132565b60606000611665836114e6565b90506000815167ffffffffffffffff8111156116835761168361261e565b6040519080825280602002602001820160405280156116c857816020015b60408051808201909152606080825260208201528152602001906001900390816116a15790505b50905060005b825181101561174b5760006116fb8483815181106116ee576116ee612d67565b60200260200101516120d2565b90506040518060400160405280828152602001611717836114e6565b81525083838151811061172c5761172c612d67565b602002602001018190525050808061174390612d93565b9150506116ce565b509392505050565b6000606081808061176387612159565b9050600086905060008061178a604051806040016040528060608152602001606081525090565b60005b8c51811015611b4a578c81815181106117a8576117a8612d67565b6020026020010151915082846117be9190612c1a565b93506117cb600188612c1a565b965083600003611826578151805160209091012085146118215760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104c2565b6118e3565b815151602011611888578151805160209091012085146118215760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104c2565b846118968360000151612294565b146118e35760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104c2565b6118ef60106001612c1a565b826020015151036119615785518414611b4a57600086858151811061191657611916612d67565b602001015160f81c60f81b60f81c9050600083602001518260ff168151811061194157611941612d67565b60200260200101519050611954816122bc565b9650600194505050611b38565b600282602001515103611af0576000611979836122f2565b905060008160008151811061199057611990612d67565b016020015160f81c905060006119a7600283612dc2565b6119b2906002612de4565b905060006119c3848360ff16612316565b905060006119d18b8a612316565b905060006119df838361234c565b905060ff8516600214806119f6575060ff85166003145b15611a3057808351148015611a0b5750808251145b15611a1d57611a1a818b612c1a565b99505b50600160ff1b9950611b4a945050505050565b60ff85161580611a43575060ff85166001145b15611a995782518114611a635750600160ff1b9950611b4a945050505050565b611a8a8860200151600181518110611a7d57611a7d612d67565b60200260200101516122bc565b9a509750611b38945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104c2565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104c2565b80611b4281612d93565b91505061178d565b50600160ff1b841486611b5d8786612316565b909e909d50909b509950505050505050505050565b60208101518051606091610a4f91611b8c90600190612b7d565b815181106116ee576116ee612d67565b6060600080611baa84611d88565b91935090915060019050816001811115611bc657611bc6612d7d565b14611c135760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104c2565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611c2c5790505090506000835b8651811015611d7d5760208210611cc55760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104c2565b600080611d026040518060400160405280858c60000151611ce69190612b7d565b8152602001858c60200151611cfb9190612c1a565b9052611d88565b509150915060405180604001604052808383611d1e9190612c1a565b8152602001848b60200151611d339190612c1a565b815250858581518110611d4857611d48612d67565b6020908102919091010152611d5e600185612c1a565b9350611d6a8183612c1a565b611d749084612c1a565b92505050611c59565b508152949350505050565b600080600080846000015111611de05760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104c2565b6020840151805160001a607f8111611e055760006001600094509450945050506120cb565b60b78111611e81576000611e1a608083612b7d565b905080876000015111611e6f5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104c2565b600195509350600092506120cb915050565b60bf8111611f70576000611e9660b783612b7d565b905080876000015111611eeb5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104c2565b600183015160208290036101000a9004611f058183612c1a565b885111611f545760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104c2565b611f5f826001612c1a565b96509450600093506120cb92505050565b60f78111611feb576000611f8560c083612b7d565b905080876000015111611fda5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104c2565b6001955093508492506120cb915050565b6000611ff860f783612b7d565b90508087600001511161204d5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104c2565b600183015160208290036101000a90046120678183612c1a565b8851116120af5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104c2565b6120ba826001612c1a565b96509450600193506120cb92505050565b9193909250565b606060008060006120e285611d88565b9194509250905060008160018111156120fd576120fd612d7d565b1461214a5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104c2565b610c82856020015184846123c8565b606060008251600261216b9190612dfd565b67ffffffffffffffff8111156121835761218361261e565b6040519080825280601f01601f1916602001820160405280156121ad576020820181803683370190505b50905060005b835181101561228d5760048482815181106121d0576121d0612d67565b01602001516001600160f81b031916901c826121ed836002612dfd565b815181106121fd576121fd612d67565b60200101906001600160f81b031916908160001a905350601084828151811061222857612228612d67565b016020015161223a919060f81c612dc2565b60f81b82612249836002612dfd565b612254906001612c1a565b8151811061226457612264612d67565b60200101906001600160f81b031916908160001a9053508061228581612d93565b9150506121b3565b5092915050565b60006020825110156122a857506020015190565b81806020019051810190610a4f9190612c2d565b600060606020836000015110156122dd576122d6836124a6565b90506122e9565b6122e6836120d2565b90505b610c6081612294565b6060610a4f61231183602001516000815181106116ee576116ee612d67565b612159565b6060825182106123355750604080516020810190915260008152610a4f565b610c6083838486516123479190612b7d565b6124b1565b6000805b8084511180156123605750808351115b80156123b1575082818151811061237957612379612d67565b602001015160f81c60f81b6001600160f81b0319168482815181106123a0576123a0612d67565b01602001516001600160f81b031916145b15610c6057806123c081612d93565b915050612350565b606060008267ffffffffffffffff8111156123e5576123e561261e565b6040519080825280601f01601f19166020018201604052801561240f576020820181803683370190505b5090508051600003612422579050610c60565b600061242e8587612c1a565b90506020820160005b612442602087612e14565b8110156124795782518252612458602084612c1a565b9250612465602083612c1a565b91508061247181612d93565b915050612437565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a4f82612608565b6060816124bf81601f612c1a565b10156124fe5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b826125098382612c1a565b10156125485760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b6125528284612c1a565b845110156125965760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104c2565b6060821580156125b557604051915060008252602082016040526125ff565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156125ee5780518352602092830192016125d6565b5050858452601f01601f1916604052505b50949350505050565b6060610a4f8260200151600084600001516123c8565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156126575761265761261e565b60405290565b60405160a0810167ffffffffffffffff811182821017156126575761265761261e565b604051601f8201601f1916810167ffffffffffffffff811182821017156126a9576126a961261e565b604052919050565b600082601f8301126126c257600080fd5b813567ffffffffffffffff8111156126dc576126dc61261e565b6126ef601f8201601f1916602001612680565b81815284602083860101111561270457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561273457600080fd5b823567ffffffffffffffff8082111561274c57600080fd5b612758868387016126b1565b9350602085013591508082111561276e57600080fd5b5061277b858286016126b1565b9150509250929050565b60006020828403121561279757600080fd5b813567ffffffffffffffff8111156127ae57600080fd5b6127ba848285016126b1565b949350505050565b6001600160a01b03811681146105ee57600080fd5b6000602082840312156127e957600080fd5b8135610c60816127c2565b600060a0828403121561280657600080fd5b60405160a0810167ffffffffffffffff828210818311171561282a5761282a61261e565b8160405282935084358352602085013560208401526040850135604084015260608501356060840152608085013591508082111561286757600080fd5b50612874858286016126b1565b6080830152505092915050565b60006040828403121561289357600080fd5b61289b612634565b90508135815260208083013567ffffffffffffffff808211156128bd57600080fd5b818501915085601f8301126128d157600080fd5b8135818111156128e3576128e361261e565b8060051b91506128f4848301612680565b818152918301840191848101908884111561290e57600080fd5b938501935b8385101561292c57843582529385019390850190612913565b808688015250505050505092915050565b600080600080600060a0868803121561295557600080fd5b8535612960816127c2565b94506020860135612970816127c2565b9350604086013567ffffffffffffffff8082111561298d57600080fd5b61299989838a016126b1565b94506060880135935060808801359150808211156129b657600080fd5b9087019060a0828a0312156129ca57600080fd5b6129d261265d565b823581526020830135828111156129e857600080fd5b6129f48b8286016127f4565b602083015250604083013582811115612a0c57600080fd5b612a188b828601612881565b604083015250606083013582811115612a3057600080fd5b612a3c8b8286016126b1565b606083015250608083013582811115612a5457600080fd5b612a608b8286016126b1565b6080830152508093505050509295509295909350565b600060208284031215612a8857600080fd5b5035919050565b60005b83811015612aaa578181015183820152602001612a92565b50506000910152565b60008151808452612acb816020860160208601612a8f565b601f01601f19169290920160200192915050565b606081526000612af26060830186612ab3565b8281036020840152612b048186612ab3565b91505060018060a01b0383166040830152949350505050565b604081526000612b306040830185612ab3565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b0382811682821603908082111561228d5761228d612b47565b81810381811115610a4f57610a4f612b47565b602081526000610c606020830184612ab3565b6001600160a01b0384168152606060208201819052600090612bc790830185612ab3565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612c0990830185612ab3565b905082606083015295945050505050565b80820180821115610a4f57610a4f612b47565b600060208284031215612c3f57600080fd5b5051919050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612c91610100850182612ab3565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612ce35784518252938501936001939093019290850190612cc3565b509998505050505050505050565b600060208284031215612d0357600080fd5b81518015158114610c6057600080fd5b60008351612d25818460208801612a8f565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600060208284031215612d5c57600080fd5b8151610c60816127c2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600060018201612da557612da5612b47565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612dd557612dd5612dac565b8060ff84160691505092915050565b60ff8281168282160390811115610a4f57610a4f612b47565b8082028115828204841417610a4f57610a4f612b47565b600082612e2357612e23612dac565b50049056fea26469706673582212202d41f9836525af2700b48618dd60daa323e5119666d5ee17293153c18c9fe54264736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
