/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200358a3803806200358a8339810160408190526200003591620002eb565b8080888888888884848484846200004c33620001aa565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200020f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027860201b60201c565b5050506001600160a01b03166101005250620003779350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002ce57600080fd5b919050565b80516001600160a01b0381168114620002ce57600080fd5b600080600080600080600060e0888a0312156200030757600080fd5b6200031288620002b9565b96506200032260208901620002b9565b95506200033260408901620002d3565b94506200034260608901620002d3565b93506200035260808901620002d3565b92506200036260a08901620002d3565b915060c0880151905092959891949750929550565b60805160a05160c05160e0516101005161319d620003ed6000396000818161014c0152610f8b01526000818161019d015261075401526000818161028e0152818161046a015261078f01526000818161041d0152818161051f01528181610aed0152610ee20152600061023a015261319d6000f3fe60806040526004361061012e5760003560e01c8063715018a6116100ab578063c5b350df1161006f578063c5b350df14610399578063cc394283146103ae578063d1851c92146103ce578063d232c220146103ec578063d69f9d611461040b578063db1b76591461043f57600080fd5b8063715018a6146102e65780637850b020146102fb5780638da5cb5b1461031b578063b1f8100d14610339578063c1f0808a1461035957600080fd5b806352a9674b116100f257806352a9674b146102285780635bd11efc1461025c5780635f61e3ec1461027c5780636a42b8f8146102b05780636e2edb4e146102c657600080fd5b80630f329ef81461013a578063141684161461018b5780633cf52ffb146101d457806348e6fa23146101f35780634ff746f61461020857600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019757600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610182565b3480156101e057600080fd5b506002545b604051908152602001610182565b610206610201366004612989565b61045f565b005b34801561021457600080fd5b506102066102233660046129ed565b610514565b34801561023457600080fd5b506101bf7f000000000000000000000000000000000000000000000000000000000000000081565b34801561026857600080fd5b50610206610277366004612a3f565b6105ba565b34801561028857600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102bc57600080fd5b5062093a806101e5565b3480156102d257600080fd5b506102066102e1366004612ba5565b6105f1565b3480156102f257600080fd5b5061020661084e565b34801561030757600080fd5b50610206610316366004612cde565b610902565b34801561032757600080fd5b506000546001600160a01b031661016e565b34801561034557600080fd5b50610206610354366004612a3f565b610936565b34801561036557600080fd5b50610389610374366004612cde565b60056020526000908152604090205460ff1681565b6040519015158152602001610182565b3480156103a557600080fd5b506102066109d4565b3480156103ba57600080fd5b5060035461016e906001600160a01b031681565b3480156103da57600080fd5b506001546001600160a01b031661016e565b3480156103f857600080fd5b506000546001600160a01b031615610389565b34801561041757600080fd5b5061016e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561044b57600080fd5b5061038961045a366004612a3f565b610a44565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cb5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6104d58282610a55565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161050893929190612d47565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105755760405162461bcd60e51b81526004016104c29060208082526004908201526310a0a6a160e11b604082015260600190565b61057e81610b75565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516105af929190612d85565b60405180910390a150565b6000546001600160a01b031633146105e5576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610b8e565b50565b6003546001600160a01b038581169116146106415760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b60448201526064016104c2565b6001600160a01b03851630146106815760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104c2565b600061068f86868686610bf7565b905061069b8183610c44565b6106d05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104c2565b60006106dc8582610c67565b905060006107136106fb6020601885901c6001600160601b0316612dc5565b62ffffff198416906001600160601b03166020610c8b565b60008181526005602052604090205490915060ff166108445760008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8160405160200161081f91815260200190565b60408051601f198184030181529082905261083b913390612d85565b60405180910390a15b5050505050505050565b6000546001600160a01b03163314610879576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361089c57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426108ae9190612de5565b116108cc576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156108f6576040516323295ef960e01b815260040160405180910390fd5b6109006000610de7565b565b6000546001600160a01b0316331461092d576040516311a8a1bb60e31b815260040160405180910390fd5b6105ee81610e4c565b6000546001600160a01b03163314610961576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561097f575060025415155b1561099d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109cb57604051634a2fb73f60e11b815260040160405180910390fd5b6105ee81610e8d565b6001546001600160a01b031633146109ff576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a119190612de5565b11610a2f5760405163d39c12bb60e01b815260040160405180910390fd5b600154610900906001600160a01b0316610de7565b6000610a4f82610edb565b92915050565b8151602014610a905760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104c2565b6000634ff746f660e01b83604051602401610aab9190612df8565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526003549091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691633dbb202b911683610b2086610f07565b6040518463ffffffff1660e01b8152600401610b3e93929190612e0b565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b606084848484604051602401610c109493929190612e45565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b6000610c4f82610f65565b8015610c605750610c608383610fff565b9392505050565b815160009060208401610c8264ffffffffff8516828461118e565b95945050505050565b60008160ff16600003610ca057506000610c60565b610cb38460181c6001600160601b031690565b6001600160601b0316610cc960ff841685612e82565b1115610d2d57610d14610ce58560781c6001600160601b031690565b6001600160601b0316610d018660181c6001600160601b031690565b6001600160601b0316858560ff166111d5565b60405162461bcd60e51b81526004016104c29190612df8565b60208260ff161115610da75760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016104c2565b600882026000610dc08660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610a4f7f000000000000000000000000000000000000000000000000000000000000000083611243565b60008151602014610f495760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016104c2565b610a4f82806020019051810190610f609190612e95565b611304565b805160208201516040808401519051634d69ee5760e01b81526000936001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001693634d69ee5793610fbe93600401612eae565b602060405180830381865afa158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4f9190612f59565b600080836007602160991b0160405160200161101c929190612f7b565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b91830191909152915060009081906110909060340160408051601f198184030181529190526060870151875161131a565b90925090506001821515146111235760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a4016104c2565b600061112e82611343565b90506111838460405160200161114691815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151611407565b979650505050505050565b60008061119b8385612e82565b90506040518111156111ab575060005b806000036111c05762ffffff19915050610c60565b5050606092831b9190911790911b1760181b90565b606060006111e28661142b565b91505060006111f08661142b565b91505060006111fe8661142b565b915050600061120c8661142b565b915050838383836040516020016112269493929190612fb2565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b038416146112875760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104c2565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112f39190613089565b6001600160a01b0316149392505050565b60006004548211156113165760045491505b5090565b600060606000611329866114c7565b90506113368186866114f9565b9250925050935093915050565b604080516080810182526000808252602082018190529181018290526060810182905290611370836115d4565b905060405180608001604052806113a083600081518110611393576113936130a6565b6020026020010151611607565b81526020016113bb83600181518110611393576113936130a6565b81526020016113e3836002815181106113d6576113d66130a6565b602002602001015161160e565b81526020016113fe836003815181106113d6576113d66130a6565b90529392505050565b600080611413866114c7565b905061142181868686611710565b9695505050505050565b600080601f5b600f8111156114775760006114478260086130bc565b85901c905061145581611746565b61ffff16841793508160101461146d57601084901b93505b5060001901611431565b50600f5b60ff8110156114c15760006114918260086130bc565b85901c905061149f81611746565b61ffff1683179250816000146114b757601083901b92505b506000190161147b565b50915091565b606081805190602001206040516020016114e391815260200190565b6040516020818303038152906040529050919050565b60006060600061150885611773565b9050600080600061151a848a8961186e565b8151929550909350915015808061152e5750815b61157a5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e00000000000060448201526064016104c2565b60008161159657604051806020016040528060008152506115c2565b6115c2866115a5600188612de5565b815181106115b5576115b56130a6565b6020026020010151611c8d565b919b919a509098505050505050505050565b604080518082018252600080825260209182015281518083019092528251825280830190820152606090610a4f90611cb7565b6000610a4f825b60006021826000015111156116655760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b600080600061167385611ea3565b91945092509050600081600181111561168e5761168e6130d3565b146116db5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e00000000000060448201526064016104c2565b60008386602001516116ed9190612e82565b805190915060208410156114215760208490036101000a90049695505050505050565b60008060006117208786866114f9565b915091508180156111835750805160208083019190912087519188019190912014611183565b600061175860048360ff16901c6121ed565b60081b61ff0016905061176a826121ed565b60ff1617919050565b60606000611780836115d4565b90506000815167ffffffffffffffff81111561179e5761179e612886565b6040519080825280602002602001820160405280156117e357816020015b60408051808201909152606080825260208201528152602001906001900390816117bc5790505b50905060005b8251811015611866576000611816848381518110611809576118096130a6565b602002602001015161233a565b90506040518060400160405280828152602001611832836115d4565b815250838381518110611847576118476130a6565b602002602001018190525050808061185e906130e9565b9150506117e9565b509392505050565b6000606081808061187e876123c1565b905060008690506000806118a5604051806040016040528060608152602001606081525090565b60005b8c51811015611c65578c81815181106118c3576118c36130a6565b6020026020010151915082846118d99190612e82565b93506118e6600188612e82565b9650836000036119415781518051602090910120851461193c5760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b60448201526064016104c2565b6119fe565b8151516020116119a35781518051602090910120851461193c5760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c2068617368000000000060448201526064016104c2565b846119b183600001516124fc565b146119fe5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f6465206861736800000000000060448201526064016104c2565b611a0a60106001612e82565b82602001515103611a7c5785518414611c65576000868581518110611a3157611a316130a6565b602001015160f81c60f81b60f81c9050600083602001518260ff1681518110611a5c57611a5c6130a6565b60200260200101519050611a6f81612524565b9650600194505050611c53565b600282602001515103611c0b576000611a948361255a565b9050600081600081518110611aab57611aab6130a6565b016020015160f81c90506000611ac2600283613118565b611acd90600261313a565b90506000611ade848360ff1661257e565b90506000611aec8b8a61257e565b90506000611afa83836125b4565b905060ff851660021480611b11575060ff85166003145b15611b4b57808351148015611b265750808251145b15611b3857611b35818b612e82565b99505b50600160ff1b9950611c65945050505050565b60ff85161580611b5e575060ff85166001145b15611bb45782518114611b7e5750600160ff1b9950611c65945050505050565b611ba58860200151600181518110611b9857611b986130a6565b6020026020010151612524565b9a509750611c53945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b60648201526084016104c2565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e00000060448201526064016104c2565b80611c5d816130e9565b9150506118a8565b50600160ff1b841486611c78878661257e565b909e909d50909b509950505050505050505050565b60208101518051606091610a4f91611ca790600190612de5565b81518110611809576118096130a6565b6060600080611cc584611ea3565b91935090915060019050816001811115611ce157611ce16130d3565b14611d2e5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e00000000000000000060448201526064016104c2565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611d475790505090506000835b8651811015611e985760208210611de05760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b60648201526084016104c2565b600080611e1d6040518060400160405280858c60000151611e019190612de5565b8152602001858c60200151611e169190612e82565b9052611ea3565b509150915060405180604001604052808383611e399190612e82565b8152602001848b60200151611e4e9190612e82565b815250858581518110611e6357611e636130a6565b6020908102919091010152611e79600185612e82565b9350611e858183612e82565b611e8f9084612e82565b92505050611d74565b508152949350505050565b600080600080846000015111611efb5760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e000000000000000060448201526064016104c2565b6020840151805160001a607f8111611f205760006001600094509450945050506121e6565b60b78111611f9c576000611f35608083612de5565b905080876000015111611f8a5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e0000000000000060448201526064016104c2565b600195509350600092506121e6915050565b60bf811161208b576000611fb160b783612de5565b9050808760000151116120065760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e0060448201526064016104c2565b600183015160208290036101000a90046120208183612e82565b88511161206f5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e000000000000000060448201526064016104c2565b61207a826001612e82565b96509450600093506121e692505050565b60f781116121065760006120a060c083612de5565b9050808760000151116120f55760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e00000000000000000060448201526064016104c2565b6001955093508492506121e6915050565b600061211360f783612de5565b9050808760000151116121685760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e00000060448201526064016104c2565b600183015160208290036101000a90046121828183612e82565b8851116121ca5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b60448201526064016104c2565b6121d5826001612e82565b96509450600193506121e692505050565b9193909250565b600060f08083179060ff821690036122085750603092915050565b8060ff1660f10361221c5750603192915050565b8060ff1660f2036122305750603292915050565b8060ff1660f3036122445750603392915050565b8060ff1660f4036122585750603492915050565b8060ff1660f50361226c5750603592915050565b8060ff1660f6036122805750603692915050565b8060ff1660f7036122945750603792915050565b8060ff1660f8036122a85750603892915050565b8060ff1660f9036122bc5750603992915050565b8060ff1660fa036122d05750606192915050565b8060ff1660fb036122e45750606292915050565b8060ff1660fc036122f85750606392915050565b8060ff1660fd0361230c5750606492915050565b8060ff1660fe036123205750606592915050565b8060ff1660ff036123345750606692915050565b50919050565b6060600080600061234a85611ea3565b919450925090506000816001811115612365576123656130d3565b146123b25760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e000000000000000060448201526064016104c2565b610c8285602001518484612630565b60606000825160026123d391906130bc565b67ffffffffffffffff8111156123eb576123eb612886565b6040519080825280601f01601f191660200182016040528015612415576020820181803683370190505b50905060005b83518110156124f5576004848281518110612438576124386130a6565b01602001516001600160f81b031916901c826124558360026130bc565b81518110612465576124656130a6565b60200101906001600160f81b031916908160001a9053506010848281518110612490576124906130a6565b01602001516124a2919060f81c613118565b60f81b826124b18360026130bc565b6124bc906001612e82565b815181106124cc576124cc6130a6565b60200101906001600160f81b031916908160001a905350806124ed816130e9565b91505061241b565b5092915050565b600060208251101561251057506020015190565b81806020019051810190610a4f9190612e95565b600060606020836000015110156125455761253e8361270e565b9050612551565b61254e8361233a565b90505b610c60816124fc565b6060610a4f6125798360200151600081518110611809576118096130a6565b6123c1565b60608251821061259d5750604080516020810190915260008152610a4f565b610c6083838486516125af9190612de5565b612719565b6000805b8084511180156125c85750808351115b801561261957508281815181106125e1576125e16130a6565b602001015160f81c60f81b6001600160f81b031916848281518110612608576126086130a6565b01602001516001600160f81b031916145b15610c605780612628816130e9565b9150506125b8565b606060008267ffffffffffffffff81111561264d5761264d612886565b6040519080825280601f01601f191660200182016040528015612677576020820181803683370190505b509050805160000361268a579050610c60565b60006126968587612e82565b90506020820160005b6126aa602087613153565b8110156126e157825182526126c0602084612e82565b92506126cd602083612e82565b9150806126d9816130e9565b91505061269f565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b6060610a4f82612870565b60608161272781601f612e82565b10156127665760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b826127718382612e82565b10156127b05760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b60448201526064016104c2565b6127ba8284612e82565b845110156127fe5760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b60448201526064016104c2565b60608215801561281d5760405191506000825260208201604052612867565b6040519150601f8416801560200281840101858101878315602002848b0101015b8183101561285657805183526020928301920161283e565b5050858452601f01601f1916604052505b50949350505050565b6060610a4f826020015160008460000151612630565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156128bf576128bf612886565b60405290565b60405160a0810167ffffffffffffffff811182821017156128bf576128bf612886565b604051601f8201601f1916810167ffffffffffffffff8111828210171561291157612911612886565b604052919050565b600082601f83011261292a57600080fd5b813567ffffffffffffffff81111561294457612944612886565b612957601f8201601f19166020016128e8565b81815284602083860101111561296c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561299c57600080fd5b823567ffffffffffffffff808211156129b457600080fd5b6129c086838701612919565b935060208501359150808211156129d657600080fd5b506129e385828601612919565b9150509250929050565b6000602082840312156129ff57600080fd5b813567ffffffffffffffff811115612a1657600080fd5b612a2284828501612919565b949350505050565b6001600160a01b03811681146105ee57600080fd5b600060208284031215612a5157600080fd5b8135610c6081612a2a565b600060a08284031215612a6e57600080fd5b60405160a0810167ffffffffffffffff8282108183111715612a9257612a92612886565b81604052829350843583526020850135602084015260408501356040840152606085013560608401526080850135915080821115612acf57600080fd5b50612adc85828601612919565b6080830152505092915050565b600060408284031215612afb57600080fd5b612b0361289c565b90508135815260208083013567ffffffffffffffff80821115612b2557600080fd5b818501915085601f830112612b3957600080fd5b813581811115612b4b57612b4b612886565b8060051b9150612b5c8483016128e8565b8181529183018401918481019088841115612b7657600080fd5b938501935b83851015612b9457843582529385019390850190612b7b565b808688015250505050505092915050565b600080600080600060a08688031215612bbd57600080fd5b8535612bc881612a2a565b94506020860135612bd881612a2a565b9350604086013567ffffffffffffffff80821115612bf557600080fd5b612c0189838a01612919565b9450606088013593506080880135915080821115612c1e57600080fd5b9087019060a0828a031215612c3257600080fd5b612c3a6128c5565b82358152602083013582811115612c5057600080fd5b612c5c8b828601612a5c565b602083015250604083013582811115612c7457600080fd5b612c808b828601612ae9565b604083015250606083013582811115612c9857600080fd5b612ca48b828601612919565b606083015250608083013582811115612cbc57600080fd5b612cc88b828601612919565b6080830152508093505050509295509295909350565b600060208284031215612cf057600080fd5b5035919050565b60005b83811015612d12578181015183820152602001612cfa565b50506000910152565b60008151808452612d33816020860160208601612cf7565b601f01601f19169290920160200192915050565b606081526000612d5a6060830186612d1b565b8281036020840152612d6c8186612d1b565b91505060018060a01b0383166040830152949350505050565b604081526000612d986040830185612d1b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b038281168282160390808211156124f5576124f5612daf565b81810381811115610a4f57610a4f612daf565b602081526000610c606020830184612d1b565b6001600160a01b0384168152606060208201819052600090612e2f90830185612d1b565b905063ffffffff83166040830152949350505050565b6001600160a01b03858116825284166020820152608060408201819052600090612e7190830185612d1b565b905082606083015295945050505050565b80820180821115610a4f57610a4f612daf565b600060208284031215612ea757600080fd5b5051919050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612ef9610100850182612d1b565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612f4b5784518252938501936001939093019290850190612f2b565b509998505050505050505050565b600060208284031215612f6b57600080fd5b81518015158114610c6057600080fd5b60008351612f8d818460208801612cf7565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201611421565b60006020828403121561309b57600080fd5b8151610c6081612a2a565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610a4f57610a4f612daf565b634e487b7160e01b600052602160045260246000fd5b6000600182016130fb576130fb612daf565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff83168061312b5761312b613102565b8060ff84160691505092915050565b60ff8281168282160390811115610a4f57610a4f612daf565b60008261316257613162613102565b50049056fea2646970667358221220a42ae75c5634ca5eb03d64bfc75616972ee9b5f73babbf861f88d704eb91a85464736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _stateCommitmentChain: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _stateCommitmentChain,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
