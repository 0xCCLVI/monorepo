/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_optimismPortal",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2OutputOracle",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "L2_ORACLE",
    outputs: [
      {
        internalType: "contract IL2OutputOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "OPTIMISM_PORTAL",
    outputs: [
      {
        internalType: "contract IOptimismPortal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Types.WithdrawalTransaction",
        name: "_tx",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasCap",
        type: "uint256",
      },
    ],
    name: "setGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b5060405162001f1c38038062001f1c8339810160408190526200003591620002f2565b8080898989898984848484846200004c33620001b1565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b8162000216565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a3505050505050505050506200018e816200027f60201b60201c565b5050506001600160a01b0391821661010052166101205250620003919350505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620002d557600080fd5b919050565b80516001600160a01b0381168114620002d557600080fd5b600080600080600080600080610100898b0312156200031057600080fd5b6200031b89620002c0565b97506200032b60208a01620002c0565b96506200033b60408a01620002da565b95506200034b60608a01620002da565b94506200035b60808a01620002da565b93506200036b60a08a01620002da565b92506200037b60c08a01620002da565b915060e089015190509295985092959890939650565b60805160a05160c05160e0516101005161012051611afc620004206000396000818161015601528181610c3b0152610d2c0152600081816103370152610b850152600081816101a7015261071f0152600081816102b80152818161075a01526107cc01526000818161045b0152818161087c0152818161110301526112ef015260006102640152611afc6000f3fe6080604052600436106101385760003560e01c80637850b020116100ab578063c5b350df1161006f578063c5b350df146103d7578063cc394283146103ec578063d1851c921461040c578063d232c2201461042a578063d69f9d6114610449578063db1b76591461047d57600080fd5b80637850b0201461030557806385734ee1146103255780638da5cb5b14610359578063b1f8100d14610377578063c1f0808a1461039757600080fd5b80634ff746f6116100fd5780634ff746f61461023257806352a9674b146102525780635bd11efc146102865780635f61e3ec146102a65780636a42b8f8146102da578063715018a6146102f057600080fd5b80621c2ff61461014457806314168416146101955780633a8ed289146101de5780633cf52ffb1461020057806348e6fa231461021f57600080fd5b3661013f57005b600080fd5b34801561015057600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a157600080fd5b506101c97f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff909116815260200161018c565b3480156101ea57600080fd5b506101fe6101f93660046115d9565b61049d565b005b34801561020c57600080fd5b506002545b60405190815260200161018c565b6101fe61022d36600461168c565b6107c1565b34801561023e57600080fd5b506101fe61024d3660046116f0565b610871565b34801561025e57600080fd5b506101c97f000000000000000000000000000000000000000000000000000000000000000081565b34801561029257600080fd5b506101fe6102a136600461172d565b610917565b3480156102b257600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e657600080fd5b5062093a80610211565b3480156102fc57600080fd5b506101fe61094e565b34801561031157600080fd5b506101fe61032036600461174a565b610a02565b34801561033157600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b34801561036557600080fd5b506000546001600160a01b0316610178565b34801561038357600080fd5b506101fe61039236600461172d565b610a36565b3480156103a357600080fd5b506103c76103b236600461174a565b60056020526000908152604090205460ff1681565b604051901515815260200161018c565b3480156103e357600080fd5b506101fe610ad4565b3480156103f857600080fd5b50600354610178906001600160a01b031681565b34801561041857600080fd5b506001546001600160a01b0316610178565b34801561043657600080fd5b506000546001600160a01b0316156103c7565b34801561045557600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b34801561048957600080fd5b506103c761049836600461172d565b610b44565b60208101516001600160a01b03166007602160991b01146104f15760405162461bcd60e51b815260206004820152600960248201526810b61939b2b73232b960b91b60448201526064015b60405180910390fd5b60408101516001600160a01b031630146105355760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b60448201526064016104e8565b61053e81610b55565b6105735760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b60448201526064016104e8565b6000806000806000806105898760a00151610dec565b600354959b509399509197509550935091506001600160a01b038087169116146105e95760405162461bcd60e51b815260206004820152601160248201527010b6b4b93937b91031b7b73732b1ba37b960791b60448201526064016104e8565b6001600160a01b038416301461062b5760405162461bcd60e51b8152602060048201526007602482015266085d185c99d95d60ca1b60448201526064016104e8565b80516024146106665760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104e8565b60006106728282610f28565b905060006106a96106916020601885901c6001600160601b0316611779565b62ffffff198416906001600160601b03166020610f4c565b60008181526005602052604090205490915060ff16156106f75760405162461bcd60e51b81526020600482015260096024820152681c1c9bd8d95cdcd95960ba1b60448201526064016104e8565b60008181526005602052604090819020805460ff191660011790555163473ec9fd60e11b81527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166004820152602481018290526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e7d93fa90604401600060405180830381600087803b15801561079e57600080fd5b505af11580156107b2573d6000803e3d6000fd5b50505050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108285760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016104e8565b610832828261105b565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077828233604051610865939291906117f0565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108d25760405162461bcd60e51b81526004016104e89060208082526004908201526310a0a6a160e11b604082015260600190565b6108db81611172565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161090c92919061182e565b60405180910390a150565b6000546001600160a01b03163314610942576040516311a8a1bb60e31b815260040160405180910390fd5b61094b8161118b565b50565b6000546001600160a01b03163314610979576040516311a8a1bb60e31b815260040160405180910390fd5b62093a806002544261098b9190611858565b116109a9576040516324e0285f60e21b815260040160405180910390fd5b6002546000036109cc57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156109f6576040516323295ef960e01b815260040160405180910390fd5b610a0060006111f4565b565b6000546001600160a01b03163314610a2d576040516311a8a1bb60e31b815260040160405180910390fd5b61094b81611259565b6000546001600160a01b03163314610a61576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610a7f575060025415155b15610a9d576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610acb57604051634a2fb73f60e11b815260040160405180910390fd5b61094b8161129a565b6001546001600160a01b03163314610aff576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610b119190611858565b11610b2f576040516324e0285f60e21b815260040160405180910390fd5b600154610a00906001600160a01b03166111f4565b6000610b4f826112e8565b92915050565b600080610b6183611314565b604051633a59421360e21b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e965084c90602401606060405180830381865afa158015610bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf091906118ef565b905080602001516001600160801b0316600003610c395760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016104e8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663887862726040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbb919061190b565b81602001516001600160801b03161015610d055760405162461bcd60e51b815260206004820152600b60248201526a7072652d626564726f636b60a81b60448201526064016104e8565b604081810151905163a25ae55760e01b81526001600160801b0390911660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a25ae55790602401606060405180830381865afa158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f91906118ef565b8251815191925014610de15760405162461bcd60e51b815260206004820152600b60248201526a085bdd5d1c1d5d149bdbdd60aa1b60448201526064016104e8565b506001949350505050565b602081015160009081908190819081906060906001600160e01b0319811663d764ad0b60e01b14610e4b5760405162461bcd60e51b815260206004820152600960248201526810b9b2b632b1ba37b960b91b60448201526064016104e8565b8751600490600090610e5e908390611858565b905060008167ffffffffffffffff811115610e7b57610e7b6114d6565b6040519080825280601f01601f191660200182016040528015610ea5576020820181803683370190505b509050826020018b016020820160005b84811015610ecd578281015182820152602001610eb5565b50505080604051602001610ee19190611924565b604051602081830303815290604052806020019051810190610f039190611940565b809a50819b50829c50839d50849e50859f505050505050505050505091939550919395565b815160009060208401610f4364ffffffffff85168284611361565b95945050505050565b60008160ff16600003610f6157506000611054565b610f748460181c6001600160601b031690565b6001600160601b0316610f8a60ff8416856119fd565b1115610ff257610fa38460781c6001600160601b031690565b610fb68560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016104e8565b60208260ff1611156110175760405163045df3f960e01b815260040160405180910390fd5b6008820260006110308660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91860151909116925050505b9392505050565b81516020146110965760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016104e8565b6000634ff746f660e01b836040516024016110b19190611a10565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b9461113b9490921692879201611a23565b600060405180830381600087803b15801561115557600080fd5b505af1158015611169573d6000803e3d6000fd5b50505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6000610b4f7f00000000000000000000000000000000000000000000000000000000000000008361139e565b80516020808301516040808501516060860151608087015160a08801519351600097611344979096959101611a5d565b604051602081830303815290604052805190602001209050919050565b60008061136e83856119fd565b905060405181111561137e575060005b806000036113935762ffffff19915050611054565b610f4385858561145f565b6000336001600160a01b038416146113e25760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b60448201526064016104e8565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e9190611aa9565b6001600160a01b0316149392505050565b60006060601883856001600160601b03821682148015611487575086816001600160601b0316145b6114c05760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016104e8565b96831b90961790911b90941790931b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561150f5761150f6114d6565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561153e5761153e6114d6565b604052919050565b6001600160a01b038116811461094b57600080fd5b600067ffffffffffffffff821115611575576115756114d6565b50601f01601f191660200190565b600082601f83011261159457600080fd5b81356115a76115a28261155b565b611515565b8181528460208386010111156115bc57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156115eb57600080fd5b813567ffffffffffffffff8082111561160357600080fd5b9083019060c0828603121561161757600080fd5b61161f6114ec565b82358152602083013561163181611546565b6020820152604083013561164481611546565b80604083015250606083013560608201526080830135608082015260a08301358281111561167157600080fd5b61167d87828601611583565b60a08301525095945050505050565b6000806040838503121561169f57600080fd5b823567ffffffffffffffff808211156116b757600080fd5b6116c386838701611583565b935060208501359150808211156116d957600080fd5b506116e685828601611583565b9150509250929050565b60006020828403121561170257600080fd5b813567ffffffffffffffff81111561171957600080fd5b61172584828501611583565b949350505050565b60006020828403121561173f57600080fd5b813561105481611546565b60006020828403121561175c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6001600160601b0382811682821603908082111561179957611799611763565b5092915050565b60005b838110156117bb5781810151838201526020016117a3565b50506000910152565b600081518084526117dc8160208601602086016117a0565b601f01601f19169290920160200192915050565b60608152600061180360608301866117c4565b828103602084015261181581866117c4565b91505060018060a01b0383166040830152949350505050565b60408152600061184160408301856117c4565b905060018060a01b03831660208301529392505050565b81810381811115610b4f57610b4f611763565b80516001600160801b038116811461188257600080fd5b919050565b60006060828403121561189957600080fd5b6040516060810181811067ffffffffffffffff821117156118bc576118bc6114d6565b604052825181529050806118d26020840161186b565b60208201526118e36040840161186b565b60408201525092915050565b60006060828403121561190157600080fd5b6110548383611887565b60006020828403121561191d57600080fd5b5051919050565b600082516119368184602087016117a0565b9190910192915050565b60008060008060008060c0878903121561195957600080fd5b86519550602087015161196b81611546565b604088015190955061197c81611546565b80945050606087015192506080870151915060a087015167ffffffffffffffff8111156119a857600080fd5b8701601f810189136119b957600080fd5b80516119c76115a28261155b565b8181528a60208385010111156119dc57600080fd5b6119ed8260208301602086016117a0565b8093505050509295509295509295565b80820180821115610b4f57610b4f611763565b60208152600061105460208301846117c4565b6001600160a01b0384168152606060208201819052600090611a47908301856117c4565b905063ffffffff83166040830152949350505050565b8681526001600160a01b03868116602083015285166040820152606081018490526080810183905260c060a08201819052600090611a9d908301846117c4565b98975050505050505050565b600060208284031215611abb57600080fd5b81516110548161154656fea2646970667358221220b706e58a18efca32fbfd069b6933c1d7824a3593422efe93eafc7e845a8475d564736f6c63430008110033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _optimismPortal: PromiseOrValue<string>,
    _l2OutputOracle: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _optimismPortal,
      _l2OutputOracle,
      _gasCap,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _optimismPortal: PromiseOrValue<string>,
    _l2OutputOracle: PromiseOrValue<string>,
    _gasCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _optimismPortal,
      _l2OutputOracle,
      _gasCap,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
