/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  OptimismHubConnector,
  OptimismHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/optimism/OptimismHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stateCommitmentChain",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageNonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "stateRoot",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "batchIndex",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "batchRoot",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "batchSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prevTotalElements",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "extraData",
                type: "bytes",
              },
            ],
            internalType: "struct ChainBatchHeader",
            name: "stateRootBatchHeader",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "index",
                type: "uint256",
              },
              {
                internalType: "bytes32[]",
                name: "siblings",
                type: "bytes32[]",
              },
            ],
            internalType: "struct ChainInclusionProof",
            name: "stateRootProof",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "stateTrieWitness",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "storageTrieWitness",
            type: "bytes",
          },
        ],
        internalType: "struct L2MessageInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateCommitmentChain",
    outputs: [
      {
        internalType: "contract IStateCommitmentChain",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620032ba380380620032ba8339810160408190526200003591620002fa565b8686868686868585858585856200004c33620001bf565b8563ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011b576200011b826200021e565b80156200012d576200012d8162000287565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b0319166001600160a01b039c909c169b909b17909a5550620003869e505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620002dd57600080fd5b919050565b80516001600160a01b0381168114620002dd57600080fd5b600080600080600080600060e0888a0312156200031657600080fd5b6200032188620002c8565b96506200033160208901620002c8565b95506200034160408901620002e2565b94506200035160608901620002e2565b93506200036160808901620002e2565b925060a088015191506200037860c08901620002e2565b905092959891949750929550565b60805160a05160c05160e051612ed0620003ea60003960008181610171015261055601526000818161020e0152818161058701526106f20152600081816102f60152818161033601528181610c3a0152610cfd015260006101d40152612ed06000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063cc3942831161007c578063cc394283146102a6578063cf796c75146102b9578063d1851c92146102c2578063d232c220146102d3578063d69f9d61146102f1578063db1b76591461031857600080fd5b8063715018a61461025f57806382646a58146102675780638da5cb5b1461027a578063b1f8100d1461028b578063c5b350df1461029e57600080fd5b80635bd11efc116100ff5780635bd11efc146101f65780635f61e3ec146102095780636a42b8f8146102305780636e2edb4e146102395780636eb67a511461024c57600080fd5b80630f329ef81461013c578063141684161461016c5780633cf52ffb146101a85780634ff746f6146101ba57806352a9674b146101cf575b600080fd5b60055461014f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101937f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610163565b6002545b604051908152602001610163565b6101cd6101c836600461272e565b61032b565b005b6101937f000000000000000000000000000000000000000000000000000000000000000081565b6101cd610204366004612780565b6103d1565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b62093a806101ac565b6101cd6102473660046128e6565b610408565b6101cd61025a366004612a1f565b6105f4565b6101cd610628565b6101cd61027536600461272e565b6106e7565b6000546001600160a01b031661014f565b6101cd610299366004612780565b610788565b6101cd61082d565b60035461014f906001600160a01b031681565b6101ac60045481565b6001546001600160a01b031661014f565b6000546001600160a01b0316155b6040519015158152602001610163565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b6102e1610326366004612780565b610888565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103955760405162461bcd60e51b815260040161038c9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516103c6929190612a94565b60405180910390a150565b6000546001600160a01b031633146103fc576040516311a8a1bb60e31b815260040160405180910390fd5b61040581610899565b50565b6003546001600160a01b038581169116146104585760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161038c565b6001600160a01b03851630146104985760405162461bcd60e51b8152602060048201526005602482015264217468697360d81b604482015260640161038c565b60006104a686868686610902565b90506104b2818361094f565b6104e75760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b604482015260640161038c565b83516024146105225760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161038c565b6000610542600460206105358885610972565b62ffffff19169190610996565b6040516378ffd0a160e01b815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906378ffd0a190604401600060405180830381600087803b1580156105d357600080fd5b505af11580156105e7573d6000803e3d6000fd5b5050505050505050505050565b6000546001600160a01b0316331461061f576040516311a8a1bb60e31b815260040160405180910390fd5b61040581610af2565b6000546001600160a01b03163314610653576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361067657604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106889190612ad4565b116106a6576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156106d0576040516323295ef960e01b815260040160405180910390fd5b6001546106e5906001600160a01b0316610b33565b565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461074e5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161038c565b61075781610b92565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516103c6929190612a94565b6000546001600160a01b031633146107b3576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156107d857506001600160a01b03811615155b156107f6576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361082457604051634a2fb73f60e11b815260040160405180910390fd5b61040581610ca8565b6001546001600160a01b03163314610858576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261086a9190612ad4565b116106d05760405163d39c12bb60e01b815260040160405180910390fd5b600061089382610cf6565b92915050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60608484848460405160240161091b9493929190612aeb565b60408051601f198184030181529190526020810180516001600160e01b031663cbd4ece960e01b1790529050949350505050565b600061095a82610d22565b801561096b575061096b8383610da3565b9392505050565b81516000906020840161098d64ffffffffff85168284610f32565b95945050505050565b60008160ff166000036109ab5750600061096b565b6109be8460181c6001600160601b031690565b6001600160601b03166109d460ff841685612b28565b1115610a3857610a1f6109f08560781c6001600160601b031690565b6001600160601b0316610a0c8660181c6001600160601b031690565b6001600160601b0316858560ff16610f79565b60405162461bcd60e51b815260040161038c9190612b40565b60208260ff161115610ab25760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161038c565b600882026000610acb8660781c6001600160601b031690565b6001600160601b03169490940151600160ff1b600019929092019190911d16949350505050565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051602014610bcd5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161038c565b6000634ff746f660e01b82604051602401610be89190612b40565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252600354600480549351633dbb202b60e01b81529294506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811694633dbb202b94610c729490921692879201612b53565b600060405180830381600087803b158015610c8c57600080fd5b505af1158015610ca0573d6000803e3d6000fd5b505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006108937f000000000000000000000000000000000000000000000000000000000000000083610fe7565b600554815160208301516040808501519051634d69ee5760e01b81526000946001600160a01b031693634d69ee5793610d62939192909190600401612b8d565b602060405180830381865afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190612c38565b600080836007602160991b01604051602001610dc0929190612c5a565b60408051601f1981840301815282825280516020918201209083015260009082015260600160408051601f19818403018152908290528051602091820120602160f91b9183019190915291506000908190610e349060340160408051601f19818403018152919052606087015187516110a8565b9092509050600182151514610ec75760405162461bcd60e51b815260206004820152604d60248201527f4d6573736167652070617373696e67207072656465706c6f7920686173206e6f60448201527f74206265656e20696e697469616c697a6564206f7220696e76616c696420707260648201526c37b7b310383937bb34b232b21760991b608482015260a40161038c565b6000610ed2826110d1565b9050610f2784604051602001610eea91815260200190565b60408051601f1981840301815290829052600160f81b60208301529060210160405160208183030381529060405288608001518460400151611195565b979650505050505050565b600080610f3f8385612b28565b9050604051811115610f4f575060005b80600003610f645762ffffff1991505061096b565b5050606092831b9190911790911b1760181b90565b60606000610f86866111b9565b9150506000610f94866111b9565b9150506000610fa2866111b9565b9150506000610fb0866111b9565b91505083838383604051602001610fca9493929190612c91565b604051602081830303815290604052945050505050949350505050565b6000336001600160a01b0384161461102b5760405162461bcd60e51b81526020600482015260076024820152662162726964676560c81b604482015260640161038c565b816001600160a01b0316836001600160a01b0316636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015611073573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110979190612d68565b6001600160a01b0316149392505050565b6000606060006110b786611267565b90506110c4818686611299565b9250925050935093915050565b6040805160808101825260008082526020820181905291810182905260608101829052906110fe83611374565b9050604051806080016040528061112e8360008151811061112157611121612d85565b60200260200101516113a7565b81526020016111498360018151811061112157611121612d85565b81526020016111718360028151811061116457611164612d85565b60200260200101516113ae565b815260200161118c8360038151811061116457611164612d85565b90529392505050565b6000806111a186611267565b90506111af818686866114b0565b9695505050505050565b600080601f5b600f8160ff16111561120e5760006111d8826008612d9b565b60ff1685901c90506111e9816114e6565b61ffff16841793508160ff1660101461120457601084901b93505b50600019016111bf565b50600f5b60ff8160ff16101561126157600061122b826008612d9b565b60ff1685901c905061123c816114e6565b61ffff16831792508160ff1660001461125757601083901b92505b5060001901611212565b50915091565b6060818051906020012060405160200161128391815260200190565b6040516020818303038152906040529050919050565b6000606060006112a885611518565b905060008060006112ba848a89611613565b815192955090935091501580806112ce5750815b61131a5760405162461bcd60e51b815260206004820152601a60248201527f50726f76696465642070726f6f6620697320696e76616c69642e000000000000604482015260640161038c565b6000816113365760405180602001604052806000815250611362565b61136286611345600188612ad4565b8151811061135557611355612d85565b6020026020010151611a32565b919b919a509098505050505050505050565b60408051808201825260008082526020918201528151808301909252825182528083019082015260609061089390611a5c565b6000610893825b60006021826000015111156114055760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161038c565b600080600061141385611c48565b91945092509050600081600181111561142e5761142e612dc4565b1461147b5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420524c5020627974657333322076616c75652e000000000000604482015260640161038c565b600083866020015161148d9190612b28565b805190915060208410156111af5760208490036101000a90049695505050505050565b60008060006114c0878686611299565b91509150818015610f275750805160208083019190912087519188019190912014610f27565b60006114f860048360ff16901c611f92565b60ff1661ffff919091161760081b61150f82611f92565b60ff1617919050565b6060600061152583611374565b90506000815167ffffffffffffffff8111156115435761154361262b565b60405190808252806020026020018201604052801561158857816020015b60408051808201909152606080825260208201528152602001906001900390816115615790505b50905060005b825181101561160b5760006115bb8483815181106115ae576115ae612d85565b60200260200101516120df565b905060405180604001604052808281526020016115d783611374565b8152508383815181106115ec576115ec612d85565b602002602001018190525050808061160390612dda565b91505061158e565b509392505050565b6000606081808061162387612166565b9050600086905060008061164a604051806040016040528060608152602001606081525090565b60005b8c51811015611a0a578c818151811061166857611668612d85565b60200260200101519150828461167e9190612b28565b935061168b600188612b28565b9650836000036116e6578151805160209091012085146116e15760405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c840e4dedee840d0c2e6d607b1b604482015260640161038c565b6117a3565b815151602011611748578151805160209091012085146116e15760405162461bcd60e51b815260206004820152601b60248201527f496e76616c6964206c6172676520696e7465726e616c20686173680000000000604482015260640161038c565b8461175683600001516122a1565b146117a35760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e7465726e616c206e6f64652068617368000000000000604482015260640161038c565b6117af60106001612b28565b826020015151036118215785518414611a0a5760008685815181106117d6576117d6612d85565b602001015160f81c60f81b60f81c9050600083602001518260ff168151811061180157611801612d85565b60200260200101519050611814816122c9565b96506001945050506119f8565b6002826020015151036119b0576000611839836122ff565b905060008160008151811061185057611850612d85565b016020015160f81c90506000611867600283612e09565b611872906002612e2b565b90506000611883848360ff16612323565b905060006118918b8a612323565b9050600061189f8383612359565b905060ff8516600214806118b6575060ff85166003145b156118f0578083511480156118cb5750808251145b156118dd576118da818b612b28565b99505b50600160ff1b9950611a0a945050505050565b60ff85161580611903575060ff85166001145b1561195957825181146119235750600160ff1b9950611a0a945050505050565b61194a886020015160018151811061193d5761193d612d85565b60200260200101516122c9565b9a5097506119f8945050505050565b60405162461bcd60e51b815260206004820152602660248201527f52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e206044820152650e0e4caccd2f60d31b606482015260840161038c565b60405162461bcd60e51b815260206004820152601d60248201527f526563656976656420616e20756e706172736561626c65206e6f64652e000000604482015260640161038c565b80611a0281612dda565b91505061164d565b50600160ff1b841486611a1d8786612323565b909e909d50909b509950505050505050505050565b6020810151805160609161089391611a4c90600190612ad4565b815181106115ae576115ae612d85565b6060600080611a6a84611c48565b91935090915060019050816001811115611a8657611a86612dc4565b14611ad35760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c50206c6973742076616c75652e000000000000000000604482015260640161038c565b6040805160208082526104208201909252600091816020015b6040805180820190915260008082526020820152815260200190600190039081611aec5790505090506000835b8651811015611c3d5760208210611b855760405162461bcd60e51b815260206004820152602a60248201527f50726f766964656420524c50206c6973742065786365656473206d6178206c6960448201526939ba103632b733ba341760b11b606482015260840161038c565b600080611bc26040518060400160405280858c60000151611ba69190612ad4565b8152602001858c60200151611bbb9190612b28565b9052611c48565b509150915060405180604001604052808383611bde9190612b28565b8152602001848b60200151611bf39190612b28565b815250858581518110611c0857611c08612d85565b6020908102919091010152611c1e600185612b28565b9350611c2a8183612b28565b611c349084612b28565b92505050611b19565b508152949350505050565b600080600080846000015111611ca05760405162461bcd60e51b815260206004820152601860248201527f524c50206974656d2063616e6e6f74206265206e756c6c2e0000000000000000604482015260640161038c565b6020840151805160001a607f8111611cc5576000600160009450945094505050611f8b565b60b78111611d41576000611cda608083612ad4565b905080876000015111611d2f5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420524c502073686f727420737472696e672e00000000000000604482015260640161038c565b60019550935060009250611f8b915050565b60bf8111611e30576000611d5660b783612ad4565b905080876000015111611dab5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e00604482015260640161038c565b600183015160208290036101000a9004611dc58183612b28565b885111611e145760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c50206c6f6e6720737472696e672e0000000000000000604482015260640161038c565b611e1f826001612b28565b9650945060009350611f8b92505050565b60f78111611eab576000611e4560c083612ad4565b905080876000015111611e9a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420524c502073686f7274206c6973742e000000000000000000604482015260640161038c565b600195509350849250611f8b915050565b6000611eb860f783612ad4565b905080876000015111611f0d5760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420524c50206c6f6e67206c697374206c656e6774682e000000604482015260640161038c565b600183015160208290036101000a9004611f278183612b28565b885111611f6f5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b210292628103637b733903634b9ba1760511b604482015260640161038c565b611f7a826001612b28565b9650945060019350611f8b92505050565b9193909250565b600060f08083179060ff82169003611fad5750603092915050565b8060ff1660f103611fc15750603192915050565b8060ff1660f203611fd55750603292915050565b8060ff1660f303611fe95750603392915050565b8060ff1660f403611ffd5750603492915050565b8060ff1660f5036120115750603592915050565b8060ff1660f6036120255750603692915050565b8060ff1660f7036120395750603792915050565b8060ff1660f80361204d5750603892915050565b8060ff1660f9036120615750603992915050565b8060ff1660fa036120755750606192915050565b8060ff1660fb036120895750606292915050565b8060ff1660fc0361209d5750606392915050565b8060ff1660fd036120b15750606492915050565b8060ff1660fe036120c55750606592915050565b8060ff1660ff036120d95750606692915050565b50919050565b606060008060006120ef85611c48565b91945092509050600081600181111561210a5761210a612dc4565b146121575760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420524c502062797465732076616c75652e0000000000000000604482015260640161038c565b61098d856020015184846123d5565b60606000825160026121789190612e4e565b67ffffffffffffffff8111156121905761219061262b565b6040519080825280601f01601f1916602001820160405280156121ba576020820181803683370190505b50905060005b835181101561229a5760048482815181106121dd576121dd612d85565b01602001516001600160f81b031916901c826121fa836002612e4e565b8151811061220a5761220a612d85565b60200101906001600160f81b031916908160001a905350601084828151811061223557612235612d85565b0160200151612247919060f81c612e09565b60f81b82612256836002612e4e565b612261906001612b28565b8151811061227157612271612d85565b60200101906001600160f81b031916908160001a9053508061229281612dda565b9150506121c0565b5092915050565b60006020825110156122b557506020015190565b818060200190518101906108939190612e6d565b600060606020836000015110156122ea576122e3836124b3565b90506122f6565b6122f3836120df565b90505b61096b816122a1565b606061089361231e83602001516000815181106115ae576115ae612d85565b612166565b6060825182106123425750604080516020810190915260008152610893565b61096b83838486516123549190612ad4565b6124be565b6000805b80845111801561236d5750808351115b80156123be575082818151811061238657612386612d85565b602001015160f81c60f81b6001600160f81b0319168482815181106123ad576123ad612d85565b01602001516001600160f81b031916145b1561096b57806123cd81612dda565b91505061235d565b606060008267ffffffffffffffff8111156123f2576123f261262b565b6040519080825280601f01601f19166020018201604052801561241c576020820181803683370190505b509050805160000361242f57905061096b565b600061243b8587612b28565b90506020820160005b61244f602087612e86565b8110156124865782518252612465602084612b28565b9250612472602083612b28565b91508061247e81612dda565b915050612444565b5060006001602087066020036101000a039050808251168119845116178252839450505050509392505050565b606061089382612615565b6060816124cc81601f612b28565b101561250b5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161038c565b826125168382612b28565b10156125555760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b604482015260640161038c565b61255f8284612b28565b845110156125a35760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b604482015260640161038c565b6060821580156125c2576040519150600082526020820160405261260c565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156125fb5780518352602092830192016125e3565b5050858452601f01601f1916604052505b50949350505050565b60606108938260200151600084600001516123d5565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156126645761266461262b565b60405290565b60405160a0810167ffffffffffffffff811182821017156126645761266461262b565b604051601f8201601f1916810167ffffffffffffffff811182821017156126b6576126b661262b565b604052919050565b600082601f8301126126cf57600080fd5b813567ffffffffffffffff8111156126e9576126e961262b565b6126fc601f8201601f191660200161268d565b81815284602083860101111561271157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561274057600080fd5b813567ffffffffffffffff81111561275757600080fd5b612763848285016126be565b949350505050565b6001600160a01b038116811461040557600080fd5b60006020828403121561279257600080fd5b813561096b8161276b565b600060a082840312156127af57600080fd5b60405160a0810167ffffffffffffffff82821081831117156127d3576127d361262b565b8160405282935084358352602085013560208401526040850135604084015260608501356060840152608085013591508082111561281057600080fd5b5061281d858286016126be565b6080830152505092915050565b60006040828403121561283c57600080fd5b612844612641565b90508135815260208083013567ffffffffffffffff8082111561286657600080fd5b818501915085601f83011261287a57600080fd5b81358181111561288c5761288c61262b565b8060051b915061289d84830161268d565b81815291830184019184810190888411156128b757600080fd5b938501935b838510156128d5578435825293850193908501906128bc565b808688015250505050505092915050565b600080600080600060a086880312156128fe57600080fd5b85356129098161276b565b945060208601356129198161276b565b9350604086013567ffffffffffffffff8082111561293657600080fd5b61294289838a016126be565b945060608801359350608088013591508082111561295f57600080fd5b9087019060a0828a03121561297357600080fd5b61297b61266a565b8235815260208301358281111561299157600080fd5b61299d8b82860161279d565b6020830152506040830135828111156129b557600080fd5b6129c18b82860161282a565b6040830152506060830135828111156129d957600080fd5b6129e58b8286016126be565b6060830152506080830135828111156129fd57600080fd5b612a098b8286016126be565b6080830152508093505050509295509295909350565b600060208284031215612a3157600080fd5b5035919050565b60005b83811015612a53578181015183820152602001612a3b565b83811115612a62576000848401525b50505050565b60008151808452612a80816020860160208601612a38565b601f01601f19169290920160200192915050565b604081526000612aa76040830185612a68565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612ae657612ae6612abe565b500390565b6001600160a01b03858116825284166020820152608060408201819052600090612b1790830185612a68565b905082606083015295945050505050565b60008219821115612b3b57612b3b612abe565b500190565b60208152600061096b6020830184612a68565b6001600160a01b0384168152606060208201819052600090612b7790830185612a68565b905063ffffffff83166040830152949350505050565b8381526000602060608184015284516060840152808501516080840152604085015160a0840152606085015160c0840152608085015160a060e0850152612bd8610100850182612a68565b905083810360408501526040810185518252828601516040848401528181518084526060850191508583019450600093505b80841015612c2a5784518252938501936001939093019290850190612c0a565b509998505050505050505050565b600060208284031215612c4a57600080fd5b8151801515811461096b57600080fd5b60008351612c6c818460208801612a38565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016111af565b600060208284031215612d7a57600080fd5b815161096b8161276b565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168160ff0481118215151615612dbc57612dbc612abe565b029392505050565b634e487b7160e01b600052602160045260246000fd5b600060018201612dec57612dec612abe565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600060ff831680612e1c57612e1c612df3565b8060ff84160691505092915050565b600060ff821660ff841680821015612e4557612e45612abe565b90039392505050565b6000816000190483118215151615612e6857612e68612abe565b500290565b600060208284031215612e7f57600080fd5b5051919050565b600082612e9557612e95612df3565b50049056fea26469706673582212204b776db61e833042fca0a0606993dedac0a4337dc16c30dce280980cdab4c1d264736f6c634300080f0033";

type OptimismHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimismHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimismHubConnector__factory extends ContractFactory {
  constructor(...args: OptimismHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimismHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    ) as Promise<OptimismHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _stateCommitmentChain: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _stateCommitmentChain,
      overrides || {}
    );
  }
  override attach(address: string): OptimismHubConnector {
    return super.attach(address) as OptimismHubConnector;
  }
  override connect(signer: Signer): OptimismHubConnector__factory {
    return super.connect(signer) as OptimismHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimismHubConnectorInterface {
    return new utils.Interface(_abi) as OptimismHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimismHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimismHubConnector;
  }
}
