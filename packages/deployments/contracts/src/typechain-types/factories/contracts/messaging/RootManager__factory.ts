/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager__renounceOwnership_prohibited",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_activateOptimisticMode__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_aggregate__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_checkDomains__InvalidDomains",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_constructor__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidAggregateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidInputHash",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_onlyOptimisticMode__SlowModeOn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RootManager_onlyProposer__NotWhitelistedProposer",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_propagate__AggregateRootIsZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "RootManager_proposeAggregateRoot__InvalidSnapshotId",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_proposeAggregateRoot__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_sendRootToHub__NoMessageSent",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__SameDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setHubDomain__InvalidDomain",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setMinDisputeBlocks__SameMinDisputeBlocksAsBefore",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "AggregateRootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOfDispute",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "baseRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "snapshotsRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "AggregateRootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rootTimestamp",
        type: "uint256",
      },
    ],
    name: "AggregateRootSavedOptimistic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leafCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rootTimestamp",
        type: "uint256",
      },
    ],
    name: "AggregateRootSavedSlow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "HubDomainCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "HubDomainSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "MinDisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OptimisticModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "SlowModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FINALIZED_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateOptimisticMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateSlowMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "addProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedProposers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearHubDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalizeAndPropagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSnapshotDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "_snapshotDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hubDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSavedAggregateRootTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDisputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_snapshotId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_snapshotsRoots",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedAggregateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "removeProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendRootToHubSpoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    name: "setDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "setHubDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
    ],
    name: "setMinDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validAggregateRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016012553480156200001657600080fd5b5060405162003c8a38038062003c8a8339810160408190526200003991620001a5565b600380546001600160a81b0319166101006001600160a01b0386160217905562000063336200011d565b818110156200008557604051637a61d42360e11b815260040160405180910390fd5b6001600160a01b038416620000cf5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0384166080526009859055600c8054600160ff19909116179055600b829055600a81905562000112600e62000182602090811b62001ed717901c565b5050505050620001f9565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b0381168114620001a057600080fd5b919050565b600080600080600060a08688031215620001be57600080fd5b85519450620001d06020870162000188565b9350620001e06040870162000188565b6060870151608090970151959894975095949392505050565b608051613a606200022a600039600081816107d001528181610be10152818161152101526115ae0152613a606000f3fe6080604052600436106103815760003560e01c80638456cb59116101d1578063c5b350df11610102578063d2a3cc71116100a0578063e6f1208d1161006f578063e6f1208d14610a21578063e9812d7114610a41578063f4b6e41014610a61578063f715589a14610a7757600080fd5b8063d2a3cc71146109b7578063d3c54fe5146109d7578063d3c805b7146109ec578063db0f016914610a0157600080fd5b8063cbfa2021116100dc578063cbfa20211461094f578063ceb3454e14610964578063d1851c921461097a578063d232c2201461099857600080fd5b8063c5b350df146108f7578063c8ef89de1461090c578063c92930561461092257600080fd5b8063a792c29b1161016f578063ad9c0c2e11610149578063ad9c0c2e14610881578063b03cd41814610897578063b1f8100d146108b7578063b904670f146108d757600080fd5b8063a792c29b1461080f578063a941f3f314610834578063aa0d60a31461085457600080fd5b8063909907cb116101ab578063909907cb1461077f578063957908d114610794578063a01892a5146107be578063a226b2cb146107f257600080fd5b80638456cb591461072c5780638da5cb5b146107415780638e7d93fa1461075f57600080fd5b8063412e12db116102b65780635ffe699d11610254578063715018a611610223578063715018a6146106965780637bc24d99146106ab5780637d434e91146106c15780637d534308146106e157600080fd5b80635ffe699d1461061157806360caf7a01461063157806366cf8fab1461064b5780636a42b8f81461068057600080fd5b8063498c2c2e11610290578063498c2c2e1461059e5780634a2db1da146105b45780635c975abb146105e45780635d308761146105fc57600080fd5b8063412e12db14610563578063460508b414610576578063492a96f41461058b57600080fd5b806324825b0d1161032357806327186c6a116102fd57806327186c6a146104f95780633c4baaf8146105195780633cf52ffb146105395780633f4ba83a1461054e57600080fd5b806324825b0d1461047e57806324ec5d0514610494578063263ef354146104d957600080fd5b806313ede1a11161035f57806313ede1a1146103e857806315fa23bc146104255780631eeaabea1461043a57806320f62eda1461045a57600080fd5b8063089200391461038657806309d632d3146103a85780630f8ef4ee146103c8575b600080fd5b34801561039257600080fd5b506103a66103a1366004612f55565b610aa4565b005b3480156103b457600080fd5b506103a66103c3366004612ff4565b610cad565b3480156103d457600080fd5b506103a66103e336600461300f565b610d21565b3480156103f457600080fd5b5061040861040336600461300f565b610d96565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561043157600080fd5b506103a6610dc0565b34801561044657600080fd5b506103a661045536600461300f565b610e4e565b34801561046657600080fd5b50610470600a5481565b60405190815260200161041c565b34801561048a57600080fd5b5061047060155481565b3480156104a057600080fd5b506104c96104af36600461303c565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161041c565b3480156104e557600080fd5b506103a66104f436600461300f565b610efa565b34801561050557600080fd5b506103a6610514366004613057565b610f88565b34801561052557600080fd5b5061047061053436600461303c565b610ff3565b34801561054557600080fd5b50600254610470565b34801561055a57600080fd5b506103a6611057565b6103a66105713660046131d5565b611094565b34801561058257600080fd5b506103a661118f565b6103a6610599366004613269565b6111f2565b3480156105aa57600080fd5b5061047060075481565b3480156105c057600080fd5b506104c96105cf366004612ff4565b60136020526000908152604090205460ff1681565b3480156105f057600080fd5b5060035460ff166104c9565b34801561060857600080fd5b50610470600181565b34801561061d57600080fd5b506103a661062c36600461303c565b611209565b34801561063d57600080fd5b50600c546104c99060ff1681565b34801561065757600080fd5b5061066b61066636600461300f565b6112af565b60405163ffffffff909116815260200161041c565b34801561068c57600080fd5b5062093a80610470565b3480156106a257600080fd5b506103a66112e9565b3480156106b757600080fd5b5061047060055481565b3480156106cd57600080fd5b506104086106dc36600461303c565b61132d565b3480156106ed57600080fd5b50600e5461070c906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161041c565b34801561073857600080fd5b506103a6611365565b34801561074d57600080fd5b506000546001600160a01b0316610408565b34801561076b57600080fd5b506103a661077a366004613310565b611401565b34801561078b57600080fd5b506104706114e4565b3480156107a057600080fd5b506107a96114f5565b6040805192835260208301919091520161041c565b3480156107ca57600080fd5b506104087f000000000000000000000000000000000000000000000000000000000000000081565b3480156107fe57600080fd5b5060165461066b9063ffffffff1681565b34801561081b57600080fd5b506003546104089061010090046001600160a01b031681565b34801561084057600080fd5b506103a661084f36600461300f565b61169d565b34801561086057600080fd5b50610869606481565b6040516001600160801b03909116815260200161041c565b34801561088d57600080fd5b5061047060095481565b3480156108a357600080fd5b506103a66108b2366004612ff4565b61174e565b3480156108c357600080fd5b506103a66108d2366004612ff4565b6117c5565b3480156108e357600080fd5b506103a66108f236600461333a565b611866565b34801561090357600080fd5b506103a66118de565b34801561091857600080fd5b506104706101f481565b34801561092e57600080fd5b5061047061093d36600461300f565b60146020526000908152604090205481565b34801561095b57600080fd5b506103a661194e565b34801561097057600080fd5b5061047060125481565b34801561098657600080fd5b506001546001600160a01b0316610408565b3480156109a457600080fd5b506000546001600160a01b0316156104c9565b3480156109c357600080fd5b506103a66109d2366004612ff4565b611a39565b3480156109e357600080fd5b506103a6611b1d565b3480156109f857600080fd5b50610708610470565b348015610a0d57600080fd5b506103a6610a1c36600461336d565b611bdc565b348015610a2d57600080fd5b506103a6610a3c36600461303c565b611cef565b348015610a4d57600080fd5b506103a6610a5c3660046133d9565b611dc8565b348015610a6d57600080fd5b50610470600b5481565b348015610a8357600080fd5b50610470610a9236600461303c565b600d6020526000908152604090205481565b3360009081526013602052604090205460ff16610adb57604051636d5595ef60e11b81523360048201526024015b60405180910390fd5b600c5460ff16610afe576040516383a941c560e01b815260040160405180910390fd5b81816005548282604051602001610b1692919061343f565b6040516020818303038152906040528051906020012014610b4a5760405163c38e7eb160e01b815260040160405180910390fd5b610b52611edd565b61070842048814610b795760405163bac5a76560e01b815260048101899052602401610ad2565b601254600114610b9c57604051631d026cf160e01b815260040160405180910390fd5b6000600a5443610bac9190613469565b60408051602081018b9052908101829052909150606001604051602081830303815290604052805190602001206012819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c61919061347c565b888a7fa3ef5f102c5d4b3958ebddd5fc15de4c4da0bd714d6da2edab94dda2d00e220e848b8b8b8b604051610c9a959493929190613495565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610cd8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260136020526040808220805460ff19169055517fbab6b194452fd4fa50e0ca09bf0f89976da30a2b92fdf91372ad1a176d81e3289190a250565b6000546001600160a01b03163314610d4c576040516311a8a1bb60e31b815260040160405180910390fd5b610d54611f23565b610d5f600e82611f6c565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b60068181548110610da657600080fd5b6000918252602090912001546001600160a01b0316905081565b610dc8611edd565b601554600090815260146020526040902054601654610dec9063ffffffff1661132d565b6001600160a01b03166397b45353826040518263ffffffff1660e01b8152600401610e1991815260200190565b600060405180830381600087803b158015610e3357600080fd5b505af1158015610e47573d6000803e3d6000fd5b5050505050565b6000546001600160a01b03163314610e79576040516311a8a1bb60e31b815260040160405180910390fd5b6009548103610eb95760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606401610ad2565b60095460408051918252602082018390527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6000546001600160a01b03163314610f25576040516311a8a1bb60e31b815260040160405180910390fd5b600b548103610f4757604051632d1150e160e11b815260040160405180910390fd5b600b5460408051918252602082018390527fdfad87ee418f8b636836b030634c8040055c9a5f641899df5a5d1d3c554fee47910160405180910390a1600b55565b6007548282604051602001610f9e9291906134ef565b6040516020818303038152906040528051906020012014610fef5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610ad2565b5050565b63ffffffff81166000908152600860205260408120548082036110455760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b6044820152606401610ad2565b61105060018261353b565b9392505050565b6000546001600160a01b03163314611082576040516311a8a1bb60e31b815260040160405180910390fd5b61108a611f23565b611092611fdd565b565b61109c611edd565b6110a68585610f88565b8382811480156110b65750808251145b6110f45760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b6044820152606401610ad2565b600c5460ff16611109576111066114f5565b50505b6015546000908152601460205260408120549081900361113c5760405163e89b6b9f60e01b815260040160405180910390fd5b807f1a0dbd47cf73d4c161d809dd2b7955e46b3be4df5d0810afc2fbeeca1125e3e660055460405161117091815260200190565b60405180910390a261118681888888888861202f565b50505050505050565b6000546001600160a01b031633146111ba576040516311a8a1bb60e31b815260040160405180910390fd5b6016805463ffffffff191690556040517fba00effa0806904d44bcf9124dab4b3bb88a16e065682cb0621dc0924aaaef9d90600090a1565b6111fc8282611dc8565b6111868787878787611094565b6000546001600160a01b03163314611234576040516311a8a1bb60e31b815260040160405180910390fd5b63ffffffff811660009081526008602052604090205461126757604051636bc2867760e01b815260040160405180910390fd5b6016805463ffffffff191663ffffffff83169081179091556040519081527f741fa366ad8a97c31e0c702cff3583c3e7f5e9d09a1f295f786fa0762e1d0c8690602001610d8b565b600481815481106112bf57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314611314576040516311a8a1bb60e31b815260040160405180910390fd5b6040516383c7055f60e01b815260040160405180910390fd5b6000600661133a83610ff3565b8154811061134a5761134a61354e565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190613564565b6113f15760405162461bcd60e51b8152600401610ad290613586565b6113f9611edd565b611092612319565b611409611edd565b81336114148261132d565b6001600160a01b0316146114575760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610ad2565b600c5460ff161561147b5760405163515f45f160e11b815260040160405180910390fd5b6000611488600e84612356565b6040805163ffffffff87168152602081018690526001600160801b038316918101919091529091507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8906060015b60405180910390a150505050565b60006114f0600e6123c8565b905090565b600080611500611edd565b60095460009061151490600e9060646123f2565b905080516000036115a9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa15801561157c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a091906135a8565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b81526004016115f891906135fc565b60408051808303816000875af1158015611616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163a91906135a8565b42600081815260146020526040908190208490556015829055519294509092507f541aefdf3f12e63098ec1c2d20f1417537e559cfc90a3c53960fe09cd475515b9161168b9185918591889161360f565b60405180910390a19093509150509091565b6000546001600160a01b031633146116c8576040516311a8a1bb60e31b815260040160405180910390fd5b600b548110156116eb5760405163e28adcd160e01b815260040160405180910390fd5b600a54810361170d576040516346fee83f60e11b815260040160405180910390fd5b600a5460408051918252602082018390527fff74184d965d306545ebeb3283c4d7a39f453a9c0ea539db6437b33ceb9c5125910160405180910390a1600a55565b6000546001600160a01b03163314611779576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260136020526040808220805460ff19166001179055517f2bf05609716bc4b090ad0e99b47b91881c7517771259c625df05db7e9d8c81819190a250565b6000546001600160a01b031633146117f0576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561180e575060025415155b1561182c576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361185a57604051634a2fb73f60e11b815260040160405180910390fd5b61186381612773565b50565b6000546001600160a01b03163314611891576040516311a8a1bb60e31b815260040160405180910390fd5b61189b82826127c1565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe708282600460066040516118d29493929190613805565b60405180910390a15050565b6001546001600160a01b03163314611909576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261191b919061353b565b11611939576040516324e0285f60e21b815260040160405180910390fd5b600154611092906001600160a01b03166129ad565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa15801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be9190613564565b6119da5760405162461bcd60e51b8152600401610ad290613586565b600c5460ff166119fd576040516383a941c560e01b815260040160405180910390fd5b600c805460ff19169055600160125560405133907f714b2723706f07835c1a61e679dc639438acf1e1d0bbae60d17e5a246a754d6e90600090a2565b6000546001600160a01b03163314611a64576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b03610100909104811690821603611ac75760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610ad2565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d8b565b6000546001600160a01b03163314611b48576040516311a8a1bb60e31b815260040160405180910390fd5b600c5460ff1615611b6f5760405160016238010d60e21b0319815260040160405180910390fd5b600e54611b87906001906001600160801b0316613852565b600e80546001600160801b03928316600160801b029216919091179055600c805460ff191660011790556040517f46b91c03184b9c3d3422333019c7e56a3e8940f285463e754a526110287bd52190600090a1565b828114611c1e5760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b6044820152606401610ad2565b6005548484604051602001611c3492919061343f565b6040516020818303038152906040528051906020012014611c825760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b6044820152606401610ad2565b6007548282604051602001611c989291906134ef565b6040516020818303038152906040528051906020012014611ce95760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610ad2565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611d3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5f9190613564565b611d7b5760405162461bcd60e51b8152600401610ad290613586565b6000611d8682612a12565b60016012556040519091507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb906118d290849084906004906006903390613879565b600c5460ff16611deb576040516383a941c560e01b815260040160405180910390fd5b611df3611edd565b6012546000198101611e1857604051636fcbb76f60e11b815260040160405180910390fd5b60408051602080820186905281830185905282518083038401815260609092019092528051910120818114611e605760405163ae4fc77d60e01b815260040160405180910390fd5b43831115611e815760405163bd24f2dd60e01b815260040160405180910390fd5b426000818152601460205260409081902086905560158290556001601255517f10979f09c442b2dfe17197e10366eb89a0dde719c4a0c0529b87e086ab3078c3916114d691879190918252602082015260400190565b60019055565b60035460ff16156110925760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ad2565b60035460ff166110925760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ad2565b600081815260038301602052604090205460ff1615611fbf5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b6044820152606401610ad2565b6000908152600390910160205260409020805460ff19166001179055565b611fe5611f23565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b346000805b63ffffffff81168711156122e0576000600d600060048463ffffffff16815481106120615761206161354e565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000205490508981036120b45750600101612034565b88888363ffffffff168181106120cc576120cc61354e565b90506020020160208101906120e19190612ff4565b6001600160a01b03166348e6fa2388888563ffffffff168181106121075761210761354e565b905060200201358c60405160200161212191815260200190565b604051602081830303815290604052888663ffffffff16815181106121485761214861354e565b60200260200101516040518463ffffffff1660e01b815260040161216d929190613915565b6000604051808303818588803b15801561218657600080fd5b505af193505050508015612198575060015b612255577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048363ffffffff16815481106121d6576121d661354e565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168a8a8563ffffffff168181106122145761221461354e565b90506020020160208101906122299190612ff4565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a16122d7565b86868363ffffffff1681811061226d5761226d61354e565b905060200201358461227f919061353b565b93506001925089600d600060048563ffffffff16815481106122a3576122a361354e565b6000918252602080832060088304015460079092166004026101000a90910463ffffffff1683528201929092526040019020555b50600101612034565b50806122ff57604051634f05605360e11b815260040160405180910390fd5b811561230f5761230f3383612c89565b5050505050505050565b612321611edd565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120123390565b81546000904390849060109061237b90600160801b90046001600160801b0316613943565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b8204811691166123ea8282612da7565b949350505050565b82546060906001600160801b0380821691600160801b9004168181101561242b5750506040805160008152602081019091529050611050565b816001600160801b03166000036124745760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b6044820152606401610ad2565b6000846001600160801b0316116124bf5760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b6044820152606401610ad2565b600060016124cd8685613969565b6124d79190613852565b9050806001600160801b0316826001600160801b031611156124f7578091505b506000612504864361353b565b905060005b826001600160801b0316846001600160801b03161161255b576001600160801b038316600090815260028901602052604090205482811161254e57600191505061255b565b5060001990920191612509565b8061257b5750506040805160008152602081019091529250611050915050565b600084612589856001613969565b6125939190613852565b6001600160801b031667ffffffffffffffff8111156125b4576125b4613099565b6040519080825280602002602001820160405280156125dd578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b03161161269c576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff1661265a57808484815181106126435761264361354e565b602002602001018181525050826001019250612664565b8161266457600191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f01909152822091909155909601956125e4565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b55806126d25782975050505050505050611050565b60008267ffffffffffffffff8111156126ed576126ed613099565b604051908082528060200260200182016040528015612716578160200160208202803683370190505b50905060005b83811015612763578481815181106127365761273661354e565b60200260200101518282815181106127505761275061354e565b602090810291909101015260010161271c565b5097506110509650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156128145760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b6044820152606401610ad2565b6001600160a01b0381166128575760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610ad2565b6004546101f4116128aa5760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e6465786572206174206361706163697479000000000000006044820152606401610ad2565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055612961612dd1565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080612a1e83610ff3565b9050600060068281548110612a3557612a3561354e565b6000918252602090912001546001600160a01b0316905080612a8d5760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b6044820152606401610ad2565b600454600090612a9f9060019061353b565b905080831015612bb857600060048281548110612abe57612abe61354e565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508060048581548110612afa57612afa61354e565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068281548110612b4057612b4061354e565b600091825260209091200154600680546001600160a01b039092169186908110612b6c57612b6c61354e565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055612ba0846001613469565b63ffffffff9091166000908152600860205260409020555b6004805480612bc957612bc9613989565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480612c0857612c08613989565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055612c48612dd1565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b80471015612cd95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610ad2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d26576040519150601f19603f3d011682016040523d82523d6000602084013e612d2b565b606091505b5050905080612da25760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610ad2565b505050565b600081612db5846001613969565b612dbf9190613852565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015612e4b57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411612e0e5790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015612eaa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612e8c575b5050505050905081604051602001612ec2919061399f565b60408051601f19818403018152908290528051602091820120600555612eea918391016139e9565b60408051601f1981840301815291905280516020909101206007555050565b60008083601f840112612f1b57600080fd5b50813567ffffffffffffffff811115612f3357600080fd5b6020830191508360208260051b8501011115612f4e57600080fd5b9250929050565b60008060008060008060808789031215612f6e57600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115612f9457600080fd5b612fa08a838b01612f09565b90965094506060890135915080821115612fb957600080fd5b50612fc689828a01612f09565b979a9699509497509295939492505050565b80356001600160a01b0381168114612fef57600080fd5b919050565b60006020828403121561300657600080fd5b61105082612fd8565b60006020828403121561302157600080fd5b5035919050565b803563ffffffff81168114612fef57600080fd5b60006020828403121561304e57600080fd5b61105082613028565b6000806020838503121561306a57600080fd5b823567ffffffffffffffff81111561308157600080fd5b61308d85828601612f09565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156130d8576130d8613099565b604052919050565b6000601f83818401126130f257600080fd5b8235602067ffffffffffffffff8083111561310f5761310f613099565b8260051b61311e8382016130af565b938452868101830193838101908986111561313857600080fd5b84890192505b858310156131c8578235848111156131565760008081fd5b8901603f81018b136131685760008081fd5b8581013560408682111561317e5761317e613099565b61318f828b01601f191689016130af565b8281528d828486010111156131a45760008081fd5b828285018a830137600092810189019290925250835250918401919084019061313e565b9998505050505050505050565b6000806000806000606086880312156131ed57600080fd5b853567ffffffffffffffff8082111561320557600080fd5b61321189838a01612f09565b9097509550602088013591508082111561322a57600080fd5b61323689838a01612f09565b9095509350604088013591508082111561324f57600080fd5b5061325c888289016130e0565b9150509295509295909350565b600080600080600080600060a0888a03121561328457600080fd5b873567ffffffffffffffff8082111561329c57600080fd5b6132a88b838c01612f09565b909950975060208a01359150808211156132c157600080fd5b6132cd8b838c01612f09565b909750955060408a01359150808211156132e657600080fd5b506132f38a828b016130e0565b935050606088013591506080880135905092959891949750929550565b6000806040838503121561332357600080fd5b61332c83613028565b946020939093013593505050565b6000806040838503121561334d57600080fd5b61335683613028565b915061336460208401612fd8565b90509250929050565b6000806000806040858703121561338357600080fd5b843567ffffffffffffffff8082111561339b57600080fd5b6133a788838901612f09565b909650945060208701359150808211156133c057600080fd5b506133cd87828801612f09565b95989497509550505050565b600080604083850312156133ec57600080fd5b50508035926020909101359150565b8183526000602080850194508260005b858110156134345763ffffffff61342183613028565b168752958201959082019060010161340b565b509495945050505050565b6020815260006123ea6020830184866133fb565b634e487b7160e01b600052601160045260246000fd5b80820180821115612dcb57612dcb613453565b60006020828403121561348e57600080fd5b5051919050565b858152606060208201819052810184905260006001600160fb1b038511156134bc57600080fd5b8460051b808760808501378201828103608090810160408501526134e390820185876133fb565b98975050505050505050565b60208082528181018390526000908460408401835b86811015613530576001600160a01b0361351d84612fd8565b1682529183019190830190600101613504565b509695505050505050565b81810381811115612dcb57612dcb613453565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561357657600080fd5b8151801515811461105057600080fd5b60208082526008908201526710bbb0ba31b432b960c11b604082015260600190565b600080604083850312156135bb57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b83811015613434578151875295820195908201906001016135e0565b60208152600061105060208301846135cc565b84815283602082015260806040820152600061362e60808301856135cc565b905082606083015295945050505050565b805480835260008281526020808220940193909190825b826007820110156136ce57815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c9087015261010090950194600190910190600801613656565b905490828110156136ec5763ffffffff821686526020909501946001015b8281101561370c57602082901c63ffffffff168652602095909501946001015b8281101561372b5763ffffffff604083901c1686526020909501946001015b8281101561374a5763ffffffff606083901c1686526020909501946001015b828110156137695763ffffffff608083901c1686526020909501946001015b828110156137885763ffffffff60a083901c1686526020909501946001015b828110156137a75763ffffffff60c083901c1686526020909501946001015b828110156137bd5760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156134345781546001600160a01b0316875295820195600191820191016137e0565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906138359083018561363f565b828103606084015261384781856137c7565b979650505050505050565b6001600160801b0382811682821603908082111561387257613872613453565b5092915050565b63ffffffff86168152600060018060a01b03808716602084015260a060408401526138a760a084018761363f565b83810360608501526138b981876137c7565b9250508084166080840152509695505050505050565b6000815180845260005b818110156138f5576020818501810151868301820152016138d9565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061392860408301856138cf565b828103602084015261393a81856138cf565b95945050505050565b60006001600160801b0380831681810361395f5761395f613453565b6001019392505050565b6001600160801b0381811683821601908082111561387257613872613453565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156139dd57835163ffffffff16835292840192918401916001016139bb565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156139dd5783516001600160a01b031683529284019291840191600101613a0556fea2646970667358221220db3e4220e70befa51ca95efa9fff096fc0f62798c5cb2fc54ab2275c1877856a64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
