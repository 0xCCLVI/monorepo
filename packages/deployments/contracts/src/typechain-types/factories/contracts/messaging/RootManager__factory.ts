/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "RootAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregate",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b6838038062001b68833981016040819052620000349162000159565b600380546001600160a01b0319166001600160a01b0383161790556200005a33620000d7565b6001600160a01b038216620000a45760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000ce600a62000136602090811b62000d2917901c565b5050506200019a565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60019055565b80516001600160a01b03811681146200015457600080fd5b919050565b6000806000606084860312156200016f57600080fd5b8351925062000181602085016200013c565b915062000191604085016200013c565b90509250925092565b6080516119ab620001bd60003960008181610319015261058301526119ab6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063b904670f11610097578063d232c22011610071578063d232c22014610383578063d2a3cc7114610395578063db0f0169146103a8578063e6f1208d146103bb57600080fd5b8063b904670f14610357578063c5b350df1461036a578063d1851c921461037257600080fd5b80638da5cb5b146102e85780638e7d93fa146102f9578063909907cb1461030c578063a01892a514610314578063ad9c0c2e1461033b578063b1f8100d1461034457600080fd5b8063498c2c2e1161014b578063715018a611610125578063715018a6146102865780637bc24d991461028e5780637d434e91146102975780637d534308146102aa57600080fd5b8063498c2c2e1461024c57806366cf8fab146102555780636a42b8f81461027d57600080fd5b806313ede1a1146101935780631eeaabea146101c357806324ec5d05146101d85780633c4baaf8146102105780633cf52ffb1461023157806344833ca314610239575b600080fd5b6101a66101a13660046114cc565b6103ce565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d66101d13660046114cc565b6103f8565b005b6102006101e63660046114fe565b63ffffffff16600090815260086020526040902054151590565b60405190151581526020016101ba565b61022361021e3660046114fe565b61046d565b6040519081526020016101ba565b600254610223565b6101d6610247366004611565565b6104d1565b61022360075481565b6102686102633660046114cc565b610722565b60405163ffffffff90911681526020016101ba565b62093a80610223565b6101d661075c565b61022360055481565b6101a66102a53660046114fe565b61081b565b600a546102c8906001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016101ba565b6000546001600160a01b03166101a6565b6101d66103073660046115d1565b610853565b610223610906565b6101a67f000000000000000000000000000000000000000000000000000000000000000081565b61022360095481565b6101d6610352366004611612565b610917565b6101d661036536600461162d565b6109bf565b6101d6610a40565b6001546001600160a01b03166101a6565b6000546001600160a01b031615610200565b6101d66103a3366004611612565b610a9b565b6101d66103b6366004611565565b610b63565b6101d66103c93660046114fe565b610c34565b600681815481106103de57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610423576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036104685760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600955565b63ffffffff81166000908152600860205260408120548082036104bf5760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b604482015260640161045f565b6104ca600182611676565b9392505050565b828181146105135760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b604482015260640161045f565b61051f85858585610b63565b6000610537600954600a610d2f90919063ffffffff16565b9050805160000361057e5760405162461bcd60e51b81526020600482015260116024820152706e6f20766572696669656420726f6f747360781b604482015260640161045f565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b81526004016105cd919061168d565b60408051808303816000875af11580156105eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060f91906116d1565b9150915060005b848163ffffffff1610156106da5786868263ffffffff1681811061063c5761063c6116f5565b90506020020160208101906106519190611612565b6001600160a01b03166382646a588460405160200161067291815260200190565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161069d919061170b565b600060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b50505050806001019050610616565b507f7c96724e9606dbd948afccd2ff6bd0072004e54b8066c07088dca03d84ba52818289898460405161071094939291906117a4565b60405180910390a15050505050505050565b6004818154811061073257600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610787576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036107aa57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107bc9190611676565b116107da576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610804576040516323295ef960e01b815260040160405180910390fd5b600154610819906001600160a01b0316610f29565b565b600060066108288361046d565b81548110610838576108386116f5565b6000918252602090912001546001600160a01b031692915050565b813361085e8261081b565b6001600160a01b0316146108a15760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b604482015260640161045f565b60006108ae600a84610f88565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507ff5832b5d15f2d906d01b871e48b0d1f27d8f282a7e0771c428b55bfeb409fa05919081900360600190a150505050565b6000610912600a610ffa565b905090565b6000546001600160a01b03163314610942576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561096757506001600160a01b03811615155b15610985576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036109b357604051634a2fb73f60e11b815260040160405180910390fd5b6109bc81611024565b50565b6000546001600160a01b031633146109ea576040516311a8a1bb60e31b815260040160405180910390fd5b6109f48282611072565b6040805163ffffffff841681526001600160a01b03831660208201527fffe1880f946ecead1a35ac14f99c782cacaa440f95493896794dabacf8f95c5491015b60405180910390a15050565b6001546001600160a01b03163314610a6b576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610a7d9190611676565b116108045760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314610ac6576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b0390811690821603610b245760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e61676572000000000000000000604482015260640161045f565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c9060200160405180910390a150565b6005548484604051602001610b799291906117cf565b6040516020818303038152906040528051906020012014610bc75760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b604482015260640161045f565b6007548282604051602001610bdd9291906117e3565b6040516020818303038152906040528051906020012014610c2e5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b604482015260640161045f565b50505050565b6003546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa158015610c7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca0919061182f565b610cd75760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161045f565b6000610ce2826111bd565b6040805163ffffffff851681526001600160a01b03831660208201529192507fb576e68aeacfc9a4973bc2ac5c7ea7e6662b78809d33443fed101e04ceb7c9d49101610a34565b60019055565b81546060906001600160801b0380821691600160801b90041681811015610d865760405162461bcd60e51b815260206004820152600b60248201526a717565756520656d70747960a81b604482015260640161045f565b60005b826001600160801b0316826001600160801b031610610de4576001600160801b038216600090815260028701602052604090205485610dc88243611676565b10610dd7576001915050610de4565b5060001990910190610d89565b80610e035750506040805160008152602081019091529150610f239050565b600083610e11846001611867565b610e1b9190611892565b6001600160801b031667ffffffffffffffff811115610e3c57610e3c611851565b604051908082528060200260200182016040528015610e65578160200160208202803683370190505b50905060005b836001600160801b0316856001600160801b031611610ef5576001600160801b03851660009081526001890160205260409020548251839083908110610eb357610eb36116f5565b6020908102919091018101919091526001600160801b03861660009081526001808b018352604080832083905560028c01909352918120559485019401610e6b565b5086546fffffffffffffffffffffffffffffffff19166001600160801b039490941693909317865550909150505b92915050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b815460009043908490601090610fad90600160801b90046001600160801b03166118ba565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b82048116911661101c828261136c565b949350505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156110be5760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b604482015260640161045f565b6001600160a01b0381166111015760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b604482015260640161045f565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b031990911617905591546000918252602092909252604090208190556111b8611394565b505050565b6000806111c98361046d565b90506000600682815481106111e0576111e06116f5565b6000918252602090912001546001600160a01b03169050806112385760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b604482015260640161045f565b60045460009061124a90600190611676565b9050808310156112d45760048181548110611267576112676116f5565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16600484815481106112a0576112a06116f5565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055505b60048054806112e5576112e56118e0565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480611324576113246118e0565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611364611394565b509392505050565b60008161137a846001611867565b6113849190611892565b6001600160801b03169392505050565b6000600480548060200260200160405190810160405280929190818152602001828054801561140e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116113d15790505b505050505090506000600680548060200260200160405190810160405280929190818152602001828054801561146d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161144f575b505050505090508160405160200161148591906118f6565b60408051601f198184030181529082905280516020918201206005556114ad91839101611934565b60408051601f1981840301815291905280516020909101206007555050565b6000602082840312156114de57600080fd5b5035919050565b803563ffffffff811681146114f957600080fd5b919050565b60006020828403121561151057600080fd5b6104ca826114e5565b60008083601f84011261152b57600080fd5b50813567ffffffffffffffff81111561154357600080fd5b6020830191508360208260051b850101111561155e57600080fd5b9250929050565b6000806000806040858703121561157b57600080fd5b843567ffffffffffffffff8082111561159357600080fd5b61159f88838901611519565b909650945060208701359150808211156115b857600080fd5b506115c587828801611519565b95989497509550505050565b600080604083850312156115e457600080fd5b6115ed836114e5565b946020939093013593505050565b80356001600160a01b03811681146114f957600080fd5b60006020828403121561162457600080fd5b6104ca826115fb565b6000806040838503121561164057600080fd5b611649836114e5565b9150611657602084016115fb565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561168857611688611660565b500390565b6020808252825182820181905260009190848201906040850190845b818110156116c5578351835292840192918401916001016116a9565b50909695505050505050565b600080604083850312156116e457600080fd5b505080516020909101519092909150565b634e487b7160e01b600052603260045260246000fd5b600060208083528351808285015260005b818110156117385785810183015185820160400152820161171c565b8181111561174a576000604083870101525b50601f01601f1916929092016040019392505050565b8183526000602080850194508260005b858110156117995763ffffffff611786836114e5565b1687529582019590820190600101611770565b509495945050505050565b8481526060602082015260006117be606083018587611760565b905082604083015295945050505050565b60208152600061101c602083018486611760565b60208082528181018390526000908460408401835b86811015611824576001600160a01b03611811846115fb565b16825291830191908301906001016117f8565b509695505050505050565b60006020828403121561184157600080fd5b815180151581146104ca57600080fd5b634e487b7160e01b600052604160045260246000fd5b60006001600160801b0380831681851680830382111561188957611889611660565b01949350505050565b60006001600160801b03838116908316818110156118b2576118b2611660565b039392505050565b60006001600160801b038083168181036118d6576118d6611660565b6001019392505050565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156116c557835163ffffffff1683529284019291840191600101611912565b6020808252825182820181905260009190848201906040850190845b818110156116c55783516001600160a01b03168352928401929184019160010161195056fea2646970667358221220facc38b539c3d0094bf12f7c6dc3f478493c806d0984e9be29bd00a027d5a17b64736f6c634300080f0033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
