/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620029ce380380620029ce833981016040819052620000349162000163565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a62000140602090811b620012ba17901c565b505050620001a4565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b03811681146200015e57600080fd5b919050565b6000806000606084860312156200017957600080fd5b835192506200018b6020850162000146565b91506200019b6040850162000146565b90509250925092565b608051612807620001c76000396000818161050b0152610d7801526128076000f3fe6080604052600436106102045760003560e01c80638456cb5911610118578063b1f8100d116100a0578063d1851c921161006f578063d1851c9214610600578063d232c2201461061e578063d2a3cc711461063d578063db0f01691461065d578063e6f1208d1461067d57600080fd5b8063b1f8100d14610595578063b904670f146105b5578063c5b350df146105d5578063c8ef89de146105ea57600080fd5b8063957908d1116100e7578063957908d1146104cf578063a01892a5146104f9578063a792c29b1461052d578063aa0d60a314610552578063ad9c0c2e1461057f57600080fd5b80638456cb59146104675780638da5cb5b1461047c5780638e7d93fa1461049a578063909907cb146104ba57600080fd5b8063412e12db1161019b5780636a42b8f81161016a5780636a42b8f8146103bb578063715018a6146103d15780637bc24d99146103e65780637d434e91146103fc5780637d5343081461041c57600080fd5b8063412e12db14610345578063498c2c2e146103585780635c975abb1461036e57806366cf8fab1461038657600080fd5b806327186c6a116101d757806327186c6a146102cd5780633c4baaf8146102ed5780633cf52ffb1461031b5780633f4ba83a1461033057600080fd5b80630f8ef4ee1461020957806313ede1a11461022b5780631eeaabea1461026857806324ec5d0514610288575b600080fd5b34801561021557600080fd5b50610229610224366004611eda565b61069d565b005b34801561023757600080fd5b5061024b610246366004611eda565b610712565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027457600080fd5b50610229610283366004611eda565b61073c565b34801561029457600080fd5b506102bd6102a3366004611f0c565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161025f565b3480156102d957600080fd5b506102296102e8366004611f73565b6107ee565b3480156102f957600080fd5b5061030d610308366004611f0c565b610859565b60405190815260200161025f565b34801561032757600080fd5b5060025461030d565b34801561033c57600080fd5b506102296108bd565b610229610353366004611ffc565b6108fa565b34801561036457600080fd5b5061030d60075481565b34801561037a57600080fd5b5060035460ff166102bd565b34801561039257600080fd5b506103a66103a1366004611eda565b610aed565b60405163ffffffff909116815260200161025f565b3480156103c757600080fd5b5062093a8061030d565b3480156103dd57600080fd5b50610229610b27565b3480156103f257600080fd5b5061030d60055481565b34801561040857600080fd5b5061024b610417366004611f0c565b610b52565b34801561042857600080fd5b50600a54610447906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161025f565b34801561047357600080fd5b50610229610b8a565b34801561048857600080fd5b506000546001600160a01b031661024b565b3480156104a657600080fd5b506102296104b536600461216f565b610c41565b3480156104c657600080fd5b5061030d610cfc565b3480156104db57600080fd5b506104e4610d0d565b6040805192835260208301919091520161025f565b34801561050557600080fd5b5061024b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053957600080fd5b5060035461024b9061010090046001600160a01b031681565b34801561055e57600080fd5b50610567606481565b6040516001600160801b03909116815260200161025f565b34801561058b57600080fd5b5061030d60095481565b3480156105a157600080fd5b506102296105b03660046121b0565b610e4d565b3480156105c157600080fd5b506102296105d03660046121cb565b610eee565b3480156105e157600080fd5b50610229610f66565b3480156105f657600080fd5b5061030d6107d081565b34801561060c57600080fd5b506001546001600160a01b031661024b565b34801561062a57600080fd5b506000546001600160a01b0316156102bd565b34801561064957600080fd5b506102296106583660046121b0565b610fd6565b34801561066957600080fd5b506102296106783660046121fe565b6110ba565b34801561068957600080fd5b50610229610698366004611f0c565b6111cd565b6000546001600160a01b031633146106c8576040516311a8a1bb60e31b815260040160405180910390fd5b6106d06112c0565b6106db600a82611309565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b6006818154811061072257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610767576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036107ac5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b600754828260405160200161080492919061226a565b60405160208183030381529060405280519060200120146108555760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107a3565b5050565b63ffffffff81166000908152600860205260408120548082036108ab5760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016107a3565b6108b66001826122cc565b9392505050565b6000546001600160a01b031633146108e8576040516311a8a1bb60e31b815260040160405180910390fd5b6108f06112c0565b6108f861137a565b565b6109026113cc565b61090c85856107ee565b83828114801561091c5750808251145b61095a5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016107a3565b600080610965610d0d565b90925090503460005b848163ffffffff161015610a9e5787878263ffffffff16818110610994576109946122df565b90506020020135826109a691906122cc565b915089898263ffffffff168181106109c0576109c06122df565b90506020020160208101906109d591906121b0565b6001600160a01b03166348e6fa2389898463ffffffff168181106109fb576109fb6122df565b9050602002013586604051602001610a1591815260200190565b604051602081830303815290604052898563ffffffff1681518110610a3c57610a3c6122df565b60200260200101516040518463ffffffff1660e01b8152600401610a6192919061233b565b6000604051808303818588803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050505080600101905061096e565b50600554604080518581526020810185905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a1505050505050505050565b60048181548110610afd57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b031633146108f8576040516311a8a1bb60e31b815260040160405180910390fd5b60006006610b5f83610859565b81548110610b6f57610b6f6122df565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa9190612369565b610c315760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107a3565b610c396113cc565b6108f8611412565b610c496113cc565b8133610c5482610b52565b6001600160a01b031614610c975760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107a3565b6000610ca4600a8461144f565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b6000610d08600a6114c1565b905090565b600080610d186113cc565b600954600090610d2c90600a9060646114eb565b90508051600003610d735760405162461bcd60e51b81526020600482015260116024820152706e6f20766572696669656420726f6f747360781b60448201526064016107a3565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610dc291906123c6565b60408051808303816000875af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0491906123d9565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd4828285604051610e3b939291906123fd565b60405180910390a19093509150509091565b6000546001600160a01b03163314610e78576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610e96575060025415155b15610eb4576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ee257604051634a2fb73f60e11b815260040160405180910390fd5b610eeb8161188b565b50565b6000546001600160a01b03163314610f19576040516311a8a1bb60e31b815260040160405180910390fd5b610f2382826118d9565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70828260046006604051610f5a94939291906125e2565b60405180910390a15050565b6001546001600160a01b03163314610f91576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610fa391906122cc565b11610fc15760405163d39c12bb60e01b815260040160405180910390fd5b6001546108f8906001600160a01b0316611abe565b6000546001600160a01b03163314611001576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b036101009091048116908216036110645760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016107a3565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610707565b8281146110fc5760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b60448201526064016107a3565b600554848460405160200161111292919061262f565b60405160208183030381529060405280519060200120146111605760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016107a3565b600754828260405160200161117692919061226a565b60405160208183030381529060405280519060200120146111c75760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107a3565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611219573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123d9190612369565b6112745760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107a3565b600061127f82611b23565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb82826004600633604051610f5a95949392919061266d565b60019055565b60035460ff166108f85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107a3565b600081815260038301602052604090205460ff161561135c5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016107a3565b6000908152600390910160205260409020805460ff19166001179055565b6113826112c0565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff16156108f85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107a3565b61141a6113cc565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113af3390565b81546000904390849060109061147490600160801b90046001600160801b03166126c3565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b8204811691166114e38282611d78565b949350505050565b82546060906001600160801b0380821691600160801b900416818110156115425760405162461bcd60e51b815260206004820152600b60248201526a717565756520656d70747960a81b60448201526064016107a3565b816001600160801b031660000361158b5760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016107a3565b6000846001600160801b0316116115d65760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016107a3565b600060016115e486856126e9565b6115ee9190612710565b9050806001600160801b0316826001600160801b0316111561160e578091505b50600061161b86436122cc565b905060005b826001600160801b0316846001600160801b031611611672576001600160801b0383166000908152600289016020526040902054828111611665576001915050611672565b5060001990920191611620565b8061169257505060408051600081526020810190915292506108b6915050565b6000846116a08560016126e9565b6116aa9190612710565b6001600160801b031667ffffffffffffffff8111156116cb576116cb611fb5565b6040519080825280602002602001820160405280156116f4578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b0316116117b0576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff16611771578084848151811061175a5761175a6122df565b602002602001018181525050826001019250611778565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f01909152822091909155909601956116fb565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b5560008190036117ea57829750505050505050506108b6565b60008267ffffffffffffffff81111561180557611805611fb5565b60405190808252806020026020018201604052801561182e578160200160208202803683370190505b50905060005b8381101561187b5784818151811061184e5761184e6122df565b6020026020010151828281518110611868576118686122df565b6020908102919091010152600101611834565b5097506108b69650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156119255760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064016107a3565b6001600160a01b0381166119685760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107a3565b6004546107d0116119bb5760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016107a3565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055611a72611da2565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080611b2f83610859565b9050600060068281548110611b4657611b466122df565b6000918252602090912001546001600160a01b0316905080611b9e5760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016107a3565b600454600090611bb0906001906122cc565b905080831015611ca75760048181548110611bcd57611bcd6122df565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660048481548110611c0657611c066122df565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068181548110611c4c57611c4c6122df565b600091825260209091200154600680546001600160a01b039092169185908110611c7857611c786122df565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6004805480611cb857611cb8612730565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480611cf757611cf7612730565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611d37611da2565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b600081611d868460016126e9565b611d909190612710565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015611e1c57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611ddf5790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015611e7b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611e5d575b5050505050905081604051602001611e939190612746565b60408051601f19818403018152908290528051602091820120600555611ebb91839101612790565b60408051601f1981840301815291905280516020909101206007555050565b600060208284031215611eec57600080fd5b5035919050565b803563ffffffff81168114611f0757600080fd5b919050565b600060208284031215611f1e57600080fd5b6108b682611ef3565b60008083601f840112611f3957600080fd5b50813567ffffffffffffffff811115611f5157600080fd5b6020830191508360208260051b8501011115611f6c57600080fd5b9250929050565b60008060208385031215611f8657600080fd5b823567ffffffffffffffff811115611f9d57600080fd5b611fa985828601611f27565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ff457611ff4611fb5565b604052919050565b60008060008060006060868803121561201457600080fd5b67ffffffffffffffff808735111561202b57600080fd5b6120388888358901611f27565b909650945060208701358181111561204f57600080fd5b61205b89828a01611f27565b90955093505060408701358181111561207357600080fd5b8701601f8101891361208457600080fd5b80358281111561209657612096611fb5565b6120a560208260051b01611fcb565b8082825260208201915060208360051b85010192508b8311156120c757600080fd5b602084015b8381101561215c5785813511156120e257600080fd5b803585018d603f8201126120f557600080fd5b60208101358781111561210a5761210a611fb5565b61211d601f8201601f1916602001611fcb565b8181528f604083850101111561213257600080fd5b816040840160208301376000602083830101528086525050506020830192506020810190506120cc565b5080955050505050509295509295909350565b6000806040838503121561218257600080fd5b61218b83611ef3565b946020939093013593505050565b80356001600160a01b0381168114611f0757600080fd5b6000602082840312156121c257600080fd5b6108b682612199565b600080604083850312156121de57600080fd5b6121e783611ef3565b91506121f560208401612199565b90509250929050565b6000806000806040858703121561221457600080fd5b843567ffffffffffffffff8082111561222c57600080fd5b61223888838901611f27565b9096509450602087013591508082111561225157600080fd5b5061225e87828801611f27565b95989497509550505050565b60208082528181018390526000908460408401835b868110156122ab576001600160a01b0361229884612199565b168252918301919083019060010161227f565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611d9c57611d9c6122b6565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b8181101561231b576020818501810151868301820152016122ff565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061234e60408301856122f5565b828103602084015261236081856122f5565b95945050505050565b60006020828403121561237b57600080fd5b815180151581146108b657600080fd5b600081518084526020808501945080840160005b838110156123bb5781518752958201959082019060010161239f565b509495945050505050565b6020815260006108b6602083018461238b565b600080604083850312156123ec57600080fd5b505080516020909101519092909150565b838152826020820152606060408201526000612360606083018461238b565b805480835260008281526020808220940193909190825b826007820110156124ab57815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c9087015261010090950194600190910190600801612433565b905490828110156124c95763ffffffff821686526020909501946001015b828110156124e957602082901c63ffffffff168652602095909501946001015b828110156125085763ffffffff604083901c1686526020909501946001015b828110156125275763ffffffff606083901c1686526020909501946001015b828110156125465763ffffffff608083901c1686526020909501946001015b828110156125655763ffffffff60a083901c1686526020909501946001015b828110156125845763ffffffff60c083901c1686526020909501946001015b8281101561259a5760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156123bb5781546001600160a01b0316875295820195600191820191016125bd565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906126129083018561241c565b828103606084015261262481856125a4565b979650505050505050565b60208082528181018390526000908460408401835b868110156122ab5763ffffffff61265a84611ef3565b1682529183019190830190600101612644565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261269b60a084018761241c565b83810360608501526126ad81876125a4565b9250508084166080840152509695505050505050565b60006001600160801b038083168181036126df576126df6122b6565b6001019392505050565b6001600160801b03818116838216019080821115612709576127096122b6565b5092915050565b6001600160801b03828116828216039080821115612709576127096122b6565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561278457835163ffffffff1683529284019291840191600101612762565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156127845783516001600160a01b0316835292840192918401916001016127ac56fea26469706673582212201142c3fe5162d3cdecb89333944a945f24ffda66aad876ce6240392b79640b5f64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
