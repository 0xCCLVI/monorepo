/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200290c3803806200290c833981016040819052620000349162000163565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a62000140602090811b6200127817901c565b505050620001a4565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b03811681146200015e57600080fd5b919050565b6000806000606084860312156200017957600080fd5b835192506200018b6020850162000146565b91506200019b6040850162000146565b90509250925092565b608051612745620001c76000396000818161050b0152610d7801526127456000f3fe6080604052600436106102045760003560e01c80638456cb5911610118578063b1f8100d116100a0578063d1851c921161006f578063d1851c9214610600578063d232c2201461061e578063d2a3cc711461063d578063db0f01691461065d578063e6f1208d1461067d57600080fd5b8063b1f8100d14610595578063b904670f146105b5578063c5b350df146105d5578063c8ef89de146105ea57600080fd5b8063957908d1116100e7578063957908d1146104cf578063a01892a5146104f9578063a792c29b1461052d578063aa0d60a314610552578063ad9c0c2e1461057f57600080fd5b80638456cb59146104675780638da5cb5b1461047c5780638e7d93fa1461049a578063909907cb146104ba57600080fd5b8063412e12db1161019b5780636a42b8f81161016a5780636a42b8f8146103bb578063715018a6146103d15780637bc24d99146103e65780637d434e91146103fc5780637d5343081461041c57600080fd5b8063412e12db14610345578063498c2c2e146103585780635c975abb1461036e57806366cf8fab1461038657600080fd5b806327186c6a116101d757806327186c6a146102cd5780633c4baaf8146102ed5780633cf52ffb1461031b5780633f4ba83a1461033057600080fd5b80630f8ef4ee1461020957806313ede1a11461022b5780631eeaabea1461026857806324ec5d0514610288575b600080fd5b34801561021557600080fd5b50610229610224366004611e18565b61069d565b005b34801561023757600080fd5b5061024b610246366004611e18565b610712565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561027457600080fd5b50610229610283366004611e18565b61073c565b34801561029457600080fd5b506102bd6102a3366004611e4a565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161025f565b3480156102d957600080fd5b506102296102e8366004611eb1565b6107ee565b3480156102f957600080fd5b5061030d610308366004611e4a565b610859565b60405190815260200161025f565b34801561032757600080fd5b5060025461030d565b34801561033c57600080fd5b506102296108bd565b610229610353366004611f3a565b6108fa565b34801561036457600080fd5b5061030d60075481565b34801561037a57600080fd5b5060035460ff166102bd565b34801561039257600080fd5b506103a66103a1366004611e18565b610aed565b60405163ffffffff909116815260200161025f565b3480156103c757600080fd5b5062093a8061030d565b3480156103dd57600080fd5b50610229610b27565b3480156103f257600080fd5b5061030d60055481565b34801561040857600080fd5b5061024b610417366004611e4a565b610b52565b34801561042857600080fd5b50600a54610447906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161025f565b34801561047357600080fd5b50610229610b8a565b34801561048857600080fd5b506000546001600160a01b031661024b565b3480156104a657600080fd5b506102296104b53660046120ad565b610c41565b3480156104c657600080fd5b5061030d610cfc565b3480156104db57600080fd5b506104e4610d0d565b6040805192835260208301919091520161025f565b34801561050557600080fd5b5061024b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561053957600080fd5b5060035461024b9061010090046001600160a01b031681565b34801561055e57600080fd5b50610567606481565b6040516001600160801b03909116815260200161025f565b34801561058b57600080fd5b5061030d60095481565b3480156105a157600080fd5b506102296105b03660046120ee565b610e4d565b3480156105c157600080fd5b506102296105d0366004612109565b610eee565b3480156105e157600080fd5b50610229610f66565b3480156105f657600080fd5b5061030d6107d081565b34801561060c57600080fd5b506001546001600160a01b031661024b565b34801561062a57600080fd5b506000546001600160a01b0316156102bd565b34801561064957600080fd5b506102296106583660046120ee565b610fd6565b34801561066957600080fd5b5061022961067836600461213c565b6110ba565b34801561068957600080fd5b50610229610698366004611e4a565b61118b565b6000546001600160a01b031633146106c8576040516311a8a1bb60e31b815260040160405180910390fd5b6106d061127e565b6106db600a826112c7565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b6006818154811061072257600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610767576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036107ac5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b60075482826040516020016108049291906121a8565b60405160208183030381529060405280519060200120146108555760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107a3565b5050565b63ffffffff81166000908152600860205260408120548082036108ab5760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016107a3565b6108b660018261220a565b9392505050565b6000546001600160a01b031633146108e8576040516311a8a1bb60e31b815260040160405180910390fd5b6108f061127e565b6108f8611338565b565b61090261138a565b61090c85856107ee565b83828114801561091c5750808251145b61095a5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016107a3565b600080610965610d0d565b90925090503460005b848163ffffffff161015610a9e5787878263ffffffff168181106109945761099461221d565b90506020020135826109a6919061220a565b915089898263ffffffff168181106109c0576109c061221d565b90506020020160208101906109d591906120ee565b6001600160a01b03166348e6fa2389898463ffffffff168181106109fb576109fb61221d565b9050602002013586604051602001610a1591815260200190565b604051602081830303815290604052898563ffffffff1681518110610a3c57610a3c61221d565b60200260200101516040518463ffffffff1660e01b8152600401610a61929190612279565b6000604051808303818588803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050505080600101905061096e565b50600554604080518581526020810185905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a1505050505050505050565b60048181548110610afd57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b031633146108f8576040516311a8a1bb60e31b815260040160405180910390fd5b60006006610b5f83610859565b81548110610b6f57610b6f61221d565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610bd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfa91906122a7565b610c315760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107a3565b610c3961138a565b6108f86113d0565b610c4961138a565b8133610c5482610b52565b6001600160a01b031614610c975760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107a3565b6000610ca4600a8461140d565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b6000610d08600a61147f565b905090565b600080610d1861138a565b600954600090610d2c90600a9060646114a9565b90508051600003610d735760405162461bcd60e51b81526020600482015260116024820152706e6f20766572696669656420726f6f747360781b60448201526064016107a3565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610dc29190612304565b60408051808303816000875af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190612317565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd4828285604051610e3b9392919061233b565b60405180910390a19093509150509091565b6000546001600160a01b03163314610e78576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610e96575060025415155b15610eb4576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610ee257604051634a2fb73f60e11b815260040160405180910390fd5b610eeb81611849565b50565b6000546001600160a01b03163314610f19576040516311a8a1bb60e31b815260040160405180910390fd5b610f238282611897565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70828260046006604051610f5a9493929190612520565b60405180910390a15050565b6001546001600160a01b03163314610f91576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610fa3919061220a565b11610fc15760405163d39c12bb60e01b815260040160405180910390fd5b6001546108f8906001600160a01b0316611a35565b6000546001600160a01b03163314611001576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b036101009091048116908216036110645760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016107a3565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610707565b60055484846040516020016110d092919061256d565b604051602081830303815290604052805190602001201461111e5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016107a3565b60075482826040516020016111349291906121a8565b60405160208183030381529060405280519060200120146111855760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016107a3565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156111d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111fb91906122a7565b6112325760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016107a3565b600061123d82611a9a565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb82826004600633604051610f5a9594939291906125ab565b60019055565b60035460ff166108f85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107a3565b600081815260038301602052604090205460ff161561131a5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016107a3565b6000908152600390910160205260409020805460ff19166001179055565b61134061127e565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff16156108f85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107a3565b6113d861138a565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861136d3390565b81546000904390849060109061143290600160801b90046001600160801b0316612601565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b8204811691166114a18282611cb6565b949350505050565b82546060906001600160801b0380821691600160801b900416818110156115005760405162461bcd60e51b815260206004820152600b60248201526a717565756520656d70747960a81b60448201526064016107a3565b816001600160801b03166000036115495760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016107a3565b6000846001600160801b0316116115945760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016107a3565b600060016115a28685612627565b6115ac919061264e565b9050806001600160801b0316826001600160801b031611156115cc578091505b5060006115d9864361220a565b905060005b826001600160801b0316846001600160801b031611611630576001600160801b0383166000908152600289016020526040902054828111611623576001915050611630565b50600019909201916115de565b8061165057505060408051600081526020810190915292506108b6915050565b60008461165e856001612627565b611668919061264e565b6001600160801b031667ffffffffffffffff81111561168957611689611ef3565b6040519080825280602002602001820160405280156116b2578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b03161161176e576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff1661172f57808484815181106117185761171861221d565b602002602001018181525050826001019250611736565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f01909152822091909155909601956116b9565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b5560008190036117a857829750505050505050506108b6565b60008267ffffffffffffffff8111156117c3576117c3611ef3565b6040519080825280602002602001820160405280156117ec578160200160208202803683370190505b50905060005b838110156118395784818151811061180c5761180c61221d565b60200260200101518282815181106118265761182661221d565b60209081029190910101526001016117f2565b5097506108b69650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156118e35760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064016107a3565b6001600160a01b0381166119265760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016107a3565b6004546107d0116119795760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016107a3565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055611a30611ce0565b505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080611aa683610859565b9050600060068281548110611abd57611abd61221d565b6000918252602090912001546001600160a01b0316905080611b155760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016107a3565b600454600090611b279060019061220a565b905080831015611c1e5760048181548110611b4457611b4461221d565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1660048481548110611b7d57611b7d61221d565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068181548110611bc357611bc361221d565b600091825260209091200154600680546001600160a01b039092169185908110611bef57611bef61221d565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6004805480611c2f57611c2f61266e565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480611c6e57611c6e61266e565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611cae611ce0565b509392505050565b600081611cc4846001612627565b611cce919061264e565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015611d5a57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611d1d5790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015611db957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611d9b575b5050505050905081604051602001611dd19190612684565b60408051601f19818403018152908290528051602091820120600555611df9918391016126ce565b60408051601f1981840301815291905280516020909101206007555050565b600060208284031215611e2a57600080fd5b5035919050565b803563ffffffff81168114611e4557600080fd5b919050565b600060208284031215611e5c57600080fd5b6108b682611e31565b60008083601f840112611e7757600080fd5b50813567ffffffffffffffff811115611e8f57600080fd5b6020830191508360208260051b8501011115611eaa57600080fd5b9250929050565b60008060208385031215611ec457600080fd5b823567ffffffffffffffff811115611edb57600080fd5b611ee785828601611e65565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f3257611f32611ef3565b604052919050565b600080600080600060608688031215611f5257600080fd5b67ffffffffffffffff8087351115611f6957600080fd5b611f768888358901611e65565b9096509450602087013581811115611f8d57600080fd5b611f9989828a01611e65565b909550935050604087013581811115611fb157600080fd5b8701601f81018913611fc257600080fd5b803582811115611fd457611fd4611ef3565b611fe360208260051b01611f09565b8082825260208201915060208360051b85010192508b83111561200557600080fd5b602084015b8381101561209a57858135111561202057600080fd5b803585018d603f82011261203357600080fd5b60208101358781111561204857612048611ef3565b61205b601f8201601f1916602001611f09565b8181528f604083850101111561207057600080fd5b8160408401602083013760006020838301015280865250505060208301925060208101905061200a565b5080955050505050509295509295909350565b600080604083850312156120c057600080fd5b6120c983611e31565b946020939093013593505050565b80356001600160a01b0381168114611e4557600080fd5b60006020828403121561210057600080fd5b6108b6826120d7565b6000806040838503121561211c57600080fd5b61212583611e31565b9150612133602084016120d7565b90509250929050565b6000806000806040858703121561215257600080fd5b843567ffffffffffffffff8082111561216a57600080fd5b61217688838901611e65565b9096509450602087013591508082111561218f57600080fd5b5061219c87828801611e65565b95989497509550505050565b60208082528181018390526000908460408401835b868110156121e9576001600160a01b036121d6846120d7565b16825291830191908301906001016121bd565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611cda57611cda6121f4565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b818110156122595760208185018101518683018201520161223d565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061228c6040830185612233565b828103602084015261229e8185612233565b95945050505050565b6000602082840312156122b957600080fd5b815180151581146108b657600080fd5b600081518084526020808501945080840160005b838110156122f9578151875295820195908201906001016122dd565b509495945050505050565b6020815260006108b660208301846122c9565b6000806040838503121561232a57600080fd5b505080516020909101519092909150565b83815282602082015260606040820152600061229e60608301846122c9565b805480835260008281526020808220940193909190825b826007820110156123e957815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c9087015261010090950194600190910190600801612371565b905490828110156124075763ffffffff821686526020909501946001015b8281101561242757602082901c63ffffffff168652602095909501946001015b828110156124465763ffffffff604083901c1686526020909501946001015b828110156124655763ffffffff606083901c1686526020909501946001015b828110156124845763ffffffff608083901c1686526020909501946001015b828110156124a35763ffffffff60a083901c1686526020909501946001015b828110156124c25763ffffffff60c083901c1686526020909501946001015b828110156124d85760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156122f95781546001600160a01b0316875295820195600191820191016124fb565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906125509083018561235a565b828103606084015261256281856124e2565b979650505050505050565b60208082528181018390526000908460408401835b868110156121e95763ffffffff61259884611e31565b1682529183019190830190600101612582565b63ffffffff86168152600060018060a01b03808716602084015260a060408401526125d960a084018761235a565b83810360608501526125eb81876124e2565b9250508084166080840152509695505050505050565b60006001600160801b0380831681810361261d5761261d6121f4565b6001019392505050565b6001600160801b03818116838216019080821115612647576126476121f4565b5092915050565b6001600160801b03828116828216039080821115612647576126476121f4565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156126c257835163ffffffff16835292840192918401916001016126a0565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156126c25783516001600160a01b0316835292840192918401916001016126ea56fea264697066735822122044e3d07e0df8ddf4760d8e82d354c008c6b42777160e6976215848e12f44f98e64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
