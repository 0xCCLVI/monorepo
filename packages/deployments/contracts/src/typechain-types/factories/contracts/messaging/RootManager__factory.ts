/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_activateOptimisticMode__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_aggregate__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_checkDomains__InvalidDomains",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_constructor__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidAggregateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidInputHash",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_onlyOptimisticMode__SlowModeOn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RootManager_onlyProposer__NotWhitelistedProposer",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_optimisticPropagate__ForbiddenOptimisticRoot",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "RootManager_proposeAggregateRoot__InvalidSnapshotId",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_proposeAggregateRoot__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__SameDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setMinDisputeBlocks__SameMinDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_slowPropagate__OldAggregateRoot",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOfDispute",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "baseRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "snapshotsRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "AggregateRootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "MinDisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OptimisticModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "OptimisticRootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
    ],
    name: "ProposedRootFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "SlowModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FINALIZED_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateOptimisticMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateSlowMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "addProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedProposers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalizeAndPropagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizedOptimisticAggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSnapshotDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "_snapshotDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCountBeforeOpMode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDisputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_snapshotId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_snapshotsRoots",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedAggregateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "removeProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    name: "setDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
    ],
    name: "setMinDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600f8190556014553480156200001b57600080fd5b5060405162003927380380620039278339810160408190526200003e91620001aa565b600380546001600160a81b0319166101006001600160a01b03861602179055620000683362000122565b818110156200008a57604051637a61d42360e11b815260040160405180910390fd5b6001600160a01b038416620000d45760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0384166080526009859055600d8054600160ff19909116179055600b829055600a81905562000117601062000187602090811b62001c3b17901c565b5050505050620001fe565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b0381168114620001a557600080fd5b919050565b600080600080600060a08688031215620001c357600080fd5b85519450620001d5602087016200018d565b9350620001e5604087016200018d565b6060870151608090970151959894975095949392505050565b6080516136f1620002366000396000818161075001528181610af801528181611231015281816112be01526118a901526136f16000f3fe6080604052600436106103355760003560e01c80638456cb59116101ab578063c5b350df116100f7578063d3c54fe511610095578063db0f01691161006f578063db0f01691461094d578063e6f1208d1461096d578063e9812d711461098d578063f4b6e410146109ad57600080fd5b8063d3c54fe51461090d578063d3c805b714610922578063d7e8d6ae1461093757600080fd5b8063ceb3454e116100d1578063ceb3454e1461089a578063d1851c92146108b0578063d232c220146108ce578063d2a3cc71146108ed57600080fd5b8063c5b350df1461085a578063c8ef89de1461086f578063cbfa20211461088557600080fd5b8063a792c29b11610164578063ad9c0c2e1161013e578063ad9c0c2e146107e4578063b03cd418146107fa578063b1f8100d1461081a578063b904670f1461083a57600080fd5b8063a792c29b14610772578063a941f3f314610797578063aa0d60a3146107b757600080fd5b80638456cb59146106ac5780638da5cb5b146106c15780638e7d93fa146106df578063909907cb146106ff578063957908d114610714578063a01892a51461073e57600080fd5b80633f4ba83a1161028557806360caf7a011610223578063715018a6116101fd578063715018a6146106165780637bc24d991461062b5780637d434e91146106415780637d5343081461066157600080fd5b806360caf7a0146105b157806366cf8fab146105cb5780636a42b8f81461060057600080fd5b8063498c2c2e1161025f578063498c2c2e1461053e5780634a2db1da146105545780635c975abb146105845780635d3087611461059c57600080fd5b80633f4ba83a14610503578063412e12db14610518578063492a96f41461052b57600080fd5b80631eeaabea116102f2578063263ef354116102cc578063263ef3541461048e57806327186c6a146104ae5780633c4baaf8146104ce5780633cf52ffb146104ee57600080fd5b80631eeaabea1461041357806320f62eda1461043357806324ec5d051461044957600080fd5b80630165bc811461033a578063089200391461036357806309d632d3146103855780630f8ef4ee146103a557806313ede1a1146103c557806317702174146103fd575b600080fd5b34801561034657600080fd5b50610350600e5481565b6040519081526020015b60405180910390f35b34801561036f57600080fd5b5061038361037e366004612bf7565b6109c3565b005b34801561039157600080fd5b506103836103a0366004612c96565b610bc4565b3480156103b157600080fd5b506103836103c0366004612cb1565b610c38565b3480156103d157600080fd5b506103e56103e0366004612cb1565b610cad565b6040516001600160a01b03909116815260200161035a565b34801561040957600080fd5b50610350600c5481565b34801561041f57600080fd5b5061038361042e366004612cb1565b610cd7565b34801561043f57600080fd5b50610350600a5481565b34801561045557600080fd5b5061047e610464366004612cde565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161035a565b34801561049a57600080fd5b506103836104a9366004612cb1565b610d84565b3480156104ba57600080fd5b506103836104c9366004612cf9565b610e13565b3480156104da57600080fd5b506103506104e9366004612cde565b610e7e565b3480156104fa57600080fd5b50600254610350565b34801561050f57600080fd5b50610383610ee2565b610383610526366004612e77565b610f1f565b610383610539366004612f0b565b610fb0565b34801561054a57600080fd5b5061035060075481565b34801561056057600080fd5b5061047e61056f366004612c96565b60156020526000908152604090205460ff1681565b34801561059057600080fd5b5060035460ff1661047e565b3480156105a857600080fd5b50610350600181565b3480156105bd57600080fd5b50600d5461047e9060ff1681565b3480156105d757600080fd5b506105eb6105e6366004612cb1565b610fd8565b60405163ffffffff909116815260200161035a565b34801561060c57600080fd5b5062093a80610350565b34801561062257600080fd5b50610383611012565b34801561063757600080fd5b5061035060055481565b34801561064d57600080fd5b506103e561065c366004612cde565b61103d565b34801561066d57600080fd5b5060105461068c906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161035a565b3480156106b857600080fd5b50610383611075565b3480156106cd57600080fd5b506000546001600160a01b03166103e5565b3480156106eb57600080fd5b506103836106fa366004612fb2565b611111565b34801561070b57600080fd5b506103506111f4565b34801561072057600080fd5b50610729611205565b6040805192835260208301919091520161035a565b34801561074a57600080fd5b506103e57f000000000000000000000000000000000000000000000000000000000000000081565b34801561077e57600080fd5b506003546103e59061010090046001600160a01b031681565b3480156107a357600080fd5b506103836107b2366004612cb1565b611393565b3480156107c357600080fd5b506107cc606481565b6040516001600160801b03909116815260200161035a565b3480156107f057600080fd5b5061035060095481565b34801561080657600080fd5b50610383610815366004612c96565b611445565b34801561082657600080fd5b50610383610835366004612c96565b6114bc565b34801561084657600080fd5b50610383610855366004612fdc565b61155d565b34801561086657600080fd5b506103836115d5565b34801561087b57600080fd5b506103506101f481565b34801561089157600080fd5b50610383611645565b3480156108a657600080fd5b5061035060145481565b3480156108bc57600080fd5b506001546001600160a01b03166103e5565b3480156108da57600080fd5b506000546001600160a01b03161561047e565b3480156108f957600080fd5b50610383610908366004612c96565b611730565b34801561091957600080fd5b50610383611814565b34801561092e57600080fd5b50610708610350565b34801561094357600080fd5b50610350600f5481565b34801561095957600080fd5b5061038361096836600461300f565b611964565b34801561097957600080fd5b50610383610988366004612cde565b611a77565b34801561099957600080fd5b506103836109a836600461307b565b611b50565b3480156109b957600080fd5b50610350600b5481565b3360009081526015602052604090205460ff166109fa57604051636d5595ef60e11b81523360048201526024015b60405180910390fd5b600d5460ff16610a1d576040516383a941c560e01b815260040160405180910390fd5b81816005548282604051602001610a359291906130e1565b6040516020818303038152906040528051906020012014610a695760405163c38e7eb160e01b815260040160405180910390fd5b61070842048814610a905760405163bac5a76560e01b8152600481018990526024016109f1565b601454600114610ab357604051631d026cf160e01b815260040160405180910390fd5b6000600a5443610ac3919061310b565b60408051602081018b9052908101829052909150606001604051602081830303815290604052805190602001206014819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b78919061311e565b888a7fa3ef5f102c5d4b3958ebddd5fc15de4c4da0bd714d6da2edab94dda2d00e220e848b8b8b8b604051610bb1959493929190613137565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610bef576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19169055517fbab6b194452fd4fa50e0ca09bf0f89976da30a2b92fdf91372ad1a176d81e3289190a250565b6000546001600160a01b03163314610c63576040516311a8a1bb60e31b815260040160405180910390fd5b610c6b611c41565b610c76601082611c8a565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b60068181548110610cbd57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610d02576040516311a8a1bb60e31b815260040160405180910390fd5b6009548103610d425760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016109f1565b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6000546001600160a01b03163314610daf576040516311a8a1bb60e31b815260040160405180910390fd5b600b548103610dd157604051632d1150e160e11b815260040160405180910390fd5b600b546040805183815260208101929092527fdfad87ee418f8b636836b030634c8040055c9a5f641899df5a5d1d3c554fee47910160405180910390a1600b55565b6007548282604051602001610e29929190613191565b6040516020818303038152906040528051906020012014610e7a5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016109f1565b5050565b63ffffffff8116600090815260086020526040812054808203610ed05760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016109f1565b610edb6001826131dd565b9392505050565b6000546001600160a01b03163314610f0d576040516311a8a1bb60e31b815260040160405180910390fd5b610f15611c41565b610f1d611cfb565b565b610f27611d4d565b610f318585610e13565b838281148015610f415750808251145b610f7f5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016109f1565b600d5460ff16610f9b57610f968686868686611d93565b610fa8565b610fa88686868686611e23565b505050505050565b610fb8611d4d565b610fc28282611b50565b610fcf8787878787610f1f565b50505050505050565b60048181548110610fe857600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610f1d576040516311a8a1bb60e31b815260040160405180910390fd5b6000600661104a83610e7e565b8154811061105a5761105a6131f0565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156110c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e59190613206565b6111015760405162461bcd60e51b81526004016109f190613228565b611109611d4d565b610f1d611e9f565b611119611d4d565b81336111248261103d565b6001600160a01b0316146111675760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016109f1565b600d5460ff161561118b5760405163515f45f160e11b815260040160405180910390fd5b6000611198601084611edc565b6040805163ffffffff87168152602081018690526001600160801b038316918101919091529091507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8906060015b60405180910390a150505050565b60006112006010611f4e565b905090565b600080611210611d4d565b600954600090611224906010906064611f78565b905080516000036112b9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa15801561128c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b0919061324a565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401611308919061329e565b60408051808303816000875af1158015611326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134a919061324a565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd4828285604051611381939291906132b1565b60405180910390a19093509150509091565b6000546001600160a01b031633146113be576040516311a8a1bb60e31b815260040160405180910390fd5b600b548110156113e15760405163e28adcd160e01b815260040160405180910390fd5b600a548103611403576040516346fee83f60e11b815260040160405180910390fd5b600a546040805183815260208101929092527fff74184d965d306545ebeb3283c4d7a39f453a9c0ea539db6437b33ceb9c5125910160405180910390a1600a55565b6000546001600160a01b03163314611470576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19166001179055517f2bf05609716bc4b090ad0e99b47b91881c7517771259c625df05db7e9d8c81819190a250565b6000546001600160a01b031633146114e7576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611505575060025415155b15611523576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361155157604051634a2fb73f60e11b815260040160405180910390fd5b61155a816122fa565b50565b6000546001600160a01b03163314611588576040516311a8a1bb60e31b815260040160405180910390fd5b6115928282612348565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe708282600460066040516115c9949392919061349f565b60405180910390a15050565b6001546001600160a01b03163314611600576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261161291906131dd565b11611630576040516324e0285f60e21b815260040160405180910390fd5b600154610f1d906001600160a01b0316612534565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b59190613206565b6116d15760405162461bcd60e51b81526004016109f190613228565b600d5460ff166116f4576040516383a941c560e01b815260040160405180910390fd5b600d805460ff19169055600160145560405133907f714b2723706f07835c1a61e679dc639438acf1e1d0bbae60d17e5a246a754d6e90600090a2565b6000546001600160a01b0316331461175b576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b036101009091048116908216036117be5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109f1565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610ca2565b6000546001600160a01b0316331461183f576040516311a8a1bb60e31b815260040160405180910390fd5b600d5460ff16156118665760405160016238010d60e21b0319815260040160405180910390fd5b60105461187e906001906001600160801b03166134ec565b601060000160106101000a8154816001600160801b0302191690836001600160801b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611905573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611929919061311e565b600c55600d805460ff191660011790556040517f46b91c03184b9c3d3422333019c7e56a3e8940f285463e754a526110287bd52190600090a1565b8281146119a65760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b60448201526064016109f1565b60055484846040516020016119bc9291906130e1565b6040516020818303038152906040528051906020012014611a0a5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016109f1565b6007548282604051602001611a20929190613191565b6040516020818303038152906040528051906020012014611a715760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016109f1565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611ac3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ae79190613206565b611b035760405162461bcd60e51b81526004016109f190613228565b6000611b0e82612599565b60016014556040519091507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb906115c990849084906004906006903390613513565b600d5460ff16611b73576040516383a941c560e01b815260040160405180910390fd5b6014546000198101611b9857604051636fcbb76f60e11b815260040160405180910390fd5b60408051602080820186905281830185905282518083038401815260609092019092528051910120818114611be05760405163ae4fc77d60e01b815260040160405180910390fd5b43831115611c015760405163bd24f2dd60e01b815260040160405180910390fd5b600f84905560016014556040518481527f2dc49dedbe4da61c874d43fd3b63b0ed21ba78b75c83feca2f810ae13ada0af4906020016111e6565b60019055565b60035460ff16610f1d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109f1565b600081815260038301602052604090205460ff1615611cdd5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016109f1565b6000908152600390910160205260409020805460ff19166001179055565b611d03611c41565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff1615610f1d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109f1565b6001600f55600080611da3611205565b91509150600c548111611dc95760405163358cb6c560e11b815260040160405180910390fd5b611dd7828888888888612810565b600554604080518481526020810184905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a150505050505050565b600f546000198101611e4857604051632d5ba65d60e21b815260040160405180910390fd5b6001600f55611e5b818787878787612810565b807fd32362ae18082b069b1c28f165d23a6e168d95838085797b035eb944aae36072600554604051611e8f91815260200190565b60405180910390a2505050505050565b611ea7611d4d565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d303390565b815460009043908490601090611f0190600160801b90046001600160801b0316613569565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b820481169116611f708282612a49565b949350505050565b82546060906001600160801b0380821691600160801b90041681811015611fb15750506040805160008152602081019091529050610edb565b816001600160801b0316600003611ffa5760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016109f1565b6000846001600160801b0316116120455760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016109f1565b60006001612053868561358f565b61205d91906134ec565b9050806001600160801b0316826001600160801b0316111561207d578091505b50600061208a86436131dd565b905060005b826001600160801b0316846001600160801b0316116120e1576001600160801b03831660009081526002890160205260409020548281116120d45760019150506120e1565b506000199092019161208f565b806121015750506040805160008152602081019091529250610edb915050565b60008461210f85600161358f565b61211991906134ec565b6001600160801b031667ffffffffffffffff81111561213a5761213a612d3b565b604051908082528060200260200182016040528015612163578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b03161161221f576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff166121e057808484815181106121c9576121c96131f0565b6020026020010181815250508260010192506121e7565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f019091528220919091559096019561216a565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b5560008190036122595782975050505050505050610edb565b60008267ffffffffffffffff81111561227457612274612d3b565b60405190808252806020026020018201604052801561229d578160200160208202803683370190505b50905060005b838110156122ea578481815181106122bd576122bd6131f0565b60200260200101518282815181106122d7576122d76131f0565b60209081029190910101526001016122a3565b509750610edb9650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff82166000908152600860205260409020541561239b5760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b60448201526064016109f1565b6001600160a01b0381166123de5760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016109f1565b6004546101f4116124315760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016109f1565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b031990911617905591546000918252602092909252604090208190556124e8612a73565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6000806125a583610e7e565b90506000600682815481106125bc576125bc6131f0565b6000918252602090912001546001600160a01b03169050806126145760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016109f1565b600454600090612626906001906131dd565b90508083101561273f57600060048281548110612645576126456131f0565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508060048581548110612681576126816131f0565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550600682815481106126c7576126c76131f0565b600091825260209091200154600680546001600160a01b0390921691869081106126f3576126f36131f0565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905561272784600161310b565b63ffffffff9091166000908152600860205260409020555b6004805480612750576127506135af565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a02191690559055600680548061278f5761278f6135af565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff871682526008905260408120556127cf612a73565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b600e5486036128525760405162461bcd60e51b815260206004820152600e60248201526d1c99591d5b99185b9d081c9bdbdd60921b60448201526064016109f1565b600e8690553460005b63ffffffff8116861115612a3f5786868263ffffffff16818110612881576128816131f0565b90506020020160208101906128969190612c96565b6001600160a01b03166348e6fa2386868463ffffffff168181106128bc576128bc6131f0565b905060200201358a6040516020016128d691815260200190565b604051602081830303815290604052868563ffffffff16815181106128fd576128fd6131f0565b60200260200101516040518463ffffffff1660e01b815260040161292292919061360b565b6000604051808303818588803b15801561293b57600080fd5b505af19350505050801561294d575060015b612a0a577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048263ffffffff168154811061298b5761298b6131f0565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1688888463ffffffff168181106129c9576129c96131f0565b90506020020160208101906129de9190612c96565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a1612a37565b84848263ffffffff16818110612a2257612a226131f0565b9050602002013582612a3491906131dd565b91505b60010161285b565b5050505050505050565b600081612a5784600161358f565b612a6191906134ec565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015612aed57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411612ab05790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015612b4c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612b2e575b5050505050905081604051602001612b649190613630565b60408051601f19818403018152908290528051602091820120600555612b8c9183910161367a565b60408051601f1981840301815291905280516020909101206007555050565b60008083601f840112612bbd57600080fd5b50813567ffffffffffffffff811115612bd557600080fd5b6020830191508360208260051b8501011115612bf057600080fd5b9250929050565b60008060008060008060808789031215612c1057600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115612c3657600080fd5b612c428a838b01612bab565b90965094506060890135915080821115612c5b57600080fd5b50612c6889828a01612bab565b979a9699509497509295939492505050565b80356001600160a01b0381168114612c9157600080fd5b919050565b600060208284031215612ca857600080fd5b610edb82612c7a565b600060208284031215612cc357600080fd5b5035919050565b803563ffffffff81168114612c9157600080fd5b600060208284031215612cf057600080fd5b610edb82612cca565b60008060208385031215612d0c57600080fd5b823567ffffffffffffffff811115612d2357600080fd5b612d2f85828601612bab565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d7a57612d7a612d3b565b604052919050565b6000601f8381840112612d9457600080fd5b8235602067ffffffffffffffff80831115612db157612db1612d3b565b8260051b612dc0838201612d51565b9384528681018301938381019089861115612dda57600080fd5b84890192505b85831015612e6a57823584811115612df85760008081fd5b8901603f81018b13612e0a5760008081fd5b85810135604086821115612e2057612e20612d3b565b612e31828b01601f19168901612d51565b8281528d82848601011115612e465760008081fd5b828285018a8301376000928101890192909252508352509184019190840190612de0565b9998505050505050505050565b600080600080600060608688031215612e8f57600080fd5b853567ffffffffffffffff80821115612ea757600080fd5b612eb389838a01612bab565b90975095506020880135915080821115612ecc57600080fd5b612ed889838a01612bab565b90955093506040880135915080821115612ef157600080fd5b50612efe88828901612d82565b9150509295509295909350565b600080600080600080600060a0888a031215612f2657600080fd5b873567ffffffffffffffff80821115612f3e57600080fd5b612f4a8b838c01612bab565b909950975060208a0135915080821115612f6357600080fd5b612f6f8b838c01612bab565b909750955060408a0135915080821115612f8857600080fd5b50612f958a828b01612d82565b935050606088013591506080880135905092959891949750929550565b60008060408385031215612fc557600080fd5b612fce83612cca565b946020939093013593505050565b60008060408385031215612fef57600080fd5b612ff883612cca565b915061300660208401612c7a565b90509250929050565b6000806000806040858703121561302557600080fd5b843567ffffffffffffffff8082111561303d57600080fd5b61304988838901612bab565b9096509450602087013591508082111561306257600080fd5b5061306f87828801612bab565b95989497509550505050565b6000806040838503121561308e57600080fd5b50508035926020909101359150565b8183526000602080850194508260005b858110156130d65763ffffffff6130c383612cca565b16875295820195908201906001016130ad565b509495945050505050565b602081526000611f7060208301848661309d565b634e487b7160e01b600052601160045260246000fd5b80820180821115612a6d57612a6d6130f5565b60006020828403121561313057600080fd5b5051919050565b858152606060208201819052810184905260006001600160fb1b0385111561315e57600080fd5b8460051b80876080850137820182810360809081016040850152613185908201858761309d565b98975050505050505050565b60208082528181018390526000908460408401835b868110156131d2576001600160a01b036131bf84612c7a565b16825291830191908301906001016131a6565b509695505050505050565b81810381811115612a6d57612a6d6130f5565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561321857600080fd5b81518015158114610edb57600080fd5b60208082526008908201526710bbb0ba31b432b960c11b604082015260600190565b6000806040838503121561325d57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b838110156130d657815187529582019590820190600101613282565b602081526000610edb602083018461326e565b8381528260208201526060604082015260006132d0606083018461326e565b95945050505050565b805480835260008281526020808220940193909190825b8260078201101561336857815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501946001909101906008016132f0565b905490828110156133865763ffffffff821686526020909501946001015b828110156133a657602082901c63ffffffff168652602095909501946001015b828110156133c55763ffffffff604083901c1686526020909501946001015b828110156133e45763ffffffff606083901c1686526020909501946001015b828110156134035763ffffffff608083901c1686526020909501946001015b828110156134225763ffffffff60a083901c1686526020909501946001015b828110156134415763ffffffff60c083901c1686526020909501946001015b828110156134575760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156130d65781546001600160a01b03168752958201956001918201910161347a565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906134cf908301856132d9565b82810360608401526134e18185613461565b979650505050505050565b6001600160801b0382811682821603908082111561350c5761350c6130f5565b5092915050565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261354160a08401876132d9565b83810360608501526135538187613461565b9250508084166080840152509695505050505050565b60006001600160801b03808316818103613585576135856130f5565b6001019392505050565b6001600160801b0381811683821601908082111561350c5761350c6130f5565b634e487b7160e01b600052603160045260246000fd5b6000815180845260005b818110156135eb576020818501810151868301820152016135cf565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061361e60408301856135c5565b82810360208401526132d081856135c5565b6020808252825182820181905260009190848201906040850190845b8181101561366e57835163ffffffff168352928401929184019160010161364c565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561366e5783516001600160a01b03168352928401929184019160010161369656fea26469706673582212206f6c0d2ea1d2c4525fed01e37e825c2bdfd2e022378209bc2afac564c266e96464736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
