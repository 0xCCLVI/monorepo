/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager__renounceOwnership_prohibited",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_activateOptimisticMode__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_aggregate__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_checkDomains__InvalidDomains",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_constructor__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidAggregateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidInputHash",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_onlyOptimisticMode__SlowModeOn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RootManager_onlyProposer__NotWhitelistedProposer",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_optimisticPropagate__ForbiddenOptimisticRoot",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "RootManager_proposeAggregateRoot__InvalidSnapshotId",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_proposeAggregateRoot__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_sendRootToHub__NoMessageSent",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__SameDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setMinDisputeBlocks__SameMinDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_slowPropagate__OldAggregateRoot",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOfDispute",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "baseRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "snapshotsRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "AggregateRootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "MinDisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OptimisticModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "OptimisticRootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
    ],
    name: "ProposedRootFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "SlowModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FINALIZED_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateOptimisticMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateSlowMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "addProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedProposers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalizeAndPropagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizedOptimisticAggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSnapshotDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "_snapshotDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCountBeforeOpMode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDisputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_snapshotId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_snapshotsRoots",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedAggregateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "removeProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    name: "setDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
    ],
    name: "setMinDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600f8190556014553480156200001b57600080fd5b5060405162003b2238038062003b228339810160408190526200003e91620001aa565b600380546001600160a81b0319166101006001600160a01b03861602179055620000683362000122565b818110156200008a57604051637a61d42360e11b815260040160405180910390fd5b6001600160a01b038416620000d45760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0384166080526009859055600d8054600160ff19909116179055600b829055600a81905562000117601062000187602090811b62001c6817901c565b5050505050620001fe565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b0381168114620001a557600080fd5b919050565b600080600080600060a08688031215620001c357600080fd5b85519450620001d5602087016200018d565b9350620001e5604087016200018d565b6060870151608090970151959894975095949392505050565b6080516138ec620002366000396000818161073a01528181610b0f0152818161125f015281816112ec01526118d601526138ec6000f3fe6080604052600436106103355760003560e01c80638da5cb5b116101ab578063c8ef89de116100f7578063d3c805b711610095578063e6f1208d1161006f578063e6f1208d14610957578063e9812d7114610977578063f4b6e41014610997578063f715589a146109ad57600080fd5b8063d3c805b71461090c578063d7e8d6ae14610921578063db0f01691461093757600080fd5b8063d1851c92116100d1578063d1851c921461089a578063d232c220146108b8578063d2a3cc71146108d7578063d3c54fe5146108f757600080fd5b8063c8ef89de14610859578063cbfa20211461086f578063ceb3454e1461088457600080fd5b8063a941f3f311610164578063b03cd4181161013e578063b03cd418146107e4578063b1f8100d14610804578063b904670f14610824578063c5b350df1461084457600080fd5b8063a941f3f314610781578063aa0d60a3146107a1578063ad9c0c2e146107ce57600080fd5b80638da5cb5b146106ab5780638e7d93fa146106c9578063909907cb146106e9578063957908d1146106fe578063a01892a514610728578063a792c29b1461075c57600080fd5b8063412e12db1161028557806366cf8fab116102235780637bc24d99116101fd5780637bc24d99146106155780637d434e911461062b5780637d5343081461064b5780638456cb591461069657600080fd5b806366cf8fab146105b55780636a42b8f8146105ea578063715018a61461060057600080fd5b80634a2db1da1161025f5780634a2db1da1461053e5780635c975abb1461056e5780635d3087611461058657806360caf7a01461059b57600080fd5b8063412e12db14610502578063492a96f414610515578063498c2c2e1461052857600080fd5b806320f62eda116102f257806327186c6a116102cc57806327186c6a146104985780633c4baaf8146104b85780633cf52ffb146104d85780633f4ba83a146104ed57600080fd5b806320f62eda1461041d57806324ec5d0514610433578063263ef3541461047857600080fd5b8063089200391461033a57806309d632d31461035c5780630f8ef4ee1461037c57806313ede1a11461039c57806317702174146103d95780631eeaabea146103fd575b600080fd5b34801561034657600080fd5b5061035a610355366004612df2565b6109da565b005b34801561036857600080fd5b5061035a610377366004612e91565b610bdb565b34801561038857600080fd5b5061035a610397366004612eac565b610c4f565b3480156103a857600080fd5b506103bc6103b7366004612eac565b610cc4565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156103e557600080fd5b506103ef600c5481565b6040519081526020016103d0565b34801561040957600080fd5b5061035a610418366004612eac565b610cee565b34801561042957600080fd5b506103ef600a5481565b34801561043f57600080fd5b5061046861044e366004612ed9565b63ffffffff16600090815260086020526040902054151590565b60405190151581526020016103d0565b34801561048457600080fd5b5061035a610493366004612eac565b610d9a565b3480156104a457600080fd5b5061035a6104b3366004612ef4565b610e28565b3480156104c457600080fd5b506103ef6104d3366004612ed9565b610e93565b3480156104e457600080fd5b506002546103ef565b3480156104f957600080fd5b5061035a610ef7565b61035a610510366004613072565b610f34565b61035a610523366004613106565b610fc5565b34801561053457600080fd5b506103ef60075481565b34801561054a57600080fd5b50610468610559366004612e91565b60156020526000908152604090205460ff1681565b34801561057a57600080fd5b5060035460ff16610468565b34801561059257600080fd5b506103ef600181565b3480156105a757600080fd5b50600d546104689060ff1681565b3480156105c157600080fd5b506105d56105d0366004612eac565b610fed565b60405163ffffffff90911681526020016103d0565b3480156105f657600080fd5b5062093a806103ef565b34801561060c57600080fd5b5061035a611027565b34801561062157600080fd5b506103ef60055481565b34801561063757600080fd5b506103bc610646366004612ed9565b61106b565b34801561065757600080fd5b50601054610676906001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016103d0565b3480156106a257600080fd5b5061035a6110a3565b3480156106b757600080fd5b506000546001600160a01b03166103bc565b3480156106d557600080fd5b5061035a6106e43660046131ad565b61113f565b3480156106f557600080fd5b506103ef611222565b34801561070a57600080fd5b50610713611233565b604080519283526020830191909152016103d0565b34801561073457600080fd5b506103bc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561076857600080fd5b506003546103bc9061010090046001600160a01b031681565b34801561078d57600080fd5b5061035a61079c366004612eac565b6113c1565b3480156107ad57600080fd5b506107b6606481565b6040516001600160801b0390911681526020016103d0565b3480156107da57600080fd5b506103ef60095481565b3480156107f057600080fd5b5061035a6107ff366004612e91565b611472565b34801561081057600080fd5b5061035a61081f366004612e91565b6114e9565b34801561083057600080fd5b5061035a61083f3660046131d7565b61158a565b34801561085057600080fd5b5061035a611602565b34801561086557600080fd5b506103ef6101f481565b34801561087b57600080fd5b5061035a611672565b34801561089057600080fd5b506103ef60145481565b3480156108a657600080fd5b506001546001600160a01b03166103bc565b3480156108c457600080fd5b506000546001600160a01b031615610468565b3480156108e357600080fd5b5061035a6108f2366004612e91565b61175d565b34801561090357600080fd5b5061035a611841565b34801561091857600080fd5b506107086103ef565b34801561092d57600080fd5b506103ef600f5481565b34801561094357600080fd5b5061035a61095236600461320a565b611991565b34801561096357600080fd5b5061035a610972366004612ed9565b611aa4565b34801561098357600080fd5b5061035a610992366004613276565b611b7d565b3480156109a357600080fd5b506103ef600b5481565b3480156109b957600080fd5b506103ef6109c8366004612ed9565b600e6020526000908152604090205481565b3360009081526015602052604090205460ff16610a1157604051636d5595ef60e11b81523360048201526024015b60405180910390fd5b600d5460ff16610a34576040516383a941c560e01b815260040160405180910390fd5b81816005548282604051602001610a4c9291906132dc565b6040516020818303038152906040528051906020012014610a805760405163c38e7eb160e01b815260040160405180910390fd5b61070842048814610aa75760405163bac5a76560e01b815260048101899052602401610a08565b601454600114610aca57604051631d026cf160e01b815260040160405180910390fd5b6000600a5443610ada9190613306565b60408051602081018b9052908101829052909150606001604051602081830303815290604052805190602001206014819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8f9190613319565b888a7fa3ef5f102c5d4b3958ebddd5fc15de4c4da0bd714d6da2edab94dda2d00e220e848b8b8b8b604051610bc8959493929190613332565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610c06576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19169055517fbab6b194452fd4fa50e0ca09bf0f89976da30a2b92fdf91372ad1a176d81e3289190a250565b6000546001600160a01b03163314610c7a576040516311a8a1bb60e31b815260040160405180910390fd5b610c82611c6e565b610c8d601082611cb7565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b60068181548110610cd457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610d19576040516311a8a1bb60e31b815260040160405180910390fd5b6009548103610d595760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606401610a08565b60095460408051918252602082018390527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6000546001600160a01b03163314610dc5576040516311a8a1bb60e31b815260040160405180910390fd5b600b548103610de757604051632d1150e160e11b815260040160405180910390fd5b600b5460408051918252602082018390527fdfad87ee418f8b636836b030634c8040055c9a5f641899df5a5d1d3c554fee47910160405180910390a1600b55565b6007548282604051602001610e3e92919061338c565b6040516020818303038152906040528051906020012014610e8f5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610a08565b5050565b63ffffffff8116600090815260086020526040812054808203610ee55760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b6044820152606401610a08565b610ef06001826133d8565b9392505050565b6000546001600160a01b03163314610f22576040516311a8a1bb60e31b815260040160405180910390fd5b610f2a611c6e565b610f32611d28565b565b610f3c611d7a565b610f468585610e28565b838281148015610f565750808251145b610f945760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b6044820152606401610a08565b600d5460ff16610fb057610fab8686868686611dc0565b610fbd565b610fbd8686868686611e50565b505050505050565b610fcd611d7a565b610fd78282611b7d565b610fe48787878787610f34565b50505050505050565b60048181548110610ffd57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314611052576040516311a8a1bb60e31b815260040160405180910390fd5b6040516383c7055f60e01b815260040160405180910390fd5b6000600661107883610e93565b81548110611088576110886133eb565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156110ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111139190613401565b61112f5760405162461bcd60e51b8152600401610a0890613423565b611137611d7a565b610f32611ecc565b611147611d7a565b81336111528261106b565b6001600160a01b0316146111955760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610a08565b600d5460ff16156111b95760405163515f45f160e11b815260040160405180910390fd5b60006111c6601084611f09565b6040805163ffffffff87168152602081018690526001600160801b038316918101919091529091507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8906060015b60405180910390a150505050565b600061122e6010611f7b565b905090565b60008061123e611d7a565b600954600090611252906010906064611fa5565b905080516000036112e7577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa1580156112ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112de9190613445565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b81526004016113369190613499565b60408051808303816000875af1158015611354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113789190613445565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd48282856040516113af939291906134ac565b60405180910390a19093509150509091565b6000546001600160a01b031633146113ec576040516311a8a1bb60e31b815260040160405180910390fd5b600b5481101561140f5760405163e28adcd160e01b815260040160405180910390fd5b600a548103611431576040516346fee83f60e11b815260040160405180910390fd5b600a5460408051918252602082018390527fff74184d965d306545ebeb3283c4d7a39f453a9c0ea539db6437b33ceb9c5125910160405180910390a1600a55565b6000546001600160a01b0316331461149d576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19166001179055517f2bf05609716bc4b090ad0e99b47b91881c7517771259c625df05db7e9d8c81819190a250565b6000546001600160a01b03163314611514576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611532575060025415155b15611550576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361157e57604051634a2fb73f60e11b815260040160405180910390fd5b61158781612326565b50565b6000546001600160a01b031633146115b5576040516311a8a1bb60e31b815260040160405180910390fd5b6115bf8282612374565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe708282600460066040516115f6949392919061369a565b60405180910390a15050565b6001546001600160a01b0316331461162d576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261163f91906133d8565b1161165d576040516324e0285f60e21b815260040160405180910390fd5b600154610f32906001600160a01b0316612560565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190613401565b6116fe5760405162461bcd60e51b8152600401610a0890613423565b600d5460ff16611721576040516383a941c560e01b815260040160405180910390fd5b600d805460ff19169055600160145560405133907f714b2723706f07835c1a61e679dc639438acf1e1d0bbae60d17e5a246a754d6e90600090a2565b6000546001600160a01b03163314611788576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b036101009091048116908216036117eb5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a08565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610cb9565b6000546001600160a01b0316331461186c576040516311a8a1bb60e31b815260040160405180910390fd5b600d5460ff16156118935760405160016238010d60e21b0319815260040160405180910390fd5b6010546118ab906001906001600160801b03166136e7565b601060000160106101000a8154816001600160801b0302191690836001600160801b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611932573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119569190613319565b600c55600d805460ff191660011790556040517f46b91c03184b9c3d3422333019c7e56a3e8940f285463e754a526110287bd52190600090a1565b8281146119d35760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b6044820152606401610a08565b60055484846040516020016119e99291906132dc565b6040516020818303038152906040528051906020012014611a375760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b6044820152606401610a08565b6007548282604051602001611a4d92919061338c565b6040516020818303038152906040528051906020012014611a9e5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610a08565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611af0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b149190613401565b611b305760405162461bcd60e51b8152600401610a0890613423565b6000611b3b826125c5565b60016014556040519091507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb906115f69084908490600490600690339061370e565b600d5460ff16611ba0576040516383a941c560e01b815260040160405180910390fd5b6014546000198101611bc557604051636fcbb76f60e11b815260040160405180910390fd5b60408051602080820186905281830185905282518083038401815260609092019092528051910120818114611c0d5760405163ae4fc77d60e01b815260040160405180910390fd5b43831115611c2e5760405163bd24f2dd60e01b815260040160405180910390fd5b600f84905560016014556040518481527f2dc49dedbe4da61c874d43fd3b63b0ed21ba78b75c83feca2f810ae13ada0af490602001611214565b60019055565b60035460ff16610f325760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a08565b600081815260038301602052604090205460ff1615611d0a5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b6044820152606401610a08565b6000908152600390910160205260409020805460ff19166001179055565b611d30611c6e565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff1615610f325760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a08565b6001600f55600080611dd0611233565b91509150600c548111611df65760405163358cb6c560e11b815260040160405180910390fd5b611e0482888888888861283c565b600554604080518481526020810184905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a150505050505050565b600f546000198101611e7557604051632d5ba65d60e21b815260040160405180910390fd5b6001600f55611e8881878787878761283c565b807fd32362ae18082b069b1c28f165d23a6e168d95838085797b035eb944aae36072600554604051611ebc91815260200190565b60405180910390a2505050505050565b611ed4611d7a565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d5d3390565b815460009043908490601090611f2e90600160801b90046001600160801b0316613764565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b820481169116611f9d8282612b26565b949350505050565b82546060906001600160801b0380821691600160801b90041681811015611fde5750506040805160008152602081019091529050610ef0565b816001600160801b03166000036120275760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b6044820152606401610a08565b6000846001600160801b0316116120725760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b6044820152606401610a08565b60006001612080868561378a565b61208a91906136e7565b9050806001600160801b0316826001600160801b031611156120aa578091505b5060006120b786436133d8565b905060005b826001600160801b0316846001600160801b03161161210e576001600160801b038316600090815260028901602052604090205482811161210157600191505061210e565b50600019909201916120bc565b8061212e5750506040805160008152602081019091529250610ef0915050565b60008461213c85600161378a565b61214691906136e7565b6001600160801b031667ffffffffffffffff81111561216757612167612f36565b604051908082528060200260200182016040528015612190578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b03161161224f576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff1661220d57808484815181106121f6576121f66133eb565b602002602001018181525050826001019250612217565b8161221757600191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f0190915282209190915590960195612197565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b55806122855782975050505050505050610ef0565b60008267ffffffffffffffff8111156122a0576122a0612f36565b6040519080825280602002602001820160405280156122c9578160200160208202803683370190505b50905060005b83811015612316578481815181106122e9576122e96133eb565b6020026020010151828281518110612303576123036133eb565b60209081029190910101526001016122cf565b509750610ef09650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156123c75760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b6044820152606401610a08565b6001600160a01b03811661240a5760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610a08565b6004546101f41161245d5760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e6465786572206174206361706163697479000000000000006044820152606401610a08565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055612514612b50565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b6000806125d183610e93565b90506000600682815481106125e8576125e86133eb565b6000918252602090912001546001600160a01b03169050806126405760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b6044820152606401610a08565b600454600090612652906001906133d8565b90508083101561276b57600060048281548110612671576126716133eb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16905080600485815481106126ad576126ad6133eb565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550600682815481106126f3576126f36133eb565b600091825260209091200154600680546001600160a01b03909216918690811061271f5761271f6133eb565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055612753846001613306565b63ffffffff9091166000908152600860205260409020555b600480548061277c5761277c6137aa565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a0219169055905560068054806127bb576127bb6137aa565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff871682526008905260408120556127fb612b50565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b346000805b63ffffffff8116871115612aed576000600e600060048463ffffffff168154811061286e5761286e6133eb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000205490508981036128c15750600101612841565b88888363ffffffff168181106128d9576128d96133eb565b90506020020160208101906128ee9190612e91565b6001600160a01b03166348e6fa2388888563ffffffff16818110612914576129146133eb565b905060200201358c60405160200161292e91815260200190565b604051602081830303815290604052888663ffffffff1681518110612955576129556133eb565b60200260200101516040518463ffffffff1660e01b815260040161297a929190613806565b6000604051808303818588803b15801561299357600080fd5b505af1935050505080156129a5575060015b612a62577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048363ffffffff16815481106129e3576129e36133eb565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168a8a8563ffffffff16818110612a2157612a216133eb565b9050602002016020810190612a369190612e91565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a1612ae4565b86868363ffffffff16818110612a7a57612a7a6133eb565b9050602002013584612a8c91906133d8565b93506001925089600e600060048563ffffffff1681548110612ab057612ab06133eb565b6000918252602080832060088304015460079092166004026101000a90910463ffffffff1683528201929092526040019020555b50600101612841565b5080612b0c57604051634f05605360e11b815260040160405180910390fd5b8115612b1c57612b1c3383612c88565b5050505050505050565b600081612b3484600161378a565b612b3e91906136e7565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015612bca57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411612b8d5790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015612c2957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612c0b575b5050505050905081604051602001612c41919061382b565b60408051601f19818403018152908290528051602091820120600555612c6991839101613875565b60408051601f1981840301815291905280516020909101206007555050565b80471015612cd85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a08565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d25576040519150601f19603f3d011682016040523d82523d6000602084013e612d2a565b606091505b5050905080612da15760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a08565b505050565b60008083601f840112612db857600080fd5b50813567ffffffffffffffff811115612dd057600080fd5b6020830191508360208260051b8501011115612deb57600080fd5b9250929050565b60008060008060008060808789031215612e0b57600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115612e3157600080fd5b612e3d8a838b01612da6565b90965094506060890135915080821115612e5657600080fd5b50612e6389828a01612da6565b979a9699509497509295939492505050565b80356001600160a01b0381168114612e8c57600080fd5b919050565b600060208284031215612ea357600080fd5b610ef082612e75565b600060208284031215612ebe57600080fd5b5035919050565b803563ffffffff81168114612e8c57600080fd5b600060208284031215612eeb57600080fd5b610ef082612ec5565b60008060208385031215612f0757600080fd5b823567ffffffffffffffff811115612f1e57600080fd5b612f2a85828601612da6565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612f7557612f75612f36565b604052919050565b6000601f8381840112612f8f57600080fd5b8235602067ffffffffffffffff80831115612fac57612fac612f36565b8260051b612fbb838201612f4c565b9384528681018301938381019089861115612fd557600080fd5b84890192505b8583101561306557823584811115612ff35760008081fd5b8901603f81018b136130055760008081fd5b8581013560408682111561301b5761301b612f36565b61302c828b01601f19168901612f4c565b8281528d828486010111156130415760008081fd5b828285018a8301376000928101890192909252508352509184019190840190612fdb565b9998505050505050505050565b60008060008060006060868803121561308a57600080fd5b853567ffffffffffffffff808211156130a257600080fd5b6130ae89838a01612da6565b909750955060208801359150808211156130c757600080fd5b6130d389838a01612da6565b909550935060408801359150808211156130ec57600080fd5b506130f988828901612f7d565b9150509295509295909350565b600080600080600080600060a0888a03121561312157600080fd5b873567ffffffffffffffff8082111561313957600080fd5b6131458b838c01612da6565b909950975060208a013591508082111561315e57600080fd5b61316a8b838c01612da6565b909750955060408a013591508082111561318357600080fd5b506131908a828b01612f7d565b935050606088013591506080880135905092959891949750929550565b600080604083850312156131c057600080fd5b6131c983612ec5565b946020939093013593505050565b600080604083850312156131ea57600080fd5b6131f383612ec5565b915061320160208401612e75565b90509250929050565b6000806000806040858703121561322057600080fd5b843567ffffffffffffffff8082111561323857600080fd5b61324488838901612da6565b9096509450602087013591508082111561325d57600080fd5b5061326a87828801612da6565b95989497509550505050565b6000806040838503121561328957600080fd5b50508035926020909101359150565b8183526000602080850194508260005b858110156132d15763ffffffff6132be83612ec5565b16875295820195908201906001016132a8565b509495945050505050565b602081526000611f9d602083018486613298565b634e487b7160e01b600052601160045260246000fd5b80820180821115612b4a57612b4a6132f0565b60006020828403121561332b57600080fd5b5051919050565b858152606060208201819052810184905260006001600160fb1b0385111561335957600080fd5b8460051b808760808501378201828103608090810160408501526133809082018587613298565b98975050505050505050565b60208082528181018390526000908460408401835b868110156133cd576001600160a01b036133ba84612e75565b16825291830191908301906001016133a1565b509695505050505050565b81810381811115612b4a57612b4a6132f0565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561341357600080fd5b81518015158114610ef057600080fd5b60208082526008908201526710bbb0ba31b432b960c11b604082015260600190565b6000806040838503121561345857600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b838110156132d15781518752958201959082019060010161347d565b602081526000610ef06020830184613469565b8381528260208201526060604082015260006134cb6060830184613469565b95945050505050565b805480835260008281526020808220940193909190825b8260078201101561356357815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501946001909101906008016134eb565b905490828110156135815763ffffffff821686526020909501946001015b828110156135a157602082901c63ffffffff168652602095909501946001015b828110156135c05763ffffffff604083901c1686526020909501946001015b828110156135df5763ffffffff606083901c1686526020909501946001015b828110156135fe5763ffffffff608083901c1686526020909501946001015b8281101561361d5763ffffffff60a083901c1686526020909501946001015b8281101561363c5763ffffffff60c083901c1686526020909501946001015b828110156136525760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156132d15781546001600160a01b031687529582019560019182019101613675565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906136ca908301856134d4565b82810360608401526136dc818561365c565b979650505050505050565b6001600160801b03828116828216039080821115613707576137076132f0565b5092915050565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261373c60a08401876134d4565b838103606085015261374e818761365c565b9250508084166080840152509695505050505050565b60006001600160801b03808316818103613780576137806132f0565b6001019392505050565b6001600160801b03818116838216019080821115613707576137076132f0565b634e487b7160e01b600052603160045260246000fd5b6000815180845260005b818110156137e6576020818501810151868301820152016137ca565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061381960408301856137c0565b82810360208401526134cb81856137c0565b6020808252825182820181905260009190848201906040850190845b8181101561386957835163ffffffff1683529284019291840191600101613847565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156138695783516001600160a01b03168352928401929184019160010161389156fea2646970667358221220f68767a2e52f5edadb3e349c93de77f148f820f71a0ccd7e37a7638066b83b6f64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
