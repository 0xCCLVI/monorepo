/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "RootAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregate",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "propagate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161125338038061125383398101604081905261002f91610129565b600380546001600160a01b0319166001600160a01b038316179055610053336100ae565b6001600160a01b03821661009c5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b506001600160a01b031660805261015c565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461012457600080fd5b919050565b6000806040838503121561013c57600080fd5b6101458361010d565b91506101536020840161010d565b90509250929050565b6080516110ce61018560003960008181610194015281816103db01526106d901526110ce6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b904670f11610097578063d1851c9211610066578063d1851c9214610215578063d232c22014610226578063d2a3cc7114610242578063e6f1208d1461025557600080fd5b8063b904670f146101c9578063c14bad4a146101dc578063c546091214610205578063c5b350df1461020d57600080fd5b80638da5cb5b116100d35780638da5cb5b146101575780638e7d93fa1461017c578063a01892a51461018f578063b1f8100d146101b657600080fd5b80633cf52ffb1461010557806366cf8fab1461011c5780636a42b8f814610144578063715018a61461014d575b600080fd5b6002545b6040519081526020015b60405180910390f35b61012f61012a366004610cfc565b610268565b60405163ffffffff9091168152602001610113565b62093a80610109565b6101556102a2565b005b6000546001600160a01b03165b6040516001600160a01b039091168152602001610113565b61015561018a366004610d2e565b610361565b6101647f000000000000000000000000000000000000000000000000000000000000000081565b6101556101c4366004610d6f565b6104ac565b6101556101d7366004610d91565b610554565b6101646101ea366004610dc4565b6004602052600090815260409020546001600160a01b031681565b6101556106d5565b61015561087d565b6001546001600160a01b0316610164565b6000546040516001600160a01b03909116158152602001610113565b610155610250366004610d6f565b6108d8565b610155610263366004610dc4565b6109a0565b6005818154811061027857600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b031633146102cd576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036102f057604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426103029190610df5565b11610320576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561034a576040516323295ef960e01b815260040160405180910390fd5b60015461035f906001600160a01b0316610c4f565b565b63ffffffff821660009081526004602052604090205482906001600160a01b031633146103c25760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064015b60405180910390fd5b604051632d287e4360e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f9190610e0c565b91507ff5832b5d15f2d906d01b871e48b0d1f27d8f282a7e0771c428b55bfeb409fa0590508484610481600185610df5565b6040805163ffffffff909416845260208401929092529082015260600160405180910390a150505050565b6000546001600160a01b031633146104d7576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156104fc57506001600160a01b03811615155b1561051a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361054857604051634a2fb73f60e11b815260040160405180910390fd5b61055181610cae565b50565b6000546001600160a01b0316331461057f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166105c25760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016103b9565b63ffffffff82166000908152600460205260409020546001600160a01b0316156106175760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064016103b9565b63ffffffff828116600081815260046020818152604080842080546001600160a01b0319166001600160a01b0389169081179091556005805460018101825595527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db06008860401805460079096169094026101000a968702199094169585029590951790915583519283528201527fffe1880f946ecead1a35ac14f99c782cacaa440f95493896794dabacf8f95c5491015b60405180910390a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190610e30565b60055490915060005b818163ffffffff16101561084a5760006004600060058463ffffffff168154811061078f5761078f610e49565b6000918252602080832060088304015460079092166004026101000a90910463ffffffff16835282810193909352604091820190205481519283018790526001600160a01b0316925082916382646a5891016040516020818303038152906040526040518263ffffffff1660e01b815260040161080c9190610e5f565b600060405180830381600087803b15801561082657600080fd5b505af115801561083a573d6000803e3d6000fd5b5050505081600101915050610762565b507ffbeca3b9b6e2936bbc4ecd9464e6a1092f67b16803cc78b202585d0a7fe0b39b8260056040516106c9929190610eb4565b6001546001600160a01b031633146108a8576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108ba9190610df5565b1161034a5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314610903576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b03908116908216036109615760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016103b9565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c9060200160405180910390a150565b6003546040516384785ecd60e01b81523360048201526001600160a01b03909116906384785ecd90602401602060405180830381865afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c9190611041565b610a435760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016103b9565b63ffffffff81166000908152600460205260409020546001600160a01b031680610a995760405162461bcd60e51b81526020600482015260076024820152662165786973747360c81b60448201526064016103b9565b63ffffffff8216600090815260046020526040812080546001600160a01b031916905560058054610acc90600190610df5565b81548110610adc57610adc610e49565b60009182526020822060088204015460079091166004026101000a900463ffffffff1691505b60055460ff82161015610bb6578363ffffffff1660058260ff1681548110610b2c57610b2c610e49565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1603610ba4578160058260ff1681548110610b6c57610b6c610e49565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff160217905550610bb6565b80610bae81611063565b915050610b02565b506005805480610bc857610bc8611082565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556040517fb576e68aeacfc9a4973bc2ac5c7ea7e6662b78809d33443fed101e04ceb7c9d490610c42908590859063ffffffff9290921682526001600160a01b0316602082015260400190565b60405180910390a1505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600060208284031215610d0e57600080fd5b5035919050565b803563ffffffff81168114610d2957600080fd5b919050565b60008060408385031215610d4157600080fd5b610d4a83610d15565b946020939093013593505050565b80356001600160a01b0381168114610d2957600080fd5b600060208284031215610d8157600080fd5b610d8a82610d58565b9392505050565b60008060408385031215610da457600080fd5b610dad83610d15565b9150610dbb60208401610d58565b90509250929050565b600060208284031215610dd657600080fd5b610d8a82610d15565b634e487b7160e01b600052601160045260246000fd5b600082821015610e0757610e07610ddf565b500390565b60008060408385031215610e1f57600080fd5b505080516020909101519092909150565b600060208284031215610e4257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060208083528351808285015260005b81811015610e8c57858101830151858201604001528201610e70565b81811115610e9e576000604083870101525b50601f01601f1916929092016040019392505050565b6000604080830185845260208281860152818654610ed6818590815260200190565b60008981526020812095509092505b81600782011015610f5957845463ffffffff808216855281861c81168686015281881c811688860152606082811c821690860152608082811c82169086015260a082811c82169086015260c082811c9091169085015260e090811c9084015260019094019361010090920191600801610ee5565b93549381811015610f755763ffffffff85168352918301916001015b81811015610f905784841c63ffffffff168352918301916001015b81811015610fab5784861c63ffffffff168352918301916001015b81811015610fc857606085901c63ffffffff168352918301916001015b81811015610fe557608085901c63ffffffff168352918301916001015b818110156110025760a085901c63ffffffff168352918301916001015b8181101561101f5760c085901c63ffffffff168352918301916001015b818110156110335760e085901c8352918301915b509098975050505050505050565b60006020828403121561105357600080fd5b81518015158114610d8a57600080fd5b600060ff821660ff810361107957611079610ddf565b60010192915050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122020ce45a28414ff1874e83270f1c9320efa10ff1c6142b47b4770a2e90e03b53464736f6c634300080f0033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
