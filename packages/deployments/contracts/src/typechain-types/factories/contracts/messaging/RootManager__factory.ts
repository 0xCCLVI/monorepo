/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620026693803806200266983398101604081905262000034916200015d565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a6200013a602090811b6200117717901c565b5050506200019e565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60019055565b80516001600160a01b03811681146200015857600080fd5b919050565b6000806000606084860312156200017357600080fd5b83519250620001856020850162000140565b9150620001956040850162000140565b90509250925092565b6080516124a8620001c1600039600081816104ca0152610c8701526124a86000f3fe6080604052600436106101e35760003560e01c80638456cb5911610102578063b1f8100d11610095578063d232c22011610064578063d232c220146105a2578063d2a3cc71146105c1578063db0f0169146105e1578063e6f1208d1461060157600080fd5b8063b1f8100d1461052f578063b904670f1461054f578063c5b350df1461056f578063d1851c921461058457600080fd5b8063957908d1116100d1578063957908d11461048e578063a01892a5146104b8578063aa0d60a3146104ec578063ad9c0c2e1461051957600080fd5b80638456cb59146104265780638da5cb5b1461043b5780638e7d93fa14610459578063909907cb1461047957600080fd5b8063498c2c2e1161017a578063715018a611610149578063715018a6146103905780637bc24d99146103a55780637d434e91146103bb5780637d534308146103db57600080fd5b8063498c2c2e146103175780635c975abb1461032d57806366cf8fab146103455780636a42b8f81461037a57600080fd5b80633c4baaf8116101b65780633c4baaf8146102ac5780633cf52ffb146102da5780633f4ba83a146102ef578063412e12db1461030457600080fd5b806313ede1a1146101e85780631eeaabea1461022557806324ec5d051461024757806327186c6a1461028c575b600080fd5b3480156101f457600080fd5b50610208610203366004611b7b565b610621565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023157600080fd5b50610245610240366004611b7b565b61064b565b005b34801561025357600080fd5b5061027c610262366004611bad565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161021c565b34801561029857600080fd5b506102456102a7366004611c14565b6106fd565b3480156102b857600080fd5b506102cc6102c7366004611bad565b610768565b60405190815260200161021c565b3480156102e657600080fd5b506002546102cc565b3480156102fb57600080fd5b506102456107cc565b610245610312366004611c9d565b610809565b34801561032357600080fd5b506102cc60075481565b34801561033957600080fd5b5060035460ff1661027c565b34801561035157600080fd5b50610365610360366004611b7b565b6109fc565b60405163ffffffff909116815260200161021c565b34801561038657600080fd5b5062093a806102cc565b34801561039c57600080fd5b50610245610a36565b3480156103b157600080fd5b506102cc60055481565b3480156103c757600080fd5b506102086103d6366004611bad565b610a61565b3480156103e757600080fd5b50600a54610406906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161021c565b34801561043257600080fd5b50610245610a99565b34801561044757600080fd5b506000546001600160a01b0316610208565b34801561046557600080fd5b50610245610474366004611e10565b610b50565b34801561048557600080fd5b506102cc610c0b565b34801561049a57600080fd5b506104a3610c1c565b6040805192835260208301919091520161021c565b3480156104c457600080fd5b506102087f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f857600080fd5b50610501606481565b6040516001600160801b03909116815260200161021c565b34801561052557600080fd5b506102cc60095481565b34801561053b57600080fd5b5061024561054a366004611e51565b610d5c565b34801561055b57600080fd5b5061024561056a366004611e6c565b610e04565b34801561057b57600080fd5b50610245610e7c565b34801561059057600080fd5b506001546001600160a01b0316610208565b3480156105ae57600080fd5b506000546001600160a01b03161561027c565b3480156105cd57600080fd5b506102456105dc366004611e51565b610eec565b3480156105ed57600080fd5b506102456105fc366004611e9f565b610fb9565b34801561060d57600080fd5b5061024561061c366004611bad565b61108a565b6006818154811061063157600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610676576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036106bb5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6007548282604051602001610713929190611f0b565b60405160208183030381529060405280519060200120146107645760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016106b2565b5050565b63ffffffff81166000908152600860205260408120548082036107ba5760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016106b2565b6107c5600182611f6d565b9392505050565b6000546001600160a01b031633146107f7576040516311a8a1bb60e31b815260040160405180910390fd5b6107ff61117d565b6108076111c6565b565b610811611218565b61081b85856106fd565b83828114801561082b5750808251145b6108695760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016106b2565b600080610874610c1c565b90925090503460005b848163ffffffff1610156109ad5787878263ffffffff168181106108a3576108a3611f80565b90506020020135826108b59190611f6d565b915089898263ffffffff168181106108cf576108cf611f80565b90506020020160208101906108e49190611e51565b6001600160a01b03166348e6fa2389898463ffffffff1681811061090a5761090a611f80565b905060200201358660405160200161092491815260200190565b604051602081830303815290604052898563ffffffff168151811061094b5761094b611f80565b60200260200101516040518463ffffffff1660e01b8152600401610970929190611fdc565b6000604051808303818588803b15801561098957600080fd5b505af115801561099d573d6000803e3d6000fd5b505050505080600101905061087d565b50600554604080518581526020810185905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a1505050505050505050565b60048181548110610a0c57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610807576040516311a8a1bb60e31b815260040160405180910390fd5b60006006610a6e83610768565b81548110610a7e57610a7e611f80565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610ae5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b09919061200a565b610b405760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106b2565b610b48611218565b61080761125e565b610b58611218565b8133610b6382610a61565b6001600160a01b031614610ba65760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016106b2565b6000610bb3600a8461129b565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b6000610c17600a61130d565b905090565b600080610c27611218565b600954600090610c3b90600a906064611337565b90508051600003610c825760405162461bcd60e51b81526020600482015260116024820152706e6f20766572696669656420726f6f747360781b60448201526064016106b2565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610cd19190612067565b60408051808303816000875af1158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d13919061207a565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd4828285604051610d4a9392919061209e565b60405180910390a19093509150509091565b6000546001600160a01b03163314610d87576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610dac57506001600160a01b03811615155b15610dca576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610df857604051634a2fb73f60e11b815260040160405180910390fd5b610e0181611605565b50565b6000546001600160a01b03163314610e2f576040516311a8a1bb60e31b815260040160405180910390fd5b610e398282611653565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70828260046006604051610e709493929190612283565b60405180910390a15050565b6001546001600160a01b03163314610ea7576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610eb99190611f6d565b11610ed75760405163d39c12bb60e01b815260040160405180910390fd5b600154610807906001600160a01b031661179e565b6000546001600160a01b03163314610f17576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b03610100909104811690821603610f7a5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016106b2565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c9060200160405180910390a150565b6005548484604051602001610fcf9291906122d0565b604051602081830303815290604052805190602001201461101d5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016106b2565b6007548282604051602001611033929190611f0b565b60405160208183030381529060405280519060200120146110845760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016106b2565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa919061200a565b6111315760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016106b2565b600061113c826117fd565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb82826004600633604051610e7095949392919061230e565b60019055565b60035460ff166108075760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106b2565b6111ce61117d565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff16156108075760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106b2565b611266611218565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111fb3390565b8154600090439084906010906112c090600160801b90046001600160801b0316612364565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b82048116911661132f8282611a19565b949350505050565b82546060906001600160801b0380821691600160801b9004168181101561138e5760405162461bcd60e51b815260206004820152600b60248201526a717565756520656d70747960a81b60448201526064016106b2565b816001600160801b03166000036113d75760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016106b2565b6000846001600160801b0316116114225760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016106b2565b60006001611430868561238a565b61143a91906123b1565b9050806001600160801b0316826001600160801b0316111561145a578091505b5060006114678643611f6d565b905060005b826001600160801b0316846001600160801b0316116114be576001600160801b03831660009081526002890160205260409020548281116114b15760019150506114be565b506000199092019161146c565b806114de57505060408051600081526020810190915292506107c5915050565b6000846114ec85600161238a565b6114f691906123b1565b6001600160801b031667ffffffffffffffff81111561151757611517611c56565b604051908082528060200260200182016040528015611540578160200160208202803683370190505b50905060005b846001600160801b0316866001600160801b0316116115d0576001600160801b038616600090815260018b016020526040902054825183908390811061158e5761158e611f80565b6020908102919091018101919091526001600160801b03871660009081526001808d018352604080832083905560028e01909352918120559586019501611546565b5088546fffffffffffffffffffffffffffffffff19166001600160801b03959095169490941788555091925050509392505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff82166000908152600860205260409020541561169f5760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064016106b2565b6001600160a01b0381166116e25760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016106b2565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055611799611a43565b505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061180983610768565b905060006006828154811061182057611820611f80565b6000918252602090912001546001600160a01b03169050806118785760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016106b2565b60045460009061188a90600190611f6d565b90508083101561198157600481815481106118a7576118a7611f80565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff16600484815481106118e0576118e0611f80565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055506006818154811061192657611926611f80565b600091825260209091200154600680546001600160a01b03909216918590811061195257611952611f80565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b6004805480611992576119926123d1565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a0219169055905560068054806119d1576119d16123d1565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611a11611a43565b509392505050565b600081611a2784600161238a565b611a3191906123b1565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015611abd57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611a805790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015611b1c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611afe575b5050505050905081604051602001611b3491906123e7565b60408051601f19818403018152908290528051602091820120600555611b5c91839101612431565b60408051601f1981840301815291905280516020909101206007555050565b600060208284031215611b8d57600080fd5b5035919050565b803563ffffffff81168114611ba857600080fd5b919050565b600060208284031215611bbf57600080fd5b6107c582611b94565b60008083601f840112611bda57600080fd5b50813567ffffffffffffffff811115611bf257600080fd5b6020830191508360208260051b8501011115611c0d57600080fd5b9250929050565b60008060208385031215611c2757600080fd5b823567ffffffffffffffff811115611c3e57600080fd5b611c4a85828601611bc8565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611c9557611c95611c56565b604052919050565b600080600080600060608688031215611cb557600080fd5b67ffffffffffffffff8087351115611ccc57600080fd5b611cd98888358901611bc8565b9096509450602087013581811115611cf057600080fd5b611cfc89828a01611bc8565b909550935050604087013581811115611d1457600080fd5b8701601f81018913611d2557600080fd5b803582811115611d3757611d37611c56565b611d4660208260051b01611c6c565b8082825260208201915060208360051b85010192508b831115611d6857600080fd5b602084015b83811015611dfd578581351115611d8357600080fd5b803585018d603f820112611d9657600080fd5b602081013587811115611dab57611dab611c56565b611dbe601f8201601f1916602001611c6c565b8181528f6040838501011115611dd357600080fd5b81604084016020830137600060208383010152808652505050602083019250602081019050611d6d565b5080955050505050509295509295909350565b60008060408385031215611e2357600080fd5b611e2c83611b94565b946020939093013593505050565b80356001600160a01b0381168114611ba857600080fd5b600060208284031215611e6357600080fd5b6107c582611e3a565b60008060408385031215611e7f57600080fd5b611e8883611b94565b9150611e9660208401611e3a565b90509250929050565b60008060008060408587031215611eb557600080fd5b843567ffffffffffffffff80821115611ecd57600080fd5b611ed988838901611bc8565b90965094506020870135915080821115611ef257600080fd5b50611eff87828801611bc8565b95989497509550505050565b60208082528181018390526000908460408401835b86811015611f4c576001600160a01b03611f3984611e3a565b1682529183019190830190600101611f20565b509695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115611a3d57611a3d611f57565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b81811015611fbc57602081850181015186830182015201611fa0565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611fef6040830185611f96565b82810360208401526120018185611f96565b95945050505050565b60006020828403121561201c57600080fd5b815180151581146107c557600080fd5b600081518084526020808501945080840160005b8381101561205c57815187529582019590820190600101612040565b509495945050505050565b6020815260006107c5602083018461202c565b6000806040838503121561208d57600080fd5b505080516020909101519092909150565b838152826020820152606060408201526000612001606083018461202c565b805480835260008281526020808220940193909190825b8260078201101561214c57815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501946001909101906008016120d4565b9054908281101561216a5763ffffffff821686526020909501946001015b8281101561218a57602082901c63ffffffff168652602095909501946001015b828110156121a95763ffffffff604083901c1686526020909501946001015b828110156121c85763ffffffff606083901c1686526020909501946001015b828110156121e75763ffffffff608083901c1686526020909501946001015b828110156122065763ffffffff60a083901c1686526020909501946001015b828110156122255763ffffffff60c083901c1686526020909501946001015b8281101561223b5760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b8381101561205c5781546001600160a01b03168752958201956001918201910161225e565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906122b3908301856120bd565b82810360608401526122c58185612245565b979650505050505050565b60208082528181018390526000908460408401835b86811015611f4c5763ffffffff6122fb84611b94565b16825291830191908301906001016122e5565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261233c60a08401876120bd565b838103606085015261234e8187612245565b9250508084166080840152509695505050505050565b60006001600160801b0380831681810361238057612380611f57565b6001019392505050565b6001600160801b038181168382160190808211156123aa576123aa611f57565b5092915050565b6001600160801b038281168282160390808211156123aa576123aa611f57565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561242557835163ffffffff1683529284019291840191600101612403565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156124255783516001600160a01b03168352928401929184019160010161244d56fea264697066735822122051490a6b39dc7d935ac2e0ff6fccebcd97c0b399167a31e00f056046c0dc2fba64736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
