/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620024f4380380620024f483398101604081905262000034916200015d565b600380546001600160a81b0319166101006001600160a01b038416021790556200005e33620000db565b6001600160a01b038216620000a85760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0382166080526009839055620000d2600a6200013a602090811b620010a217901c565b5050506200019e565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60019055565b80516001600160a01b03811681146200015857600080fd5b919050565b6000806000606084860312156200017357600080fd5b83519250620001856020850162000140565b9150620001956040850162000140565b90509250925092565b608051612333620001c16000396000818161045f0152610a8901526123336000f3fe6080604052600436106101c25760003560e01c80638456cb59116100f7578063b1f8100d11610095578063d232c22011610064578063d232c2201461050a578063d2a3cc7114610529578063db0f016914610549578063e6f1208d1461056957600080fd5b8063b1f8100d14610497578063b904670f146104b7578063c5b350df146104d7578063d1851c92146104ec57600080fd5b8063909907cb116100d1578063909907cb146104255780639e4d21b91461043a578063a01892a51461044d578063ad9c0c2e1461048157600080fd5b80638456cb59146103d25780638da5cb5b146103e75780638e7d93fa1461040557600080fd5b80635c975abb11610164578063715018a61161013e578063715018a61461033c5780637bc24d99146103515780637d434e91146103675780637d5343081461038757600080fd5b80635c975abb146102d957806366cf8fab146102f15780636a42b8f81461032657600080fd5b80633c4baaf8116101a05780633c4baaf81461026b5780633cf52ffb146102995780633f4ba83a146102ae578063498c2c2e146102c357600080fd5b806313ede1a1146101c75780631eeaabea1461020457806324ec5d0514610226575b600080fd5b3480156101d357600080fd5b506101e76101e23660046119d0565b610589565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561021057600080fd5b5061022461021f3660046119d0565b6105b3565b005b34801561023257600080fd5b5061025b610241366004611a02565b63ffffffff16600090815260086020526040902054151590565b60405190151581526020016101fb565b34801561027757600080fd5b5061028b610286366004611a02565b610665565b6040519081526020016101fb565b3480156102a557600080fd5b5060025461028b565b3480156102ba57600080fd5b506102246106c9565b3480156102cf57600080fd5b5061028b60075481565b3480156102e557600080fd5b5060035460ff1661025b565b3480156102fd57600080fd5b5061031161030c3660046119d0565b610706565b60405163ffffffff90911681526020016101fb565b34801561033257600080fd5b5062093a8061028b565b34801561034857600080fd5b50610224610740565b34801561035d57600080fd5b5061028b60055481565b34801561037357600080fd5b506101e7610382366004611a02565b6107fd565b34801561039357600080fd5b50600a546103b2906001600160801b0380821691600160801b90041682565b604080516001600160801b039384168152929091166020830152016101fb565b3480156103de57600080fd5b50610224610835565b3480156103f357600080fd5b506000546001600160a01b03166101e7565b34801561041157600080fd5b50610224610420366004611a1d565b6108ec565b34801561043157600080fd5b5061028b6109a7565b610224610448366004611ada565b6109b8565b34801561045957600080fd5b506101e77f000000000000000000000000000000000000000000000000000000000000000081565b34801561048d57600080fd5b5061028b60095481565b3480156104a357600080fd5b506102246104b2366004611c97565b610c9c565b3480156104c357600080fd5b506102246104d2366004611cb2565b610d44565b3480156104e357600080fd5b50610224610dbc565b3480156104f857600080fd5b506001546001600160a01b03166101e7565b34801561051657600080fd5b506000546001600160a01b03161561025b565b34801561053557600080fd5b50610224610544366004611c97565b610e17565b34801561055557600080fd5b50610224610564366004611ce5565b610ee4565b34801561057557600080fd5b50610224610584366004611a02565b610fb5565b6006818154811061059957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146105de576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036106235760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b63ffffffff81166000908152600860205260408120548082036106b75760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b604482015260640161061a565b6106c2600182611d67565b9392505050565b6000546001600160a01b031633146106f4576040516311a8a1bb60e31b815260040160405180910390fd5b6106fc6110a8565b6107046110f1565b565b6004818154811061071657600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b0316331461076b576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361078e57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107a09190611d67565b116107be576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107e8576040516323295ef960e01b815260040160405180910390fd5b600154610704906001600160a01b0316611143565b6000600661080a83610665565b8154811061081a5761081a611d7e565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a59190611d94565b6108dc5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161061a565b6108e46111a2565b6107046111e8565b6108f46111a2565b81336108ff826107fd565b6001600160a01b0316146109425760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b604482015260640161061a565b600061094f600a84611225565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507ff5832b5d15f2d906d01b871e48b0d1f27d8f282a7e0771c428b55bfeb409fa05919081900360600190a150505050565b60006109b3600a611297565b905090565b6109c06111a2565b8584811480156109cf57508281145b80156109db5750808251145b610a195760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b604482015260640161061a565b610a2588888888610ee4565b6000610a3d600954600a6112c190919063ffffffff16565b90508051600003610a845760405162461bcd60e51b81526020600482015260116024820152706e6f20766572696669656420726f6f747360781b604482015260640161061a565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b8152600401610ad39190611df1565b60408051808303816000875af1158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b159190611e04565b90925090503460005b858163ffffffff161015610c4e5788888263ffffffff16818110610b4457610b44611d7e565b9050602002013582610b569190611d67565b91508a8a8263ffffffff16818110610b7057610b70611d7e565b9050602002016020810190610b859190611c97565b6001600160a01b03166348e6fa238a8a8463ffffffff16818110610bab57610bab611d7e565b9050602002013586604051602001610bc591815260200190565b6040516020818303038152906040528a8563ffffffff1681518110610bec57610bec611d7e565b60200260200101516040518463ffffffff1660e01b8152600401610c11929190611e75565b6000604051808303818588803b158015610c2a57600080fd5b505af1158015610c3e573d6000803e3d6000fd5b5050505050806001019050610b1e565b507fb0b3d44baf84014c485fc70c5f229e509a6e6c0f3e5e84916115545b61c820bf83838e8e88604051610c86959493929190611edc565b60405180910390a1505050505050505050505050565b6000546001600160a01b03163314610cc7576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610cec57506001600160a01b03811615155b15610d0a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610d3857604051634a2fb73f60e11b815260040160405180910390fd5b610d41816114bb565b50565b6000546001600160a01b03163314610d6f576040516311a8a1bb60e31b815260040160405180910390fd5b610d798282611509565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70828260046006604051610db094939291906120e0565b60405180910390a15050565b6001546001600160a01b03163314610de7576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610df99190611d67565b116107e85760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314610e42576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b03610100909104811690821603610ea55760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e61676572000000000000000000604482015260640161061a565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c9060200160405180910390a150565b6005548484604051602001610efa92919061212d565b6040516020818303038152906040528051906020012014610f485760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b604482015260640161061a565b6007548282604051602001610f5e929190612141565b6040516020818303038152906040528051906020012014610faf5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b604482015260640161061a565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190611d94565b61105c5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161061a565b600061106782611654565b90507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb82826004600633604051610db095949392919061218d565b60019055565b60035460ff166107045760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161061a565b6110f96110a8565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60035460ff16156107045760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161061a565b6111f06111a2565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586111263390565b81546000904390849060109061124a90600160801b90046001600160801b03166121e3565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b8204811691166112b98282611870565b949350505050565b81546060906001600160801b0380821691600160801b900416818110156113185760405162461bcd60e51b815260206004820152600b60248201526a717565756520656d70747960a81b604482015260640161061a565b60005b826001600160801b0316826001600160801b031610611376576001600160801b03821660009081526002870160205260409020548561135a8243611d67565b10611369576001915050611376565b506000199091019061131b565b8061139557505060408051600081526020810190915291506114b59050565b6000836113a3846001612209565b6113ad9190612234565b6001600160801b031667ffffffffffffffff8111156113ce576113ce611a93565b6040519080825280602002602001820160405280156113f7578160200160208202803683370190505b50905060005b836001600160801b0316856001600160801b031611611487576001600160801b0385166000908152600189016020526040902054825183908390811061144557611445611d7e565b6020908102919091018101919091526001600160801b03861660009081526001808b018352604080832083905560028c019093529181205594850194016113fd565b5086546fffffffffffffffffffffffffffffffff19166001600160801b039490941693909317865550909150505b92915050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156115555760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b604482015260640161061a565b6001600160a01b0381166115985760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b604482015260640161061a565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b0319909116179055915460009182526020929092526040902081905561164f611898565b505050565b60008061166083610665565b905060006006828154811061167757611677611d7e565b6000918252602090912001546001600160a01b03169050806116cf5760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b604482015260640161061a565b6004546000906116e190600190611d67565b9050808310156117d857600481815481106116fe576116fe611d7e565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff166004848154811061173757611737611d7e565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff1602179055506006818154811061177d5761177d611d7e565b600091825260209091200154600680546001600160a01b0390921691859081106117a9576117a9611d7e565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505b60048054806117e9576117e961225c565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a0219169055905560068054806118285761182861225c565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055611868611898565b509392505050565b60008161187e846001612209565b6118889190612234565b6001600160801b03169392505050565b6000600480548060200260200160405190810160405280929190818152602001828054801561191257602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116118d55790505b505050505090506000600680548060200260200160405190810160405280929190818152602001828054801561197157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611953575b50505050509050816040516020016119899190612272565b60408051601f198184030181529082905280516020918201206005556119b1918391016122bc565b60408051601f1981840301815291905280516020909101206007555050565b6000602082840312156119e257600080fd5b5035919050565b803563ffffffff811681146119fd57600080fd5b919050565b600060208284031215611a1457600080fd5b6106c2826119e9565b60008060408385031215611a3057600080fd5b611a39836119e9565b946020939093013593505050565b60008083601f840112611a5957600080fd5b50813567ffffffffffffffff811115611a7157600080fd5b6020830191508360208260051b8501011115611a8c57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ad257611ad2611a93565b604052919050565b60008060008060008060006080888a031215611af557600080fd5b67ffffffffffffffff8089351115611b0c57600080fd5b611b198a8a358b01611a47565b90985096506020890135811015611b2f57600080fd5b611b3f8a60208b01358b01611a47565b90965094506040890135811015611b5557600080fd5b611b658a60408b01358b01611a47565b90945092506060890135811015611b7b57600080fd5b606089013589018a601f820112611b9157600080fd5b8181351115611ba257611ba2611a93565b611bb26020823560051b01611aa9565b81358082526020808301929160051b8401018d1015611bd057600080fd5b602083015b6020843560051b850101811015611c6c578481351115611bf457600080fd5b8d603f823586010112611c0657600080fd5b602081358501013585811115611c1e57611c1e611a93565b611c31601f8201601f1916602001611aa9565b8181528f6040838535890101011115611c4957600080fd5b816040843588010160208301376000602092820183015284529283019201611bd5565b508094505050505092959891949750929550565b80356001600160a01b03811681146119fd57600080fd5b600060208284031215611ca957600080fd5b6106c282611c80565b60008060408385031215611cc557600080fd5b611cce836119e9565b9150611cdc60208401611c80565b90509250929050565b60008060008060408587031215611cfb57600080fd5b843567ffffffffffffffff80821115611d1357600080fd5b611d1f88838901611a47565b90965094506020870135915080821115611d3857600080fd5b50611d4587828801611a47565b95989497509550505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611d7957611d79611d51565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611da657600080fd5b815180151581146106c257600080fd5b600081518084526020808501945080840160005b83811015611de657815187529582019590820190600101611dca565b509495945050505050565b6020815260006106c26020830184611db6565b60008060408385031215611e1757600080fd5b505080516020909101519092909150565b6000815180845260005b81811015611e4e57602081850181015186830182015201611e32565b81811115611e60576000602083870101525b50601f01601f19169290920160200192915050565b604081526000611e886040830185611e28565b8281036020840152611e9a8185611e28565b95945050505050565b8183526000602080850194508260005b85811015611de65763ffffffff611ec9836119e9565b1687529582019590820190600101611eb3565b858152846020820152608060408201526000611efc608083018587611ea3565b8281036060840152611f0e8185611db6565b98975050505050505050565b805480835260008281526020808220940193909190825b82600782011015611fa957815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c9087015261010090950194600190910190600801611f31565b90549082811015611fc75763ffffffff821686526020909501946001015b82811015611fe757602082901c63ffffffff168652602095909501946001015b828110156120065763ffffffff604083901c1686526020909501946001015b828110156120255763ffffffff606083901c1686526020909501946001015b828110156120445763ffffffff608083901c1686526020909501946001015b828110156120635763ffffffff60a083901c1686526020909501946001015b828110156120825763ffffffff60c083901c1686526020909501946001015b828110156120985760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b83811015611de65781546001600160a01b0316875295820195600191820191016120bb565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061211090830185611f1a565b828103606084015261212281856120a2565b979650505050505050565b6020815260006112b9602083018486611ea3565b60208082528181018390526000908460408401835b86811015612182576001600160a01b0361216f84611c80565b1682529183019190830190600101612156565b509695505050505050565b63ffffffff86168152600060018060a01b03808716602084015260a060408401526121bb60a0840187611f1a565b83810360608501526121cd81876120a2565b9250508084166080840152509695505050505050565b60006001600160801b038083168181036121ff576121ff611d51565b6001019392505050565b60006001600160801b0380831681851680830382111561222b5761222b611d51565b01949350505050565b60006001600160801b038381169083168181101561225457612254611d51565b039392505050565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156122b057835163ffffffff168352928401929184019160010161228e565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156122b05783516001600160a01b0316835292840192918401916001016122d856fea26469706673582212203b202ed6adc40e41648c8a9c04e906ff5b0867185d0d99075473b6e5dd3cddcb64736f6c634300080f0033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
