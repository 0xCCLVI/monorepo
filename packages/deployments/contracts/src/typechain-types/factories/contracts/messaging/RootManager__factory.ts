/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_activateOptimisticMode__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_aggregate__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_checkDomains__InvalidDomains",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_constructor__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidAggregateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidInputHash",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_onlyOptimisticMode__SlowModeOn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RootManager_onlyProposer__NotWhitelistedProposer",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_optimisticPropagate__ForbiddenOptimisticRoot",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "RootManager_proposeAggregateRoot__InvalidSnapshotId",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_proposeAggregateRoot__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__SameDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setMinDisputeBlocks__SameMinDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_slowPropagate__OldAggregateRoot",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOfDispute",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "baseRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "snapshotsRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "AggregateRootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "MinDisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OptimisticModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "OptimisticRootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
    ],
    name: "ProposedRootFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "RootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedMessageRoots",
        type: "bytes32[]",
      },
    ],
    name: "RootsAggregated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "SlowModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FINALIZED_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateOptimisticMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateSlowMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "addProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedProposers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalizeAndPropagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizedOptimisticAggregateRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCountBeforeOpMode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDisputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_snapshotId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_snapshotsRoots",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedAggregateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "removeProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    name: "setDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
    ],
    name: "setMinDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526001600f8190556014553480156200001b57600080fd5b50604051620038f7380380620038f78339810160408190526200003e91620001aa565b600380546001600160a81b0319166101006001600160a01b03861602179055620000683362000122565b818110156200008a57604051637a61d42360e11b815260040160405180910390fd5b6001600160a01b038416620000d45760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0384166080526009859055600d8054600160ff19909116179055600b829055600a81905562000117601062000187602090811b62001c0b17901c565b5050505050620001fe565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b0381168114620001a557600080fd5b919050565b600080600080600060a08688031215620001c357600080fd5b85519450620001d5602087016200018d565b9350620001e5604087016200018d565b6060870151608090970151959894975095949392505050565b6080516136c1620002366000396000818161073501528181610ac8015281816112010152818161128e015261187901526136c16000f3fe60806040526004361061031a5760003560e01c80637d534308116101ab578063b904670f116100f7578063d2a3cc7111610095578063db0f01691161006f578063db0f01691461091d578063e6f1208d1461093d578063e9812d711461095d578063f4b6e4101461097d57600080fd5b8063d2a3cc71146108d2578063d3c54fe5146108f2578063d7e8d6ae1461090757600080fd5b8063cbfa2021116100d1578063cbfa20211461086a578063ceb3454e1461087f578063d1851c9214610895578063d232c220146108b357600080fd5b8063b904670f1461081f578063c5b350df1461083f578063c8ef89de1461085457600080fd5b8063a01892a511610164578063aa0d60a31161013e578063aa0d60a31461079c578063ad9c0c2e146107c9578063b03cd418146107df578063b1f8100d146107ff57600080fd5b8063a01892a514610723578063a792c29b14610757578063a941f3f31461077c57600080fd5b80637d534308146106465780638456cb59146106915780638da5cb5b146106a65780638e7d93fa146106c4578063909907cb146106e4578063957908d1146106f957600080fd5b80633f4ba83a1161026a5780635d308761116102235780636a42b8f8116101fd5780636a42b8f8146105e5578063715018a6146105fb5780637bc24d99146106105780637d434e911461062657600080fd5b80635d3087611461058157806360caf7a01461059657806366cf8fab146105b057600080fd5b80633f4ba83a146104e8578063412e12db146104fd578063492a96f414610510578063498c2c2e146105235780634a2db1da146105395780635c975abb1461056957600080fd5b80631eeaabea116102d7578063263ef354116102b1578063263ef3541461047357806327186c6a146104935780633c4baaf8146104b35780633cf52ffb146104d357600080fd5b80631eeaabea146103f857806320f62eda1461041857806324ec5d051461042e57600080fd5b80630165bc811461031f578063089200391461034857806309d632d31461036a5780630f8ef4ee1461038a57806313ede1a1146103aa57806317702174146103e2575b600080fd5b34801561032b57600080fd5b50610335600e5481565b6040519081526020015b60405180910390f35b34801561035457600080fd5b50610368610363366004612bc7565b610993565b005b34801561037657600080fd5b50610368610385366004612c66565b610b94565b34801561039657600080fd5b506103686103a5366004612c81565b610c08565b3480156103b657600080fd5b506103ca6103c5366004612c81565b610c7d565b6040516001600160a01b03909116815260200161033f565b3480156103ee57600080fd5b50610335600c5481565b34801561040457600080fd5b50610368610413366004612c81565b610ca7565b34801561042457600080fd5b50610335600a5481565b34801561043a57600080fd5b50610463610449366004612cae565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161033f565b34801561047f57600080fd5b5061036861048e366004612c81565b610d54565b34801561049f57600080fd5b506103686104ae366004612cc9565b610de3565b3480156104bf57600080fd5b506103356104ce366004612cae565b610e4e565b3480156104df57600080fd5b50600254610335565b3480156104f457600080fd5b50610368610eb2565b61036861050b366004612e47565b610eef565b61036861051e366004612edb565b610f80565b34801561052f57600080fd5b5061033560075481565b34801561054557600080fd5b50610463610554366004612c66565b60156020526000908152604090205460ff1681565b34801561057557600080fd5b5060035460ff16610463565b34801561058d57600080fd5b50610335600181565b3480156105a257600080fd5b50600d546104639060ff1681565b3480156105bc57600080fd5b506105d06105cb366004612c81565b610fa8565b60405163ffffffff909116815260200161033f565b3480156105f157600080fd5b5062093a80610335565b34801561060757600080fd5b50610368610fe2565b34801561061c57600080fd5b5061033560055481565b34801561063257600080fd5b506103ca610641366004612cae565b61100d565b34801561065257600080fd5b50601054610671906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161033f565b34801561069d57600080fd5b50610368611045565b3480156106b257600080fd5b506000546001600160a01b03166103ca565b3480156106d057600080fd5b506103686106df366004612f82565b6110e1565b3480156106f057600080fd5b506103356111c4565b34801561070557600080fd5b5061070e6111d5565b6040805192835260208301919091520161033f565b34801561072f57600080fd5b506103ca7f000000000000000000000000000000000000000000000000000000000000000081565b34801561076357600080fd5b506003546103ca9061010090046001600160a01b031681565b34801561078857600080fd5b50610368610797366004612c81565b611363565b3480156107a857600080fd5b506107b1606481565b6040516001600160801b03909116815260200161033f565b3480156107d557600080fd5b5061033560095481565b3480156107eb57600080fd5b506103686107fa366004612c66565b611415565b34801561080b57600080fd5b5061036861081a366004612c66565b61148c565b34801561082b57600080fd5b5061036861083a366004612fac565b61152d565b34801561084b57600080fd5b506103686115a5565b34801561086057600080fd5b506103356101f481565b34801561087657600080fd5b50610368611615565b34801561088b57600080fd5b5061033560145481565b3480156108a157600080fd5b506001546001600160a01b03166103ca565b3480156108bf57600080fd5b506000546001600160a01b031615610463565b3480156108de57600080fd5b506103686108ed366004612c66565b611700565b3480156108fe57600080fd5b506103686117e4565b34801561091357600080fd5b50610335600f5481565b34801561092957600080fd5b50610368610938366004612fdf565b611934565b34801561094957600080fd5b50610368610958366004612cae565b611a47565b34801561096957600080fd5b5061036861097836600461304b565b611b20565b34801561098957600080fd5b50610335600b5481565b3360009081526015602052604090205460ff166109ca57604051636d5595ef60e11b81523360048201526024015b60405180910390fd5b600d5460ff166109ed576040516383a941c560e01b815260040160405180910390fd5b81816005548282604051602001610a059291906130b1565b6040516020818303038152906040528051906020012014610a395760405163c38e7eb160e01b815260040160405180910390fd5b61070842048814610a605760405163bac5a76560e01b8152600481018990526024016109c1565b601454600114610a8357604051631d026cf160e01b815260040160405180910390fd5b6000600a5443610a9391906130db565b60408051602081018b9052908101829052909150606001604051602081830303815290604052805190602001206014819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4891906130ee565b888a7fa3ef5f102c5d4b3958ebddd5fc15de4c4da0bd714d6da2edab94dda2d00e220e848b8b8b8b604051610b81959493929190613107565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610bbf576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19169055517fbab6b194452fd4fa50e0ca09bf0f89976da30a2b92fdf91372ad1a176d81e3289190a250565b6000546001600160a01b03163314610c33576040516311a8a1bb60e31b815260040160405180910390fd5b610c3b611c11565b610c46601082611c5a565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b60068181548110610c8d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610cd2576040516311a8a1bb60e31b815260040160405180910390fd5b6009548103610d125760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064016109c1565b6009546040805183815260208101929092527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6000546001600160a01b03163314610d7f576040516311a8a1bb60e31b815260040160405180910390fd5b600b548103610da157604051632d1150e160e11b815260040160405180910390fd5b600b546040805183815260208101929092527fdfad87ee418f8b636836b030634c8040055c9a5f641899df5a5d1d3c554fee47910160405180910390a1600b55565b6007548282604051602001610df9929190613161565b6040516020818303038152906040528051906020012014610e4a5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016109c1565b5050565b63ffffffff8116600090815260086020526040812054808203610ea05760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b60448201526064016109c1565b610eab6001826131ad565b9392505050565b6000546001600160a01b03163314610edd576040516311a8a1bb60e31b815260040160405180910390fd5b610ee5611c11565b610eed611ccb565b565b610ef7611d1d565b610f018585610de3565b838281148015610f115750808251145b610f4f5760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b60448201526064016109c1565b600d5460ff16610f6b57610f668686868686611d63565b610f78565b610f788686868686611df3565b505050505050565b610f88611d1d565b610f928282611b20565b610f9f8787878787610eef565b50505050505050565b60048181548110610fb857600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314610eed576040516311a8a1bb60e31b815260040160405180910390fd5b6000600661101a83610e4e565b8154811061102a5761102a6131c0565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b591906131d6565b6110d15760405162461bcd60e51b81526004016109c1906131f8565b6110d9611d1d565b610eed611e6f565b6110e9611d1d565b81336110f48261100d565b6001600160a01b0316146111375760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016109c1565b600d5460ff161561115b5760405163515f45f160e11b815260040160405180910390fd5b6000611168601084611eac565b6040805163ffffffff87168152602081018690526001600160801b038316918101919091529091507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8906060015b60405180910390a150505050565b60006111d06010611f1e565b905090565b6000806111e0611d1d565b6009546000906111f4906010906064611f48565b90508051600003611289577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa15801561125c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611280919061321a565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b81526004016112d8919061326e565b60408051808303816000875af11580156112f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131a919061321a565b915091507f41b13c36968d02a1fd71e0f5db55ba2fb043c215a4d1e17633293ff273a77cd482828560405161135193929190613281565b60405180910390a19093509150509091565b6000546001600160a01b0316331461138e576040516311a8a1bb60e31b815260040160405180910390fd5b600b548110156113b15760405163e28adcd160e01b815260040160405180910390fd5b600a5481036113d3576040516346fee83f60e11b815260040160405180910390fd5b600a546040805183815260208101929092527fff74184d965d306545ebeb3283c4d7a39f453a9c0ea539db6437b33ceb9c5125910160405180910390a1600a55565b6000546001600160a01b03163314611440576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260156020526040808220805460ff19166001179055517f2bf05609716bc4b090ad0e99b47b91881c7517771259c625df05db7e9d8c81819190a250565b6000546001600160a01b031633146114b7576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156114d5575060025415155b156114f3576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361152157604051634a2fb73f60e11b815260040160405180910390fd5b61152a816122ca565b50565b6000546001600160a01b03163314611558576040516311a8a1bb60e31b815260040160405180910390fd5b6115628282612318565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe70828260046006604051611599949392919061346f565b60405180910390a15050565b6001546001600160a01b031633146115d0576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115e291906131ad565b11611600576040516324e0285f60e21b815260040160405180910390fd5b600154610eed906001600160a01b0316612504565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611661573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168591906131d6565b6116a15760405162461bcd60e51b81526004016109c1906131f8565b600d5460ff166116c4576040516383a941c560e01b815260040160405180910390fd5b600d805460ff19169055600160145560405133907f714b2723706f07835c1a61e679dc639438acf1e1d0bbae60d17e5a246a754d6e90600090a2565b6000546001600160a01b0316331461172b576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b0361010090910481169082160361178e5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109c1565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610c72565b6000546001600160a01b0316331461180f576040516311a8a1bb60e31b815260040160405180910390fd5b600d5460ff16156118365760405160016238010d60e21b0319815260040160405180910390fd5b60105461184e906001906001600160801b03166134bc565b601060000160106101000a8154816001600160801b0302191690836001600160801b031602179055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f991906130ee565b600c55600d805460ff191660011790556040517f46b91c03184b9c3d3422333019c7e56a3e8940f285463e754a526110287bd52190600090a1565b8281146119765760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b60448201526064016109c1565b600554848460405160200161198c9291906130b1565b60405160208183030381529060405280519060200120146119da5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b60448201526064016109c1565b60075482826040516020016119f0929190613161565b6040516020818303038152906040528051906020012014611a415760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b60448201526064016109c1565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab791906131d6565b611ad35760405162461bcd60e51b81526004016109c1906131f8565b6000611ade82612569565b60016014556040519091507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb90611599908490849060049060069033906134e3565b600d5460ff16611b43576040516383a941c560e01b815260040160405180910390fd5b6014546000198101611b6857604051636fcbb76f60e11b815260040160405180910390fd5b60408051602080820186905281830185905282518083038401815260609092019092528051910120818114611bb05760405163ae4fc77d60e01b815260040160405180910390fd5b43831115611bd15760405163bd24f2dd60e01b815260040160405180910390fd5b600f84905560016014556040518481527f2dc49dedbe4da61c874d43fd3b63b0ed21ba78b75c83feca2f810ae13ada0af4906020016111b6565b60019055565b60035460ff16610eed5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109c1565b600081815260038301602052604090205460ff1615611cad5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b60448201526064016109c1565b6000908152600390910160205260409020805460ff19166001179055565b611cd3611c11565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60035460ff1615610eed5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109c1565b6001600f55600080611d736111d5565b91509150600c548111611d995760405163358cb6c560e11b815260040160405180910390fd5b611da78288888888886127e0565b600554604080518481526020810184905280820192909252517f3fcedb4669de80ca7de6e18b7b25cc8e4f6861796f1db0f2409fcdf0d6901f569181900360600190a150505050505050565b600f546000198101611e1857604051632d5ba65d60e21b815260040160405180910390fd5b6001600f55611e2b8187878787876127e0565b807fd32362ae18082b069b1c28f165d23a6e168d95838085797b035eb944aae36072600554604051611e5f91815260200190565b60405180910390a2505050505050565b611e77611d1d565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d003390565b815460009043908490601090611ed190600160801b90046001600160801b0316613539565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b820481169116611f408282612a19565b949350505050565b82546060906001600160801b0380821691600160801b90041681811015611f815750506040805160008152602081019091529050610eab565b816001600160801b0316600003611fca5760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b60448201526064016109c1565b6000846001600160801b0316116120155760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b60448201526064016109c1565b60006001612023868561355f565b61202d91906134bc565b9050806001600160801b0316826001600160801b0316111561204d578091505b50600061205a86436131ad565b905060005b826001600160801b0316846001600160801b0316116120b1576001600160801b03831660009081526002890160205260409020548281116120a45760019150506120b1565b506000199092019161205f565b806120d15750506040805160008152602081019091529250610eab915050565b6000846120df85600161355f565b6120e991906134bc565b6001600160801b031667ffffffffffffffff81111561210a5761210a612d0b565b604051908082528060200260200182016040528015612133578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b0316116121ef576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff166121b05780848481518110612199576121996131c0565b6020026020010181815250508260010192506121b7565b8160010191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f019091528220919091559096019561213a565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b5560008190036122295782975050505050505050610eab565b60008267ffffffffffffffff81111561224457612244612d0b565b60405190808252806020026020018201604052801561226d578160200160208202803683370190505b50905060005b838110156122ba5784818151811061228d5761228d6131c0565b60200260200101518282815181106122a7576122a76131c0565b6020908102919091010152600101612273565b509750610eab9650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff82166000908152600860205260409020541561236b5760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b60448201526064016109c1565b6001600160a01b0381166123ae5760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b60448201526064016109c1565b6004546101f4116124015760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e64657865722061742063617061636974790000000000000060448201526064016109c1565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b031990911617905591546000918252602092909252604090208190556124b8612a43565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60008061257583610e4e565b905060006006828154811061258c5761258c6131c0565b6000918252602090912001546001600160a01b03169050806125e45760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b60448201526064016109c1565b6004546000906125f6906001906131ad565b90508083101561270f57600060048281548110612615576126156131c0565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508060048581548110612651576126516131c0565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068281548110612697576126976131c0565b600091825260209091200154600680546001600160a01b0390921691869081106126c3576126c36131c0565b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790556126f78460016130db565b63ffffffff9091166000908152600860205260409020555b60048054806127205761272061357f565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a02191690559055600680548061275f5761275f61357f565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff8716825260089052604081205561279f612a43565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b600e5486036128225760405162461bcd60e51b815260206004820152600e60248201526d1c99591d5b99185b9d081c9bdbdd60921b60448201526064016109c1565b600e8690553460005b63ffffffff8116861115612a0f5786868263ffffffff16818110612851576128516131c0565b90506020020160208101906128669190612c66565b6001600160a01b03166348e6fa2386868463ffffffff1681811061288c5761288c6131c0565b905060200201358a6040516020016128a691815260200190565b604051602081830303815290604052868563ffffffff16815181106128cd576128cd6131c0565b60200260200101516040518463ffffffff1660e01b81526004016128f29291906135db565b6000604051808303818588803b15801561290b57600080fd5b505af19350505050801561291d575060015b6129da577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048263ffffffff168154811061295b5761295b6131c0565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1688888463ffffffff16818110612999576129996131c0565b90506020020160208101906129ae9190612c66565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a1612a07565b84848263ffffffff168181106129f2576129f26131c0565b9050602002013582612a0491906131ad565b91505b60010161282b565b5050505050505050565b600081612a2784600161355f565b612a3191906134bc565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015612abd57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411612a805790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015612b1c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612afe575b5050505050905081604051602001612b349190613600565b60408051601f19818403018152908290528051602091820120600555612b5c9183910161364a565b60408051601f1981840301815291905280516020909101206007555050565b60008083601f840112612b8d57600080fd5b50813567ffffffffffffffff811115612ba557600080fd5b6020830191508360208260051b8501011115612bc057600080fd5b9250929050565b60008060008060008060808789031215612be057600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115612c0657600080fd5b612c128a838b01612b7b565b90965094506060890135915080821115612c2b57600080fd5b50612c3889828a01612b7b565b979a9699509497509295939492505050565b80356001600160a01b0381168114612c6157600080fd5b919050565b600060208284031215612c7857600080fd5b610eab82612c4a565b600060208284031215612c9357600080fd5b5035919050565b803563ffffffff81168114612c6157600080fd5b600060208284031215612cc057600080fd5b610eab82612c9a565b60008060208385031215612cdc57600080fd5b823567ffffffffffffffff811115612cf357600080fd5b612cff85828601612b7b565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d4a57612d4a612d0b565b604052919050565b6000601f8381840112612d6457600080fd5b8235602067ffffffffffffffff80831115612d8157612d81612d0b565b8260051b612d90838201612d21565b9384528681018301938381019089861115612daa57600080fd5b84890192505b85831015612e3a57823584811115612dc85760008081fd5b8901603f81018b13612dda5760008081fd5b85810135604086821115612df057612df0612d0b565b612e01828b01601f19168901612d21565b8281528d82848601011115612e165760008081fd5b828285018a8301376000928101890192909252508352509184019190840190612db0565b9998505050505050505050565b600080600080600060608688031215612e5f57600080fd5b853567ffffffffffffffff80821115612e7757600080fd5b612e8389838a01612b7b565b90975095506020880135915080821115612e9c57600080fd5b612ea889838a01612b7b565b90955093506040880135915080821115612ec157600080fd5b50612ece88828901612d52565b9150509295509295909350565b600080600080600080600060a0888a031215612ef657600080fd5b873567ffffffffffffffff80821115612f0e57600080fd5b612f1a8b838c01612b7b565b909950975060208a0135915080821115612f3357600080fd5b612f3f8b838c01612b7b565b909750955060408a0135915080821115612f5857600080fd5b50612f658a828b01612d52565b935050606088013591506080880135905092959891949750929550565b60008060408385031215612f9557600080fd5b612f9e83612c9a565b946020939093013593505050565b60008060408385031215612fbf57600080fd5b612fc883612c9a565b9150612fd660208401612c4a565b90509250929050565b60008060008060408587031215612ff557600080fd5b843567ffffffffffffffff8082111561300d57600080fd5b61301988838901612b7b565b9096509450602087013591508082111561303257600080fd5b5061303f87828801612b7b565b95989497509550505050565b6000806040838503121561305e57600080fd5b50508035926020909101359150565b8183526000602080850194508260005b858110156130a65763ffffffff61309383612c9a565b168752958201959082019060010161307d565b509495945050505050565b602081526000611f4060208301848661306d565b634e487b7160e01b600052601160045260246000fd5b80820180821115612a3d57612a3d6130c5565b60006020828403121561310057600080fd5b5051919050565b858152606060208201819052810184905260006001600160fb1b0385111561312e57600080fd5b8460051b80876080850137820182810360809081016040850152613155908201858761306d565b98975050505050505050565b60208082528181018390526000908460408401835b868110156131a2576001600160a01b0361318f84612c4a565b1682529183019190830190600101613176565b509695505050505050565b81810381811115612a3d57612a3d6130c5565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156131e857600080fd5b81518015158114610eab57600080fd5b60208082526008908201526710bbb0ba31b432b960c11b604082015260600190565b6000806040838503121561322d57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b838110156130a657815187529582019590820190600101613252565b602081526000610eab602083018461323e565b8381528260208201526060604082015260006132a0606083018461323e565b95945050505050565b805480835260008281526020808220940193909190825b8260078201101561333857815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c90870152610100909501946001909101906008016132c0565b905490828110156133565763ffffffff821686526020909501946001015b8281101561337657602082901c63ffffffff168652602095909501946001015b828110156133955763ffffffff604083901c1686526020909501946001015b828110156133b45763ffffffff606083901c1686526020909501946001015b828110156133d35763ffffffff608083901c1686526020909501946001015b828110156133f25763ffffffff60a083901c1686526020909501946001015b828110156134115763ffffffff60c083901c1686526020909501946001015b828110156134275760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156130a65781546001600160a01b03168752958201956001918201910161344a565b63ffffffff851681526001600160a01b038416602082015260806040820181905260009061349f908301856132a9565b82810360608401526134b18185613431565b979650505050505050565b6001600160801b038281168282160390808211156134dc576134dc6130c5565b5092915050565b63ffffffff86168152600060018060a01b03808716602084015260a0604084015261351160a08401876132a9565b83810360608501526135238187613431565b9250508084166080840152509695505050505050565b60006001600160801b03808316818103613555576135556130c5565b6001019392505050565b6001600160801b038181168382160190808211156134dc576134dc6130c5565b634e487b7160e01b600052603160045260246000fd5b6000815180845260005b818110156135bb5760208185018101518683018201520161359f565b506000602082860101526020601f19601f83011685010191505092915050565b6040815260006135ee6040830185613595565b82810360208401526132a08185613595565b6020808252825182820181905260009190848201906040850190845b8181101561363e57835163ffffffff168352928401929184019160010161361c565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561363e5783516001600160a01b03168352928401929184019160010161366656fea264697066735822122000f7f943187b9a650bf9c2bd0e04f8250e46c1db281ab83e9317c06d2593c0a864736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
