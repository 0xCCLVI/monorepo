/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b3c38038062002b3c833981016040819052620000359162000368565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b8162000219565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003e99c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200022f816200023d60201b620008e71760201c565b6200023a81620002a6565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031615620003145760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200034b57600080fd5b919050565b80516001600160a01b03811681146200034b57600080fd5b60008060008060008060c087890312156200038257600080fd5b6200038d8762000336565b95506200039d6020880162000336565b9450620003ad6040880162000350565b9350620003bd6060880162000350565b9250620003cd6080880162000350565b9150620003dd60a0880162000350565b90509295509295509295565b60805160a05160c05160e0516126fd6200043f600039600081816101b40152610dc101526000818161029b015281816104ef0152610d9a01526000818161046201526105a40152600061024701526126fd6000f3fe60806040526004361061014f5760003560e01c8063972c4928116100b6578063d1851c921161006f578063d1851c9214610413578063d232c22014610431578063d69f9d6114610450578063db1b765914610484578063de9b771f146104a4578063f953cec7146104c457600080fd5b8063972c49281461035e578063aea4e49e1461037e578063b1f8100d1461039e578063c0857ba0146103be578063c5b350df146103de578063cc394283146103f357600080fd5b80635bd11efc116101085780635bd11efc146102695780635f61e3ec14610289578063607f2d42146102d55780636a42b8f814610315578063715018a61461032b5780638da5cb5b1461034057600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e3660046121e5565b6104e4565b005b34801561022157600080fd5b50610213610230366004612249565b610599565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b50610213610284366004612293565b61063f565b34801561029557600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b3480156102e157600080fd5b506103056102f03660046122b0565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561032157600080fd5b5062093a8061018f565b34801561033757600080fd5b50610213610676565b34801561034c57600080fd5b506000546001600160a01b03166102bd565b34801561036a57600080fd5b506006546102bd906001600160a01b031681565b34801561038a57600080fd5b50610213610399366004612293565b610735565b3480156103aa57600080fd5b506102136103b9366004612293565b6107c3565b3480156103ca57600080fd5b506005546102bd906001600160a01b031681565b3480156103ea57600080fd5b50610213610868565b3480156103ff57600080fd5b506003546102bd906001600160a01b031681565b34801561041f57600080fd5b506001546001600160a01b03166102bd565b34801561043d57600080fd5b506000546001600160a01b031615610305565b34801561045c57600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b5061030561049f366004612293565b6108c3565b3480156104b057600080fd5b506004546102bd906001600160a01b031681565b3480156104d057600080fd5b506102136104df366004612249565b6108cd565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105505760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055a8282610950565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161058d93929190612319565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fa5760405162461bcd60e51b81526004016105479060208082526004908201526310a0a6a160e11b604082015260600190565b61060381610997565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612357565b60405180910390a150565b6000546001600160a01b0316331461066a576040516311a8a1bb60e31b815260040160405180910390fd5b610673816109b0565b50565b6000546001600160a01b031633146106a1576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036106c457604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106d69190612397565b116106f4576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561071e576040516323295ef960e01b815260040160405180910390fd5b600154610733906001600160a01b03166109c2565b565b6006546001600160a01b0316156107a15760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610547565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107ee576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561081357506001600160a01b03811615155b15610831576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361085f57604051634a2fb73f60e11b815260040160405180910390fd5b61067381610a21565b6001546001600160a01b03163314610893576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108a59190612397565b1161071e5760405163d39c12bb60e01b815260040160405180910390fd5b6000805b92915050565b60006108d882610a6f565b90506108e381610d55565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80511561098e5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610547565b6108e382610e76565b6040516316c2fdb560e21b815260040160405180910390fd5b6109b9816108e7565b61067381610735565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610a7c83610edf565b90506000610a8982610f3e565b90506000610a9683610f67565b9050600081610aa484610f90565b610aad8661114e565b604051602001610abf939291906123aa565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610b435760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610547565b6000818152600760205260408120805460ff19166001179055610b658561116a565b90506000610b72826112b4565b9050610b7d81611344565b6006546001600160a01b03908116911614610be85760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610547565b6000610bf38761136d565b9050610c13610c03846020015190565b87610c0d8a611389565b846113a5565b610c6b5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610547565b610c9985610c7889611658565b610c818a611674565b84610c8b8c611690565b610c948d6116ac565b6116c8565b506000610ca5836117ee565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610cdb610cd683600061182a565b611862565b14610d285760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610547565b6000610d33846118dd565b806020019051810190610d4691906123d7565b9b9a5050505050505050505050565b8051602014610d905760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610547565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610de98461244e565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610e2d57600080fd5b505af1158015610e41573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612357565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610eaa931691869101612472565b600060405180830381600087803b158015610ec457600080fd5b505af1158015610ed8573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610f29610f248460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6118f9565b60408051602081019091529081529392505050565b60606108c78260000151600881518110610f5a57610f5a612496565b6020026020010151611a0f565b60006108c78260000151600281518110610f8357610f83612496565b6020026020010151611862565b604080516020810190915260008152815160609190156108c757600080610fb8600086611aac565b60f81c90506001811480610fcf57508060ff166003145b1561107757600185516002610fe491906124ac565b610fee9190612397565b67ffffffffffffffff81111561100657611006612120565b6040519080825280601f01601f191660200182016040528015611030576020820181803683370190505b5092506000611040600187611aac565b9050808460008151811061105657611056612496565b60200101906001600160f81b031916908160001a90535060019250506110db565b60028551600261108791906124ac565b6110919190612397565b67ffffffffffffffff8111156110a9576110a9612120565b6040519080825280601f01601f1916602001820160405280156110d3576020820181803683370190505b509250600091505b60ff82165b83518110156111455761110a6110f960ff851683612397565b6111049060026124c3565b87611aac565b84828151811061111c5761111c612496565b60200101906001600160f81b031916908160001a9053508061113d816124d6565b9150506110e0565b50505092915050565b60006108c78260000151600981518110610f8357610f83612496565b61118e60405180606001604052806060815260200160608152602001600081525090565b6111a88260000151600681518110610f5a57610f5a612496565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111de81611b2d565b156111f3576111ec816118f9565b82526112a0565b6020820151805160009061120990600190612397565b67ffffffffffffffff81111561122157611221612120565b6040519080825280601f01601f19166020018201604052801561124b576020820181803683370190505b50905060008083602101915082602001905061126982828551611b68565b604080518082018252600080825260209182015281518083019092528451825280850190820152611299906118f9565b8652505050505b6112a98361114e565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061130283600001516003815181106112f5576112f5612496565b60200260200101516118f9565b83604001518151811061131757611317612496565b60200260200101519050604051806040016040528082815260200161133b836118f9565b90529392505050565b60006108c7826020015160008151811061136057611360612496565b6020026020010151611bf3565b60006108c78260000151600581518110610f8357610f83612496565b60606108c78260000151600781518110610f5a57610f5a612496565b6000806113d98460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113e6826118f9565b9050606080856000806113f88b610f90565b90508051600003611413576000975050505050505050611650565b60005b865181101561164757815183111561143957600098505050505050505050611650565b61145b87828151811061144e5761144e612496565b6020026020010151611c0d565b95508580519060200120841461147c57600098505050505050505050611650565b6114918782815181106112f5576112f5612496565b9450845160110361156357815183036114f0578c805190602001206114c286601081518110610f5a57610f5a612496565b80519060200120036114df57600198505050505050505050611650565b600098505050505050505050611650565b600082848151811061150457611504612496565b016020015160f81c905060108111156115295760009950505050505050505050611650565b61154e868260ff168151811061154157611541612496565b6020026020010151611c8c565b945061155b6001856124c3565b935050611635565b84516002036114df57600061158e61158787600081518110610f5a57610f5a612496565b8486611cba565b835190915061159d82866124c3565b036115f0578d805190602001206115c087600181518110610f5a57610f5a612496565b80519060200120036115de5760019950505050505050505050611650565b60009950505050505050505050611650565b8060000361160a5760009950505050505050505050611650565b61161481856124c3565b935061162c8660018151811061154157611541612496565b94506116359050565b8061163f816124d6565b915050611416565b50505050505050505b949350505050565b60006108c78260000151600381518110610f8357610f83612496565b60006108c78260000151600481518110610f8357610f83612496565b60006108c78260000151600081518110610f8357610f83612496565b60606108c78260000151600181518110610f5a57610f5a612496565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561171a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173e91906124ef565b5093505092509250611795828b6117559190612397565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611dc2565b6117e15760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610547565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061182284602001516001815181106112f5576112f5612496565b905292915050565b6040805180820190915260008082526020820152825180518390811061185257611852612496565b6020026020010151905092915050565b80516000901580159061187757508151602110155b61188057600080fd5b600061188f8360200151611f2a565b905060008184600001516118a39190612397565b90506000808386602001516118b891906124c3565b90508051915060208310156118d457826020036101000a820491505b50949350505050565b60606108c78260200151600281518110610f5a57610f5a612496565b606061190482611b2d565b61190d57600080fd5b600061191883611fb2565b905060008167ffffffffffffffff81111561193557611935612120565b60405190808252806020026020018201604052801561197a57816020015b60408051808201909152600080825260208201528152602001906001900390816119535790505b509050600061198c8560200151611f2a565b856020015161199b91906124c3565b90506000805b84811015611a04576119b283612037565b91506040518060400160405280838152602001848152508482815181106119db576119db612496565b60209081029190910101526119f082846124c3565b9250806119fc816124d6565b9150506119a1565b509195945050505050565b8051606090611a1d57600080fd5b6000611a2c8360200151611f2a565b90506000818460000151611a409190612397565b905060008167ffffffffffffffff811115611a5d57611a5d612120565b6040519080825280601f01601f191660200182016040528015611a87576020820181803683370190505b50905060008160200190506118d4848760200151611aa591906124c3565b82856120db565b6000611ab9600284612552565b15611af357601082611acc600286612566565b81518110611adc57611adc612496565b0160200151611aee919060f81c61257a565b611b23565b601082611b01600286612566565b81518110611b1157611b11612496565b0160200151611b23919060f81c61259c565b60f81b9392505050565b80516000908103611b4057506000919050565b6020820151805160001a9060c0821015611b5e575060009392505050565b5060019392505050565b80600003611b7557505050565b60208110611bad5782518252611b8c6020846124c3565b9250611b996020836124c3565b9150611ba6602082612397565b9050611b75565b80600003611bba57505050565b60006001611bc9836020612397565b611bd5906101006126a2565b611bdf9190612397565b935183518516941916939093179091525050565b8051600090601514611c0457600080fd5b6108c782611862565b60606000826000015167ffffffffffffffff811115611c2e57611c2e612120565b6040519080825280601f01601f191660200182016040528015611c58576020820181803683370190505b5090508051600003611c6a5792915050565b6000816020019050611c8584602001518286600001516120db565b5092915050565b8051600090602114611c9d57600080fd5b60008083602001516001611cb191906124c3565b51949350505050565b60008080611cc786610f90565b90506000815167ffffffffffffffff811115611ce557611ce5612120565b6040519080825280601f01601f191660200182016040528015611d0f576020820181803683370190505b509050845b8251611d2090876124c3565b811015611d93576000878281518110611d3b57611d3b612496565b01602001516001600160f81b03191690508083611d588985612397565b81518110611d6857611d68612496565b60200101906001600160f81b031916908160001a905350508080611d8b906124d6565b915050611d14565b508080519060200120828051906020012003611db25781519250611db7565b600092505b509095945050505050565b600060208251611dd29190612552565b15611e165760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610547565b600060208351611e269190612566565b9050611e338160026126a2565b8510611e795760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610547565b60008660205b85518111611f1c57858101519250611e98600289612552565b600003611ed0576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611efd565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611f08600289612566565b9750611f156020826124c3565b9050611e7f565b509094149695505050505050565b8051600090811a6080811015611f435750600092915050565b60b8811080611f5e575060c08110801590611f5e575060f881105b15611f6c5750600192915050565b60c0811015611fa057611f81600160b86126ae565b611f8e9060ff1682612397565b611f999060016124c3565b9392505050565b611f81600160f86126ae565b50919050565b80516000908103611fc557506000919050565b600080611fd58460200151611f2a565b8460200151611fe491906124c3565b9050600084600001518560200151611ffc91906124c3565b90505b8082101561202e5761201082612037565b61201a90836124c3565b915082612026816124d6565b935050611fff565b50909392505050565b80516000908190811a60808110156120525760019150611c85565b60b881101561207857612066608082612397565b6120719060016124c3565b9150611c85565b60c08110156120a55760b78103600185019450806020036101000a85510460018201810193505050611c85565b60f88110156120b95761206660c082612397565b60019390930151602084900360f7016101000a900490920160f5190192915050565b806000036120e857505050565b60208110611bad57825182526120ff6020846124c3565b925061210c6020836124c3565b9150612119602082612397565b90506120e8565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561215f5761215f612120565b604052919050565b600067ffffffffffffffff82111561218157612181612120565b50601f01601f191660200190565b600082601f8301126121a057600080fd5b81356121b36121ae82612167565b612136565b8181528460208386010111156121c857600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121f857600080fd5b823567ffffffffffffffff8082111561221057600080fd5b61221c8683870161218f565b9350602085013591508082111561223257600080fd5b5061223f8582860161218f565b9150509250929050565b60006020828403121561225b57600080fd5b813567ffffffffffffffff81111561227257600080fd5b6116508482850161218f565b6001600160a01b038116811461067357600080fd5b6000602082840312156122a557600080fd5b8135611f998161227e565b6000602082840312156122c257600080fd5b5035919050565b60005b838110156122e45781810151838201526020016122cc565b50506000910152565b600081518084526123058160208601602086016122c9565b601f01601f19169290920160200192915050565b60608152600061232c60608301866122ed565b828103602084015261233e81866122ed565b91505060018060a01b0383166040830152949350505050565b60408152600061236a60408301856122ed565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108c7576108c7612381565b838152600083516123c28160208501602088016122c9565b60209201918201929092526040019392505050565b6000602082840312156123e957600080fd5b815167ffffffffffffffff81111561240057600080fd5b8201601f8101841361241157600080fd5b805161241f6121ae82612167565b81815285602083850101111561243457600080fd5b6124458260208301602086016122c9565b95945050505050565b80516020808301519190811015611fac5760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611650908301846122ed565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108c7576108c7612381565b808201808211156108c7576108c7612381565b6000600182016124e8576124e8612381565b5060010190565b600080600080600060a0868803121561250757600080fd5b85519450602086015193506040860151925060608601519150608086015161252e8161227e565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826125615761256161253c565b500690565b6000826125755761257561253c565b500490565b600060ff83168061258d5761258d61253c565b8060ff84160691505092915050565b600060ff8316806125af576125af61253c565b8060ff84160491505092915050565b600181815b808511156125f95781600019048211156125df576125df612381565b808516156125ec57918102915b93841c93908002906125c3565b509250929050565b600082612610575060016108c7565b8161261d575060006108c7565b8160018114612633576002811461263d57612659565b60019150506108c7565b60ff84111561264e5761264e612381565b50506001821b6108c7565b5060208310610133831016604e8410600b841016171561267c575081810a6108c7565b61268683836125be565b806000190482111561269a5761269a612381565b029392505050565b6000611f998383612601565b60ff82811682821603908111156108c7576108c761238156fea2646970667358221220be53db6299cadea51e20d3f57ab8dd4e43377e50075036863a836c362a059c9064736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
