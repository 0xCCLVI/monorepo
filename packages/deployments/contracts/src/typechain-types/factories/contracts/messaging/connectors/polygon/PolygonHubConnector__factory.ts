/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ping",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b8c38038062002b8c83398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b6200086f1760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e05161274762000445600039600081816101b40152610d4f0152600081816102ce015281816105020152610d2801526000818161047501526105b70152600061024701526127476000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063d1851c921161006f578063d1851c9214610426578063d232c22014610444578063d69f9d6114610463578063db1b765914610497578063de9b771f146104b7578063f953cec7146104d757600080fd5b80638da5cb5b14610373578063972c492814610391578063b1f8100d146103b1578063c0857ba0146103d1578063c5b350df146103f1578063cc3942831461040657600080fd5b80635bd11efc116101085780635bd11efc146102695780635c36b186146102895780635f61e3ec146102bc578063607f2d42146103085780636a42b8f814610348578063715018a61461035e57600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e36600461221c565b6104f7565b005b34801561022157600080fd5b50610213610230366004612280565b6105ac565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b506102136102843660046122ca565b610652565b34801561029557600080fd5b506040805180820182526004815263706f6e6760e01b602082015290516101999190612337565b3480156102c857600080fd5b506102f07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b34801561031457600080fd5b5061033861032336600461234a565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561035457600080fd5b5062093a8061018f565b34801561036a57600080fd5b50610213610689565b34801561037f57600080fd5b506000546001600160a01b03166102f0565b34801561039d57600080fd5b506006546102f0906001600160a01b031681565b3480156103bd57600080fd5b506102136103cc3660046122ca565b61073d565b3480156103dd57600080fd5b506005546102f0906001600160a01b031681565b3480156103fd57600080fd5b506102136107db565b34801561041257600080fd5b506003546102f0906001600160a01b031681565b34801561043257600080fd5b506001546001600160a01b03166102f0565b34801561045057600080fd5b506000546001600160a01b031615610338565b34801561046f57600080fd5b506102f07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104a357600080fd5b506103386104b23660046122ca565b61084b565b3480156104c357600080fd5b506004546102f0906001600160a01b031681565b3480156104e357600080fd5b506102136104f2366004612280565b610855565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105635760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61056d82826108d8565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516105a093929190612363565b60405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461060d5760405162461bcd60e51b815260040161055a9060208082526004908201526310a0a6a160e11b604082015260600190565b6106168161091f565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106479291906123a1565b60405180910390a150565b6000546001600160a01b0316331461067d576040516311a8a1bb60e31b815260040160405180910390fd5b61068681610938565b50565b6000546001600160a01b031633146106b4576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426106c691906123e1565b116106e4576040516324e0285f60e21b815260040160405180910390fd5b60025460000361070757604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610731576040516323295ef960e01b815260040160405180910390fd5b61073b600061094a565b565b6000546001600160a01b03163314610768576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610786575060025415155b156107a4576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036107d257604051634a2fb73f60e11b815260040160405180910390fd5b610686816109af565b6001546001600160a01b03163314610806576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261081891906123e1565b11610836576040516324e0285f60e21b815260040160405180910390fd5b60015461073b906001600160a01b031661094a565b6000805b92915050565b6000610860826109fd565b905061086b81610ce3565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109165760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b604482015260640161055a565b61086b82610e04565b6040516316c2fdb560e21b815260040160405180910390fd5b6109418161086f565b61068681610e6d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610a0a83610efb565b90506000610a1782610f5a565b90506000610a2483610f83565b9050600081610a3284610fac565b610a3b86611162565b604051602001610a4d939291906123f4565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610ad15760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b606482015260840161055a565b6000818152600760205260408120805460ff19166001179055610af38561117e565b90506000610b00826112c8565b9050610b0b81611358565b6006546001600160a01b03908116911614610b765760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b606482015260840161055a565b6000610b8187611381565b9050610ba1610b91846020015190565b87610b9b8a61139d565b846113b9565b610bf95760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b606482015260840161055a565b610c2785610c068961166c565b610c0f8a611688565b84610c198c6116a4565b610c228d6116c0565b6116dc565b506000610c3383611802565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610c69610c6483600061183e565b611876565b14610cb65760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e415455524500604482015260640161055a565b6000610cc1846118f0565b806020019051810190610cd49190612421565b9b9a5050505050505050505050565b8051602014610d1e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161055a565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610d7784612498565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610dbb57600080fd5b505af1158015610dcf573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516106479291906123a1565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610e389316918691016124bc565b600060405180830381600087803b158015610e5257600080fd5b505af1158015610e66573d6000803e3d6000fd5b5050505050565b6006546001600160a01b031615610ed95760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161055a565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6040805160208101909152606081526000610f45610f408460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b61190c565b60408051602081019091529081529392505050565b606061084f8260000151600881518110610f7657610f766124e0565b6020026020010151611a18565b600061084f8260000151600281518110610f9f57610f9f6124e0565b6020026020010151611876565b6040805160208101909152600081528151606091901561084f57600080610fd4600086611ab5565b60f81c90506001811480610feb57508060ff166003145b156110935760018551600261100091906124f6565b61100a91906123e1565b67ffffffffffffffff81111561102257611022612157565b6040519080825280601f01601f19166020018201604052801561104c576020820181803683370190505b509250600061105c600187611ab5565b90508084600081518110611072576110726124e0565b60200101906001600160f81b031916908160001a90535060019250506110f7565b6002855160026110a391906124f6565b6110ad91906123e1565b67ffffffffffffffff8111156110c5576110c5612157565b6040519080825280601f01601f1916602001820160405280156110ef576020820181803683370190505b509250600091505b825160ff83165b818110156111585761112761111660ff8616836123e1565b61112190600261250d565b88611ab5565b858281518110611139576111396124e0565b60200101906001600160f81b031916908160001a9053506001016110fe565b5050505092915050565b600061084f8260000151600981518110610f9f57610f9f6124e0565b6111a260405180606001604052806060815260200160608152602001600081525090565b6111bc8260000151600681518110610f7657610f766124e0565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111f281611b36565b15611207576112008161190c565b82526112b4565b6020820151805160009061121d906001906123e1565b67ffffffffffffffff81111561123557611235612157565b6040519080825280601f01601f19166020018201604052801561125f576020820181803683370190505b50905060008083602101915082602001905061127d82828551611b71565b6040805180820182526000808252602091820152815180830190925284518252808501908201526112ad9061190c565b8652505050505b6112bd83611162565b604083015250919050565b6040805160808101825260009181018281526060808301939093528152602081019190915260006113168360000151600381518110611309576113096124e0565b602002602001015161190c565b83604001518151811061132b5761132b6124e0565b60200260200101519050604051806040016040528082815260200161134f8361190c565b90529392505050565b600061084f8260200151600081518110611374576113746124e0565b6020026020010151611c0a565b600061084f8260000151600581518110610f9f57610f9f6124e0565b606061084f8260000151600781518110610f7657610f766124e0565b6000806113ed8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113fa8261190c565b90506060808560008061140c8b610fac565b90508051600003611427576000975050505050505050611664565b855160005b8181101561165a57825184111561144f5760009950505050505050505050611664565b611471888281518110611464576114646124e0565b6020026020010151611c24565b9650868051906020012085146114935760009950505050505050505050611664565b6114a8888281518110611309576113096124e0565b9550855160110361157d5782518403611509578d805190602001206114d987601081518110610f7657610f766124e0565b80519060200120036114f75760019950505050505050505050611664565b60009950505050505050505050611664565b600083858151811061151d5761151d6124e0565b016020015160f81c905060108111156115435760009a5050505050505050505050611664565b611568878260ff168151811061155b5761155b6124e0565b6020026020010151611ca3565b955061157560018661250d565b945050611652565b85516002036114f75760006115a86115a188600081518110610f7657610f766124e0565b8587611cd1565b84519091506115b7828761250d565b0361160c578e805190602001206115da88600181518110610f7657610f766124e0565b80519060200120036115f95760019a5050505050505050505050611664565b60009a5050505050505050505050611664565b806000036116275760009a5050505050505050505050611664565b611631818661250d565b94506116498760018151811061155b5761155b6124e0565b95506116529050565b60010161142c565b5050505050505050505b949350505050565b600061084f8260000151600381518110610f9f57610f9f6124e0565b600061084f8260000151600481518110610f9f57610f9f6124e0565b600061084f8260000151600081518110610f9f57610f9f6124e0565b606061084f8260000151600181518110610f7657610f766124e0565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561172e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117529190612520565b50935050925092506117a9828b61176991906123e1565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611dd5565b6117f55760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f48454144455200000000604482015260640161055a565b9998505050505050505050565b60408051602081019091526060815260405180602001604052806118368460200151600181518110611309576113096124e0565b905292915050565b60408051808201909152600080825260208201528251805183908110611866576118666124e0565b6020026020010151905092915050565b80516000901580159061188a575081516022115b61189357600080fd5b60006118a28360200151611f47565b905060008184600001516118b691906123e1565b90506000808386602001516118cb919061250d565b90508051915060208310156118e757826020036101000a820491505b50949350505050565b606061084f8260200151600281518110610f7657610f766124e0565b606061191782611b36565b61192057600080fd5b600061192b83611fdb565b905060008167ffffffffffffffff81111561194857611948612157565b60405190808252806020026020018201604052801561198d57816020015b60408051808201909152600080825260208201528152602001906001900390816119665790505b509050600061199f8560200151611f47565b85602001516119ae919061250d565b90506000805b84811015611a0d576119c583612060565b91506040518060400160405280838152602001848152508482815181106119ee576119ee6124e0565b6020908102919091010152611a03828461250d565b92506001016119b4565b509195945050505050565b8051606090611a2657600080fd5b6000611a358360200151611f47565b90506000818460000151611a4991906123e1565b905060008167ffffffffffffffff811115611a6657611a66612157565b6040519080825280601f01601f191660200182016040528015611a90576020820181803683370190505b50905060008160200190506118e7848760200151611aae919061250d565b8285612104565b6000611ac2600284612583565b15611afc57601082611ad5600286612597565b81518110611ae557611ae56124e0565b0160200151611af7919060f81c6125ab565b611b2c565b601082611b0a600286612597565b81518110611b1a57611b1a6124e0565b0160200151611b2c919060f81c6125cd565b60f81b9392505050565b80516000908103611b4957506000919050565b6020820151805160001a9060c0821015611b67575060009392505050565b5060019392505050565b80600003611b7e57505050565b611b8a600160206125ef565b60ff16811115611bc45782518252611ba360208461250d565b9250611bb060208361250d565b9150611bbd6020826123e1565b9050611b7e565b80600003611bd157505050565b60006001611be08360206123e1565b611bec906101006126ec565b611bf691906123e1565b935183518516941916939093179091525050565b8051600090601514611c1b57600080fd5b61084f82611876565b60606000826000015167ffffffffffffffff811115611c4557611c45612157565b6040519080825280601f01601f191660200182016040528015611c6f576020820181803683370190505b5090508051600003611c815792915050565b6000816020019050611c9c8460200151828660000151612104565b5092915050565b8051600090602114611cb457600080fd5b60008083602001516001611cc8919061250d565b51949350505050565b60008080611cde86610fac565b90506000815167ffffffffffffffff811115611cfc57611cfc612157565b6040519080825280601f01601f191660200182016040528015611d26576020820181803683370190505b5090506000825186611d38919061250d565b9050855b81811015611da5576000888281518110611d5857611d586124e0565b01602001516001600160f81b03191690508084611d758a856123e1565b81518110611d8557611d856124e0565b60200101906001600160f81b031916908160001a90535050600101611d3c565b508180519060200120838051906020012003611dc45782519350611dc9565b600093505b50919695505050505050565b600060208251611de59190612583565b15611e295760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b604482015260640161055a565b600060208351611e399190612597565b9050611e468160026126ec565b8510611e8c5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b604482015260640161055a565b825160009087908290611ea090600161250d565b905060205b81811015611f3857868101519350611ebe60028a612583565b600003611ef6576040805160208101859052908101859052606001604051602081830303815290604052805190602001209250611f23565b60408051602081018690529081018490526060016040516020818303038152906040528051906020012092505b611f2e60028a612597565b9850602001611ea5565b50509094149695505050505050565b8051600090811a6080811015611f605750600092915050565b60b8811080611f875750611f76600160c06125ef565b60ff1681118015611f87575060f881105b15611f955750600192915050565b60c0811015611fc957611faa600160b86125ef565b611fb79060ff16826123e1565b611fc290600161250d565b9392505050565b611faa600160f86125ef565b50919050565b80516000908103611fee57506000919050565b600080611ffe8460200151611f47565b846020015161200d919061250d565b9050600084600001518560200151612025919061250d565b90505b808210156120575761203982612060565b612043908361250d565b91508261204f816126f8565b935050612028565b50909392505050565b80516000908190811a608081101561207b5760019150611c9c565b60b88110156120a15761208f6080826123e1565b61209a90600161250d565b9150611c9c565b60c08110156120ce5760b78103600185019450806020036101000a85510460018201810193505050611c9c565b60f88110156120e25761208f60c0826123e1565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361211157505050565b61211d600160206125ef565b60ff16811115611bc4578251825261213660208461250d565b925061214360208361250d565b91506121506020826123e1565b9050612111565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561219657612196612157565b604052919050565b600067ffffffffffffffff8211156121b8576121b8612157565b50601f01601f191660200190565b600082601f8301126121d757600080fd5b81356121ea6121e58261219e565b61216d565b8181528460208386010111156121ff57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561222f57600080fd5b823567ffffffffffffffff8082111561224757600080fd5b612253868387016121c6565b9350602085013591508082111561226957600080fd5b50612276858286016121c6565b9150509250929050565b60006020828403121561229257600080fd5b813567ffffffffffffffff8111156122a957600080fd5b611664848285016121c6565b6001600160a01b038116811461068657600080fd5b6000602082840312156122dc57600080fd5b8135611fc2816122b5565b60005b838110156123025781810151838201526020016122ea565b50506000910152565b600081518084526123238160208601602086016122e7565b601f01601f19169290920160200192915050565b602081526000611fc2602083018461230b565b60006020828403121561235c57600080fd5b5035919050565b606081526000612376606083018661230b565b8281036020840152612388818661230b565b91505060018060a01b0383166040830152949350505050565b6040815260006123b4604083018561230b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561084f5761084f6123cb565b8381526000835161240c8160208501602088016122e7565b60209201918201929092526040019392505050565b60006020828403121561243357600080fd5b815167ffffffffffffffff81111561244a57600080fd5b8201601f8101841361245b57600080fd5b80516124696121e58261219e565b81815285602083850101111561247e57600080fd5b61248f8260208301602086016122e7565b95945050505050565b80516020808301519190811015611fd55760001960209190910360031b1b16919050565b6001600160a01b03831681526040602082018190526000906116649083018461230b565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761084f5761084f6123cb565b8082018082111561084f5761084f6123cb565b600080600080600060a0868803121561253857600080fd5b85519450602086015193506040860151925060608601519150608086015161255f816122b5565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826125925761259261256d565b500690565b6000826125a6576125a661256d565b500490565b600060ff8316806125be576125be61256d565b8060ff84160691505092915050565b600060ff8316806125e0576125e061256d565b8060ff84160491505092915050565b60ff828116828216039081111561084f5761084f6123cb565b600181815b80851115612643578160001904821115612629576126296123cb565b8085161561263657918102915b93841c939080029061260d565b509250929050565b60008261265a5750600161084f565b816126675750600061084f565b816001811461267d5760028114612687576126a3565b600191505061084f565b60ff841115612698576126986123cb565b50506001821b61084f565b5060208310610133831016604e8410600b84101617156126c6575081810a61084f565b6126d08383612608565b80600019048211156126e4576126e46123cb565b029392505050565b6000611fc2838361264b565b60006001820161270a5761270a6123cb565b506001019056fea2646970667358221220c05b1faea9120db04b4f35c82265923becb22eb5771f2afabe444453473e55ba64736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
