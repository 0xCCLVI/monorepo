/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b2f38038062002b2f83398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b620008ea1760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e0516126ea62000445600039600081816101b40152610dca01526000818161029b015281816104ef0152610da301526000818161046201526105a40152600061024701526126ea6000f3fe60806040526004361061014f5760003560e01c8063972c4928116100b6578063d1851c921161006f578063d1851c9214610413578063d232c22014610431578063d69f9d6114610450578063db1b765914610484578063de9b771f146104a4578063f953cec7146104c457600080fd5b8063972c49281461035e578063aea4e49e1461037e578063b1f8100d1461039e578063c0857ba0146103be578063c5b350df146103de578063cc394283146103f357600080fd5b80635bd11efc116101085780635bd11efc146102695780635f61e3ec14610289578063607f2d42146102d55780636a42b8f814610315578063715018a61461032b5780638da5cb5b1461034057600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e3660046121d2565b6104e4565b005b34801561022157600080fd5b50610213610230366004612236565b610599565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b50610213610284366004612280565b61063f565b34801561029557600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b3480156102e157600080fd5b506103056102f036600461229d565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561032157600080fd5b5062093a8061018f565b34801561033757600080fd5b50610213610676565b34801561034c57600080fd5b506000546001600160a01b03166102bd565b34801561036a57600080fd5b506006546102bd906001600160a01b031681565b34801561038a57600080fd5b50610213610399366004612280565b61072a565b3480156103aa57600080fd5b506102136103b9366004612280565b6107b8565b3480156103ca57600080fd5b506005546102bd906001600160a01b031681565b3480156103ea57600080fd5b50610213610856565b3480156103ff57600080fd5b506003546102bd906001600160a01b031681565b34801561041f57600080fd5b506001546001600160a01b03166102bd565b34801561043d57600080fd5b506000546001600160a01b031615610305565b34801561045c57600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b5061030561049f366004612280565b6108c6565b3480156104b057600080fd5b506004546102bd906001600160a01b031681565b3480156104d057600080fd5b506102136104df366004612236565b6108d0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105505760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055a8282610953565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161058d93929190612306565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fa5760405162461bcd60e51b81526004016105479060208082526004908201526310a0a6a160e11b604082015260600190565b6106038161099a565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612344565b60405180910390a150565b6000546001600160a01b0316331461066a576040516311a8a1bb60e31b815260040160405180910390fd5b610673816109b3565b50565b6000546001600160a01b031633146106a1576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426106b39190612384565b116106d1576040516324e0285f60e21b815260040160405180910390fd5b6002546000036106f457604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561071e576040516323295ef960e01b815260040160405180910390fd5b61072860006109c5565b565b6006546001600160a01b0316156107965760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610547565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107e3576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610801575060025415155b1561081f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361084d57604051634a2fb73f60e11b815260040160405180910390fd5b61067381610a2a565b6001546001600160a01b03163314610881576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108939190612384565b116108b1576040516324e0285f60e21b815260040160405180910390fd5b600154610728906001600160a01b03166109c5565b6000805b92915050565b60006108db82610a78565b90506108e681610d5e565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109915760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610547565b6108e682610e7f565b6040516316c2fdb560e21b815260040160405180910390fd5b6109bc816108ea565b6106738161072a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610a8583610ee8565b90506000610a9282610f47565b90506000610a9f83610f70565b9050600081610aad84610f99565b610ab68661114f565b604051602001610ac893929190612397565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610b4c5760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610547565b6000818152600760205260408120805460ff19166001179055610b6e8561116b565b90506000610b7b826112b5565b9050610b8681611345565b6006546001600160a01b03908116911614610bf15760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610547565b6000610bfc8761136e565b9050610c1c610c0c846020015190565b87610c168a61138a565b846113a6565b610c745760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610547565b610ca285610c8189611659565b610c8a8a611675565b84610c948c611691565b610c9d8d6116ad565b6116c9565b506000610cae836117ef565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610ce4610cdf83600061182b565b611863565b14610d315760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610547565b6000610d3c846118de565b806020019051810190610d4f91906123c4565b9b9a5050505050505050505050565b8051602014610d995760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610547565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610df28461243b565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610e3657600080fd5b505af1158015610e4a573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612344565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610eb393169186910161245f565b600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610f32610f2d8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6118fa565b60408051602081019091529081529392505050565b60606108ca8260000151600881518110610f6357610f63612483565b6020026020010151611a06565b60006108ca8260000151600281518110610f8c57610f8c612483565b6020026020010151611863565b604080516020810190915260008152815160609190156108ca57600080610fc1600086611aa3565b60f81c90506001811480610fd857508060ff166003145b1561108057600185516002610fed9190612499565b610ff79190612384565b67ffffffffffffffff81111561100f5761100f61210d565b6040519080825280601f01601f191660200182016040528015611039576020820181803683370190505b5092506000611049600187611aa3565b9050808460008151811061105f5761105f612483565b60200101906001600160f81b031916908160001a90535060019250506110e4565b6002855160026110909190612499565b61109a9190612384565b67ffffffffffffffff8111156110b2576110b261210d565b6040519080825280601f01601f1916602001820160405280156110dc576020820181803683370190505b509250600091505b825160ff83165b818110156111455761111461110360ff861683612384565b61110e9060026124b0565b88611aa3565b85828151811061112657611126612483565b60200101906001600160f81b031916908160001a9053506001016110eb565b5050505092915050565b60006108ca8260000151600981518110610f8c57610f8c612483565b61118f60405180606001604052806060815260200160608152602001600081525090565b6111a98260000151600681518110610f6357610f63612483565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111df81611b24565b156111f4576111ed816118fa565b82526112a1565b6020820151805160009061120a90600190612384565b67ffffffffffffffff8111156112225761122261210d565b6040519080825280601f01601f19166020018201604052801561124c576020820181803683370190505b50905060008083602101915082602001905061126a82828551611b5f565b60408051808201825260008082526020918201528151808301909252845182528085019082015261129a906118fa565b8652505050505b6112aa8361114f565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061130383600001516003815181106112f6576112f6612483565b60200260200101516118fa565b83604001518151811061131857611318612483565b60200260200101519050604051806040016040528082815260200161133c836118fa565b90529392505050565b60006108ca826020015160008151811061136157611361612483565b6020026020010151611bea565b60006108ca8260000151600581518110610f8c57610f8c612483565b60606108ca8260000151600781518110610f6357610f63612483565b6000806113da8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113e7826118fa565b9050606080856000806113f98b610f99565b90508051600003611414576000975050505050505050611651565b855160005b8181101561164757825184111561143c5760009950505050505050505050611651565b61145e88828151811061145157611451612483565b6020026020010151611c04565b9650868051906020012085146114805760009950505050505050505050611651565b6114958882815181106112f6576112f6612483565b9550855160110361156a57825184036114f6578d805190602001206114c687601081518110610f6357610f63612483565b80519060200120036114e45760019950505050505050505050611651565b60009950505050505050505050611651565b600083858151811061150a5761150a612483565b016020015160f81c905060108111156115305760009a5050505050505050505050611651565b611555878260ff168151811061154857611548612483565b6020026020010151611c83565b95506115626001866124b0565b94505061163f565b85516002036114e457600061159561158e88600081518110610f6357610f63612483565b8587611cb1565b84519091506115a482876124b0565b036115f9578e805190602001206115c788600181518110610f6357610f63612483565b80519060200120036115e65760019a5050505050505050505050611651565b60009a5050505050505050505050611651565b806000036116145760009a5050505050505050505050611651565b61161e81866124b0565b94506116368760018151811061154857611548612483565b955061163f9050565b600101611419565b5050505050505050505b949350505050565b60006108ca8260000151600381518110610f8c57610f8c612483565b60006108ca8260000151600481518110610f8c57610f8c612483565b60006108ca8260000151600081518110610f8c57610f8c612483565b60606108ca8260000151600181518110610f6357610f63612483565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561171b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173f91906124c3565b5093505092509250611796828b6117569190612384565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611db5565b6117e25760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610547565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061182384602001516001815181106112f6576112f6612483565b905292915050565b6040805180820190915260008082526020820152825180518390811061185357611853612483565b6020026020010151905092915050565b80516000901580159061187857508151602110155b61188157600080fd5b60006118908360200151611f17565b905060008184600001516118a49190612384565b90506000808386602001516118b991906124b0565b90508051915060208310156118d557826020036101000a820491505b50949350505050565b60606108ca8260200151600281518110610f6357610f63612483565b606061190582611b24565b61190e57600080fd5b600061191983611f9f565b905060008167ffffffffffffffff8111156119365761193661210d565b60405190808252806020026020018201604052801561197b57816020015b60408051808201909152600080825260208201528152602001906001900390816119545790505b509050600061198d8560200151611f17565b856020015161199c91906124b0565b90506000805b848110156119fb576119b383612024565b91506040518060400160405280838152602001848152508482815181106119dc576119dc612483565b60209081029190910101526119f182846124b0565b92506001016119a2565b509195945050505050565b8051606090611a1457600080fd5b6000611a238360200151611f17565b90506000818460000151611a379190612384565b905060008167ffffffffffffffff811115611a5457611a5461210d565b6040519080825280601f01601f191660200182016040528015611a7e576020820181803683370190505b50905060008160200190506118d5848760200151611a9c91906124b0565b82856120c8565b6000611ab0600284612526565b15611aea57601082611ac360028661253a565b81518110611ad357611ad3612483565b0160200151611ae5919060f81c61254e565b611b1a565b601082611af860028661253a565b81518110611b0857611b08612483565b0160200151611b1a919060f81c612570565b60f81b9392505050565b80516000908103611b3757506000919050565b6020820151805160001a9060c0821015611b55575060009392505050565b5060019392505050565b80600003611b6c57505050565b60208110611ba45782518252611b836020846124b0565b9250611b906020836124b0565b9150611b9d602082612384565b9050611b6c565b80600003611bb157505050565b60006001611bc0836020612384565b611bcc90610100612676565b611bd69190612384565b935183518516941916939093179091525050565b8051600090601514611bfb57600080fd5b6108ca82611863565b60606000826000015167ffffffffffffffff811115611c2557611c2561210d565b6040519080825280601f01601f191660200182016040528015611c4f576020820181803683370190505b5090508051600003611c615792915050565b6000816020019050611c7c84602001518286600001516120c8565b5092915050565b8051600090602114611c9457600080fd5b60008083602001516001611ca891906124b0565b51949350505050565b60008080611cbe86610f99565b90506000815167ffffffffffffffff811115611cdc57611cdc61210d565b6040519080825280601f01601f191660200182016040528015611d06576020820181803683370190505b5090506000825186611d1891906124b0565b9050855b81811015611d85576000888281518110611d3857611d38612483565b01602001516001600160f81b03191690508084611d558a85612384565b81518110611d6557611d65612483565b60200101906001600160f81b031916908160001a90535050600101611d1c565b508180519060200120838051906020012003611da45782519350611da9565b600093505b50919695505050505050565b600060208251611dc59190612526565b15611e095760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610547565b600060208351611e19919061253a565b9050611e26816002612676565b8510611e6c5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610547565b8251600090879060205b818111611f0857868101519350611e8e60028a612526565b600003611ec6576040805160208101859052908101859052606001604051602081830303815290604052805190602001209250611ef3565b60408051602081018690529081018490526060016040516020818303038152906040528051906020012092505b611efe60028a61253a565b9850602001611e76565b50509094149695505050505050565b8051600090811a6080811015611f305750600092915050565b60b8811080611f4b575060c08110801590611f4b575060f881105b15611f595750600192915050565b60c0811015611f8d57611f6e600160b8612682565b611f7b9060ff1682612384565b611f869060016124b0565b9392505050565b611f6e600160f8612682565b50919050565b80516000908103611fb257506000919050565b600080611fc28460200151611f17565b8460200151611fd191906124b0565b9050600084600001518560200151611fe991906124b0565b90505b8082101561201b57611ffd82612024565b61200790836124b0565b9150826120138161269b565b935050611fec565b50909392505050565b80516000908190811a608081101561203f5760019150611c7c565b60b881101561206557612053608082612384565b61205e9060016124b0565b9150611c7c565b60c08110156120925760b78103600185019450806020036101000a85510460018201810193505050611c7c565b60f88110156120a65761205360c082612384565b60019390930151602084900360f7016101000a900490920160f5190192915050565b806000036120d557505050565b60208110611ba457825182526120ec6020846124b0565b92506120f96020836124b0565b9150612106602082612384565b90506120d5565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561214c5761214c61210d565b604052919050565b600067ffffffffffffffff82111561216e5761216e61210d565b50601f01601f191660200190565b600082601f83011261218d57600080fd5b81356121a061219b82612154565b612123565b8181528460208386010111156121b557600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121e557600080fd5b823567ffffffffffffffff808211156121fd57600080fd5b6122098683870161217c565b9350602085013591508082111561221f57600080fd5b5061222c8582860161217c565b9150509250929050565b60006020828403121561224857600080fd5b813567ffffffffffffffff81111561225f57600080fd5b6116518482850161217c565b6001600160a01b038116811461067357600080fd5b60006020828403121561229257600080fd5b8135611f868161226b565b6000602082840312156122af57600080fd5b5035919050565b60005b838110156122d15781810151838201526020016122b9565b50506000910152565b600081518084526122f28160208601602086016122b6565b601f01601f19169290920160200192915050565b60608152600061231960608301866122da565b828103602084015261232b81866122da565b91505060018060a01b0383166040830152949350505050565b60408152600061235760408301856122da565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108ca576108ca61236e565b838152600083516123af8160208501602088016122b6565b60209201918201929092526040019392505050565b6000602082840312156123d657600080fd5b815167ffffffffffffffff8111156123ed57600080fd5b8201601f810184136123fe57600080fd5b805161240c61219b82612154565b81815285602083850101111561242157600080fd5b6124328260208301602086016122b6565b95945050505050565b80516020808301519190811015611f995760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611651908301846122da565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108ca576108ca61236e565b808201808211156108ca576108ca61236e565b600080600080600060a086880312156124db57600080fd5b8551945060208601519350604086015192506060860151915060808601516125028161226b565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b60008261253557612535612510565b500690565b60008261254957612549612510565b500490565b600060ff83168061256157612561612510565b8060ff84160691505092915050565b600060ff83168061258357612583612510565b8060ff84160491505092915050565b600181815b808511156125cd5781600019048211156125b3576125b361236e565b808516156125c057918102915b93841c9390800290612597565b509250929050565b6000826125e4575060016108ca565b816125f1575060006108ca565b816001811461260757600281146126115761262d565b60019150506108ca565b60ff8411156126225761262261236e565b50506001821b6108ca565b5060208310610133831016604e8410600b8410161715612650575081810a6108ca565b61265a8383612592565b806000190482111561266e5761266e61236e565b029392505050565b6000611f8683836125d5565b60ff82811682821603908111156108ca576108ca61236e565b6000600182016126ad576126ad61236e565b506001019056fea26469706673582212206c8aa14c00c4780522836696faabac0d2d606915e843deb6c43d9338abe72a0e64736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
