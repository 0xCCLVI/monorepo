/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b4b38038062002b4b83398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b620008ea1760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e05161270662000445600039600081816101b40152610dca01526000818161029b015281816104ef0152610da301526000818161046201526105a40152600061024701526127066000f3fe60806040526004361061014f5760003560e01c8063972c4928116100b6578063d1851c921161006f578063d1851c9214610413578063d232c22014610431578063d69f9d6114610450578063db1b765914610484578063de9b771f146104a4578063f953cec7146104c457600080fd5b8063972c49281461035e578063aea4e49e1461037e578063b1f8100d1461039e578063c0857ba0146103be578063c5b350df146103de578063cc394283146103f357600080fd5b80635bd11efc116101085780635bd11efc146102695780635f61e3ec14610289578063607f2d42146102d55780636a42b8f814610315578063715018a61461032b5780638da5cb5b1461034057600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e3660046121ee565b6104e4565b005b34801561022157600080fd5b50610213610230366004612252565b610599565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b5061021361028436600461229c565b61063f565b34801561029557600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b3480156102e157600080fd5b506103056102f03660046122b9565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561032157600080fd5b5062093a8061018f565b34801561033757600080fd5b50610213610676565b34801561034c57600080fd5b506000546001600160a01b03166102bd565b34801561036a57600080fd5b506006546102bd906001600160a01b031681565b34801561038a57600080fd5b5061021361039936600461229c565b61072a565b3480156103aa57600080fd5b506102136103b936600461229c565b6107b8565b3480156103ca57600080fd5b506005546102bd906001600160a01b031681565b3480156103ea57600080fd5b50610213610856565b3480156103ff57600080fd5b506003546102bd906001600160a01b031681565b34801561041f57600080fd5b506001546001600160a01b03166102bd565b34801561043d57600080fd5b506000546001600160a01b031615610305565b34801561045c57600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b5061030561049f36600461229c565b6108c6565b3480156104b057600080fd5b506004546102bd906001600160a01b031681565b3480156104d057600080fd5b506102136104df366004612252565b6108d0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105505760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055a8282610953565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161058d93929190612322565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fa5760405162461bcd60e51b81526004016105479060208082526004908201526310a0a6a160e11b604082015260600190565b6106038161099a565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612360565b60405180910390a150565b6000546001600160a01b0316331461066a576040516311a8a1bb60e31b815260040160405180910390fd5b610673816109b3565b50565b6000546001600160a01b031633146106a1576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036106c457604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106d691906123a0565b116106f4576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561071e576040516323295ef960e01b815260040160405180910390fd5b61072860006109c5565b565b6006546001600160a01b0316156107965760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610547565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107e3576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610801575060025415155b1561081f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361084d57604051634a2fb73f60e11b815260040160405180910390fd5b61067381610a2a565b6001546001600160a01b03163314610881576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261089391906123a0565b116108b15760405163d39c12bb60e01b815260040160405180910390fd5b600154610728906001600160a01b03166109c5565b6000805b92915050565b60006108db82610a78565b90506108e681610d5e565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109915760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610547565b6108e682610e7f565b6040516316c2fdb560e21b815260040160405180910390fd5b6109bc816108ea565b6106738161072a565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610a8583610ee8565b90506000610a9282610f47565b90506000610a9f83610f70565b9050600081610aad84610f99565b610ab686611157565b604051602001610ac8939291906123b3565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610b4c5760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610547565b6000818152600760205260408120805460ff19166001179055610b6e85611173565b90506000610b7b826112bd565b9050610b868161134d565b6006546001600160a01b03908116911614610bf15760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610547565b6000610bfc87611376565b9050610c1c610c0c846020015190565b87610c168a611392565b846113ae565b610c745760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610547565b610ca285610c8189611661565b610c8a8a61167d565b84610c948c611699565b610c9d8d6116b5565b6116d1565b506000610cae836117f7565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610ce4610cdf836000611833565b61186b565b14610d315760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610547565b6000610d3c846118e6565b806020019051810190610d4f91906123e0565b9b9a5050505050505050505050565b8051602014610d995760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610547565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610df284612457565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610e3657600080fd5b505af1158015610e4a573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612360565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610eb393169186910161247b565b600060405180830381600087803b158015610ecd57600080fd5b505af1158015610ee1573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610f32610f2d8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b611902565b60408051602081019091529081529392505050565b60606108ca8260000151600881518110610f6357610f6361249f565b6020026020010151611a18565b60006108ca8260000151600281518110610f8c57610f8c61249f565b602002602001015161186b565b604080516020810190915260008152815160609190156108ca57600080610fc1600086611ab5565b60f81c90506001811480610fd857508060ff166003145b1561108057600185516002610fed91906124b5565b610ff791906123a0565b67ffffffffffffffff81111561100f5761100f612129565b6040519080825280601f01601f191660200182016040528015611039576020820181803683370190505b5092506000611049600187611ab5565b9050808460008151811061105f5761105f61249f565b60200101906001600160f81b031916908160001a90535060019250506110e4565b60028551600261109091906124b5565b61109a91906123a0565b67ffffffffffffffff8111156110b2576110b2612129565b6040519080825280601f01601f1916602001820160405280156110dc576020820181803683370190505b509250600091505b60ff82165b835181101561114e5761111361110260ff8516836123a0565b61110d9060026124cc565b87611ab5565b8482815181106111255761112561249f565b60200101906001600160f81b031916908160001a90535080611146816124df565b9150506110e9565b50505092915050565b60006108ca8260000151600981518110610f8c57610f8c61249f565b61119760405180606001604052806060815260200160608152602001600081525090565b6111b18260000151600681518110610f6357610f6361249f565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111e781611b36565b156111fc576111f581611902565b82526112a9565b60208201518051600090611212906001906123a0565b67ffffffffffffffff81111561122a5761122a612129565b6040519080825280601f01601f191660200182016040528015611254576020820181803683370190505b50905060008083602101915082602001905061127282828551611b71565b6040805180820182526000808252602091820152815180830190925284518252808501908201526112a290611902565b8652505050505b6112b283611157565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061130b83600001516003815181106112fe576112fe61249f565b6020026020010151611902565b8360400151815181106113205761132061249f565b60200260200101519050604051806040016040528082815260200161134483611902565b90529392505050565b60006108ca82602001516000815181106113695761136961249f565b6020026020010151611bfc565b60006108ca8260000151600581518110610f8c57610f8c61249f565b60606108ca8260000151600781518110610f6357610f6361249f565b6000806113e28460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113ef82611902565b9050606080856000806114018b610f99565b9050805160000361141c576000975050505050505050611659565b60005b865181101561165057815183111561144257600098505050505050505050611659565b6114648782815181106114575761145761249f565b6020026020010151611c16565b95508580519060200120841461148557600098505050505050505050611659565b61149a8782815181106112fe576112fe61249f565b9450845160110361156c57815183036114f9578c805190602001206114cb86601081518110610f6357610f6361249f565b80519060200120036114e857600198505050505050505050611659565b600098505050505050505050611659565b600082848151811061150d5761150d61249f565b016020015160f81c905060108111156115325760009950505050505050505050611659565b611557868260ff168151811061154a5761154a61249f565b6020026020010151611c95565b94506115646001856124cc565b93505061163e565b84516002036114e857600061159761159087600081518110610f6357610f6361249f565b8486611cc3565b83519091506115a682866124cc565b036115f9578d805190602001206115c987600181518110610f6357610f6361249f565b80519060200120036115e75760019950505050505050505050611659565b60009950505050505050505050611659565b806000036116135760009950505050505050505050611659565b61161d81856124cc565b93506116358660018151811061154a5761154a61249f565b945061163e9050565b80611648816124df565b91505061141f565b50505050505050505b949350505050565b60006108ca8260000151600381518110610f8c57610f8c61249f565b60006108ca8260000151600481518110610f8c57610f8c61249f565b60006108ca8260000151600081518110610f8c57610f8c61249f565b60606108ca8260000151600181518110610f6357610f6361249f565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa158015611723573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174791906124f8565b509350509250925061179e828b61175e91906123a0565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611dcb565b6117ea5760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610547565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061182b84602001516001815181106112fe576112fe61249f565b905292915050565b6040805180820190915260008082526020820152825180518390811061185b5761185b61249f565b6020026020010151905092915050565b80516000901580159061188057508151602110155b61188957600080fd5b60006118988360200151611f33565b905060008184600001516118ac91906123a0565b90506000808386602001516118c191906124cc565b90508051915060208310156118dd57826020036101000a820491505b50949350505050565b60606108ca8260200151600281518110610f6357610f6361249f565b606061190d82611b36565b61191657600080fd5b600061192183611fbb565b905060008167ffffffffffffffff81111561193e5761193e612129565b60405190808252806020026020018201604052801561198357816020015b604080518082019091526000808252602082015281526020019060019003908161195c5790505b50905060006119958560200151611f33565b85602001516119a491906124cc565b90506000805b84811015611a0d576119bb83612040565b91506040518060400160405280838152602001848152508482815181106119e4576119e461249f565b60209081029190910101526119f982846124cc565b925080611a05816124df565b9150506119aa565b509195945050505050565b8051606090611a2657600080fd5b6000611a358360200151611f33565b90506000818460000151611a4991906123a0565b905060008167ffffffffffffffff811115611a6657611a66612129565b6040519080825280601f01601f191660200182016040528015611a90576020820181803683370190505b50905060008160200190506118dd848760200151611aae91906124cc565b82856120e4565b6000611ac260028461255b565b15611afc57601082611ad560028661256f565b81518110611ae557611ae561249f565b0160200151611af7919060f81c612583565b611b2c565b601082611b0a60028661256f565b81518110611b1a57611b1a61249f565b0160200151611b2c919060f81c6125a5565b60f81b9392505050565b80516000908103611b4957506000919050565b6020820151805160001a9060c0821015611b67575060009392505050565b5060019392505050565b80600003611b7e57505050565b60208110611bb65782518252611b956020846124cc565b9250611ba26020836124cc565b9150611baf6020826123a0565b9050611b7e565b80600003611bc357505050565b60006001611bd28360206123a0565b611bde906101006126ab565b611be891906123a0565b935183518516941916939093179091525050565b8051600090601514611c0d57600080fd5b6108ca8261186b565b60606000826000015167ffffffffffffffff811115611c3757611c37612129565b6040519080825280601f01601f191660200182016040528015611c61576020820181803683370190505b5090508051600003611c735792915050565b6000816020019050611c8e84602001518286600001516120e4565b5092915050565b8051600090602114611ca657600080fd5b60008083602001516001611cba91906124cc565b51949350505050565b60008080611cd086610f99565b90506000815167ffffffffffffffff811115611cee57611cee612129565b6040519080825280601f01601f191660200182016040528015611d18576020820181803683370190505b509050845b8251611d2990876124cc565b811015611d9c576000878281518110611d4457611d4461249f565b01602001516001600160f81b03191690508083611d6189856123a0565b81518110611d7157611d7161249f565b60200101906001600160f81b031916908160001a905350508080611d94906124df565b915050611d1d565b508080519060200120828051906020012003611dbb5781519250611dc0565b600092505b509095945050505050565b600060208251611ddb919061255b565b15611e1f5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610547565b600060208351611e2f919061256f565b9050611e3c8160026126ab565b8510611e825760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610547565b60008660205b85518111611f2557858101519250611ea160028961255b565b600003611ed9576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611f06565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611f1160028961256f565b9750611f1e6020826124cc565b9050611e88565b509094149695505050505050565b8051600090811a6080811015611f4c5750600092915050565b60b8811080611f67575060c08110801590611f67575060f881105b15611f755750600192915050565b60c0811015611fa957611f8a600160b86126b7565b611f979060ff16826123a0565b611fa29060016124cc565b9392505050565b611f8a600160f86126b7565b50919050565b80516000908103611fce57506000919050565b600080611fde8460200151611f33565b8460200151611fed91906124cc565b905060008460000151856020015161200591906124cc565b90505b808210156120375761201982612040565b61202390836124cc565b91508261202f816124df565b935050612008565b50909392505050565b80516000908190811a608081101561205b5760019150611c8e565b60b88110156120815761206f6080826123a0565b61207a9060016124cc565b9150611c8e565b60c08110156120ae5760b78103600185019450806020036101000a85510460018201810193505050611c8e565b60f88110156120c25761206f60c0826123a0565b60019390930151602084900360f7016101000a900490920160f5190192915050565b806000036120f157505050565b60208110611bb657825182526121086020846124cc565b92506121156020836124cc565b91506121226020826123a0565b90506120f1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561216857612168612129565b604052919050565b600067ffffffffffffffff82111561218a5761218a612129565b50601f01601f191660200190565b600082601f8301126121a957600080fd5b81356121bc6121b782612170565b61213f565b8181528460208386010111156121d157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561220157600080fd5b823567ffffffffffffffff8082111561221957600080fd5b61222586838701612198565b9350602085013591508082111561223b57600080fd5b5061224885828601612198565b9150509250929050565b60006020828403121561226457600080fd5b813567ffffffffffffffff81111561227b57600080fd5b61165984828501612198565b6001600160a01b038116811461067357600080fd5b6000602082840312156122ae57600080fd5b8135611fa281612287565b6000602082840312156122cb57600080fd5b5035919050565b60005b838110156122ed5781810151838201526020016122d5565b50506000910152565b6000815180845261230e8160208601602086016122d2565b601f01601f19169290920160200192915050565b60608152600061233560608301866122f6565b828103602084015261234781866122f6565b91505060018060a01b0383166040830152949350505050565b60408152600061237360408301856122f6565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108ca576108ca61238a565b838152600083516123cb8160208501602088016122d2565b60209201918201929092526040019392505050565b6000602082840312156123f257600080fd5b815167ffffffffffffffff81111561240957600080fd5b8201601f8101841361241a57600080fd5b80516124286121b782612170565b81815285602083850101111561243d57600080fd5b61244e8260208301602086016122d2565b95945050505050565b80516020808301519190811015611fb55760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611659908301846122f6565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108ca576108ca61238a565b808201808211156108ca576108ca61238a565b6000600182016124f1576124f161238a565b5060010190565b600080600080600060a0868803121561251057600080fd5b85519450602086015193506040860151925060608601519150608086015161253781612287565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b60008261256a5761256a612545565b500690565b60008261257e5761257e612545565b500490565b600060ff83168061259657612596612545565b8060ff84160691505092915050565b600060ff8316806125b8576125b8612545565b8060ff84160491505092915050565b600181815b808511156126025781600019048211156125e8576125e861238a565b808516156125f557918102915b93841c93908002906125cc565b509250929050565b600082612619575060016108ca565b81612626575060006108ca565b816001811461263c576002811461264657612662565b60019150506108ca565b60ff8411156126575761265761238a565b50506001821b6108ca565b5060208310610133831016604e8410600b8410161715612685575081810a6108ca565b61268f83836125c7565b80600019048211156126a3576126a361238a565b029392505050565b6000611fa2838361260a565b60ff82811682821603908111156108ca576108ca61238a56fea26469706673582212206c9fb55c3f01d8a433bb6008eca956cedb499deb306d113beaaeb467b7fbfb0364736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
