/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002a4e38038062002a4e8339810160408190526200003591620003c0565b80858888828888888585858585856200004e33620001d1565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000230565b80156200012f576200012f8162000254565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600680546001600160a01b039d8e166001600160a01b031991821617909155600580549c909d169b169a909a17909a55506200044c9f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000246816200029560201b620008301760201c565b6200025181620002fe565b50565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316156200036c5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000090565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff81168114620003a357600080fd5b919050565b80516001600160a01b0381168114620003a357600080fd5b600080600080600080600060e0888a031215620003dc57600080fd5b620003e7886200038e565b9650620003f7602089016200038e565b95506200040760408901620003a8565b94506200041760608901620003a8565b93506200042760808901620003a8565b925060a088015191506200043e60c08901620003a8565b905092959891949750929550565b60805160a05160c05160e0516125ac620004a2600039600081816101d20152610cf4015260008181610265015281816105e80152610ccd0152600081816103b201526104180152600061022b01526125ac6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063972c4928116100de578063cf796c7511610097578063d69f9d6111610071578063d69f9d61146103ad578063db1b7659146103d4578063de9b771f146103e7578063f953cec7146103fa57600080fd5b8063cf796c7514610381578063d1851c921461038a578063d232c2201461039b57600080fd5b8063972c49281461031a578063aea4e49e1461032d578063b1f8100d14610340578063c0857ba014610353578063c5b350df14610366578063cc3942831461036e57600080fd5b80635f61e3ec1161014b5780636eb67a51116101255780636eb67a51146102db578063715018a6146102ee57806382646a58146102f65780638da5cb5b1461030957600080fd5b80635f61e3ec14610260578063607f2d421461029f5780636a42b8f8146102d257600080fd5b80630e387de61461019357806314168416146101cd5780633cf52ffb146102095780634ff746f61461021157806352a9674b146102265780635bd11efc1461024d575b600080fd5b6101ba7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101c4565b6002546101ba565b61022461021f3660046120c4565b61040d565b005b6101f47f000000000000000000000000000000000000000000000000000000000000000081565b61022461025b366004612159565b6104b3565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b6102c26102ad366004612176565b60086020526000908152604090205460ff1681565b60405190151581526020016101c4565b62093a806101ba565b6102246102e9366004612176565b6104ea565b61022461051e565b6102246103043660046120c4565b6105dd565b6000546001600160a01b0316610287565b600754610287906001600160a01b031681565b61022461033b366004612159565b61067e565b61022461034e366004612159565b61070c565b600654610287906001600160a01b031681565b6102246107b1565b600354610287906001600160a01b031681565b6101ba60045481565b6001546001600160a01b0316610287565b6000546001600160a01b0316156102c2565b6102877f000000000000000000000000000000000000000000000000000000000000000081565b6102c26103e2366004612159565b61080c565b600554610287906001600160a01b031681565b6102246104083660046120c4565b610816565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104775760405162461bcd60e51b815260040161046e9060208082526004908201526310a0a6a160e11b604082015260600190565b60405180910390fd5b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a89291906121eb565b60405180910390a150565b6000546001600160a01b031633146104de576040516311a8a1bb60e31b815260040160405180910390fd5b6104e781610899565b50565b6000546001600160a01b03163314610515576040516311a8a1bb60e31b815260040160405180910390fd5b6104e7816108ab565b6000546001600160a01b03163314610549576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361056c57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261057e919061222b565b1161059c576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156105c6576040516323295ef960e01b815260040160405180910390fd5b6001546105db906001600160a01b03166108ec565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106445760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161046e565b61064d8161094b565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc81336040516104a89291906121eb565b6007546001600160a01b0316156106ea5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840161046e565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610737576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561075c57506001600160a01b03811615155b1561077a576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036107a857604051634a2fb73f60e11b815260040160405180910390fd5b6104e781610954565b6001546001600160a01b031633146107dc576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107ee919061222b565b116105c65760405163d39c12bb60e01b815260040160405180910390fd5b6000805b92915050565b6000610821826109a2565b905061082c81610c88565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6108a281610830565b6104e78161067e565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e781610da9565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b606060006109af83610e14565b905060006109bc82610e73565b905060006109c983610e9c565b90506000816109d784610ec5565b6109e086611083565b6040516020016109f293929190612242565b60408051601f1981840301815291815281516020928301206000818152600890935291205490915060ff1615610a765760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b606482015260840161046e565b6000818152600860205260408120805460ff19166001179055610a988561109f565b90506000610aa5826111e9565b9050610ab081611279565b6007546001600160a01b03908116911614610b1b5760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b606482015260840161046e565b6000610b26876112a2565b9050610b46610b36846020015190565b87610b408a6112be565b846112da565b610b9e5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b606482015260840161046e565b610bcc85610bab8961158d565b610bb48a6115a9565b84610bbe8c6115c5565b610bc78d6115e1565b6115fd565b506000610bd883611723565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610c0e610c0983600061175f565b611797565b14610c5b5760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e415455524500604482015260640161046e565b6000610c6684611812565b806020019051810190610c79919061226f565b9b9a5050505050505050505050565b8051602014610cc35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161046e565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610d1c846122e6565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610d6057600080fd5b505af1158015610d74573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81336040516104a89291906121eb565b60055460075460405163b472047760e01b81526001600160a01b039283169263b472047792610ddf92911690859060040161230a565b600060405180830381600087803b158015610df957600080fd5b505af1158015610e0d573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610e5e610e598460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b61182e565b60408051602081019091529081529392505050565b60606108108260000151600881518110610e8f57610e8f61232e565b6020026020010151611944565b60006108108260000151600281518110610eb857610eb861232e565b6020026020010151611797565b6040805160208101909152600081528151606091901561081057600080610eed6000866119e1565b60f81c90506001811480610f0457508060ff166003145b15610fac57600185516002610f199190612344565b610f23919061222b565b67ffffffffffffffff811115610f3b57610f3b612055565b6040519080825280601f01601f191660200182016040528015610f65576020820181803683370190505b5092506000610f756001876119e1565b90508084600081518110610f8b57610f8b61232e565b60200101906001600160f81b031916908160001a9053506001925050611010565b600285516002610fbc9190612344565b610fc6919061222b565b67ffffffffffffffff811115610fde57610fde612055565b6040519080825280601f01601f191660200182016040528015611008576020820181803683370190505b509250600091505b60ff82165b835181101561107a5761103f61102e60ff85168361222b565b611039906002612363565b876119e1565b8482815181106110515761105161232e565b60200101906001600160f81b031916908160001a905350806110728161237b565b915050611015565b50505092915050565b60006108108260000151600981518110610eb857610eb861232e565b6110c360405180606001604052806060815260200160608152602001600081525090565b6110dd8260000151600681518110610e8f57610e8f61232e565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261111381611a62565b15611128576111218161182e565b82526111d5565b6020820151805160009061113e9060019061222b565b67ffffffffffffffff81111561115657611156612055565b6040519080825280601f01601f191660200182016040528015611180576020820181803683370190505b50905060008083602101915082602001905061119e82828551611a9d565b6040805180820182526000808252602091820152815180830190925284518252808501908201526111ce9061182e565b8652505050505b6111de83611083565b604083015250919050565b604080516080810182526000918101828152606080830193909352815260208101919091526000611237836000015160038151811061122a5761122a61232e565b602002602001015161182e565b83604001518151811061124c5761124c61232e565b6020026020010151905060405180604001604052808281526020016112708361182e565b90529392505050565b600061081082602001516000815181106112955761129561232e565b6020026020010151611b28565b60006108108260000151600581518110610eb857610eb861232e565b60606108108260000151600781518110610e8f57610e8f61232e565b60008061130e8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061131b8261182e565b90506060808560008061132d8b610ec5565b90508051600003611348576000975050505050505050611585565b60005b865181101561157c57815183111561136e57600098505050505050505050611585565b6113908782815181106113835761138361232e565b6020026020010151611b42565b9550858051906020012084146113b157600098505050505050505050611585565b6113c687828151811061122a5761122a61232e565b945084516011036114985781518303611425578c805190602001206113f786601081518110610e8f57610e8f61232e565b805190602001200361141457600198505050505050505050611585565b600098505050505050505050611585565b60008284815181106114395761143961232e565b016020015160f81c9050601081111561145e5760009950505050505050505050611585565b611483868260ff16815181106114765761147661232e565b6020026020010151611bc1565b9450611490600185612363565b93505061156a565b84516002036114145760006114c36114bc87600081518110610e8f57610e8f61232e565b8486611bef565b83519091506114d28286612363565b03611525578d805190602001206114f587600181518110610e8f57610e8f61232e565b80519060200120036115135760019950505050505050505050611585565b60009950505050505050505050611585565b8060000361153f5760009950505050505050505050611585565b6115498185612363565b9350611561866001815181106114765761147661232e565b945061156a9050565b806115748161237b565b91505061134b565b50505050505050505b949350505050565b60006108108260000151600381518110610eb857610eb861232e565b60006108108260000151600481518110610eb857610eb861232e565b60006108108260000151600081518110610eb857610eb861232e565b60606108108260000151600181518110610e8f57610e8f61232e565b6006546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561164f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116739190612394565b50935050925092506116ca828b61168a919061222b565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611cf7565b6117165760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f48454144455200000000604482015260640161046e565b9998505050505050505050565b6040805160208101909152606081526040518060200160405280611757846020015160018151811061122a5761122a61232e565b905292915050565b604080518082019091526000808252602082015282518051839081106117875761178761232e565b6020026020010151905092915050565b8051600090158015906117ac57508151602110155b6117b557600080fd5b60006117c48360200151611e5f565b905060008184600001516117d8919061222b565b90506000808386602001516117ed9190612363565b905080519150602083101561180957826020036101000a820491505b50949350505050565b60606108108260200151600281518110610e8f57610e8f61232e565b606061183982611a62565b61184257600080fd5b600061184d83611ee7565b905060008167ffffffffffffffff81111561186a5761186a612055565b6040519080825280602002602001820160405280156118af57816020015b60408051808201909152600080825260208201528152602001906001900390816118885790505b50905060006118c18560200151611e5f565b85602001516118d09190612363565b90506000805b84811015611939576118e783611f6c565b91506040518060400160405280838152602001848152508482815181106119105761191061232e565b60209081029190910101526119258284612363565b9250806119318161237b565b9150506118d6565b509195945050505050565b805160609061195257600080fd5b60006119618360200151611e5f565b90506000818460000151611975919061222b565b905060008167ffffffffffffffff81111561199257611992612055565b6040519080825280601f01601f1916602001820160405280156119bc576020820181803683370190505b50905060008160200190506118098487602001516119da9190612363565b8285612010565b60006119ee6002846123f7565b15611a2857601082611a0160028661240b565b81518110611a1157611a1161232e565b0160200151611a23919060f81c61241f565b611a58565b601082611a3660028661240b565b81518110611a4657611a4661232e565b0160200151611a58919060f81c612441565b60f81b9392505050565b80516000908103611a7557506000919050565b6020820151805160001a9060c0821015611a93575060009392505050565b5060019392505050565b80600003611aaa57505050565b60208110611ae25782518252611ac1602084612363565b9250611ace602083612363565b9150611adb60208261222b565b9050611aaa565b80600003611aef57505050565b60006001611afe83602061222b565b611b0a90610100612547565b611b14919061222b565b935183518516941916939093179091525050565b8051600090601514611b3957600080fd5b61081082611797565b60606000826000015167ffffffffffffffff811115611b6357611b63612055565b6040519080825280601f01601f191660200182016040528015611b8d576020820181803683370190505b5090508051600003611b9f5792915050565b6000816020019050611bba8460200151828660000151612010565b5092915050565b8051600090602114611bd257600080fd5b60008083602001516001611be69190612363565b51949350505050565b60008080611bfc86610ec5565b90506000815167ffffffffffffffff811115611c1a57611c1a612055565b6040519080825280601f01601f191660200182016040528015611c44576020820181803683370190505b509050845b8251611c559087612363565b811015611cc8576000878281518110611c7057611c7061232e565b01602001516001600160f81b03191690508083611c8d898561222b565b81518110611c9d57611c9d61232e565b60200101906001600160f81b031916908160001a905350508080611cc09061237b565b915050611c49565b508080519060200120828051906020012003611ce75781519250611cec565b600092505b509095945050505050565b600060208251611d0791906123f7565b15611d4b5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b604482015260640161046e565b600060208351611d5b919061240b565b9050611d68816002612547565b8510611dae5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b604482015260640161046e565b60008660205b85518111611e5157858101519250611dcd6002896123f7565b600003611e05576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611e32565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611e3d60028961240b565b9750611e4a602082612363565b9050611db4565b509094149695505050505050565b8051600090811a6080811015611e785750600092915050565b60b8811080611e93575060c08110801590611e93575060f881105b15611ea15750600192915050565b60c0811015611ed557611eb6600160b8612553565b611ec39060ff168261222b565b611ece906001612363565b9392505050565b611eb6600160f8612553565b50919050565b80516000908103611efa57506000919050565b600080611f0a8460200151611e5f565b8460200151611f199190612363565b9050600084600001518560200151611f319190612363565b90505b80821015611f6357611f4582611f6c565b611f4f9083612363565b915082611f5b8161237b565b935050611f34565b50909392505050565b80516000908190811a6080811015611f875760019150611bba565b60b8811015611fad57611f9b60808261222b565b611fa6906001612363565b9150611bba565b60c0811015611fda5760b78103600185019450806020036101000a85510460018201810193505050611bba565b60f8811015611fee57611f9b60c08261222b565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361201d57505050565b60208110611ae25782518252612034602084612363565b9250612041602083612363565b915061204e60208261222b565b905061201d565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561209457612094612055565b604052919050565b600067ffffffffffffffff8211156120b6576120b6612055565b50601f01601f191660200190565b6000602082840312156120d657600080fd5b813567ffffffffffffffff8111156120ed57600080fd5b8201601f810184136120fe57600080fd5b803561211161210c8261209c565b61206b565b81815285602083850101111561212657600080fd5b81602084016020830137600091810160200191909152949350505050565b6001600160a01b03811681146104e757600080fd5b60006020828403121561216b57600080fd5b8135611ece81612144565b60006020828403121561218857600080fd5b5035919050565b60005b838110156121aa578181015183820152602001612192565b838111156121b9576000848401525b50505050565b600081518084526121d781602086016020860161218f565b601f01601f19169290920160200192915050565b6040815260006121fe60408301856121bf565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561223d5761223d612215565b500390565b8381526000835161225a81602085016020880161218f565b60209201918201929092526040019392505050565b60006020828403121561228157600080fd5b815167ffffffffffffffff81111561229857600080fd5b8201601f810184136122a957600080fd5b80516122b761210c8261209c565b8181528560208385010111156122cc57600080fd5b6122dd82602083016020860161218f565b95945050505050565b80516020808301519190811015611ee15760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611585908301846121bf565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561235e5761235e612215565b500290565b6000821982111561237657612376612215565b500190565b60006001820161238d5761238d612215565b5060010190565b600080600080600060a086880312156123ac57600080fd5b8551945060208601519350604086015192506060860151915060808601516123d381612144565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b600082612406576124066123e1565b500690565b60008261241a5761241a6123e1565b500490565b600060ff831680612432576124326123e1565b8060ff84160691505092915050565b600060ff831680612454576124546123e1565b8060ff84160491505092915050565b600181815b8085111561249e57816000190482111561248457612484612215565b8085161561249157918102915b93841c9390800290612468565b509250929050565b6000826124b557506001610810565b816124c257506000610810565b81600181146124d857600281146124e2576124fe565b6001915050610810565b60ff8411156124f3576124f3612215565b50506001821b610810565b5060208310610133831016604e8410600b8410161715612521575081810a610810565b61252b8383612463565b806000190482111561253f5761253f612215565b029392505050565b6000611ece83836124a6565b600060ff821660ff84168082101561256d5761256d612215565b9003939250505056fea26469706673582212201dfa37aba59477d6b0fb073abf1b5178f3a2c84e550650d87c43efc02485546d64736f6c634300080f0033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
