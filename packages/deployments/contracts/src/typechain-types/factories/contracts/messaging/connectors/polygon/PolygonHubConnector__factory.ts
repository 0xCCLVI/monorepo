/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002d0138038062002d0183398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b620008d91760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e0516128bc62000445600039600081816101b40152610ed701526000818161029b015281816104ef0152610eb001526000818161046201526105a40152600061024701526128bc6000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063d1851c921161006f578063d1851c9214610413578063d232c22014610431578063d69f9d6114610450578063db1b765914610484578063de9b771f146104a4578063f953cec7146104c457600080fd5b80638da5cb5b14610360578063972c49281461037e578063b1f8100d1461039e578063c0857ba0146103be578063c5b350df146103de578063cc394283146103f357600080fd5b80635bd11efc116101085780635bd11efc146102695780635f61e3ec14610289578063607f2d42146102d557806368742da6146103155780636a42b8f814610335578063715018a61461034b57600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e3660046123a4565b6104e4565b005b34801561022157600080fd5b50610213610230366004612408565b610599565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b50610213610284366004612452565b61063f565b34801561029557600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b3480156102e157600080fd5b506103056102f036600461246f565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561032157600080fd5b50610213610330366004612452565b610676565b34801561034157600080fd5b5062093a8061018f565b34801561035757600080fd5b506102136106f3565b34801561036c57600080fd5b506000546001600160a01b03166102bd565b34801561038a57600080fd5b506006546102bd906001600160a01b031681565b3480156103aa57600080fd5b506102136103b9366004612452565b6107a7565b3480156103ca57600080fd5b506005546102bd906001600160a01b031681565b3480156103ea57600080fd5b50610213610845565b3480156103ff57600080fd5b506003546102bd906001600160a01b031681565b34801561041f57600080fd5b506001546001600160a01b03166102bd565b34801561043d57600080fd5b506000546001600160a01b031615610305565b34801561045c57600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b5061030561049f366004612452565b6108b5565b3480156104b057600080fd5b506004546102bd906001600160a01b031681565b3480156104d057600080fd5b506102136104df366004612408565b6108bf565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105505760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055a8282610942565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161058d939291906124d8565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fa5760405162461bcd60e51b81526004016105479060208082526004908201526310a0a6a160e11b604082015260600190565b61060381610989565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612516565b60405180910390a150565b6000546001600160a01b0316331461066a576040516311a8a1bb60e31b815260040160405180910390fd5b610673816109a2565b50565b6000546001600160a01b031633146106a1576040516311a8a1bb60e31b815260040160405180910390fd5b476106ac82826109b4565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516106e791815260200190565b60405180910390a25050565b6000546001600160a01b0316331461071e576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426107309190612556565b1161074e576040516324e0285f60e21b815260040160405180910390fd5b60025460000361077157604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b03161561079b576040516323295ef960e01b815260040160405180910390fd5b6107a56000610ad2565b565b6000546001600160a01b031633146107d2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156107f0575060025415155b1561080e576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361083c57604051634a2fb73f60e11b815260040160405180910390fd5b61067381610b37565b6001546001600160a01b03163314610870576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108829190612556565b116108a0576040516324e0285f60e21b815260040160405180910390fd5b6001546107a5906001600160a01b0316610ad2565b6000805b92915050565b60006108ca82610b85565b90506108d581610e6b565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109805760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610547565b6108d582610f8c565b6040516316c2fdb560e21b815260040160405180910390fd5b6109ab816108d9565b61067381610ff5565b80471015610a045760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610547565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a51576040519150601f19603f3d011682016040523d82523d6000602084013e610a56565b606091505b5050905080610acd5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610547565b505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610b9283611083565b90506000610b9f826110e2565b90506000610bac8361110b565b9050600081610bba84611134565b610bc3866112ea565b604051602001610bd593929190612569565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610c595760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610547565b6000818152600760205260408120805460ff19166001179055610c7b85611306565b90506000610c8882611450565b9050610c93816114e0565b6006546001600160a01b03908116911614610cfe5760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610547565b6000610d0987611509565b9050610d29610d19846020015190565b87610d238a611525565b84611541565b610d815760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610547565b610daf85610d8e896117f4565b610d978a611810565b84610da18c61182c565b610daa8d611848565b611864565b506000610dbb8361198a565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610df1610dec8360006119c6565b6119fe565b14610e3e5760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610547565b6000610e4984611a78565b806020019051810190610e5c9190612596565b9b9a5050505050505050505050565b8051602014610ea65760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610547565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610eff8461260d565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610634929190612516565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610fc0931691869101612631565b600060405180830381600087803b158015610fda57600080fd5b505af1158015610fee573d6000803e3d6000fd5b5050505050565b6006546001600160a01b0316156110615760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610547565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60408051602081019091526060815260006110cd6110c88460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b611a94565b60408051602081019091529081529392505050565b60606108b982600001516008815181106110fe576110fe612655565b6020026020010151611ba0565b60006108b9826000015160028151811061112757611127612655565b60200260200101516119fe565b604080516020810190915260008152815160609190156108b95760008061115c600086611c3d565b60f81c9050600181148061117357508060ff166003145b1561121b57600185516002611188919061266b565b6111929190612556565b67ffffffffffffffff8111156111aa576111aa6122df565b6040519080825280601f01601f1916602001820160405280156111d4576020820181803683370190505b50925060006111e4600187611c3d565b905080846000815181106111fa576111fa612655565b60200101906001600160f81b031916908160001a905350600192505061127f565b60028551600261122b919061266b565b6112359190612556565b67ffffffffffffffff81111561124d5761124d6122df565b6040519080825280601f01601f191660200182016040528015611277576020820181803683370190505b509250600091505b825160ff83165b818110156112e0576112af61129e60ff861683612556565b6112a9906002612682565b88611c3d565b8582815181106112c1576112c1612655565b60200101906001600160f81b031916908160001a905350600101611286565b5050505092915050565b60006108b9826000015160098151811061112757611127612655565b61132a60405180606001604052806060815260200160608152602001600081525090565b61134482600001516006815181106110fe576110fe612655565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261137a81611cbe565b1561138f5761138881611a94565b825261143c565b602082015180516000906113a590600190612556565b67ffffffffffffffff8111156113bd576113bd6122df565b6040519080825280601f01601f1916602001820160405280156113e7576020820181803683370190505b50905060008083602101915082602001905061140582828551611cf9565b60408051808201825260008082526020918201528151808301909252845182528085019082015261143590611a94565b8652505050505b611445836112ea565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061149e836000015160038151811061149157611491612655565b6020026020010151611a94565b8360400151815181106114b3576114b3612655565b6020026020010151905060405180604001604052808281526020016114d783611a94565b90529392505050565b60006108b982602001516000815181106114fc576114fc612655565b6020026020010151611d92565b60006108b9826000015160058151811061112757611127612655565b60606108b982600001516007815181106110fe576110fe612655565b6000806115758460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061158282611a94565b9050606080856000806115948b611134565b905080516000036115af5760009750505050505050506117ec565b855160005b818110156117e25782518411156115d757600099505050505050505050506117ec565b6115f98882815181106115ec576115ec612655565b6020026020010151611dac565b96508680519060200120851461161b57600099505050505050505050506117ec565b61163088828151811061149157611491612655565b955085516011036117055782518403611691578d80519060200120611661876010815181106110fe576110fe612655565b805190602001200361167f57600199505050505050505050506117ec565b600099505050505050505050506117ec565b60008385815181106116a5576116a5612655565b016020015160f81c905060108111156116cb5760009a50505050505050505050506117ec565b6116f0878260ff16815181106116e3576116e3612655565b6020026020010151611e2b565b95506116fd600186612682565b9450506117da565b855160020361167f576000611730611729886000815181106110fe576110fe612655565b8587611e59565b845190915061173f8287612682565b03611794578e80519060200120611762886001815181106110fe576110fe612655565b80519060200120036117815760019a50505050505050505050506117ec565b60009a50505050505050505050506117ec565b806000036117af5760009a50505050505050505050506117ec565b6117b98186612682565b94506117d1876001815181106116e3576116e3612655565b95506117da9050565b6001016115b4565b5050505050505050505b949350505050565b60006108b9826000015160038151811061112757611127612655565b60006108b9826000015160048151811061112757611127612655565b60006108b9826000015160008151811061112757611127612655565b60606108b982600001516001815181106110fe576110fe612655565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa1580156118b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118da9190612695565b5093505092509250611931828b6118f19190612556565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611f5d565b61197d5760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610547565b9998505050505050505050565b60408051602081019091526060815260405180602001604052806119be846020015160018151811061149157611491612655565b905292915050565b604080518082019091526000808252602082015282518051839081106119ee576119ee612655565b6020026020010151905092915050565b805160009015801590611a12575081516022115b611a1b57600080fd5b6000611a2a83602001516120cf565b90506000818460000151611a3e9190612556565b9050600080838660200151611a539190612682565b9050805191506020831015611a6f57826020036101000a820491505b50949350505050565b60606108b982602001516002815181106110fe576110fe612655565b6060611a9f82611cbe565b611aa857600080fd5b6000611ab383612163565b905060008167ffffffffffffffff811115611ad057611ad06122df565b604051908082528060200260200182016040528015611b1557816020015b6040805180820190915260008082526020820152815260200190600190039081611aee5790505b5090506000611b2785602001516120cf565b8560200151611b369190612682565b90506000805b84811015611b9557611b4d836121e8565b9150604051806040016040528083815260200184815250848281518110611b7657611b76612655565b6020908102919091010152611b8b8284612682565b9250600101611b3c565b509195945050505050565b8051606090611bae57600080fd5b6000611bbd83602001516120cf565b90506000818460000151611bd19190612556565b905060008167ffffffffffffffff811115611bee57611bee6122df565b6040519080825280601f01601f191660200182016040528015611c18576020820181803683370190505b5090506000816020019050611a6f848760200151611c369190612682565b828561228c565b6000611c4a6002846126f8565b15611c8457601082611c5d60028661270c565b81518110611c6d57611c6d612655565b0160200151611c7f919060f81c612720565b611cb4565b601082611c9260028661270c565b81518110611ca257611ca2612655565b0160200151611cb4919060f81c612742565b60f81b9392505050565b80516000908103611cd157506000919050565b6020820151805160001a9060c0821015611cef575060009392505050565b5060019392505050565b80600003611d0657505050565b611d1260016020612764565b60ff16811115611d4c5782518252611d2b602084612682565b9250611d38602083612682565b9150611d45602082612556565b9050611d06565b80600003611d5957505050565b60006001611d68836020612556565b611d7490610100612861565b611d7e9190612556565b935183518516941916939093179091525050565b8051600090601514611da357600080fd5b6108b9826119fe565b60606000826000015167ffffffffffffffff811115611dcd57611dcd6122df565b6040519080825280601f01601f191660200182016040528015611df7576020820181803683370190505b5090508051600003611e095792915050565b6000816020019050611e24846020015182866000015161228c565b5092915050565b8051600090602114611e3c57600080fd5b60008083602001516001611e509190612682565b51949350505050565b60008080611e6686611134565b90506000815167ffffffffffffffff811115611e8457611e846122df565b6040519080825280601f01601f191660200182016040528015611eae576020820181803683370190505b5090506000825186611ec09190612682565b9050855b81811015611f2d576000888281518110611ee057611ee0612655565b01602001516001600160f81b03191690508084611efd8a85612556565b81518110611f0d57611f0d612655565b60200101906001600160f81b031916908160001a90535050600101611ec4565b508180519060200120838051906020012003611f4c5782519350611f51565b600093505b50919695505050505050565b600060208251611f6d91906126f8565b15611fb15760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610547565b600060208351611fc1919061270c565b9050611fce816002612861565b85106120145760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610547565b825160009087908290612028906001612682565b905060205b818110156120c05786810151935061204660028a6126f8565b60000361207e5760408051602081018590529081018590526060016040516020818303038152906040528051906020012092506120ab565b60408051602081018690529081018490526060016040516020818303038152906040528051906020012092505b6120b660028a61270c565b985060200161202d565b50509094149695505050505050565b8051600090811a60808110156120e85750600092915050565b60b881108061210f57506120fe600160c0612764565b60ff168111801561210f575060f881105b1561211d5750600192915050565b60c081101561215157612132600160b8612764565b61213f9060ff1682612556565b61214a906001612682565b9392505050565b612132600160f8612764565b50919050565b8051600090810361217657506000919050565b60008061218684602001516120cf565b84602001516121959190612682565b90506000846000015185602001516121ad9190612682565b90505b808210156121df576121c1826121e8565b6121cb9083612682565b9150826121d78161286d565b9350506121b0565b50909392505050565b80516000908190811a60808110156122035760019150611e24565b60b881101561222957612217608082612556565b612222906001612682565b9150611e24565b60c08110156122565760b78103600185019450806020036101000a85510460018201810193505050611e24565b60f881101561226a5761221760c082612556565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361229957505050565b6122a560016020612764565b60ff16811115611d4c57825182526122be602084612682565b92506122cb602083612682565b91506122d8602082612556565b9050612299565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561231e5761231e6122df565b604052919050565b600067ffffffffffffffff821115612340576123406122df565b50601f01601f191660200190565b600082601f83011261235f57600080fd5b813561237261236d82612326565b6122f5565b81815284602083860101111561238757600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156123b757600080fd5b823567ffffffffffffffff808211156123cf57600080fd5b6123db8683870161234e565b935060208501359150808211156123f157600080fd5b506123fe8582860161234e565b9150509250929050565b60006020828403121561241a57600080fd5b813567ffffffffffffffff81111561243157600080fd5b6117ec8482850161234e565b6001600160a01b038116811461067357600080fd5b60006020828403121561246457600080fd5b813561214a8161243d565b60006020828403121561248157600080fd5b5035919050565b60005b838110156124a357818101518382015260200161248b565b50506000910152565b600081518084526124c4816020860160208601612488565b601f01601f19169290920160200192915050565b6060815260006124eb60608301866124ac565b82810360208401526124fd81866124ac565b91505060018060a01b0383166040830152949350505050565b60408152600061252960408301856124ac565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156108b9576108b9612540565b83815260008351612581816020850160208801612488565b60209201918201929092526040019392505050565b6000602082840312156125a857600080fd5b815167ffffffffffffffff8111156125bf57600080fd5b8201601f810184136125d057600080fd5b80516125de61236d82612326565b8181528560208385010111156125f357600080fd5b612604826020830160208601612488565b95945050505050565b8051602080830151919081101561215d5760001960209190910360031b1b16919050565b6001600160a01b03831681526040602082018190526000906117ec908301846124ac565b634e487b7160e01b600052603260045260246000fd5b80820281158282048414176108b9576108b9612540565b808201808211156108b9576108b9612540565b600080600080600060a086880312156126ad57600080fd5b8551945060208601519350604086015192506060860151915060808601516126d48161243d565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b600082612707576127076126e2565b500690565b60008261271b5761271b6126e2565b500490565b600060ff831680612733576127336126e2565b8060ff84160691505092915050565b600060ff831680612755576127556126e2565b8060ff84160491505092915050565b60ff82811682821603908111156108b9576108b9612540565b600181815b808511156127b857816000190482111561279e5761279e612540565b808516156127ab57918102915b93841c9390800290612782565b509250929050565b6000826127cf575060016108b9565b816127dc575060006108b9565b81600181146127f257600281146127fc57612818565b60019150506108b9565b60ff84111561280d5761280d612540565b50506001821b6108b9565b5060208310610133831016604e8410600b841016171561283b575081810a6108b9565b612845838361277d565b806000190482111561285957612859612540565b029392505050565b600061214a83836127c0565b60006001820161287f5761287f612540565b506001019056fea26469706673582212207be1911832813e35d7926a752207c10ddfe81c054dc4c597f185121c54a274b564736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
