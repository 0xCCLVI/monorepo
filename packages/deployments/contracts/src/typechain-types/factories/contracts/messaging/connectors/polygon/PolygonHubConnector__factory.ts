/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002b4138038062002b41833981016040819052620000359162000368565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b8162000219565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003e99c50505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200022f816200023d60201b620008de1760201c565b6200023a81620002a6565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031615620003145760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200034b57600080fd5b919050565b80516001600160a01b03811681146200034b57600080fd5b60008060008060008060c087890312156200038257600080fd5b6200038d8762000336565b95506200039d6020880162000336565b9450620003ad6040880162000350565b9350620003bd6060880162000350565b9250620003cd6080880162000350565b9150620003dd60a0880162000350565b90509295509295509295565b60805160a05160c05160e0516127026200043f600039600081816101b40152610d9f01526000818161029b015281816104ef0152610d7801526000818161046201526105a40152600061024701526127026000f3fe60806040526004361061014f5760003560e01c8063972c4928116100b6578063d1851c921161006f578063d1851c9214610413578063d232c22014610431578063d69f9d6114610450578063db1b765914610484578063de9b771f146104a4578063f953cec7146104c457600080fd5b8063972c49281461035e578063aea4e49e1461037e578063b1f8100d1461039e578063c0857ba0146103be578063c5b350df146103de578063cc394283146103f357600080fd5b80635bd11efc116101085780635bd11efc146102695780635f61e3ec14610289578063607f2d42146102d55780636a42b8f814610315578063715018a61461032b5780638da5cb5b1461034057600080fd5b80630e387de61461015b57806314168416146101a25780633cf52ffb146101eb57806348e6fa23146102005780634ff746f61461021557806352a9674b1461023557600080fd5b3661015657005b600080fd5b34801561016757600080fd5b5061018f7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101ae57600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610199565b3480156101f757600080fd5b5060025461018f565b61021361020e3660046121c3565b6104e4565b005b34801561022157600080fd5b50610213610230366004612227565b610599565b34801561024157600080fd5b506101d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561027557600080fd5b50610213610284366004612271565b610636565b34801561029557600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610199565b3480156102e157600080fd5b506103056102f036600461228e565b60076020526000908152604090205460ff1681565b6040519015158152602001610199565b34801561032157600080fd5b5062093a8061018f565b34801561033757600080fd5b5061021361066d565b34801561034c57600080fd5b506000546001600160a01b03166102bd565b34801561036a57600080fd5b506006546102bd906001600160a01b031681565b34801561038a57600080fd5b50610213610399366004612271565b61072c565b3480156103aa57600080fd5b506102136103b9366004612271565b6107ba565b3480156103ca57600080fd5b506005546102bd906001600160a01b031681565b3480156103ea57600080fd5b5061021361085f565b3480156103ff57600080fd5b506003546102bd906001600160a01b031681565b34801561041f57600080fd5b506001546001600160a01b03166102bd565b34801561043d57600080fd5b506000546001600160a01b031615610305565b34801561045c57600080fd5b506102bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561049057600080fd5b5061030561049f366004612271565b6108ba565b3480156104b057600080fd5b506004546102bd906001600160a01b031681565b3480156104d057600080fd5b506102136104df366004612227565b6108c4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105505760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b61055a8282610947565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161058d93929190612303565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105fa5760405162461bcd60e51b81526004016105479060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161062b929190612341565b60405180910390a150565b6000546001600160a01b03163314610661576040516311a8a1bb60e31b815260040160405180910390fd5b61066a8161098e565b50565b6000546001600160a01b03163314610698576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036106bb57604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426106cd9190612381565b116106eb576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610715576040516323295ef960e01b815260040160405180910390fd5b60015461072a906001600160a01b03166109a0565b565b6006546001600160a01b0316156107985760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610547565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146107e5576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561080a57506001600160a01b03811615155b15610828576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361085657604051634a2fb73f60e11b815260040160405180910390fd5b61066a816109ff565b6001546001600160a01b0316331461088a576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261089c9190612381565b116107155760405163d39c12bb60e01b815260040160405180910390fd5b6000805b92915050565b60006108cf82610a4d565b90506108da81610d33565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109855760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610547565b6108da82610e54565b610997816108de565b61066a8161072c565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610a5a83610ebd565b90506000610a6782610f1c565b90506000610a7483610f45565b9050600081610a8284610f6e565b610a8b8661112c565b604051602001610a9d93929190612398565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610b215760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610547565b6000818152600760205260408120805460ff19166001179055610b4385611148565b90506000610b5082611292565b9050610b5b81611322565b6006546001600160a01b03908116911614610bc65760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610547565b6000610bd18761134b565b9050610bf1610be1846020015190565b87610beb8a611367565b84611383565b610c495760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610547565b610c7785610c5689611636565b610c5f8a611652565b84610c698c61166e565b610c728d61168a565b6116a6565b506000610c83836117cc565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610cb9610cb4836000611808565b611840565b14610d065760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610547565b6000610d11846118bb565b806020019051810190610d2491906123c5565b9b9a5050505050505050505050565b8051602014610d6e5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610547565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610dc78461243c565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610e0b57600080fd5b505af1158015610e1f573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161062b929190612341565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b472047793610e88931691869101612460565b600060405180830381600087803b158015610ea257600080fd5b505af1158015610eb6573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610f07610f028460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6118d7565b60408051602081019091529081529392505050565b60606108be8260000151600881518110610f3857610f38612484565b60200260200101516119ed565b60006108be8260000151600281518110610f6157610f61612484565b6020026020010151611840565b604080516020810190915260008152815160609190156108be57600080610f96600086611a8a565b60f81c90506001811480610fad57508060ff166003145b1561105557600185516002610fc2919061249a565b610fcc9190612381565b67ffffffffffffffff811115610fe457610fe46120fe565b6040519080825280601f01601f19166020018201604052801561100e576020820181803683370190505b509250600061101e600187611a8a565b9050808460008151811061103457611034612484565b60200101906001600160f81b031916908160001a90535060019250506110b9565b600285516002611065919061249a565b61106f9190612381565b67ffffffffffffffff811115611087576110876120fe565b6040519080825280601f01601f1916602001820160405280156110b1576020820181803683370190505b509250600091505b60ff82165b8351811015611123576110e86110d760ff851683612381565b6110e29060026124b9565b87611a8a565b8482815181106110fa576110fa612484565b60200101906001600160f81b031916908160001a9053508061111b816124d1565b9150506110be565b50505092915050565b60006108be8260000151600981518110610f6157610f61612484565b61116c60405180606001604052806060815260200160608152602001600081525090565b6111868260000151600681518110610f3857610f38612484565b6020828101829052604080518082018252600080825290830152805180820190915282518152918101908201526111bc81611b0b565b156111d1576111ca816118d7565b825261127e565b602082015180516000906111e790600190612381565b67ffffffffffffffff8111156111ff576111ff6120fe565b6040519080825280601f01601f191660200182016040528015611229576020820181803683370190505b50905060008083602101915082602001905061124782828551611b46565b604080518082018252600080825260209182015281518083019092528451825280850190820152611277906118d7565b8652505050505b6112878361112c565b604083015250919050565b6040805160808101825260009181018281526060808301939093528152602081019190915260006112e083600001516003815181106112d3576112d3612484565b60200260200101516118d7565b8360400151815181106112f5576112f5612484565b602002602001015190506040518060400160405280828152602001611319836118d7565b90529392505050565b60006108be826020015160008151811061133e5761133e612484565b6020026020010151611bd1565b60006108be8260000151600581518110610f6157610f61612484565b60606108be8260000151600781518110610f3857610f38612484565b6000806113b78460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b905060006113c4826118d7565b9050606080856000806113d68b610f6e565b905080516000036113f157600097505050505050505061162e565b60005b86518110156116255781518311156114175760009850505050505050505061162e565b61143987828151811061142c5761142c612484565b6020026020010151611beb565b95508580519060200120841461145a5760009850505050505050505061162e565b61146f8782815181106112d3576112d3612484565b9450845160110361154157815183036114ce578c805190602001206114a086601081518110610f3857610f38612484565b80519060200120036114bd5760019850505050505050505061162e565b60009850505050505050505061162e565b60008284815181106114e2576114e2612484565b016020015160f81c90506010811115611507576000995050505050505050505061162e565b61152c868260ff168151811061151f5761151f612484565b6020026020010151611c6a565b94506115396001856124b9565b935050611613565b84516002036114bd57600061156c61156587600081518110610f3857610f38612484565b8486611c98565b835190915061157b82866124b9565b036115ce578d8051906020012061159e87600181518110610f3857610f38612484565b80519060200120036115bc576001995050505050505050505061162e565b6000995050505050505050505061162e565b806000036115e8576000995050505050505050505061162e565b6115f281856124b9565b935061160a8660018151811061151f5761151f612484565b94506116139050565b8061161d816124d1565b9150506113f4565b50505050505050505b949350505050565b60006108be8260000151600381518110610f6157610f61612484565b60006108be8260000151600481518110610f6157610f61612484565b60006108be8260000151600081518110610f6157610f61612484565b60606108be8260000151600181518110610f3857610f38612484565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c91906124ea565b5093505092509250611773828b6117339190612381565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611da0565b6117bf5760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610547565b9998505050505050505050565b604080516020810190915260608152604051806020016040528061180084602001516001815181106112d3576112d3612484565b905292915050565b6040805180820190915260008082526020820152825180518390811061183057611830612484565b6020026020010151905092915050565b80516000901580159061185557508151602110155b61185e57600080fd5b600061186d8360200151611f08565b905060008184600001516118819190612381565b905060008083866020015161189691906124b9565b90508051915060208310156118b257826020036101000a820491505b50949350505050565b60606108be8260200151600281518110610f3857610f38612484565b60606118e282611b0b565b6118eb57600080fd5b60006118f683611f90565b905060008167ffffffffffffffff811115611913576119136120fe565b60405190808252806020026020018201604052801561195857816020015b60408051808201909152600080825260208201528152602001906001900390816119315790505b509050600061196a8560200151611f08565b856020015161197991906124b9565b90506000805b848110156119e25761199083612015565b91506040518060400160405280838152602001848152508482815181106119b9576119b9612484565b60209081029190910101526119ce82846124b9565b9250806119da816124d1565b91505061197f565b509195945050505050565b80516060906119fb57600080fd5b6000611a0a8360200151611f08565b90506000818460000151611a1e9190612381565b905060008167ffffffffffffffff811115611a3b57611a3b6120fe565b6040519080825280601f01601f191660200182016040528015611a65576020820181803683370190505b50905060008160200190506118b2848760200151611a8391906124b9565b82856120b9565b6000611a9760028461254d565b15611ad157601082611aaa600286612561565b81518110611aba57611aba612484565b0160200151611acc919060f81c612575565b611b01565b601082611adf600286612561565b81518110611aef57611aef612484565b0160200151611b01919060f81c612597565b60f81b9392505050565b80516000908103611b1e57506000919050565b6020820151805160001a9060c0821015611b3c575060009392505050565b5060019392505050565b80600003611b5357505050565b60208110611b8b5782518252611b6a6020846124b9565b9250611b776020836124b9565b9150611b84602082612381565b9050611b53565b80600003611b9857505050565b60006001611ba7836020612381565b611bb39061010061269d565b611bbd9190612381565b935183518516941916939093179091525050565b8051600090601514611be257600080fd5b6108be82611840565b60606000826000015167ffffffffffffffff811115611c0c57611c0c6120fe565b6040519080825280601f01601f191660200182016040528015611c36576020820181803683370190505b5090508051600003611c485792915050565b6000816020019050611c6384602001518286600001516120b9565b5092915050565b8051600090602114611c7b57600080fd5b60008083602001516001611c8f91906124b9565b51949350505050565b60008080611ca586610f6e565b90506000815167ffffffffffffffff811115611cc357611cc36120fe565b6040519080825280601f01601f191660200182016040528015611ced576020820181803683370190505b509050845b8251611cfe90876124b9565b811015611d71576000878281518110611d1957611d19612484565b01602001516001600160f81b03191690508083611d368985612381565b81518110611d4657611d46612484565b60200101906001600160f81b031916908160001a905350508080611d69906124d1565b915050611cf2565b508080519060200120828051906020012003611d905781519250611d95565b600092505b509095945050505050565b600060208251611db0919061254d565b15611df45760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610547565b600060208351611e049190612561565b9050611e1181600261269d565b8510611e575760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610547565b60008660205b85518111611efa57858101519250611e7660028961254d565b600003611eae576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611edb565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611ee6600289612561565b9750611ef36020826124b9565b9050611e5d565b509094149695505050505050565b8051600090811a6080811015611f215750600092915050565b60b8811080611f3c575060c08110801590611f3c575060f881105b15611f4a5750600192915050565b60c0811015611f7e57611f5f600160b86126a9565b611f6c9060ff1682612381565b611f779060016124b9565b9392505050565b611f5f600160f86126a9565b50919050565b80516000908103611fa357506000919050565b600080611fb38460200151611f08565b8460200151611fc291906124b9565b9050600084600001518560200151611fda91906124b9565b90505b8082101561200c57611fee82612015565b611ff890836124b9565b915082612004816124d1565b935050611fdd565b50909392505050565b80516000908190811a60808110156120305760019150611c63565b60b881101561205657612044608082612381565b61204f9060016124b9565b9150611c63565b60c08110156120835760b78103600185019450806020036101000a85510460018201810193505050611c63565b60f88110156120975761204460c082612381565b60019390930151602084900360f7016101000a900490920160f5190192915050565b806000036120c657505050565b60208110611b8b57825182526120dd6020846124b9565b92506120ea6020836124b9565b91506120f7602082612381565b90506120c6565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561213d5761213d6120fe565b604052919050565b600067ffffffffffffffff82111561215f5761215f6120fe565b50601f01601f191660200190565b600082601f83011261217e57600080fd5b813561219161218c82612145565b612114565b8181528460208386010111156121a657600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156121d657600080fd5b823567ffffffffffffffff808211156121ee57600080fd5b6121fa8683870161216d565b9350602085013591508082111561221057600080fd5b5061221d8582860161216d565b9150509250929050565b60006020828403121561223957600080fd5b813567ffffffffffffffff81111561225057600080fd5b61162e8482850161216d565b6001600160a01b038116811461066a57600080fd5b60006020828403121561228357600080fd5b8135611f778161225c565b6000602082840312156122a057600080fd5b5035919050565b60005b838110156122c25781810151838201526020016122aa565b838111156122d1576000848401525b50505050565b600081518084526122ef8160208601602086016122a7565b601f01601f19169290920160200192915050565b60608152600061231660608301866122d7565b828103602084015261232881866122d7565b91505060018060a01b0383166040830152949350505050565b60408152600061235460408301856122d7565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156123935761239361236b565b500390565b838152600083516123b08160208501602088016122a7565b60209201918201929092526040019392505050565b6000602082840312156123d757600080fd5b815167ffffffffffffffff8111156123ee57600080fd5b8201601f810184136123ff57600080fd5b805161240d61218c82612145565b81815285602083850101111561242257600080fd5b6124338260208301602086016122a7565b95945050505050565b80516020808301519190811015611f8a5760001960209190910360031b1b16919050565b6001600160a01b038316815260406020820181905260009061162e908301846122d7565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156124b4576124b461236b565b500290565b600082198211156124cc576124cc61236b565b500190565b6000600182016124e3576124e361236b565b5060010190565b600080600080600060a0868803121561250257600080fd5b8551945060208601519350604086015192506060860151915060808601516125298161225c565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b60008261255c5761255c612537565b500690565b60008261257057612570612537565b500490565b600060ff83168061258857612588612537565b8060ff84160691505092915050565b600060ff8316806125aa576125aa612537565b8060ff84160491505092915050565b600181815b808511156125f45781600019048211156125da576125da61236b565b808516156125e757918102915b93841c93908002906125be565b509250929050565b60008261260b575060016108be565b81612618575060006108be565b816001811461262e576002811461263857612654565b60019150506108be565b60ff8411156126495761264961236b565b50506001821b6108be565b5060208310610133831016604e8410600b8410161715612677575081810a6108be565b61268183836125b9565b80600019048211156126955761269561236b565b029392505050565b6000611f7783836125fc565b600060ff821660ff8416808210156126c3576126c361236b565b9003939250505056fea26469706673582212208d2d9c3d3677c707ac0791bc3c06c255aff4f11a69ffc825fd7e50894096ca3c64736f6c634300080f0033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
