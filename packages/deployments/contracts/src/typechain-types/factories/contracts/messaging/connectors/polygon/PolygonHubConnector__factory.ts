/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChildTunnel",
        type: "address",
      },
    ],
    name: "setFxChildTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002c7c38038062002c7c8339810160408190526200003591620003c0565b80858888828888888585858585856200004e33620001d1565b8563ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200011d576200011d8262000230565b80156200012f576200012f8162000254565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600680546001600160a01b039d8e166001600160a01b031991821617909155600580549c909d169b169a909a17909a55506200044c9f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000246816200029560201b620009731760201c565b6200025181620002fe565b50565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316156200036c5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b606482015260840162000090565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff81168114620003a357600080fd5b919050565b80516001600160a01b0381168114620003a357600080fd5b600080600080600080600060e0888a031215620003dc57600080fd5b620003e7886200038e565b9650620003f7602089016200038e565b95506200040760408901620003a8565b94506200041760608901620003a8565b93506200042760808901620003a8565b925060a088015191506200043e60c08901620003a8565b905092959891949750929550565b60805160a05160c05160e0516127da620004a2600039600081816101df0152610e750152600081816102c6015281816105500152610e4e0152600081816104c301526106050152600061027201526127da6000f3fe6080604052600436106101815760003560e01c8063972c4928116100d1578063cf796c751161008a578063d69f9d6111610064578063d69f9d61146104b1578063db1b7659146104e5578063de9b771f14610505578063f953cec71461052557600080fd5b8063cf796c751461045e578063d1851c9214610474578063d232c2201461049257600080fd5b8063972c4928146103a9578063aea4e49e146103c9578063b1f8100d146103e9578063c0857ba014610409578063c5b350df14610429578063cc3942831461043e57600080fd5b80635bd11efc1161013e5780636a42b8f8116101185780636a42b8f8146103405780636eb67a5114610356578063715018a6146103765780638da5cb5b1461038b57600080fd5b80635bd11efc146102945780635f61e3ec146102b4578063607f2d421461030057600080fd5b80630e387de61461018657806314168416146101cd5780633cf52ffb1461021657806348e6fa231461022b5780634ff746f61461024057806352a9674b14610260575b600080fd5b34801561019257600080fd5b506101ba7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101d957600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101c4565b34801561022257600080fd5b506002546101ba565b61023e61023936600461229b565b610545565b005b34801561024c57600080fd5b5061023e61025b3660046122ff565b6105fa565b34801561026c57600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a057600080fd5b5061023e6102af366004612349565b610697565b3480156102c057600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b34801561030c57600080fd5b5061033061031b366004612366565b60086020526000908152604090205460ff1681565b60405190151581526020016101c4565b34801561034c57600080fd5b5062093a806101ba565b34801561036257600080fd5b5061023e610371366004612366565b6106ce565b34801561038257600080fd5b5061023e610702565b34801561039757600080fd5b506000546001600160a01b03166102e8565b3480156103b557600080fd5b506007546102e8906001600160a01b031681565b3480156103d557600080fd5b5061023e6103e4366004612349565b6107c1565b3480156103f557600080fd5b5061023e610404366004612349565b61084f565b34801561041557600080fd5b506006546102e8906001600160a01b031681565b34801561043557600080fd5b5061023e6108f4565b34801561044a57600080fd5b506003546102e8906001600160a01b031681565b34801561046a57600080fd5b506101ba60045481565b34801561048057600080fd5b506001546001600160a01b03166102e8565b34801561049e57600080fd5b506000546001600160a01b031615610330565b3480156104bd57600080fd5b506102e87f000000000000000000000000000000000000000000000000000000000000000081565b3480156104f157600080fd5b50610330610500366004612349565b61094f565b34801561051157600080fd5b506005546102e8906001600160a01b031681565b34801561053157600080fd5b5061023e6105403660046122ff565b610959565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105b15760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6105bb82826109dc565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516105ee939291906123db565b60405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461065b5760405162461bcd60e51b81526004016105a89060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161068c929190612419565b60405180910390a150565b6000546001600160a01b031633146106c2576040516311a8a1bb60e31b815260040160405180910390fd5b6106cb81610a23565b50565b6000546001600160a01b031633146106f9576040516311a8a1bb60e31b815260040160405180910390fd5b6106cb81610a35565b6000546001600160a01b0316331461072d576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361075057604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426107629190612459565b11610780576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156107aa576040516323295ef960e01b815260040160405180910390fd5b6001546107bf906001600160a01b0316610a76565b565b6007546001600160a01b03161561082d5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016105a8565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461087a576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561089f57506001600160a01b03811615155b156108bd576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036108eb57604051634a2fb73f60e11b815260040160405180910390fd5b6106cb81610ad5565b6001546001600160a01b0316331461091f576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426109319190612459565b116107aa5760405163d39c12bb60e01b815260040160405180910390fd5b6000805b92915050565b600061096482610b23565b905061096f81610e09565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805115610a1a5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016105a8565b61096f82610f2a565b610a2c81610973565b6106cb816107c1565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610b3083610f95565b90506000610b3d82610ff4565b90506000610b4a8361101d565b9050600081610b5884611046565b610b6186611204565b604051602001610b7393929190612470565b60408051601f1981840301815291815281516020928301206000818152600890935291205490915060ff1615610bf75760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b60648201526084016105a8565b6000818152600860205260408120805460ff19166001179055610c1985611220565b90506000610c268261136a565b9050610c31816113fa565b6007546001600160a01b03908116911614610c9c5760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b60648201526084016105a8565b6000610ca787611423565b9050610cc7610cb7846020015190565b87610cc18a61143f565b8461145b565b610d1f5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b60648201526084016105a8565b610d4d85610d2c8961170e565b610d358a61172a565b84610d3f8c611746565b610d488d611762565b61177e565b506000610d59836118a4565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610d8f610d8a8360006118e0565b611918565b14610ddc5760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e41545552450060448201526064016105a8565b6000610de784611993565b806020019051810190610dfa919061249d565b9b9a5050505050505050505050565b8051602014610e445760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016105a8565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610e9d84612514565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161068c929190612419565b60055460075460405163b472047760e01b81526001600160a01b039283169263b472047792610f60929116908590600401612538565b600060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b5050505050565b6040805160208101909152606081526000610fdf610fda8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6119af565b60408051602081019091529081529392505050565b606061095382600001516008815181106110105761101061255c565b6020026020010151611ac5565b600061095382600001516002815181106110395761103961255c565b6020026020010151611918565b604080516020810190915260008152815160609190156109535760008061106e600086611b62565b60f81c9050600181148061108557508060ff166003145b1561112d5760018551600261109a9190612572565b6110a49190612459565b67ffffffffffffffff8111156110bc576110bc6121d6565b6040519080825280601f01601f1916602001820160405280156110e6576020820181803683370190505b50925060006110f6600187611b62565b9050808460008151811061110c5761110c61255c565b60200101906001600160f81b031916908160001a9053506001925050611191565b60028551600261113d9190612572565b6111479190612459565b67ffffffffffffffff81111561115f5761115f6121d6565b6040519080825280601f01601f191660200182016040528015611189576020820181803683370190505b509250600091505b60ff82165b83518110156111fb576111c06111af60ff851683612459565b6111ba906002612591565b87611b62565b8482815181106111d2576111d261255c565b60200101906001600160f81b031916908160001a905350806111f3816125a9565b915050611196565b50505092915050565b600061095382600001516009815181106110395761103961255c565b61124460405180606001604052806060815260200160608152602001600081525090565b61125e82600001516006815181106110105761101061255c565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261129481611be3565b156112a9576112a2816119af565b8252611356565b602082015180516000906112bf90600190612459565b67ffffffffffffffff8111156112d7576112d76121d6565b6040519080825280601f01601f191660200182016040528015611301576020820181803683370190505b50905060008083602101915082602001905061131f82828551611c1e565b60408051808201825260008082526020918201528151808301909252845182528085019082015261134f906119af565b8652505050505b61135f83611204565b604083015250919050565b6040805160808101825260009181018281526060808301939093528152602081019190915260006113b883600001516003815181106113ab576113ab61255c565b60200260200101516119af565b8360400151815181106113cd576113cd61255c565b6020026020010151905060405180604001604052808281526020016113f1836119af565b90529392505050565b600061095382602001516000815181106114165761141661255c565b6020026020010151611ca9565b600061095382600001516005815181106110395761103961255c565b606061095382600001516007815181106110105761101061255c565b60008061148f8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061149c826119af565b9050606080856000806114ae8b611046565b905080516000036114c9576000975050505050505050611706565b60005b86518110156116fd5781518311156114ef57600098505050505050505050611706565b6115118782815181106115045761150461255c565b6020026020010151611cc3565b95508580519060200120841461153257600098505050505050505050611706565b6115478782815181106113ab576113ab61255c565b9450845160110361161957815183036115a6578c80519060200120611578866010815181106110105761101061255c565b805190602001200361159557600198505050505050505050611706565b600098505050505050505050611706565b60008284815181106115ba576115ba61255c565b016020015160f81c905060108111156115df5760009950505050505050505050611706565b611604868260ff16815181106115f7576115f761255c565b6020026020010151611d42565b9450611611600185612591565b9350506116eb565b845160020361159557600061164461163d876000815181106110105761101061255c565b8486611d70565b83519091506116538286612591565b036116a6578d80519060200120611676876001815181106110105761101061255c565b80519060200120036116945760019950505050505050505050611706565b60009950505050505050505050611706565b806000036116c05760009950505050505050505050611706565b6116ca8185612591565b93506116e2866001815181106115f7576115f761255c565b94506116eb9050565b806116f5816125a9565b9150506114cc565b50505050505050505b949350505050565b600061095382600001516003815181106110395761103961255c565b600061095382600001516004815181106110395761103961255c565b600061095382600001516000815181106110395761103961255c565b606061095382600001516001815181106110105761101061255c565b6006546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa1580156117d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f491906125c2565b509350509250925061184b828b61180b9190612459565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588611e78565b6118975760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f4845414445520000000060448201526064016105a8565b9998505050505050505050565b60408051602081019091526060815260405180602001604052806118d884602001516001815181106113ab576113ab61255c565b905292915050565b604080518082019091526000808252602082015282518051839081106119085761190861255c565b6020026020010151905092915050565b80516000901580159061192d57508151602110155b61193657600080fd5b60006119458360200151611fe0565b905060008184600001516119599190612459565b905060008083866020015161196e9190612591565b905080519150602083101561198a57826020036101000a820491505b50949350505050565b606061095382602001516002815181106110105761101061255c565b60606119ba82611be3565b6119c357600080fd5b60006119ce83612068565b905060008167ffffffffffffffff8111156119eb576119eb6121d6565b604051908082528060200260200182016040528015611a3057816020015b6040805180820190915260008082526020820152815260200190600190039081611a095790505b5090506000611a428560200151611fe0565b8560200151611a519190612591565b90506000805b84811015611aba57611a68836120ed565b9150604051806040016040528083815260200184815250848281518110611a9157611a9161255c565b6020908102919091010152611aa68284612591565b925080611ab2816125a9565b915050611a57565b509195945050505050565b8051606090611ad357600080fd5b6000611ae28360200151611fe0565b90506000818460000151611af69190612459565b905060008167ffffffffffffffff811115611b1357611b136121d6565b6040519080825280601f01601f191660200182016040528015611b3d576020820181803683370190505b509050600081602001905061198a848760200151611b5b9190612591565b8285612191565b6000611b6f600284612625565b15611ba957601082611b82600286612639565b81518110611b9257611b9261255c565b0160200151611ba4919060f81c61264d565b611bd9565b601082611bb7600286612639565b81518110611bc757611bc761255c565b0160200151611bd9919060f81c61266f565b60f81b9392505050565b80516000908103611bf657506000919050565b6020820151805160001a9060c0821015611c14575060009392505050565b5060019392505050565b80600003611c2b57505050565b60208110611c635782518252611c42602084612591565b9250611c4f602083612591565b9150611c5c602082612459565b9050611c2b565b80600003611c7057505050565b60006001611c7f836020612459565b611c8b90610100612775565b611c959190612459565b935183518516941916939093179091525050565b8051600090601514611cba57600080fd5b61095382611918565b60606000826000015167ffffffffffffffff811115611ce457611ce46121d6565b6040519080825280601f01601f191660200182016040528015611d0e576020820181803683370190505b5090508051600003611d205792915050565b6000816020019050611d3b8460200151828660000151612191565b5092915050565b8051600090602114611d5357600080fd5b60008083602001516001611d679190612591565b51949350505050565b60008080611d7d86611046565b90506000815167ffffffffffffffff811115611d9b57611d9b6121d6565b6040519080825280601f01601f191660200182016040528015611dc5576020820181803683370190505b509050845b8251611dd69087612591565b811015611e49576000878281518110611df157611df161255c565b01602001516001600160f81b03191690508083611e0e8985612459565b81518110611e1e57611e1e61255c565b60200101906001600160f81b031916908160001a905350508080611e41906125a9565b915050611dca565b508080519060200120828051906020012003611e685781519250611e6d565b600092505b509095945050505050565b600060208251611e889190612625565b15611ecc5760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b60448201526064016105a8565b600060208351611edc9190612639565b9050611ee9816002612775565b8510611f2f5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b60448201526064016105a8565b60008660205b85518111611fd257858101519250611f4e600289612625565b600003611f86576040805160208101849052908101849052606001604051602081830303815290604052805190602001209150611fb3565b60408051602081018590529081018390526060016040516020818303038152906040528051906020012091505b611fbe600289612639565b9750611fcb602082612591565b9050611f35565b509094149695505050505050565b8051600090811a6080811015611ff95750600092915050565b60b8811080612014575060c08110801590612014575060f881105b156120225750600192915050565b60c081101561205657612037600160b8612781565b6120449060ff1682612459565b61204f906001612591565b9392505050565b612037600160f8612781565b50919050565b8051600090810361207b57506000919050565b60008061208b8460200151611fe0565b846020015161209a9190612591565b90506000846000015185602001516120b29190612591565b90505b808210156120e4576120c6826120ed565b6120d09083612591565b9150826120dc816125a9565b9350506120b5565b50909392505050565b80516000908190811a60808110156121085760019150611d3b565b60b881101561212e5761211c608082612459565b612127906001612591565b9150611d3b565b60c081101561215b5760b78103600185019450806020036101000a85510460018201810193505050611d3b565b60f881101561216f5761211c60c082612459565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361219e57505050565b60208110611c6357825182526121b5602084612591565b92506121c2602083612591565b91506121cf602082612459565b905061219e565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612215576122156121d6565b604052919050565b600067ffffffffffffffff821115612237576122376121d6565b50601f01601f191660200190565b600082601f83011261225657600080fd5b81356122696122648261221d565b6121ec565b81815284602083860101111561227e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156122ae57600080fd5b823567ffffffffffffffff808211156122c657600080fd5b6122d286838701612245565b935060208501359150808211156122e857600080fd5b506122f585828601612245565b9150509250929050565b60006020828403121561231157600080fd5b813567ffffffffffffffff81111561232857600080fd5b61170684828501612245565b6001600160a01b03811681146106cb57600080fd5b60006020828403121561235b57600080fd5b813561204f81612334565b60006020828403121561237857600080fd5b5035919050565b60005b8381101561239a578181015183820152602001612382565b838111156123a9576000848401525b50505050565b600081518084526123c781602086016020860161237f565b601f01601f19169290920160200192915050565b6060815260006123ee60608301866123af565b828103602084015261240081866123af565b91505060018060a01b0383166040830152949350505050565b60408152600061242c60408301856123af565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561246b5761246b612443565b500390565b8381526000835161248881602085016020880161237f565b60209201918201929092526040019392505050565b6000602082840312156124af57600080fd5b815167ffffffffffffffff8111156124c657600080fd5b8201601f810184136124d757600080fd5b80516124e56122648261221d565b8181528560208385010111156124fa57600080fd5b61250b82602083016020860161237f565b95945050505050565b805160208083015191908110156120625760001960209190910360031b1b16919050565b6001600160a01b0383168152604060208201819052600090611706908301846123af565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561258c5761258c612443565b500290565b600082198211156125a4576125a4612443565b500190565b6000600182016125bb576125bb612443565b5060010190565b600080600080600060a086880312156125da57600080fd5b85519450602086015193506040860151925060608601519150608086015161260181612334565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826126345761263461260f565b500690565b6000826126485761264861260f565b500490565b600060ff8316806126605761266061260f565b8060ff84160691505092915050565b600060ff8316806126825761268261260f565b8060ff84160491505092915050565b600181815b808511156126cc5781600019048211156126b2576126b2612443565b808516156126bf57918102915b93841c9390800290612696565b509250929050565b6000826126e357506001610953565b816126f057506000610953565b816001811461270657600281146127105761272c565b6001915050610953565b60ff84111561272157612721612443565b50506001821b610953565b5060208310610133831016604e8410600b841016171561274f575081810a610953565b6127598383612691565b806000190482111561276d5761276d612443565b029392505050565b600061204f83836126d4565b600060ff821660ff84168082101561279b5761279b612443565b9003939250505056fea2646970667358221220ca7b5bf959a7476527c4fcc20ab79720b46322adff24f32fdd6b4e8b7404784c64736f6c634300080f0033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
