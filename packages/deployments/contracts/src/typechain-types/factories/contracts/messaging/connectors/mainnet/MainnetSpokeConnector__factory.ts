/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "current",
        type: "uint256",
      },
    ],
    name: "MirrorGasUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorGas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mirrorGas",
        type: "uint256",
      },
    ],
    name: "setMirrorGas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040516200357a3803806200357a83398101604081905262000035916200040f565b8a8a8a8a8a8a8a8a8a8a8a808b8b8b8b8b8b6200005233620002d4565b8563ffffffff166000036200009d5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038316620000e95760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000094565b63ffffffff8087166080526001600160a01b0380861660a05284811660c05290861660e0528216156200012157620001218262000333565b8015620001335762000133816200039c565b604080516001600160a01b0386811682528581166020830152841681830152905163ffffffff87811692908916917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b03909616610100026001600160a81b031990961695909517909455505060016008555050620cf850851015620002005760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000094565b613a98841015620002435760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000094565b6101208590526101408490526001600160a01b038216620002965760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000094565b816001600160a01b0316610100816001600160a01b0316815250508260098190555050505050505050505050505050505050505050505050620004ce565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b805163ffffffff81168114620003f257600080fd5b919050565b80516001600160a01b0381168114620003f257600080fd5b60008060008060008060008060008060006101608c8e0312156200043257600080fd5b6200043d8c620003dd565b9a506200044d60208d01620003dd565b99506200045d60408d01620003f7565b98506200046d60608d01620003f7565b97506200047d60808d01620003f7565b965060a08c0151955060c08c0151945060e08c015193506101008c01519250620004ab6101208d01620003f7565b9150620004bc6101408d01620003f7565b90509295989b509295989b9093969950565b60805160a05160c05160e051610100516101205161014051612fef6200058b6000396000818161030001526118f90152600081816106b80152818161191a01526119a101526000818161059701528181610b4a01528181611047015261147b015260006102aa01526000818161047e01528181610d9601528181611c220152611c6301526000818161068801526107d001526000818161040d015281816105140152818161142c015281816117fb0152611c8a0152612fef6000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80638d3638f411610167578063c5b350df116100ce578063d69f9d6111610087578063d69f9d6114610683578063d7d317b3146106aa578063d88beda2146106b3578063db1b7659146106da578063e0fed010146106ed578063fa31de011461070057600080fd5b8063c5b350df14610629578063cc39428314610631578063cf796c7514610644578063d1851c921461064d578063d232c2201461065e578063d2a3cc711461067057600080fd5b8063ad9c0c2e11610120578063ad9c0c2e146105b9578063b1f8100d146105c2578063b2f87643146105d5578063b46300ec146105e8578063b697f531146105f0578063b95a20011461060357600080fd5b80638d3638f4146105125780638da5cb5b1461053857806398c9f2b9146105495780639d3117c71461056c5780639fa92f9d1461058c578063a01892a51461059257600080fd5b8063572386ca1161020b5780636a42b8f8116101c45780636a42b8f8146104c05780636b04a933146104c95780636eb67a51146104dc578063715018a6146104ef57806382646a58146104f75780638456cb591461050a57600080fd5b8063572386ca1461042f578063579c1618146104525780635bd11efc1461045b5780635c975abb1461046e5780635f61e3ec1461047957806365eaf11b146104b857600080fd5b80633cf52ffb1161025d5780633cf52ffb146103b65780633f4ba83a146103be5780634ff746f6146103c6578063508a109b146103d95780635190bc53146103ec57806352a9674b1461040857600080fd5b806314168416146102a55780631eeaabea146102e657806325e3beda146102fb578063272efc69146103305780632bbd59ca14610363578063301f07c314610393575b600080fd5b6102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b6102f96102f436600461290f565b610713565b005b6103227f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102dd565b61035361033e366004612928565b600e6020526000908152604090205460ff1681565b60405190151581526020016102dd565b61038661037136600461290f565b60106020526000908152604090205460ff1681565b6040516102dd9190612967565b6103536103a136600461290f565b600b6020526000908152604090205460ff1681565b600254610322565b6102f9610788565b6102f96103d4366004612a32565b6107c5565b6102f96103e7366004612a67565b610862565b6103536103fa366004612928565b6001600160a01b0316301490565b6102cc7f000000000000000000000000000000000000000000000000000000000000000081565b61035361043d36600461290f565b600d6020526000908152604090205460ff1681565b61032260065481565b6102f9610469366004612928565b610b0f565b60055460ff16610353565b6104a07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102dd565b610322610b46565b62093a80610322565b6102f96104d736600461290f565b610bcf565b6102f96104ea36600461290f565b610c9a565b6102f9610cce565b6102f9610505366004612a32565b610d8b565b6102f9610e2c565b7f00000000000000000000000000000000000000000000000000000000000000006102cc565b6000546001600160a01b03166104a0565b61035361055736600461290f565b600c6020526000908152604090205460ff1681565b61032261057a36600461290f565b600a6020526000908152604090205481565b306104a0565b6104a07f000000000000000000000000000000000000000000000000000000000000000081565b61032260095481565b6102f96105d0366004612928565b610ee3565b6102f96105e3366004612928565b610f88565b6102f9611004565b6102f96105fe366004612928565b6111a3565b6102cc610611366004612b1c565b600f6020526000908152604090205463ffffffff1681565b6102f9611222565b6003546104a0906001600160a01b031681565b61032260045481565b6001546001600160a01b03166104a0565b6000546001600160a01b031615610353565b6102f961067e366004612928565b61127d565b6104a07f000000000000000000000000000000000000000000000000000000000000000081565b61032260075481565b6103227f000000000000000000000000000000000000000000000000000000000000000081565b6103536106e8366004612928565b611344565b6102f96106fb36600461290f565b611359565b61032261070e366004612b37565b61138d565b6000546001600160a01b0316331461073e576040516311a8a1bb60e31b815260040160405180910390fd5b60095481036107835760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600955565b6000546001600160a01b031633146107b3576040516311a8a1bb60e31b815260040160405180910390fd5b6107bb61154a565b6107c3611593565b565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108265760405162461bcd60e51b815260040161077a9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610857929190612be6565b60405180910390a150565b61086a6115e5565b836108a15760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b604482015260640161077a565b6000858560008181106108b6576108b6612c10565b90506020028101906108c89190612c26565b6108d29080612c47565b6040516108e0929190612c95565b604051809103902090506000610947828888600081811061090357610903612c10565b90506020028101906109159190612c26565b6020018989600081811061092b5761092b612c10565b905060200281019061093d9190612c26565b610420013561162b565b9050610955818686866116d0565b6000828152601060205260409020805460ff191660019081179091555b63ffffffff8116871115610a795787878263ffffffff1681811061099857610998612c10565b90506020028101906109aa9190612c26565b6109b49080612c47565b6040516109c2929190612c95565b604051809103902092506000610a17848a8a8563ffffffff168181106109ea576109ea612c10565b90506020028101906109fc9190612c26565b6020018b8b8663ffffffff1681811061092b5761092b612c10565b9050828114610a565760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b604482015260640161077a565b506000838152601060205260409020805460ff1916600190811790915501610972565b5060005b63ffffffff8116871115610b0557610afc88888363ffffffff16818110610aa657610aa6612c10565b9050602002810190610ab89190612c26565b610ac29080612c47565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061178d92505050565b50600101610a7d565b5050505050505050565b6000546001600160a01b03163314610b3a576040516311a8a1bb60e31b815260040160405180910390fd5b610b4381611ad4565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca9190612ca5565b905090565b6000546001600160a01b03163314610bfa576040516311a8a1bb60e31b815260040160405180910390fd5b610c0261154a565b6000818152600a60205260408120549003610c575760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b604482015260640161077a565b6000818152600a602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc739906108579083815260200190565b6000546001600160a01b03163314610cc5576040516311a8a1bb60e31b815260040160405180910390fd5b610b4381611b3d565b6000546001600160a01b03163314610cf9576040516311a8a1bb60e31b815260040160405180910390fd5b600254600003610d1c57604051630e4b303f60e21b815260040160405180910390fd5b62093a8060025442610d2e9190612cd4565b11610d4c576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615610d76576040516323295ef960e01b815260040160405180910390fd5b6001546107c3906001600160a01b0316611b7e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610df25760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b604482015260640161077a565b610dfb81611bdd565b7fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc8133604051610857929190612be6565b6005546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015610e78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9c9190612ceb565b610ed35760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b604482015260640161077a565b610edb6115e5565b6107c3611d11565b6000546001600160a01b03163314610f0e576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610f3357506001600160a01b03811615155b15610f51576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610f7f57604051634a2fb73f60e11b815260040160405180910390fd5b610b4381611d4e565b6000546001600160a01b03163314610fb3576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600e6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610857565b61100c6115e5565b4360065460075461101d9190612d0d565b111561103c576040516346cf2af160e11b815260040160405180910390fd5b4360078190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c79190612ca5565b6000818152600d602052604090205490915060ff161561111d5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b604482015260640161077a565b60008160405160200161113291815260200190565b604051602081830303815290604052905061114c81611bdd565b6000828152600d602052604090819020805460ff19166001179055517fa69577a1e55dd0712044e7078b408c39fadff8b3e1b334b202ff17e70eda9fdc906111979083903390612be6565b60405180910390a15050565b6000546001600160a01b031633146111ce576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600e6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610857565b6001546001600160a01b0316331461124d576040516311a7f27160e11b815260040160405180910390fd5b62093a806002544261125f9190612cd4565b11610d765760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146112a8576040516311a8a1bb60e31b815260040160405180910390fd5b6005546001600160a01b0361010090910481169082160361130b5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e61676572000000000000000000604482015260640161077a565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610857565b60006001600160a01b03821633145b92915050565b6000546001600160a01b03163314611384576040516311a8a1bb60e31b815260040160405180910390fd5b610b4381611d9c565b336000908152600e602052604081205460ff166113db5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b604482015260640161077a565b63ffffffff8085166000908152600f6020526040902054166113fe816001612d25565b63ffffffff8681166000908152600f60205260408120805463ffffffff1916939092169290921790556114557f00000000000000000000000000000000000000000000000000000000000000003384898989611e1a565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156114cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ef9190612d4d565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611521600184612cd4565b84876040516115339493929190612d71565b60405180910390a1509093505050505b9392505050565b60055460ff166107c35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161077a565b61159b61154a565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156107c35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161077a565b60008060008581526010602052604090205460ff16600281111561165157611651612951565b146116945760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b604482015260640161077a565b6116c8848460208060200260405190810160405280929190826020800280828437600092019190915250869150611e529050565b949350505050565b6000848152600c602052604090205460ff16611787576116ef83611ef8565b6000611725858460208060200260405190810160405280929190826020800280828437600092019190915250869150611e529050565b905083811461176c5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b604482015260640161077a565b506000848152600c60205260409020805460ff191660011790555b50505050565b60006002600854036117e15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161077a565b600260085560006117f28382611fea565b905063ffffffff7f00000000000000000000000000000000000000000000000000000000000000001661182a62ffffff19831661200e565b63ffffffff161461186c5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b604482015260640161077a565b600061187d62ffffff198316612023565b9050600160008281526010602052604090205460ff1660028111156118a4576118a4612951565b146118db5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b604482015260640161077a565b6000818152601060205260409020805460ff1916600217905561193e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612d0d565b5a10156119765760405162461bcd60e51b815260040161077a906020808252600490820152632167617360e01b604082015260600190565b600061198762ffffff19841661206c565b6040805161010080825261012082019092529192506000917f00000000000000000000000000000000000000000000000000000000000000009083908360208201818036833701905050905060006119e462ffffff19891661207d565b6119f362ffffff198a16612091565b611a0262ffffff198b166120a6565b611a1f611a1462ffffff198d166120bb565b62ffffff19166120e9565b604051602401611a329493929190612d96565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611a7b578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611ab993929190612dc5565b60405180910390a15050600160085550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f34b09b90f4cfa8747776f5cffd7d53ce7863a9b1f1fc8121903d22543a256511910160405180910390a1600455565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051602014611c185760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161077a565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303611c5957610b43611c5482612de6565b612132565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611cb284612de6565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015611cf657600080fd5b505af1158015611d0a573d6000803e3d6000fd5b5050505050565b611d196115e5565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115c83390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6006548103611ddf5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b604482015260640161077a565b600681905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610857565b6060868686868686604051602001611e3796959493929190612e0a565b60405160208183030381529060405290509695505050505050565b8260005b6020811015611ef057600183821c166000858360208110611e7957611e79612c10565b6020020151905081600103611eb9576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350611ee6565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611e56565b509392505050565b6000818152600b602052604090205460ff1615611f125750565b6000818152600a602052604081205490819003611f685760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b604482015260640161077a565b600954611f758243612cd4565b1015611fc35760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f7420217665726966696564000000000000000000604482015260640161077a565b506000908152600b60209081526040808320805460ff19166001179055600a909152812055565b81516000906020840161200564ffffffffff8516828461225b565b95945050505050565b600061135362ffffff198316602860046122a2565b6000806120398360781c6001600160601b031690565b6001600160601b0316905060006120598460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061135361207a836122d2565b90565b600061135362ffffff1983168260046122a2565b600061135362ffffff198316602460046122a2565b600061135362ffffff198316600460206122e3565b6000611353604c6120d981601886901c6001600160601b0316612cd4565b62ffffff1985169190600061243f565b60606000806121018460181c6001600160601b031690565b6001600160601b03169050604051915081925061212184836020016124b9565b508181016020016040529052919050565b806121705760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b604482015260640161077a565b6000818152600a6020526040902054156121c35760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b604482015260640161077a565b6000818152600b602052604090205460ff16156122185760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b604482015260640161077a565b6000818152600a602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc8906108579083815260200190565b6000806122688385612d0d565b9050604051811115612278575060005b8060000361228d5762ffffff19915050611543565b5050606092831b9190911790911b1760181b90565b60006122af826020612e64565b6122ba906008612e87565b60ff166122c88585856122e3565b901c949350505050565b600061135362ffffff198316602c60205b60008160ff166000036122f857506000611543565b61230b8460181c6001600160601b031690565b6001600160601b031661232160ff841685612d0d565b11156123855761236c61233d8560781c6001600160601b031690565b6001600160601b03166123598660181c6001600160601b031690565b6001600160601b0316858560ff16612610565b60405162461bcd60e51b815260040161077a9190612eb0565b60208260ff1611156123ff5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e203332206279746573000000000000606482015260840161077a565b6008820260006124188660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806124558660781c6001600160601b031690565b6001600160601b031690506124698661267e565b846124748784612d0d565b61247e9190612d0d565b11156124915762ffffff199150506116c8565b61249b8582612d0d565b90506124af8364ffffffffff16828661225b565b9695505050505050565b600062ffffff19808416036125215760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b606482015260840161077a565b61252a836126b7565b61258a5760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b606482015260840161077a565b600061259f8460181c6001600160601b031690565b6001600160601b0316905060006125bf8560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156125df5760206060fd5b8285848460045afa506124af6125f58760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b6060600061261d866126f4565b915050600061262b866126f4565b9150506000612639866126f4565b9150506000612647866126f4565b915050838383836040516020016126619493929190612ec3565b604051602081830303815290604052945050505050949350505050565b60006126938260181c6001600160601b031690565b6126a68360781c6001600160601b031690565b016001600160601b03169050919050565b60006126c38260d81c90565b64ffffffffff1664ffffffffff036126dd57506000919050565b60006126e88361267e565b60405110199392505050565b600080601f5b600f811115612740576000612710826008612f9a565b85901c905061271e81612790565b61ffff16841793508160101461273657601084901b93505b50600019016126fa565b50600f5b60ff81101561278a57600061275a826008612f9a565b85901c905061276881612790565b61ffff16831792508160001461278057601083901b92505b5060001901612744565b50915091565b60006127a260048360ff16901c6127c2565b60ff1661ffff919091161760081b6127b9826127c2565b60ff1617919050565b600060f08083179060ff821690036127dd5750603092915050565b8060ff1660f1036127f15750603192915050565b8060ff1660f2036128055750603292915050565b8060ff1660f3036128195750603392915050565b8060ff1660f40361282d5750603492915050565b8060ff1660f5036128415750603592915050565b8060ff1660f6036128555750603692915050565b8060ff1660f7036128695750603792915050565b8060ff1660f80361287d5750603892915050565b8060ff1660f9036128915750603992915050565b8060ff1660fa036128a55750606192915050565b8060ff1660fb036128b95750606292915050565b8060ff1660fc036128cd5750606392915050565b8060ff1660fd036128e15750606492915050565b8060ff1660fe036128f55750606592915050565b8060ff1660ff036129095750606692915050565b50919050565b60006020828403121561292157600080fd5b5035919050565b60006020828403121561293a57600080fd5b81356001600160a01b038116811461154357600080fd5b634e487b7160e01b600052602160045260246000fd5b602081016003831061298957634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126129b657600080fd5b813567ffffffffffffffff808211156129d1576129d161298f565b604051601f8301601f19908116603f011681019082821181831017156129f9576129f961298f565b81604052838152866020858801011115612a1257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612a4457600080fd5b813567ffffffffffffffff811115612a5b57600080fd5b6116c8848285016129a5565b60008060008060006104608688031215612a8057600080fd5b853567ffffffffffffffff80821115612a9857600080fd5b818801915088601f830112612aac57600080fd5b813581811115612abb57600080fd5b8960208260051b8501011115612ad057600080fd5b602092830197509550508601359250610440860187811115612af157600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612b1757600080fd5b919050565b600060208284031215612b2e57600080fd5b61154382612b03565b600080600060608486031215612b4c57600080fd5b612b5584612b03565b925060208401359150604084013567ffffffffffffffff811115612b7857600080fd5b612b84868287016129a5565b9150509250925092565b60005b83811015612ba9578181015183820152602001612b91565b838111156117875750506000910152565b60008151808452612bd2816020860160208601612b8e565b601f01601f19169290920160200192915050565b604081526000612bf96040830185612bba565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612c3d57600080fd5b9190910192915050565b6000808335601e19843603018112612c5e57600080fd5b83018035915067ffffffffffffffff821115612c7957600080fd5b602001915036819003821315612c8e57600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215612cb757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612ce657612ce6612cbe565b500390565b600060208284031215612cfd57600080fd5b8151801515811461154357600080fd5b60008219821115612d2057612d20612cbe565b500190565b600063ffffffff808316818516808303821115612d4457612d44612cbe565b01949350505050565b60008060408385031215612d6057600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006124af6080830184612bba565b600063ffffffff8087168352808616602084015250836040830152608060608301526124af6080830184612bba565b83815282151560208201526060604082015260006120056060830184612bba565b805160208083015191908110156129095760001960209190910360031b1b16919050565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612e5281604c850160208701612b8e565b91909101604c01979650505050505050565b600060ff821660ff841680821015612e7e57612e7e612cbe565b90039392505050565b600060ff821660ff84168160ff0481118215151615612ea857612ea8612cbe565b029392505050565b6020815260006115436020830184612bba565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016124af565b6000816000190483118215151615612fb457612fb4612cbe565b50029056fea264697066735822122083bcc283dabe98f633fa3b0ce77b043ea7fcb9a3abefb66c89d4cd1c43ccca6d64736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _mirrorGas: PromiseOrValue<BigNumberish>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _mirrorGas,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
