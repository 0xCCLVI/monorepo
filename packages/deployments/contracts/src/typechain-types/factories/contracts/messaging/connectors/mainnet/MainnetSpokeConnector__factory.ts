/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620037bc380380620037bc8339810160408190526200003591620003ac565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000311565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260065550620004609f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200038f57600080fd5b919050565b80516001600160a01b03811681146200038f57600080fd5b6000806000806000806000806000806101408b8d031215620003cd57600080fd5b620003d88b6200037a565b9950620003e860208c016200037a565b9850620003f860408c0162000394565b97506200040860608c0162000394565b96506200041860808c0162000394565b955060a08b0151945060c08b0151935060e08b015192506200043e6101008c0162000394565b91506200044f6101208c0162000394565b90509295989b9194979a5092959850565b60805160a05160c05160e05161010051610120516101405161329f6200051d600039600081816102ee0152611be301526000818161084e01528181611c040152611c8b0152600081816106ab0152818161093101528181610edf01526115dd0152600061027e01526000818161050901528181610a650152818161177c01526117c101526000818161081a0152610b65015260008181610496015281816105e70152818161158e015281816117e80152611ae5015261329f6000f3fe6080604052600436106102605760003560e01c8063715018a611610144578063b697f531116100b6578063d232c2201161007a578063d232c220146107c9578063d2a3cc71146107e8578063d69f9d6114610808578063d88beda21461083c578063db1b765914610870578063fa31de011461089057600080fd5b8063b697f53114610723578063b95a200114610743578063c5b350df14610776578063cc3942831461078b578063d1851c92146107ab57600080fd5b80639d3117c7116101085780639d3117c7146106595780639fa92f9d14610686578063a01892a514610699578063ad9c0c2e146106cd578063b1f8100d146106e3578063b2f876431461070357600080fd5b8063715018a6146105ae5780638456cb59146105c35780638d3638f4146105d85780638da5cb5b1461060b57806398c9f2b91461062957600080fd5b80634ff746f6116101dd5780635c975abb116101a15780635c975abb146104d85780635f61e3ec146104f757806365eaf11b1461054357806368742da6146105585780636a42b8f8146105785780636b04a9331461058e57600080fd5b80634ff746f61461041b578063508a109b1461043b5780635190bc531461045b57806352a9674b146104845780635bd11efc146104b857600080fd5b80632bbd59ca116102245780632bbd59ca14610371578063301f07c3146103ae5780633cf52ffb146103de5780633f4ba83a146103f357806348e6fa231461040857600080fd5b8063141684161461026c5780631eeaabea146102ba57806325e3beda146102dc578063272efc691461031e5780632bb1ae7c1461035e57600080fd5b3661026757005b600080fd5b34801561027857600080fd5b506102a07f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102c657600080fd5b506102da6102d5366004612b3c565b6108b0565b005b3480156102e857600080fd5b506103107f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102b1565b34801561032a57600080fd5b5061034e610339366004612b55565b600a6020526000908152604090205460ff1681565b60405190151581526020016102b1565b6102da61036c366004612c21565b610925565b34801561037d57600080fd5b506103a161038c366004612b3c565b600c6020526000908152604090205460ff1681565b6040516102b19190612c6c565b3480156103ba57600080fd5b5061034e6103c9366004612b3c565b60086020526000908152604090205460ff1681565b3480156103ea57600080fd5b50600254610310565b3480156103ff57600080fd5b506102da610a1d565b6102da610416366004612c94565b610a5a565b34801561042757600080fd5b506102da610436366004612c21565b610b5a565b34801561044757600080fd5b506102da610456366004612cf8565b610bf7565b34801561046757600080fd5b5061034e610476366004612b55565b6001600160a01b0316301490565b34801561049057600080fd5b506102a07f000000000000000000000000000000000000000000000000000000000000000081565b3480156104c457600080fd5b506102da6104d3366004612b55565b610ea4565b3480156104e457600080fd5b50600354600160a01b900460ff1661034e565b34801561050357600080fd5b5061052b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102b1565b34801561054f57600080fd5b50610310610edb565b34801561056457600080fd5b506102da610573366004612b55565b610f64565b34801561058457600080fd5b5062093a80610310565b34801561059a57600080fd5b506102da6105a9366004612b3c565b610fe1565b3480156105ba57600080fd5b506102da6110ac565b3480156105cf57600080fd5b506102da611169565b3480156105e457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102a0565b34801561061757600080fd5b506000546001600160a01b031661052b565b34801561063557600080fd5b5061034e610644366004612b3c565b60096020526000908152604090205460ff1681565b34801561066557600080fd5b50610310610674366004612b3c565b60076020526000908152604090205481565b34801561069257600080fd5b503061052b565b3480156106a557600080fd5b5061052b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156106d957600080fd5b5061031060065481565b3480156106ef57600080fd5b506102da6106fe366004612b55565b61121d565b34801561070f57600080fd5b506102da61071e366004612b55565b6112c2565b34801561072f57600080fd5b506102da61073e366004612b55565b61133e565b34801561074f57600080fd5b506102a061075e366004612dad565b600b6020526000908152604090205463ffffffff1681565b34801561078257600080fd5b506102da6113bd565b34801561079757600080fd5b5060035461052b906001600160a01b031681565b3480156107b757600080fd5b506001546001600160a01b031661052b565b3480156107d557600080fd5b506000546001600160a01b03161561034e565b3480156107f457600080fd5b506102da610803366004612b55565b611418565b34801561081457600080fd5b5061052b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561084857600080fd5b506103107f000000000000000000000000000000000000000000000000000000000000000081565b34801561087c57600080fd5b5061034e61088b366004612b55565b6114da565b34801561089c57600080fd5b506103106108ab366004612dc8565b6114ef565b6000546001600160a01b031633146108db576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036109205760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b61092d6116ac565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190612e1f565b6040516020016109c391815260200190565b60405160208183030381529060405290506109de81836116f9565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077818333604051610a1193929190612e90565b60405180910390a15050565b6000546001600160a01b03163314610a48576040516311a8a1bb60e31b815260040160405180910390fd5b610a50611870565b610a586118c0565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ac15760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610917565b805115610aff5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610917565b610b1882604051806020016040528060008152506116f9565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610a1193929190612e90565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bbb5760405162461bcd60e51b81526004016109179060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610bec929190612ece565b60405180910390a150565b610bff6116ac565b83610c365760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610917565b600085856000818110610c4b57610c4b612ef8565b9050602002810190610c5d9190612f0e565b610c679080612f2f565b604051610c75929190612f7d565b604051809103902090506000610cdc8288886000818110610c9857610c98612ef8565b9050602002810190610caa9190612f0e565b60200189896000818110610cc057610cc0612ef8565b9050602002810190610cd29190612f0e565b6104200135611915565b9050610cea818686866119ba565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610e0e5787878263ffffffff16818110610d2d57610d2d612ef8565b9050602002810190610d3f9190612f0e565b610d499080612f2f565b604051610d57929190612f7d565b604051809103902092506000610dac848a8a8563ffffffff16818110610d7f57610d7f612ef8565b9050602002810190610d919190612f0e565b6020018b8b8663ffffffff16818110610cc057610cc0612ef8565b9050828114610deb5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610917565b506000838152600c60205260409020805460ff1916600190811790915501610d07565b5060005b63ffffffff8116871115610e9a57610e9188888363ffffffff16818110610e3b57610e3b612ef8565b9050602002810190610e4d9190612f0e565b610e579080612f2f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611a7792505050565b50600101610e12565b5050505050505050565b6000546001600160a01b03163314610ecf576040516311a8a1bb60e31b815260040160405180910390fd5b610ed881611dbe565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5f9190612e1f565b905090565b6000546001600160a01b03163314610f8f576040516311a8a1bb60e31b815260040160405180910390fd5b47610f9a8282611e27565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d82604051610fd591815260200190565b60405180910390a25050565b6000546001600160a01b0316331461100c576040516311a8a1bb60e31b815260040160405180910390fd5b611014611870565b60008181526007602052604081205490036110695760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610917565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610bec9083815260200190565b6000546001600160a01b031633146110d7576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036110fa57604051630e4b303f60e21b815260040160405180910390fd5b62093a806002544261110c9190612fa3565b1161112a576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b031615611154576040516323295ef960e01b815260040160405180910390fd5b600154610a58906001600160a01b0316611f45565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d69190612fba565b61120d5760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610917565b6112156116ac565b610a58611fa4565b6000546001600160a01b03163314611248576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561126d57506001600160a01b03811615155b1561128b576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036112b957604051634a2fb73f60e11b815260040160405180910390fd5b610ed881611fe7565b6000546001600160a01b031633146112ed576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610bec565b6000546001600160a01b03163314611369576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610bec565b6001546001600160a01b031633146113e8576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426113fa9190612fa3565b116111545760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b03163314611443576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036114a15760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610917565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610bec565b60006001600160a01b03821633145b92915050565b336000908152600a602052604081205460ff1661153d5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610917565b63ffffffff8085166000908152600b602052604090205416611560816001612fdc565b63ffffffff8681166000908152600b60205260408120805463ffffffff1916939092169290921790556115b77f00000000000000000000000000000000000000000000000000000000000000003384898989612035565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561162d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116519190613004565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611683600184612fa3565b84876040516116959493929190613028565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610a585760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610917565b8051156117375760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610917565b81516020146117725760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610917565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036117b7576117b36117ae8361304d565b61206d565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006118108561304d565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561185457600080fd5b505af1158015611868573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610a585760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610917565b6118c8611870565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600c602052604090205460ff16600281111561193b5761193b612c56565b1461197e5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610917565b6119b28484602080602002604051908101604052809291908260208002808284376000920191909152508691506121969050565b949350505050565b60008481526009602052604090205460ff16611a71576119d98361223c565b6000611a0f8584602080602002604051908101604052809291908260208002808284376000920191909152508691506121969050565b9050838114611a565760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610917565b506000848152600960205260409020805460ff191660011790555b50505050565b6000600260055403611acb5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610917565b60026005556000611adc838261232e565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611b1462ffffff198316612352565b63ffffffff1614611b565760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610917565b6000611b6762ffffff198316612367565b905060016000828152600c602052604090205460ff166002811115611b8e57611b8e612c56565b14611bc55760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610917565b6000818152600c60205260409020805460ff19166002179055611c287f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613071565b5a1015611c605760405162461bcd60e51b8152600401610917906020808252600490820152632167617360e01b604082015260600190565b6000611c7162ffffff1984166123b0565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611cce62ffffff1989166123c1565b611cdd62ffffff198a166123d5565b611cec62ffffff198b166123ea565b611d09611cfe62ffffff198d166123ff565b62ffffff191661242d565b604051602401611d1c9493929190613089565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611d65578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611da3939291906130b8565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611e775760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610917565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611ec4576040519150601f19603f3d011682016040523d82523d6000602084013e611ec9565b606091505b5050905080611f405760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610917565b505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611fac6116ac565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118f83390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060868686868686604051602001612052969594939291906130d9565b60405160208183030381529060405290509695505050505050565b806120ab5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610917565b600081815260076020526040902054156120fe5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610917565b60008181526008602052604090205460ff16156121535760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610917565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610bec9083815260200190565b8260005b602081101561223457600183821c1660008583602081106121bd576121bd612ef8565b60200201519050816001036121fd57604080516020810183905290810185905260600160405160208183030381529060405280519060200120935061222a565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505060010161219a565b509392505050565b60008181526008602052604090205460ff16156122565750565b600081815260076020526040812054908190036122ac5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610917565b6006546122b98243612fa3565b10156123075760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610917565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b81516000906020840161234964ffffffffff85168284612476565b95945050505050565b60006114e962ffffff198316602860046124bd565b60008061237d8360781c6001600160601b031690565b6001600160601b03169050600061239d8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006114e96123be836124ed565b90565b60006114e962ffffff1983168260046124bd565b60006114e962ffffff198316602460046124bd565b60006114e962ffffff198316600460206124fe565b60006114e9604c61241d81601886901c6001600160601b0316612fa3565b62ffffff1985169190600061265a565b60606000806124458460181c6001600160601b031690565b6001600160601b03169050604051915081925061246584836020016126d4565b508181016020016040529052919050565b6000806124838385613071565b9050604051811115612493575060005b806000036124a85762ffffff199150506116a5565b5050606092831b9190911790911b1760181b90565b60006124ca826020613133565b6124d5906008613156565b60ff166124e38585856124fe565b901c949350505050565b60006114e962ffffff198316602c60205b60008160ff16600003612513575060006116a5565b6125268460181c6001600160601b031690565b6001600160601b031661253c60ff841685613071565b11156125a0576125876125588560781c6001600160601b031690565b6001600160601b03166125748660181c6001600160601b031690565b6001600160601b0316858560ff1661282b565b60405162461bcd60e51b8152600401610917919061317f565b60208260ff16111561261a5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610917565b6008820260006126338660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806126708660781c6001600160601b031690565b6001600160601b0316905061268486612899565b8461268f8784613071565b6126999190613071565b11156126ac5762ffffff199150506119b2565b6126b68582613071565b90506126ca8364ffffffffff168286612476565b9695505050505050565b600062ffffff198084160361273c5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610917565b612745836128d2565b6127a55760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610917565b60006127ba8460181c6001600160601b031690565b6001600160601b0316905060006127da8560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156127fa5760206060fd5b8285848460045afa506126ca6128108760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006128388661290f565b91505060006128468661290f565b91505060006128548661290f565b91505060006128628661290f565b9150508383838360405160200161287c9493929190613192565b604051602081830303815290604052945050505050949350505050565b60006128ae8260181c6001600160601b031690565b6128c18360781c6001600160601b031690565b016001600160601b03169050919050565b60006128de8260d81c90565b64ffffffffff1664ffffffffff036128f857506000919050565b600061290383612899565b60405110199392505050565b600080601f5b600f8160ff16111561296457600061292e826008613156565b60ff1685901c905061293f816129bd565b61ffff16841793508160ff1660101461295a57601084901b93505b5060001901612915565b50600f5b60ff8160ff1610156129b7576000612981826008613156565b60ff1685901c9050612992816129bd565b61ffff16831792508160ff166000146129ad57601083901b92505b5060001901612968565b50915091565b60006129cf60048360ff16901c6129ef565b60ff1661ffff919091161760081b6129e6826129ef565b60ff1617919050565b600060f08083179060ff82169003612a0a5750603092915050565b8060ff1660f103612a1e5750603192915050565b8060ff1660f203612a325750603292915050565b8060ff1660f303612a465750603392915050565b8060ff1660f403612a5a5750603492915050565b8060ff1660f503612a6e5750603592915050565b8060ff1660f603612a825750603692915050565b8060ff1660f703612a965750603792915050565b8060ff1660f803612aaa5750603892915050565b8060ff1660f903612abe5750603992915050565b8060ff1660fa03612ad25750606192915050565b8060ff1660fb03612ae65750606292915050565b8060ff1660fc03612afa5750606392915050565b8060ff1660fd03612b0e5750606492915050565b8060ff1660fe03612b225750606592915050565b8060ff1660ff03612b365750606692915050565b50919050565b600060208284031215612b4e57600080fd5b5035919050565b600060208284031215612b6757600080fd5b81356001600160a01b03811681146116a557600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112612ba557600080fd5b813567ffffffffffffffff80821115612bc057612bc0612b7e565b604051601f8301601f19908116603f01168101908282118183101715612be857612be8612b7e565b81604052838152866020858801011115612c0157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612c3357600080fd5b813567ffffffffffffffff811115612c4a57600080fd5b6119b284828501612b94565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612c8e57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612ca757600080fd5b823567ffffffffffffffff80821115612cbf57600080fd5b612ccb86838701612b94565b93506020850135915080821115612ce157600080fd5b50612cee85828601612b94565b9150509250929050565b60008060008060006104608688031215612d1157600080fd5b853567ffffffffffffffff80821115612d2957600080fd5b818801915088601f830112612d3d57600080fd5b813581811115612d4c57600080fd5b8960208260051b8501011115612d6157600080fd5b602092830197509550508601359250610440860187811115612d8257600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612da857600080fd5b919050565b600060208284031215612dbf57600080fd5b6116a582612d94565b600080600060608486031215612ddd57600080fd5b612de684612d94565b925060208401359150604084013567ffffffffffffffff811115612e0957600080fd5b612e1586828701612b94565b9150509250925092565b600060208284031215612e3157600080fd5b5051919050565b60005b83811015612e53578181015183820152602001612e3b565b83811115611a715750506000910152565b60008151808452612e7c816020860160208601612e38565b601f01601f19169290920160200192915050565b606081526000612ea36060830186612e64565b8281036020840152612eb58186612e64565b91505060018060a01b0383166040830152949350505050565b604081526000612ee16040830185612e64565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612f2557600080fd5b9190910192915050565b6000808335601e19843603018112612f4657600080fd5b83018035915067ffffffffffffffff821115612f6157600080fd5b602001915036819003821315612f7657600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612fb557612fb5612f8d565b500390565b600060208284031215612fcc57600080fd5b815180151581146116a557600080fd5b600063ffffffff808316818516808303821115612ffb57612ffb612f8d565b01949350505050565b6000806040838503121561301757600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006126ca6080830184612e64565b80516020808301519190811015612b365760001960209190910360031b1b16919050565b6000821982111561308457613084612f8d565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526126ca6080830184612e64565b83815282151560208201526060604082015260006123496060830184612e64565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161312181604c850160208701612e38565b91909101604c01979650505050505050565b600060ff821660ff84168082101561314d5761314d612f8d565b90039392505050565b600060ff821660ff84168160ff048111821515161561317757613177612f8d565b029392505050565b6020815260006116a56020830184612e64565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016126ca56fea2646970667358221220005b0ac8cc9aaf1496d98387b75f1243e5cf50533b139ff4d0b3d547b0cf0d2764736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
