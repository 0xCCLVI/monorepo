/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604051620035f8380380620035f88339810160408190526200003591620003ac565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000311565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600555620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260065550620004609f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200038f57600080fd5b919050565b80516001600160a01b03811681146200038f57600080fd5b6000806000806000806000806000806101408b8d031215620003cd57600080fd5b620003d88b6200037a565b9950620003e860208c016200037a565b9850620003f860408c0162000394565b97506200040860608c0162000394565b96506200041860808c0162000394565b955060a08b0151945060c08b0151935060e08b015192506200043e6101008c0162000394565b91506200044f6101208c0162000394565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516130db6200051d600039600081816102d80152611b3d01526000818161082501528181611b5e0152611be50152600081816106820152818161090801528181610eb601526115370152600061026801526000818161050001528181610a3c015281816116d6015261171b0152600081816107f10152610b3c01526000818161048d015281816105be015281816114e8015281816117420152611a3f01526130db6000f3fe6080604052600436106102515760003560e01c80638456cb5911610139578063b697f531116100b6578063d232c2201161007a578063d232c220146107a0578063d2a3cc71146107bf578063d69f9d61146107df578063d88beda214610813578063db1b765914610847578063fa31de011461086757600080fd5b8063b697f531146106fa578063b95a20011461071a578063c5b350df1461074d578063cc39428314610762578063d1851c921461078257600080fd5b80639fa92f9d116100fd5780639fa92f9d1461065d578063a01892a514610670578063ad9c0c2e146106a4578063b1f8100d146106ba578063b2f87643146106da57600080fd5b80638456cb591461059a5780638d3638f4146105af5780638da5cb5b146105e257806398c9f2b9146106005780639d3117c71461063057600080fd5b80634ff746f6116101d25780635c975abb116101965780635c975abb146104cf5780635f61e3ec146104ee57806365eaf11b1461053a5780636a42b8f81461054f5780636b04a93314610565578063715018a61461058557600080fd5b80634ff746f614610412578063508a109b146104325780635190bc531461045257806352a9674b1461047b5780635bd11efc146104af57600080fd5b80632bbd59ca116102195780632bbd59ca14610368578063301f07c3146103a55780633cf52ffb146103d55780633f4ba83a146103ea57806348e6fa23146103ff57600080fd5b806314168416146102565780631eeaabea146102a457806325e3beda146102c6578063272efc69146103085780632bb1ae7c14610348575b600080fd5b34801561026257600080fd5b5061028a7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102b057600080fd5b506102c46102bf366004612978565b610887565b005b3480156102d257600080fd5b506102fa7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161029b565b34801561031457600080fd5b50610338610323366004612991565b600a6020526000908152604090205460ff1681565b604051901515815260200161029b565b34801561035457600080fd5b506102c4610363366004612a5d565b6108fc565b34801561037457600080fd5b50610398610383366004612978565b600c6020526000908152604090205460ff1681565b60405161029b9190612aa8565b3480156103b157600080fd5b506103386103c0366004612978565b60086020526000908152604090205460ff1681565b3480156103e157600080fd5b506002546102fa565b3480156103f657600080fd5b506102c46109f4565b6102c461040d366004612ad0565b610a31565b34801561041e57600080fd5b506102c461042d366004612a5d565b610b31565b34801561043e57600080fd5b506102c461044d366004612b34565b610bce565b34801561045e57600080fd5b5061033861046d366004612991565b6001600160a01b0316301490565b34801561048757600080fd5b5061028a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104bb57600080fd5b506102c46104ca366004612991565b610e7b565b3480156104db57600080fd5b50600354600160a01b900460ff16610338565b3480156104fa57600080fd5b506105227f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161029b565b34801561054657600080fd5b506102fa610eb2565b34801561055b57600080fd5b5062093a806102fa565b34801561057157600080fd5b506102c4610580366004612978565b610f3b565b34801561059157600080fd5b506102c4611006565b3480156105a657600080fd5b506102c46110c3565b3480156105bb57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061028a565b3480156105ee57600080fd5b506000546001600160a01b0316610522565b34801561060c57600080fd5b5061033861061b366004612978565b60096020526000908152604090205460ff1681565b34801561063c57600080fd5b506102fa61064b366004612978565b60076020526000908152604090205481565b34801561066957600080fd5b5030610522565b34801561067c57600080fd5b506105227f000000000000000000000000000000000000000000000000000000000000000081565b3480156106b057600080fd5b506102fa60065481565b3480156106c657600080fd5b506102c46106d5366004612991565b611177565b3480156106e657600080fd5b506102c46106f5366004612991565b61121c565b34801561070657600080fd5b506102c4610715366004612991565b611298565b34801561072657600080fd5b5061028a610735366004612be9565b600b6020526000908152604090205463ffffffff1681565b34801561075957600080fd5b506102c4611317565b34801561076e57600080fd5b50600354610522906001600160a01b031681565b34801561078e57600080fd5b506001546001600160a01b0316610522565b3480156107ac57600080fd5b506000546001600160a01b031615610338565b3480156107cb57600080fd5b506102c46107da366004612991565b611372565b3480156107eb57600080fd5b506105227f000000000000000000000000000000000000000000000000000000000000000081565b34801561081f57600080fd5b506102fa7f000000000000000000000000000000000000000000000000000000000000000081565b34801561085357600080fd5b50610338610862366004612991565b611434565b34801561087357600080fd5b506102fa610882366004612c04565b611449565b6000546001600160a01b031633146108b2576040516311a8a1bb60e31b815260040160405180910390fd5b60065481036108f75760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600655565b610904611606565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190612c5b565b60405160200161099a91815260200190565b60405160208183030381529060405290506109b58183611653565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778183336040516109e893929190612ccc565b60405180910390a15050565b6000546001600160a01b03163314610a1f576040516311a8a1bb60e31b815260040160405180910390fd5b610a276117ca565b610a2f61181a565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a985760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016108ee565b805115610ad65760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016108ee565b610aef8260405180602001604052806000815250611653565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778260405180602001604052806000815250336040516109e893929190612ccc565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b925760405162461bcd60e51b81526004016108ee9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610bc3929190612d0a565b60405180910390a150565b610bd6611606565b83610c0d5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016108ee565b600085856000818110610c2257610c22612d34565b9050602002810190610c349190612d4a565b610c3e9080612d6b565b604051610c4c929190612db9565b604051809103902090506000610cb38288886000818110610c6f57610c6f612d34565b9050602002810190610c819190612d4a565b60200189896000818110610c9757610c97612d34565b9050602002810190610ca99190612d4a565b610420013561186f565b9050610cc181868686611914565b6000828152600c60205260409020805460ff191660019081179091555b63ffffffff8116871115610de55787878263ffffffff16818110610d0457610d04612d34565b9050602002810190610d169190612d4a565b610d209080612d6b565b604051610d2e929190612db9565b604051809103902092506000610d83848a8a8563ffffffff16818110610d5657610d56612d34565b9050602002810190610d689190612d4a565b6020018b8b8663ffffffff16818110610c9757610c97612d34565b9050828114610dc25760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016108ee565b506000838152600c60205260409020805460ff1916600190811790915501610cde565b5060005b63ffffffff8116871115610e7157610e6888888363ffffffff16818110610e1257610e12612d34565b9050602002810190610e249190612d4a565b610e2e9080612d6b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119d192505050565b50600101610de9565b5050505050505050565b6000546001600160a01b03163314610ea6576040516311a8a1bb60e31b815260040160405180910390fd5b610eaf81611d18565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f369190612c5b565b905090565b6000546001600160a01b03163314610f66576040516311a8a1bb60e31b815260040160405180910390fd5b610f6e6117ca565b6000818152600760205260408120549003610fc35760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016108ee565b60008181526007602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610bc39083815260200190565b6000546001600160a01b03163314611031576040516311a8a1bb60e31b815260040160405180910390fd5b60025460000361105457604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426110669190612ddf565b11611084576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b0316156110ae576040516323295ef960e01b815260040160405180910390fd5b600154610a2f906001600160a01b0316611d81565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561110c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111309190612df6565b6111675760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016108ee565b61116f611606565b610a2f611de0565b6000546001600160a01b031633146111a2576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156111c757506001600160a01b03811615155b156111e5576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361121357604051634a2fb73f60e11b815260040160405180910390fd5b610eaf81611e23565b6000546001600160a01b03163314611247576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610bc3565b6000546001600160a01b031633146112c3576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600a6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610bc3565b6001546001600160a01b03163314611342576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426113549190612ddf565b116110ae5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b0316331461139d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036113fb5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016108ee565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610bc3565b60006001600160a01b03821633145b92915050565b336000908152600a602052604081205460ff166114975760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016108ee565b63ffffffff8085166000908152600b6020526040902054166114ba816001612e18565b63ffffffff8681166000908152600b60205260408120805463ffffffff1916939092169290921790556115117f00000000000000000000000000000000000000000000000000000000000000003384898989611e71565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190612e40565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836115dd600184612ddf565b84876040516115ef9493929190612e64565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610a2f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016108ee565b8051156116915760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016108ee565b81516020146116cc5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016108ee565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036117115761170d61170883612e89565b611ea9565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f000000000000000000000000000000000000000000000000000000000000000061176a85612e89565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156117ae57600080fd5b505af11580156117c2573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610a2f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016108ee565b6118226117ca565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600c602052604090205460ff16600281111561189557611895612a92565b146118d85760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016108ee565b61190c848460208060200260405190810160405280929190826020800280828437600092019190915250869150611fd29050565b949350505050565b60008481526009602052604090205460ff166119cb5761193383612078565b6000611969858460208060200260405190810160405280929190826020800280828437600092019190915250869150611fd29050565b90508381146119b05760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016108ee565b506000848152600960205260409020805460ff191660011790555b50505050565b6000600260055403611a255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108ee565b60026005556000611a36838261216a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611a6e62ffffff19831661218e565b63ffffffff1614611ab05760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016108ee565b6000611ac162ffffff1983166121a3565b905060016000828152600c602052604090205460ff166002811115611ae857611ae8612a92565b14611b1f5760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016108ee565b6000818152600c60205260409020805460ff19166002179055611b827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ead565b5a1015611bba5760405162461bcd60e51b81526004016108ee906020808252600490820152632167617360e01b604082015260600190565b6000611bcb62ffffff1984166121ec565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611c2862ffffff1989166121fd565b611c3762ffffff198a16612211565b611c4662ffffff198b16612226565b611c63611c5862ffffff198d1661223b565b62ffffff1916612269565b604051602401611c769493929190612ec5565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611cbf578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611cfd93929190612ef4565b60405180910390a15050600160055550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611de8611606565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118523390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b6060868686868686604051602001611e8e96959493929190612f15565b60405160208183030381529060405290509695505050505050565b80611ee75760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016108ee565b60008181526007602052604090205415611f3a5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016108ee565b60008181526008602052604090205460ff1615611f8f5760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016108ee565b60008181526007602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610bc39083815260200190565b8260005b602081101561207057600183821c166000858360208110611ff957611ff9612d34565b6020020151905081600103612039576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350612066565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b5050600101611fd6565b509392505050565b60008181526008602052604090205460ff16156120925750565b600081815260076020526040812054908190036120e85760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016108ee565b6006546120f58243612ddf565b10156121435760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016108ee565b506000908152600860209081526040808320805460ff191660011790556007909152812055565b81516000906020840161218564ffffffffff851682846122b2565b95945050505050565b600061144362ffffff198316602860046122f9565b6000806121b98360781c6001600160601b031690565b6001600160601b0316905060006121d98460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006114436121fa83612329565b90565b600061144362ffffff1983168260046122f9565b600061144362ffffff198316602460046122f9565b600061144362ffffff1983166004602061233a565b6000611443604c61225981601886901c6001600160601b0316612ddf565b62ffffff19851691906000612496565b60606000806122818460181c6001600160601b031690565b6001600160601b0316905060405191508192506122a18483602001612510565b508181016020016040529052919050565b6000806122bf8385612ead565b90506040518111156122cf575060005b806000036122e45762ffffff199150506115ff565b5050606092831b9190911790911b1760181b90565b6000612306826020612f6f565b612311906008612f92565b60ff1661231f85858561233a565b901c949350505050565b600061144362ffffff198316602c60205b60008160ff1660000361234f575060006115ff565b6123628460181c6001600160601b031690565b6001600160601b031661237860ff841685612ead565b11156123dc576123c36123948560781c6001600160601b031690565b6001600160601b03166123b08660181c6001600160601b031690565b6001600160601b0316858560ff16612667565b60405162461bcd60e51b81526004016108ee9190612fbb565b60208260ff1611156124565760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016108ee565b60088202600061246f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806124ac8660781c6001600160601b031690565b6001600160601b031690506124c0866126d5565b846124cb8784612ead565b6124d59190612ead565b11156124e85762ffffff1991505061190c565b6124f28582612ead565b90506125068364ffffffffff1682866122b2565b9695505050505050565b600062ffffff19808416036125785760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016108ee565b6125818361270e565b6125e15760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016108ee565b60006125f68460181c6001600160601b031690565b6001600160601b0316905060006126168560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156126365760206060fd5b8285848460045afa5061250661264c8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006126748661274b565b91505060006126828661274b565b91505060006126908661274b565b915050600061269e8661274b565b915050838383836040516020016126b89493929190612fce565b604051602081830303815290604052945050505050949350505050565b60006126ea8260181c6001600160601b031690565b6126fd8360781c6001600160601b031690565b016001600160601b03169050919050565b600061271a8260d81c90565b64ffffffffff1664ffffffffff0361273457506000919050565b600061273f836126d5565b60405110199392505050565b600080601f5b600f8160ff1611156127a057600061276a826008612f92565b60ff1685901c905061277b816127f9565b61ffff16841793508160ff1660101461279657601084901b93505b5060001901612751565b50600f5b60ff8160ff1610156127f35760006127bd826008612f92565b60ff1685901c90506127ce816127f9565b61ffff16831792508160ff166000146127e957601083901b92505b50600019016127a4565b50915091565b600061280b60048360ff16901c61282b565b60ff1661ffff919091161760081b6128228261282b565b60ff1617919050565b600060f08083179060ff821690036128465750603092915050565b8060ff1660f10361285a5750603192915050565b8060ff1660f20361286e5750603292915050565b8060ff1660f3036128825750603392915050565b8060ff1660f4036128965750603492915050565b8060ff1660f5036128aa5750603592915050565b8060ff1660f6036128be5750603692915050565b8060ff1660f7036128d25750603792915050565b8060ff1660f8036128e65750603892915050565b8060ff1660f9036128fa5750603992915050565b8060ff1660fa0361290e5750606192915050565b8060ff1660fb036129225750606292915050565b8060ff1660fc036129365750606392915050565b8060ff1660fd0361294a5750606492915050565b8060ff1660fe0361295e5750606592915050565b8060ff1660ff036129725750606692915050565b50919050565b60006020828403121561298a57600080fd5b5035919050565b6000602082840312156129a357600080fd5b81356001600160a01b03811681146115ff57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126129e157600080fd5b813567ffffffffffffffff808211156129fc576129fc6129ba565b604051601f8301601f19908116603f01168101908282118183101715612a2457612a246129ba565b81604052838152866020858801011115612a3d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612a6f57600080fd5b813567ffffffffffffffff811115612a8657600080fd5b61190c848285016129d0565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612aca57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612ae357600080fd5b823567ffffffffffffffff80821115612afb57600080fd5b612b07868387016129d0565b93506020850135915080821115612b1d57600080fd5b50612b2a858286016129d0565b9150509250929050565b60008060008060006104608688031215612b4d57600080fd5b853567ffffffffffffffff80821115612b6557600080fd5b818801915088601f830112612b7957600080fd5b813581811115612b8857600080fd5b8960208260051b8501011115612b9d57600080fd5b602092830197509550508601359250610440860187811115612bbe57600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612be457600080fd5b919050565b600060208284031215612bfb57600080fd5b6115ff82612bd0565b600080600060608486031215612c1957600080fd5b612c2284612bd0565b925060208401359150604084013567ffffffffffffffff811115612c4557600080fd5b612c51868287016129d0565b9150509250925092565b600060208284031215612c6d57600080fd5b5051919050565b60005b83811015612c8f578181015183820152602001612c77565b838111156119cb5750506000910152565b60008151808452612cb8816020860160208601612c74565b601f01601f19169290920160200192915050565b606081526000612cdf6060830186612ca0565b8281036020840152612cf18186612ca0565b91505060018060a01b0383166040830152949350505050565b604081526000612d1d6040830185612ca0565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612d6157600080fd5b9190910192915050565b6000808335601e19843603018112612d8257600080fd5b83018035915067ffffffffffffffff821115612d9d57600080fd5b602001915036819003821315612db257600080fd5b9250929050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612df157612df1612dc9565b500390565b600060208284031215612e0857600080fd5b815180151581146115ff57600080fd5b600063ffffffff808316818516808303821115612e3757612e37612dc9565b01949350505050565b60008060408385031215612e5357600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006125066080830184612ca0565b805160208083015191908110156129725760001960209190910360031b1b16919050565b60008219821115612ec057612ec0612dc9565b500190565b600063ffffffff8087168352808616602084015250836040830152608060608301526125066080830184612ca0565b83815282151560208201526060604082015260006121856060830184612ca0565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c8301528251612f5d81604c850160208701612c74565b91909101604c01979650505050505050565b600060ff821660ff841680821015612f8957612f89612dc9565b90039392505050565b600060ff821660ff84168160ff0481118215151615612fb357612fb3612dc9565b029392505050565b6020815260006115ff6020830184612ca0565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d820161250656fea264697066735822122015cc0a664d8b158a8a95df33dfdb40d965bdfffe1efedfd30f3bad29837eb45d64736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
