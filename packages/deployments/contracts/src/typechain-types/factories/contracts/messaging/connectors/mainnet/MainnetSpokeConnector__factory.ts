/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003be738038062003be78339810160408190526200003591620003b0565b89898989898989898989808a8a8a8a8a6200005033620002b0565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000315565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004649f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039357600080fd5b919050565b80516001600160a01b03811681146200039357600080fd5b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b6200037e565b9950620003ec60208c016200037e565b9850620003fc60408c0162000398565b97506200040c60608c0162000398565b96506200041c60808c0162000398565b955060a08b0151945060c08b0151935060e08b01519250620004426101008c0162000398565b9150620004536101208c0162000398565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516136a3620005446000396000818161031a0152611fa40152600081816108b901528181611fc501526120570152600081816106e001528181610a3601528181610e8d01528181610ff10152818161113d0152818161181101528181611bbc01528181611e6b0152611f3c015260006102aa01526000818161050e01528181610bde015281816119b101526119f601526000818161086f0152610cea0152600081816104550152818161061c015281816117b301528181611a1d0152611dcf01526136a36000f3fe60806040526004361061028c5760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d611461085d578063d7d317b314610891578063d88beda2146108a7578063db1b7659146108db578063e0fed010146108fb578063fa31de011461091b57600080fd5b8063b95a200114610798578063c5b350df146107cb578063cc394283146107e0578063d1851c9214610800578063d232c2201461081e578063d2a3cc711461083d57600080fd5b8063a01892a511610113578063a01892a5146106ce578063a792c29b14610702578063ad9c0c2e14610722578063b1f8100d14610738578063b2f8764314610758578063b697f5311461077857600080fd5b80638456cb59146105f85780638d3638f41461060d5780638da5cb5b1461064057806398c9f2b91461065e5780639d3117c71461068e5780639fa92f9d146106bb57600080fd5b806352a9674b116101fe5780636159ada1116101b75780636159ada11461054857806365eaf11b1461057857806368742da61461058d5780636a42b8f8146105ad5780636b04a933146105c3578063715018a6146105e357600080fd5b806352a9674b14610443578063572386ca14610477578063579c1618146104a75780635bd11efc146104bd5780635c975abb146104dd5780635f61e3ec146104fc57600080fd5b80633cf52ffb116102505780633cf52ffb1461039d5780633f4ba83a146103b257806348e6fa23146103c75780634ff746f6146103da578063508a109b146103fa5780635190bc531461041a57600080fd5b806314168416146102985780631eeaabea146102e657806325e3beda146103085780632bb1ae7c1461034a578063301f07c31461035d57600080fd5b3661029357005b600080fd5b3480156102a457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102f257600080fd5b50610306610301366004613031565b610949565b005b34801561031457600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102dd565b6103066103583660046130ed565b6109f3565b34801561036957600080fd5b5061038d610378366004613031565b600a6020526000908152604090205460ff1681565b60405190151581526020016102dd565b3480156103a957600080fd5b5060025461033c565b3480156103be57600080fd5b50610306610b96565b6103066103d5366004613122565b610bd3565b3480156103e657600080fd5b506103066103f53660046130ed565b610cdf565b34801561040657600080fd5b50610306610415366004613186565b610d7c565b34801561042657600080fd5b5061038d610435366004613222565b6001600160a01b0316301490565b34801561044f57600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561048357600080fd5b5061038d610492366004613031565b600c6020526000908152604090205460ff1681565b3480156104b357600080fd5b5061033c60055481565b3480156104c957600080fd5b506103066104d8366004613222565b611102565b3480156104e957600080fd5b50600354600160a01b900460ff1661038d565b34801561050857600080fd5b506105307f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102dd565b34801561055457600080fd5b5061038d610563366004613222565b600d6020526000908152604090205460ff1681565b34801561058457600080fd5b5061033c611139565b34801561059957600080fd5b506103066105a8366004613222565b6111c2565b3480156105b957600080fd5b5062093a8061033c565b3480156105cf57600080fd5b506103066105de366004613031565b61123f565b3480156105ef57600080fd5b5061030661130a565b34801561060457600080fd5b50610306611335565b34801561061957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561064c57600080fd5b506000546001600160a01b0316610530565b34801561066a57600080fd5b5061038d610679366004613031565b600b6020526000908152604090205460ff1681565b34801561069a57600080fd5b5061033c6106a9366004613031565b60096020526000908152604090205481565b3480156106c757600080fd5b5030610530565b3480156106da57600080fd5b506105307f000000000000000000000000000000000000000000000000000000000000000081565b34801561070e57600080fd5b50600454610530906001600160a01b031681565b34801561072e57600080fd5b5061033c60085481565b34801561074457600080fd5b50610306610753366004613222565b6113e9565b34801561076457600080fd5b50610306610773366004613222565b611487565b34801561078457600080fd5b50610306610793366004613222565b611503565b3480156107a457600080fd5b506102cc6107b3366004613264565b600e6020526000908152604090205463ffffffff1681565b3480156107d757600080fd5b50610306611582565b3480156107ec57600080fd5b50600354610530906001600160a01b031681565b34801561080c57600080fd5b506001546001600160a01b0316610530565b34801561082a57600080fd5b506000546001600160a01b03161561038d565b34801561084957600080fd5b50610306610858366004613222565b6115f2565b34801561086957600080fd5b506105307f000000000000000000000000000000000000000000000000000000000000000081565b34801561089d57600080fd5b5061033c60065481565b3480156108b357600080fd5b5061033c7f000000000000000000000000000000000000000000000000000000000000000081565b3480156108e757600080fd5b5061038d6108f6366004613222565b6116c9565b34801561090757600080fd5b50610306610916366004613031565b6116de565b34801561092757600080fd5b5061093b61093636600461327f565b611712565b6040516102dd929190613326565b6000546001600160a01b03163314610974576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109b95760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b6109fb6118e1565b43600554600654610a0c9190613355565b1115610a2b576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190613368565b6000818152600c602052604090205490915060ff1615610b0c5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109b0565b600081604051602001610b2191815260200190565b6040516020818303038152906040529050610b3c818461192e565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b8990839086903390613381565b60405180910390a1505050565b6000546001600160a01b03163314610bc1576040516311a8a1bb60e31b815260040160405180910390fd5b610bc9611aa5565b610bd1611af5565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c3a5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016109b0565b805115610c785760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109b0565b610c91826040518060200160405280600081525061192e565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610cd393929190613381565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d405760405162461bcd60e51b81526004016109b09060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d719291906133bf565b60405180910390a150565b610d846118e1565b610d8c611b4a565b83610dc35760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109b0565b600085856000818110610dd857610dd86133e9565b9050602002810190610dea91906133ff565b610df49080613420565b604051610e0292919061346e565b604051809103902090506000610e698288886000818110610e2557610e256133e9565b9050602002810190610e3791906133ff565b60200189896000818110610e4d57610e4d6133e9565b9050602002810190610e5f91906133ff565b6104200135611ba3565b9050610e7781868686611cbe565b6040516398fae8e960e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610ed957600080fd5b505af1158015610eed573d6000803e3d6000fd5b5088925060019150505b818163ffffffff1610156110615788888263ffffffff16818110610f1d57610f1d6133e9565b9050602002810190610f2f91906133ff565b610f399080613420565b604051610f4792919061346e565b604051809103902093506000610f9c858b8b8563ffffffff16818110610f6f57610f6f6133e9565b9050602002810190610f8191906133ff565b6020018c8c8663ffffffff16818110610e4d57610e4d6133e9565b9050838114610fdb5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109b0565b6040516398fae8e960e01b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b15801561103d57600080fd5b505af1158015611051573d6000803e3d6000fd5b5050505081600101915050610ef7565b5060005b818163ffffffff1610156110ed576110e489898363ffffffff1681811061108e5761108e6133e9565b90506020028101906110a091906133ff565b6110aa9080613420565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611db992505050565b50600101611065565b505050506110fb6001600755565b5050505050565b6000546001600160a01b0316331461112d576040516311a8a1bb60e31b815260040160405180910390fd5b61113681612170565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bd9190613368565b905090565b6000546001600160a01b031633146111ed576040516311a8a1bb60e31b815260040160405180910390fd5b476111f882826121d9565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161123391815260200190565b60405180910390a25050565b6000546001600160a01b0316331461126a576040516311a8a1bb60e31b815260040160405180910390fd5b611272611aa5565b60008181526009602052604081205490036112c75760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109b0565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d719083815260200190565b6000546001600160a01b03163314610bd1576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561137e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a2919061347e565b6113d95760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109b0565b6113e16118e1565b610bd16122f7565b6000546001600160a01b03163314611414576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611432575060025415155b15611450576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361147e57604051634a2fb73f60e11b815260040160405180910390fd5b6111368161233a565b6000546001600160a01b031633146114b2576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d71565b6000546001600160a01b0316331461152e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d71565b6001546001600160a01b031633146115ad576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115bf91906134a0565b116115dd576040516324e0285f60e21b815260040160405180910390fd5b600154610bd1906001600160a01b0316612388565b6000546001600160a01b0316331461161d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361167b5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109b0565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d71565b60006001600160a01b03821633145b92915050565b6000546001600160a01b03163314611709576040516311a8a1bb60e31b815260040160405180910390fd5b611136816123ed565b336000908152600d602052604081205460609060ff166117635760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b60448201526064016109b0565b63ffffffff8086166000908152600e602052604081208054919291909116908261178c836134b3565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006117eb7f00000000000000000000000000000000000000000000000000000000000000006117e2336001600160a01b031690565b848a8a8a61246b565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611861573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188591906134d6565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836118b76001846134a0565b84876040516118c994939291906134fa565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610bd15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109b0565b80511561196c5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109b0565b81516020146119a75760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109b0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036119ec576119e86119e383613529565b6124a3565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611a4585613529565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015611a8957600080fd5b505af1158015611a9d573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610bd15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109b0565b611afd611aa5565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260075403611b9c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109b0565b6002600755565b600080604051630546f34b60e21b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2f9190613566565b6002811115611c4057611c40613550565b14611c805760405162461bcd60e51b815260206004820152601060248201526f214c6561665374617475732e4e6f6e6560801b60448201526064016109b0565b611cb48484602080602002604051908101604052809291908260208002808284376000920191909152508691506125cc9050565b90505b9392505050565b6000848152600b602052604090205460ff16611db357611cdd8361291a565b6000611d138584602080602002604051908101604052809291908260208002808284376000920191909152508691506125cc9050565b9050838114611d5a5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109b0565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611da99086815260200190565b60405180910390a3505b50505050565b600080611dc68382612a7a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611dfe62ffffff198316612a9e565b63ffffffff1614611e405760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109b0565b6000611e5162ffffff198316612ab3565b90506001604051630546f34b60e21b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ede9190613566565b6002811115611eef57611eef613550565b14611f265760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109b0565b604051630b61f10360e41b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b61f103090602401600060405180830381600087803b158015611f8857600080fd5b505af1158015611f9c573d6000803e3d6000fd5b5050505060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611fee9190613355565b611ff891906134a0565b5a1161202f5760405162461bcd60e51b81526004016109b0906020808252600490820152632167617360e01b604082015260600190565b600061204062ffffff198416612afc565b6040805161010080825261012082019092529192507f00000000000000000000000000000000000000000000000000000000000000009160009082602082018180368337019050509050600061209b62ffffff198816612b0d565b6120aa62ffffff198916612b21565b6120b962ffffff198a16612b36565b6120d66120cb62ffffff198c16612b4b565b62ffffff1916612b79565b6040516024016120e99493929190613587565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050612123858560008685612bc2565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe489061215c9088908b9086906135b6565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156122295760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109b0565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612276576040519150601f19603f3d011682016040523d82523d6000602084013e61227b565b606091505b50509050806122f25760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109b0565b505050565b6122ff6118e1565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b2d3390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60055481036124305760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109b0565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d71565b6060868686868686604051602001612488969594939291906135d7565b60405160208183030381529060405290509695505050505050565b806124e15760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109b0565b600081815260096020526040902054156125345760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109b0565b6000818152600a602052604090205460ff16156125895760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109b0565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d719083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b8061295d5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109b0565b6000818152600a602052604090205460ff16156129775750565b600081815260096020526040812054908190036129cd5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109b0565b6008546129da82436134a0565b1015612a285760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109b0565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612a9564ffffffffff85168284612c4d565b95945050505050565b60006116d862ffffff19831660286004612c8a565b600080612ac98360781c6001600160601b031690565b6001600160601b031690506000612ae98460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006116d8612b0a83612cba565b90565b60006116d862ffffff198316826004612c8a565b60006116d862ffffff19831660246004612c8a565b60006116d862ffffff19831660046020612ccb565b60006116d8604c612b6981601886901c6001600160601b03166134a0565b62ffffff19851691906000612dd6565b6060600080612b918460181c6001600160601b031690565b6001600160601b031690506040519150819250612bb18483602001612e52565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612be857612be861304a565b6040519080825280601f01601f191660200182016040528015612c12576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612c33578692505b828152826000602083013e90999098509650505050505050565b600080612c5a8385613355565b9050604051811115612c6a575060005b80600003612c7f5762ffffff19915050611cb7565b612a95858585612f45565b6000612c97826020613631565b612ca290600861364a565b60ff16612cb0858585612ccb565b901c949350505050565b60006116d862ffffff198316602c60205b60008160ff16600003612ce057506000611cb7565b612cf38460181c6001600160601b031690565b6001600160601b0316612d0960ff841685613355565b1115612d7157612d228460781c6001600160601b031690565b612d358560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016109b0565b60208260ff161115612d965760405163045df3f960e01b815260040160405180910390fd5b600882026000612daf8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612dec8660781c6001600160601b031690565b6001600160601b03169050612e0086612fbc565b84612e0b8784613355565b612e159190613355565b1115612e285762ffffff19915050612e4a565b612e328582613355565b9050612e468364ffffffffff168286612c4d565b9150505b949350505050565b600062ffffff1980841603612e7a5760405163148d513360e21b815260040160405180910390fd5b612e8383612ff5565b15612ea157604051632ee0949160e11b815260040160405180910390fd5b6000612eb68460181c6001600160601b031690565b6001600160601b031690506000612ed68560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612ef75760206060fd5b8386858560045afa905080612f1f57604051632af1bd9b60e21b815260040160405180910390fd5b612f3a612f2c8860d81c90565b64ffffffffff168786612f45565b979650505050505050565b60006060601883856001600160601b03821682148015612f6d575086816001600160601b0316145b612fa65760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016109b0565b96831b90961790911b90941790931b9392505050565b6000612fd18260181c6001600160601b031690565b612fe48360781c6001600160601b031690565b016001600160601b03169050919050565b60006130018260d81c90565b64ffffffffff1664ffffffffff0361301b57506001919050565b600061302683612fbc565b604051109392505050565b60006020828403121561304357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261307157600080fd5b813567ffffffffffffffff8082111561308c5761308c61304a565b604051601f8301601f19908116603f011681019082821181831017156130b4576130b461304a565b816040528381528660208588010111156130cd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156130ff57600080fd5b813567ffffffffffffffff81111561311657600080fd5b612e4a84828501613060565b6000806040838503121561313557600080fd5b823567ffffffffffffffff8082111561314d57600080fd5b61315986838701613060565b9350602085013591508082111561316f57600080fd5b5061317c85828601613060565b9150509250929050565b6000806000806000610460868803121561319f57600080fd5b853567ffffffffffffffff808211156131b757600080fd5b818801915088601f8301126131cb57600080fd5b8135818111156131da57600080fd5b8960208260051b85010111156131ef57600080fd5b60209283019750955050860135925061044086018781111561321057600080fd5b94979396509194604001933592915050565b60006020828403121561323457600080fd5b81356001600160a01b0381168114611cb757600080fd5b803563ffffffff8116811461325f57600080fd5b919050565b60006020828403121561327657600080fd5b611cb78261324b565b60008060006060848603121561329457600080fd5b61329d8461324b565b925060208401359150604084013567ffffffffffffffff8111156132c057600080fd5b6132cc86828701613060565b9150509250925092565b60005b838110156132f15781810151838201526020016132d9565b50506000910152565b600081518084526133128160208601602086016132d6565b601f01601f19169290920160200192915050565b828152604060208201526000611cb460408301846132fa565b634e487b7160e01b600052601160045260246000fd5b808201808211156116d8576116d861333f565b60006020828403121561337a57600080fd5b5051919050565b60608152600061339460608301866132fa565b82810360208401526133a681866132fa565b91505060018060a01b0383166040830152949350505050565b6040815260006133d260408301856132fa565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261341657600080fd5b9190910192915050565b6000808335601e1984360301811261343757600080fd5b83018035915067ffffffffffffffff82111561345257600080fd5b60200191503681900382131561346757600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561349057600080fd5b81518015158114611cb757600080fd5b818103818111156116d8576116d861333f565b600063ffffffff8083168181036134cc576134cc61333f565b6001019392505050565b600080604083850312156134e957600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061351f60808301846132fa565b9695505050505050565b8051602080830151919081101561354a576000198160200360031b1b821691505b50919050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561357857600080fd5b815160038110611cb757600080fd5b600063ffffffff80871683528086166020840152508360408301526080606083015261351f60808301846132fa565b8381528215156020820152606060408201526000612a9560608301846132fa565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161361f81604c8501602087016132d6565b91909101604c01979650505050505050565b60ff82811682821603908111156116d8576116d861333f565b60ff81811683821602908116908181146136665761366661333f565b509291505056fea2646970667358221220ff4bb7ff81ef366592981380da162f7efa510c29f5297820ef95bb175e84cad564736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
