/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003a0f38038062003a0f8339810160408190526200003591620003b2565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000317565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004669f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039557600080fd5b919050565b80516001600160a01b03811681146200039557600080fd5b6000806000806000806000806000806101408b8d031215620003d357600080fd5b620003de8b62000380565b9950620003ee60208c0162000380565b9850620003fe60408c016200039a565b97506200040e60608c016200039a565b96506200041e60808c016200039a565b955060a08b0151945060c08b0151935060e08b01519250620004446101008c016200039a565b9150620004556101208c016200039a565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516134ec62000523600039600081816103250152611cee01526000818161090101528181611d0f0152611d9601526000818161072801528181610a3b015281816110690152611737015260006102b501526000818161058601528181610be3015281816118d6015261191b0152600081816108b70152610cef0152600081816104cd01528181610664015281816116dc015281816119420152611bf001526134ec6000f3fe6080604052600436106102975760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d61146108a5578063d7d317b3146108d9578063d88beda2146108ef578063db1b765914610923578063e0fed01014610943578063fa31de011461096357600080fd5b8063b95a2001146107e0578063c5b350df14610813578063cc39428314610828578063d1851c9214610848578063d232c22014610866578063d2a3cc711461088557600080fd5b8063a01892a511610113578063a01892a514610716578063a792c29b1461074a578063ad9c0c2e1461076a578063b1f8100d14610780578063b2f87643146107a0578063b697f531146107c057600080fd5b80638456cb59146106405780638d3638f4146106555780638da5cb5b1461068857806398c9f2b9146106a65780639d3117c7146106d65780639fa92f9d1461070357600080fd5b80635190bc53116101fe5780635f61e3ec116101b75780635f61e3ec1461057457806365eaf11b146105c057806368742da6146105d55780636a42b8f8146105f55780636b04a9331461060b578063715018a61461062b57600080fd5b80635190bc531461049257806352a9674b146104bb578063572386ca146104ef578063579c16181461051f5780635bd11efc146105355780635c975abb1461055557600080fd5b8063301f07c311610250578063301f07c3146103e55780633cf52ffb146104155780633f4ba83a1461042a57806348e6fa231461043f5780634ff746f614610452578063508a109b1461047257600080fd5b806314168416146102a35780631eeaabea146102f157806325e3beda14610313578063272efc69146103555780632bb1ae7c146103955780632bbd59ca146103a857600080fd5b3661029e57005b600080fd5b3480156102af57600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102fd57600080fd5b5061031161030c366004612d9d565b610983565b005b34801561031f57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102e8565b34801561036157600080fd5b50610385610370366004612db6565b600d6020526000908152604090205460ff1681565b60405190151581526020016102e8565b6103116103a3366004612e82565b6109f8565b3480156103b457600080fd5b506103d86103c3366004612d9d565b600f6020526000908152604090205460ff1681565b6040516102e89190612ecd565b3480156103f157600080fd5b50610385610400366004612d9d565b600a6020526000908152604090205460ff1681565b34801561042157600080fd5b50600254610347565b34801561043657600080fd5b50610311610b9b565b61031161044d366004612ef5565b610bd8565b34801561045e57600080fd5b5061031161046d366004612e82565b610ce4565b34801561047e57600080fd5b5061031161048d366004612f59565b610d81565b34801561049e57600080fd5b506103856104ad366004612db6565b6001600160a01b0316301490565b3480156104c757600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b3480156104fb57600080fd5b5061038561050a366004612d9d565b600c6020526000908152604090205460ff1681565b34801561052b57600080fd5b5061034760055481565b34801561054157600080fd5b50610311610550366004612db6565b61102e565b34801561056157600080fd5b50600354600160a01b900460ff16610385565b34801561058057600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102e8565b3480156105cc57600080fd5b50610347611065565b3480156105e157600080fd5b506103116105f0366004612db6565b6110ee565b34801561060157600080fd5b5062093a80610347565b34801561061757600080fd5b50610311610626366004612d9d565b61116b565b34801561063757600080fd5b50610311611236565b34801561064c57600080fd5b50610311611261565b34801561066157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561069457600080fd5b506000546001600160a01b03166105a8565b3480156106b257600080fd5b506103856106c1366004612d9d565b600b6020526000908152604090205460ff1681565b3480156106e257600080fd5b506103476106f1366004612d9d565b60096020526000908152604090205481565b34801561070f57600080fd5b50306105a8565b34801561072257600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561075657600080fd5b506004546105a8906001600160a01b031681565b34801561077657600080fd5b5061034760085481565b34801561078c57600080fd5b5061031161079b366004612db6565b611315565b3480156107ac57600080fd5b506103116107bb366004612db6565b6113b3565b3480156107cc57600080fd5b506103116107db366004612db6565b61142f565b3480156107ec57600080fd5b506102d76107fb366004613009565b600e6020526000908152604090205463ffffffff1681565b34801561081f57600080fd5b506103116114ae565b34801561083457600080fd5b506003546105a8906001600160a01b031681565b34801561085457600080fd5b506001546001600160a01b03166105a8565b34801561087257600080fd5b506000546001600160a01b031615610385565b34801561089157600080fd5b506103116108a0366004612db6565b61151e565b3480156108b157600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b3480156108e557600080fd5b5061034760065481565b3480156108fb57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b34801561092f57600080fd5b5061038561093e366004612db6565b6115f5565b34801561094f57600080fd5b5061031161095e366004612d9d565b61160a565b34801561096f57600080fd5b5061034761097e366004613024565b61163e565b6000546001600160a01b031633146109ae576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109f35760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b610a00611806565b43600554600654610a119190613091565b1115610a30576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb91906130a4565b6000818152600c602052604090205490915060ff1615610b115760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109ea565b600081604051602001610b2691815260200190565b6040516020818303038152906040529050610b418184611853565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b8e9083908690339061310d565b60405180910390a1505050565b6000546001600160a01b03163314610bc6576040516311a8a1bb60e31b815260040160405180910390fd5b610bce6119ca565b610bd6611a1a565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c3f5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016109ea565b805115610c7d5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109ea565b610c968260405180602001604052806000815250611853565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610cd89392919061310d565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d455760405162461bcd60e51b81526004016109ea9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d7692919061314b565b60405180910390a150565b610d89611806565b83610dc05760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109ea565b600085856000818110610dd557610dd5613175565b9050602002810190610de7919061318b565b610df190806131ac565b604051610dff9291906131fa565b604051809103902090506000610e668288886000818110610e2257610e22613175565b9050602002810190610e34919061318b565b60200189896000818110610e4a57610e4a613175565b9050602002810190610e5c919061318b565b6104200135611a6f565b9050610e7481868686611b14565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610f985787878263ffffffff16818110610eb757610eb7613175565b9050602002810190610ec9919061318b565b610ed390806131ac565b604051610ee19291906131fa565b604051809103902092506000610f36848a8a8563ffffffff16818110610f0957610f09613175565b9050602002810190610f1b919061318b565b6020018b8b8663ffffffff16818110610e4a57610e4a613175565b9050828114610f755760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109ea565b506000838152600f60205260409020805460ff1916600190811790915501610e91565b5060005b63ffffffff81168711156110245761101b88888363ffffffff16818110610fc557610fc5613175565b9050602002810190610fd7919061318b565b610fe190806131ac565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bd192505050565b50600101610f9c565b5050505050505050565b6000546001600160a01b03163314611059576040516311a8a1bb60e31b815260040160405180910390fd5b61106281611ecd565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e991906130a4565b905090565b6000546001600160a01b03163314611119576040516311a8a1bb60e31b815260040160405180910390fd5b476111248282611f36565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161115f91815260200190565b60405180910390a25050565b6000546001600160a01b03163314611196576040516311a8a1bb60e31b815260040160405180910390fd5b61119e6119ca565b60008181526009602052604081205490036111f35760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109ea565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d769083815260200190565b6000546001600160a01b03163314610bd6576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce919061320a565b6113055760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109ea565b61130d611806565b610bd6612054565b6000546001600160a01b03163314611340576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561135e575060025415155b1561137c576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036113aa57604051634a2fb73f60e11b815260040160405180910390fd5b61106281612097565b6000546001600160a01b031633146113de576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d76565b6000546001600160a01b0316331461145a576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d76565b6001546001600160a01b031633146114d9576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114eb919061322c565b116115095760405163d39c12bb60e01b815260040160405180910390fd5b600154610bd6906001600160a01b03166120e5565b6000546001600160a01b03163314611549576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115a75760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109ea565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d76565b60006001600160a01b03821633145b92915050565b6000546001600160a01b03163314611635576040516311a8a1bb60e31b815260040160405180910390fd5b6110628161214a565b336000908152600d602052604081205460ff1661168c5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016109ea565b63ffffffff8085166000908152600e60205260408120805491929190911690826116b58361323f565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006117117f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b031660001b848989896121c8565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ab9190613262565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836117dd60018461322c565b84876040516117ef9493929190613286565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610bd65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109ea565b8051156118915760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109ea565b81516020146118cc5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109ea565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036119115761190d611908836132ab565b612200565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f000000000000000000000000000000000000000000000000000000000000000061196a856132ab565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156119ae57600080fd5b505af11580156119c2573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610bd65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109ea565b611a226119ca565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600f602052604090205460ff166002811115611a9557611a95612eb7565b14611ad85760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109ea565b611b0c8484602080602002604051908101604052809291908260208002808284376000920191909152508691506123299050565b949350505050565b6000848152600b602052604090205460ff16611bcb57611b33836123cf565b6000611b698584602080602002604051908101604052809291908260208002808284376000920191909152508691506123299050565b9050838114611bb05760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109ea565b506000848152600b60205260409020805460ff191660011790555b50505050565b6000611bdb612504565b6000611be7838261255d565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611c1f62ffffff198316612581565b63ffffffff1614611c615760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109ea565b6000611c7262ffffff198316612596565b905060016000828152600f602052604090205460ff166002811115611c9957611c99612eb7565b14611cd05760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109ea565b6000818152600f60205260409020805460ff19166002179055611d337f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613091565b5a1015611d6b5760405162461bcd60e51b81526004016109ea906020808252600490820152632167617360e01b604082015260600190565b6000611d7c62ffffff1984166125df565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611dd962ffffff1989166125f0565b611de862ffffff198a16612604565b611df762ffffff198b16612619565b611e14611e0962ffffff198d1661262e565b62ffffff191661265c565b604051602401611e2794939291906132cf565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611e70578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611eae939291906132fe565b60405180910390a15050505050505050611ec86001600755565b919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611f865760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109ea565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611fd3576040519150601f19603f3d011682016040523d82523d6000602084013e611fd8565b606091505b505090508061204f5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109ea565b505050565b61205c611806565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a523390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600554810361218d5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109ea565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d76565b60608686868686866040516020016121e59695949392919061331f565b60405160208183030381529060405290509695505050505050565b8061223e5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109ea565b600081815260096020526040902054156122915760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109ea565b6000818152600a602052604090205460ff16156122e65760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109ea565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d769083815260200190565b8260005b60208110156123c757600183821c16600085836020811061235057612350613175565b60200201519050816001036123905760408051602081018390529081018590526060016040516020818303038152906040528051906020012093506123bd565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505060010161232d565b509392505050565b806124125760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109ea565b6000818152600a602052604090205460ff161561242c5750565b600081815260096020526040812054908190036124825760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109ea565b60085461248f824361322c565b10156124dd5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109ea565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b6002600754036125565760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ea565b6002600755565b81516000906020840161257864ffffffffff851682846126a5565b95945050505050565b600061160462ffffff198316602860046126ec565b6000806125ac8360781c6001600160601b031690565b6001600160601b0316905060006125cc8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006116046125ed8361271c565b90565b600061160462ffffff1983168260046126ec565b600061160462ffffff198316602460046126ec565b600061160462ffffff1983166004602061272d565b6000611604604c61264c81601886901c6001600160601b031661322c565b62ffffff19851691906000612889565b60606000806126748460181c6001600160601b031690565b6001600160601b0316905060405191508192506126948483602001612903565b508181016020016040529052919050565b6000806126b28385613091565b90506040518111156126c2575060005b806000036126d75762ffffff199150506117ff565b5050606092831b9190911790911b1760181b90565b60006126f9826020613379565b612704906008613392565b60ff1661271285858561272d565b901c949350505050565b600061160462ffffff198316602c60205b60008160ff16600003612742575060006117ff565b6127558460181c6001600160601b031690565b6001600160601b031661276b60ff841685613091565b11156127cf576127b66127878560781c6001600160601b031690565b6001600160601b03166127a38660181c6001600160601b031690565b6001600160601b0316858560ff16612aa3565b60405162461bcd60e51b81526004016109ea91906133b5565b60208260ff1611156128495760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016109ea565b6008820260006128628660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b60008061289f8660781c6001600160601b031690565b6001600160601b031690506128b386612b11565b846128be8784613091565b6128c89190613091565b11156128db5762ffffff19915050611b0c565b6128e58582613091565b90506128f98364ffffffffff1682866126a5565b9695505050505050565b600062ffffff198084160361296b5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016109ea565b61297483612b4a565b6129d45760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016109ea565b60006129e98460181c6001600160601b031690565b6001600160601b031690506000612a098560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612a2a5760206060fd5b8386858560045afa905080612a705760405162461bcd60e51b815260206004820152600c60248201526b6964656e74697479204f4f4760a01b60448201526064016109ea565b612a98612a7d8860d81c90565b64ffffffffff60601b606091821b168817901b851760181b90565b979650505050505050565b60606000612ab086612b87565b9150506000612abe86612b87565b9150506000612acc86612b87565b9150506000612ada86612b87565b91505083838383604051602001612af494939291906133c8565b604051602081830303815290604052945050505050949350505050565b6000612b268260181c6001600160601b031690565b612b398360781c6001600160601b031690565b016001600160601b03169050919050565b6000612b568260d81c90565b64ffffffffff1664ffffffffff03612b7057506000919050565b6000612b7b83612b11565b60405110199392505050565b600080601f5b600f811115612bd3576000612ba382600861349f565b85901c9050612bb181612c23565b61ffff168417935081601014612bc957601084901b93505b5060001901612b8d565b50600f5b60ff811015612c1d576000612bed82600861349f565b85901c9050612bfb81612c23565b61ffff168317925081600014612c1357601083901b92505b5060001901612bd7565b50915091565b6000612c3560048360ff16901c612c50565b60081b61ff00169050612c4782612c50565b60ff1617919050565b600060f08083179060ff82169003612c6b5750603092915050565b8060ff1660f103612c7f5750603192915050565b8060ff1660f203612c935750603292915050565b8060ff1660f303612ca75750603392915050565b8060ff1660f403612cbb5750603492915050565b8060ff1660f503612ccf5750603592915050565b8060ff1660f603612ce35750603692915050565b8060ff1660f703612cf75750603792915050565b8060ff1660f803612d0b5750603892915050565b8060ff1660f903612d1f5750603992915050565b8060ff1660fa03612d335750606192915050565b8060ff1660fb03612d475750606292915050565b8060ff1660fc03612d5b5750606392915050565b8060ff1660fd03612d6f5750606492915050565b8060ff1660fe03612d835750606592915050565b8060ff1660ff03612d975750606692915050565b50919050565b600060208284031215612daf57600080fd5b5035919050565b600060208284031215612dc857600080fd5b81356001600160a01b03811681146117ff57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112612e0657600080fd5b813567ffffffffffffffff80821115612e2157612e21612ddf565b604051601f8301601f19908116603f01168101908282118183101715612e4957612e49612ddf565b81604052838152866020858801011115612e6257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612e9457600080fd5b813567ffffffffffffffff811115612eab57600080fd5b611b0c84828501612df5565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612eef57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612f0857600080fd5b823567ffffffffffffffff80821115612f2057600080fd5b612f2c86838701612df5565b93506020850135915080821115612f4257600080fd5b50612f4f85828601612df5565b9150509250929050565b60008060008060006104608688031215612f7257600080fd5b853567ffffffffffffffff80821115612f8a57600080fd5b818801915088601f830112612f9e57600080fd5b813581811115612fad57600080fd5b8960208260051b8501011115612fc257600080fd5b602092830197509550508601359250610440860187811115612fe357600080fd5b94979396509194604001933592915050565b803563ffffffff81168114611ec857600080fd5b60006020828403121561301b57600080fd5b6117ff82612ff5565b60008060006060848603121561303957600080fd5b61304284612ff5565b925060208401359150604084013567ffffffffffffffff81111561306557600080fd5b61307186828701612df5565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b808201808211156116045761160461307b565b6000602082840312156130b657600080fd5b5051919050565b60005b838110156130d85781810151838201526020016130c0565b50506000910152565b600081518084526130f98160208601602086016130bd565b601f01601f19169290920160200192915050565b60608152600061312060608301866130e1565b828103602084015261313281866130e1565b91505060018060a01b0383166040830152949350505050565b60408152600061315e60408301856130e1565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126131a257600080fd5b9190910192915050565b6000808335601e198436030181126131c357600080fd5b83018035915067ffffffffffffffff8211156131de57600080fd5b6020019150368190038213156131f357600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561321c57600080fd5b815180151581146117ff57600080fd5b818103818111156116045761160461307b565b600063ffffffff8083168181036132585761325861307b565b6001019392505050565b6000806040838503121561327557600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006128f960808301846130e1565b80516020808301519190811015612d975760001960209190910360031b1b16919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526128f960808301846130e1565b838152821515602082015260606040820152600061257860608301846130e1565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161336781604c8501602087016130bd565b91909101604c01979650505050505050565b60ff82811682821603908111156116045761160461307b565b60ff81811683821602908116908181146133ae576133ae61307b565b5092915050565b6020815260006117ff60208301846130e1565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016128f9565b80820281158282048414176116045761160461307b56fea26469706673582212207d5616527304f0069dbcb6cade448a9d707cc8cf8bc73d20a27da18b6f39241064736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
