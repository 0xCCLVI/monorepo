/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003816380380620038168339810160408190526200003591620003ac565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000311565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004609f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200038f57600080fd5b919050565b80516001600160a01b03811681146200038f57600080fd5b6000806000806000806000806000806101408b8d031215620003cd57600080fd5b620003d88b6200037a565b9950620003e860208c016200037a565b9850620003f860408c0162000394565b97506200040860608c0162000394565b96506200041860808c0162000394565b955060a08b0151945060c08b0151935060e08b015192506200043e6101008c0162000394565b91506200044f6101208c0162000394565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516132f96200051d600039600081816103040152611cd00152600081816108ad01528181611cf10152611d780152600081816106f4015281816109e70152818161101501526116ca0152600061029401526000818161057201528181610b8f0152818161186901526118ae0152600081816108630152610c9b0152600081816104b9015281816106300152818161167b015281816118d50152611bd201526132f96000f3fe60806040526004361061027d5760003560e01c80638456cb591161014f578063b95a2001116100c1578063d69f9d611161007a578063d69f9d6114610851578063d7d317b314610885578063d88beda21461089b578063db1b7659146108cf578063e0fed010146108ef578063fa31de011461090f57600080fd5b8063b95a20011461078c578063c5b350df146107bf578063cc394283146107d4578063d1851c92146107f4578063d232c22014610812578063d2a3cc711461083157600080fd5b80639fa92f9d116101135780639fa92f9d146106cf578063a01892a5146106e2578063ad9c0c2e14610716578063b1f8100d1461072c578063b2f876431461074c578063b697f5311461076c57600080fd5b80638456cb591461060c5780638d3638f4146106215780638da5cb5b1461065457806398c9f2b9146106725780639d3117c7146106a257600080fd5b8063508a109b116101f35780635c975abb116101ac5780635c975abb146105415780635f61e3ec1461056057806365eaf11b146105ac5780636a42b8f8146105c15780636b04a933146105d7578063715018a6146105f757600080fd5b8063508a109b1461045e5780635190bc531461047e57806352a9674b146104a7578063572386ca146104db578063579c16181461050b5780635bd11efc1461052157600080fd5b80632bbd59ca116102455780632bbd59ca14610394578063301f07c3146103d15780633cf52ffb146104015780633f4ba83a1461041657806348e6fa231461042b5780634ff746f61461043e57600080fd5b806314168416146102825780631eeaabea146102d057806325e3beda146102f2578063272efc69146103345780632bb1ae7c14610374575b600080fd5b34801561028e57600080fd5b506102b67f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102dc57600080fd5b506102f06102eb366004612b77565b61092f565b005b3480156102fe57600080fd5b506103267f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102c7565b34801561034057600080fd5b5061036461034f366004612b90565b600d6020526000908152604090205460ff1681565b60405190151581526020016102c7565b34801561038057600080fd5b506102f061038f366004612c5c565b6109a4565b3480156103a057600080fd5b506103c46103af366004612b77565b600f6020526000908152604090205460ff1681565b6040516102c79190612ca7565b3480156103dd57600080fd5b506103646103ec366004612b77565b600a6020526000908152604090205460ff1681565b34801561040d57600080fd5b50600254610326565b34801561042257600080fd5b506102f0610b47565b6102f0610439366004612ccf565b610b84565b34801561044a57600080fd5b506102f0610459366004612c5c565b610c90565b34801561046a57600080fd5b506102f0610479366004612d33565b610d2d565b34801561048a57600080fd5b50610364610499366004612b90565b6001600160a01b0316301490565b3480156104b357600080fd5b506102b67f000000000000000000000000000000000000000000000000000000000000000081565b3480156104e757600080fd5b506103646104f6366004612b77565b600c6020526000908152604090205460ff1681565b34801561051757600080fd5b5061032660055481565b34801561052d57600080fd5b506102f061053c366004612b90565b610fda565b34801561054d57600080fd5b50600354600160a01b900460ff16610364565b34801561056c57600080fd5b506105947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102c7565b3480156105b857600080fd5b50610326611011565b3480156105cd57600080fd5b5062093a80610326565b3480156105e357600080fd5b506102f06105f2366004612b77565b61109a565b34801561060357600080fd5b506102f0611165565b34801561061857600080fd5b506102f0611222565b34801561062d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102b6565b34801561066057600080fd5b506000546001600160a01b0316610594565b34801561067e57600080fd5b5061036461068d366004612b77565b600b6020526000908152604090205460ff1681565b3480156106ae57600080fd5b506103266106bd366004612b77565b60096020526000908152604090205481565b3480156106db57600080fd5b5030610594565b3480156106ee57600080fd5b506105947f000000000000000000000000000000000000000000000000000000000000000081565b34801561072257600080fd5b5061032660085481565b34801561073857600080fd5b506102f0610747366004612b90565b6112d6565b34801561075857600080fd5b506102f0610767366004612b90565b61137b565b34801561077857600080fd5b506102f0610787366004612b90565b6113f7565b34801561079857600080fd5b506102b66107a7366004612de8565b600e6020526000908152604090205463ffffffff1681565b3480156107cb57600080fd5b506102f0611476565b3480156107e057600080fd5b50600354610594906001600160a01b031681565b34801561080057600080fd5b506001546001600160a01b0316610594565b34801561081e57600080fd5b506000546001600160a01b031615610364565b34801561083d57600080fd5b506102f061084c366004612b90565b6114d1565b34801561085d57600080fd5b506105947f000000000000000000000000000000000000000000000000000000000000000081565b34801561089157600080fd5b5061032660065481565b3480156108a757600080fd5b506103267f000000000000000000000000000000000000000000000000000000000000000081565b3480156108db57600080fd5b506103646108ea366004612b90565b611593565b3480156108fb57600080fd5b506102f061090a366004612b77565b6115a8565b34801561091b57600080fd5b5061032661092a366004612e03565b6115dc565b6000546001600160a01b0316331461095a576040516311a8a1bb60e31b815260040160405180910390fd5b600854810361099f5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b6109ac611799565b436005546006546109bd9190612e70565b11156109dc576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a679190612e88565b6000818152600c602052604090205490915060ff1615610abd5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610996565b600081604051602001610ad291815260200190565b6040516020818303038152906040529050610aed81846117e6565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b3a90839086903390612ef9565b60405180910390a1505050565b6000546001600160a01b03163314610b72576040516311a8a1bb60e31b815260040160405180910390fd5b610b7a61195d565b610b826119ad565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610beb5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610996565b805115610c295760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610996565b610c4282604051806020016040528060008152506117e6565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610c8493929190612ef9565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cf15760405162461bcd60e51b81526004016109969060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d22929190612f37565b60405180910390a150565b610d35611799565b83610d6c5760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610996565b600085856000818110610d8157610d81612f61565b9050602002810190610d939190612f77565b610d9d9080612f98565b604051610dab929190612fe6565b604051809103902090506000610e128288886000818110610dce57610dce612f61565b9050602002810190610de09190612f77565b60200189896000818110610df657610df6612f61565b9050602002810190610e089190612f77565b6104200135611a02565b9050610e2081868686611aa7565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610f445787878263ffffffff16818110610e6357610e63612f61565b9050602002810190610e759190612f77565b610e7f9080612f98565b604051610e8d929190612fe6565b604051809103902092506000610ee2848a8a8563ffffffff16818110610eb557610eb5612f61565b9050602002810190610ec79190612f77565b6020018b8b8663ffffffff16818110610df657610df6612f61565b9050828114610f215760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610996565b506000838152600f60205260409020805460ff1916600190811790915501610e3d565b5060005b63ffffffff8116871115610fd057610fc788888363ffffffff16818110610f7157610f71612f61565b9050602002810190610f839190612f77565b610f8d9080612f98565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b6492505050565b50600101610f48565b5050505050505050565b6000546001600160a01b03163314611005576040516311a8a1bb60e31b815260040160405180910390fd5b61100e81611eab565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110959190612e88565b905090565b6000546001600160a01b031633146110c5576040516311a8a1bb60e31b815260040160405180910390fd5b6110cd61195d565b60008181526009602052604081205490036111225760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610996565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d229083815260200190565b6000546001600160a01b03163314611190576040516311a8a1bb60e31b815260040160405180910390fd5b6002546000036111b357604051630e4b303f60e21b815260040160405180910390fd5b62093a80600254426111c59190612ff6565b116111e3576040516386d4b3f160e01b815260040160405180910390fd5b6001546001600160a01b03161561120d576040516323295ef960e01b815260040160405180910390fd5b600154610b82906001600160a01b0316611f14565b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f919061300d565b6112c65760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610996565b6112ce611799565b610b82611f73565b6000546001600160a01b03163314611301576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561132657506001600160a01b03811615155b15611344576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361137257604051634a2fb73f60e11b815260040160405180910390fd5b61100e81611fb6565b6000546001600160a01b031633146113a6576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d22565b6000546001600160a01b03163314611422576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d22565b6001546001600160a01b031633146114a1576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114b39190612ff6565b1161120d5760405163d39c12bb60e01b815260040160405180910390fd5b6000546001600160a01b031633146114fc576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b039081169082160361155a5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610996565b6040516001600160a01b03821681527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d22565b60006001600160a01b03821633145b92915050565b6000546001600160a01b031633146115d3576040516311a8a1bb60e31b815260040160405180910390fd5b61100e81612004565b336000908152600d602052604081205460ff1661162a5760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b6044820152606401610996565b63ffffffff8085166000908152600e60205260409020541661164d81600161302f565b63ffffffff8681166000908152600e60205260408120805463ffffffff1916939092169290921790556116a47f00000000000000000000000000000000000000000000000000000000000000003384898989612082565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561171a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173e9190613057565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611770600184612ff6565b8487604051611782949392919061307b565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610b825760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610996565b8051156118245760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610996565b815160201461185f5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610996565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036118a4576118a061189b836130a0565b6120ba565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006118fd856130a0565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561194157600080fd5b505af1158015611955573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610b825760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610996565b6119b561195d565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600f602052604090205460ff166002811115611a2857611a28612c91565b14611a6b5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610996565b611a9f8484602080602002604051908101604052809291908260208002808284376000920191909152508691506121e39050565b949350505050565b6000848152600b602052604090205460ff16611b5e57611ac683612289565b6000611afc8584602080602002604051908101604052809291908260208002808284376000920191909152508691506121e39050565b9050838114611b435760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610996565b506000848152600b60205260409020805460ff191660011790555b50505050565b6000600260075403611bb85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610996565b60026007556000611bc9838261237b565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611c0162ffffff19831661239f565b63ffffffff1614611c435760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610996565b6000611c5462ffffff1983166123b4565b905060016000828152600f602052604090205460ff166002811115611c7b57611c7b612c91565b14611cb25760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610996565b6000818152600f60205260409020805460ff19166002179055611d157f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612e70565b5a1015611d4d5760405162461bcd60e51b8152600401610996906020808252600490820152632167617360e01b604082015260600190565b6000611d5e62ffffff1984166123fd565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611dbb62ffffff19891661240e565b611dca62ffffff198a16612422565b611dd962ffffff198b16612437565b611df6611deb62ffffff198d1661244c565b62ffffff191661247a565b604051602401611e0994939291906130c4565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611e52578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611e90939291906130f3565b60405180910390a15050600160075550949695505050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611f7b611799565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119e53390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60055481036120475760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610996565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d22565b606086868686868660405160200161209f96959493929190613114565b60405160208183030381529060405290509695505050505050565b806120f85760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610996565b6000818152600960205260409020541561214b5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610996565b6000818152600a602052604090205460ff16156121a05760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610996565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d229083815260200190565b8260005b602081101561228157600183821c16600085836020811061220a5761220a612f61565b602002015190508160010361224a576040805160208101839052908101859052606001604051602081830303815290604052805190602001209350612277565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b50506001016121e7565b509392505050565b6000818152600a602052604090205460ff16156122a35750565b600081815260096020526040812054908190036122f95760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610996565b6008546123068243612ff6565b10156123545760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610996565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b81516000906020840161239664ffffffffff851682846124c3565b95945050505050565b60006115a262ffffff1983166028600461250a565b6000806123ca8360781c6001600160601b031690565b6001600160601b0316905060006123ea8460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006115a261240b8361253a565b90565b60006115a262ffffff19831682600461250a565b60006115a262ffffff1983166024600461250a565b60006115a262ffffff1983166004602061254b565b60006115a2604c61246a81601886901c6001600160601b0316612ff6565b62ffffff198516919060006126a7565b60606000806124928460181c6001600160601b031690565b6001600160601b0316905060405191508192506124b28483602001612721565b508181016020016040529052919050565b6000806124d08385612e70565b90506040518111156124e0575060005b806000036124f55762ffffff19915050611792565b5050606092831b9190911790911b1760181b90565b600061251782602061316e565b612522906008613191565b60ff1661253085858561254b565b901c949350505050565b60006115a262ffffff198316602c60205b60008160ff1660000361256057506000611792565b6125738460181c6001600160601b031690565b6001600160601b031661258960ff841685612e70565b11156125ed576125d46125a58560781c6001600160601b031690565b6001600160601b03166125c18660181c6001600160601b031690565b6001600160601b0316858560ff16612878565b60405162461bcd60e51b815260040161099691906131ba565b60208260ff1611156126675760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e2033322062797465730000000000006064820152608401610996565b6008820260006126808660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806126bd8660781c6001600160601b031690565b6001600160601b031690506126d1866128e6565b846126dc8784612e70565b6126e69190612e70565b11156126f95762ffffff19915050611a9f565b6127038582612e70565b90506127178364ffffffffff1682866124c3565b9695505050505050565b600062ffffff19808416036127895760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b6064820152608401610996565b6127928361291f565b6127f25760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b6064820152608401610996565b60006128078460181c6001600160601b031690565b6001600160601b0316905060006128278560781c6001600160601b031690565b6001600160601b0316905060006040519050848111156128475760206060fd5b8285848460045afa5061271761285d8760d81c90565b64ffffffffff60601b606091821b168717901b841760181b90565b606060006128858661295c565b91505060006128938661295c565b91505060006128a18661295c565b91505060006128af8661295c565b915050838383836040516020016128c994939291906131cd565b604051602081830303815290604052945050505050949350505050565b60006128fb8260181c6001600160601b031690565b61290e8360781c6001600160601b031690565b016001600160601b03169050919050565b600061292b8260d81c90565b64ffffffffff1664ffffffffff0361294557506000919050565b6000612950836128e6565b60405110199392505050565b600080601f5b600f8111156129a85760006129788260086132a4565b85901c9050612986816129f8565b61ffff16841793508160101461299e57601084901b93505b5060001901612962565b50600f5b60ff8110156129f25760006129c28260086132a4565b85901c90506129d0816129f8565b61ffff1683179250816000146129e857601083901b92505b50600019016129ac565b50915091565b6000612a0a60048360ff16901c612a2a565b60ff1661ffff919091161760081b612a2182612a2a565b60ff1617919050565b600060f08083179060ff82169003612a455750603092915050565b8060ff1660f103612a595750603192915050565b8060ff1660f203612a6d5750603292915050565b8060ff1660f303612a815750603392915050565b8060ff1660f403612a955750603492915050565b8060ff1660f503612aa95750603592915050565b8060ff1660f603612abd5750603692915050565b8060ff1660f703612ad15750603792915050565b8060ff1660f803612ae55750603892915050565b8060ff1660f903612af95750603992915050565b8060ff1660fa03612b0d5750606192915050565b8060ff1660fb03612b215750606292915050565b8060ff1660fc03612b355750606392915050565b8060ff1660fd03612b495750606492915050565b8060ff1660fe03612b5d5750606592915050565b8060ff1660ff03612b715750606692915050565b50919050565b600060208284031215612b8957600080fd5b5035919050565b600060208284031215612ba257600080fd5b81356001600160a01b038116811461179257600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112612be057600080fd5b813567ffffffffffffffff80821115612bfb57612bfb612bb9565b604051601f8301601f19908116603f01168101908282118183101715612c2357612c23612bb9565b81604052838152866020858801011115612c3c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612c6e57600080fd5b813567ffffffffffffffff811115612c8557600080fd5b611a9f84828501612bcf565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612cc957634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612ce257600080fd5b823567ffffffffffffffff80821115612cfa57600080fd5b612d0686838701612bcf565b93506020850135915080821115612d1c57600080fd5b50612d2985828601612bcf565b9150509250929050565b60008060008060006104608688031215612d4c57600080fd5b853567ffffffffffffffff80821115612d6457600080fd5b818801915088601f830112612d7857600080fd5b813581811115612d8757600080fd5b8960208260051b8501011115612d9c57600080fd5b602092830197509550508601359250610440860187811115612dbd57600080fd5b94979396509194604001933592915050565b803563ffffffff81168114612de357600080fd5b919050565b600060208284031215612dfa57600080fd5b61179282612dcf565b600080600060608486031215612e1857600080fd5b612e2184612dcf565b925060208401359150604084013567ffffffffffffffff811115612e4457600080fd5b612e5086828701612bcf565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008219821115612e8357612e83612e5a565b500190565b600060208284031215612e9a57600080fd5b5051919050565b60005b83811015612ebc578181015183820152602001612ea4565b83811115611b5e5750506000910152565b60008151808452612ee5816020860160208601612ea1565b601f01601f19169290920160200192915050565b606081526000612f0c6060830186612ecd565b8281036020840152612f1e8186612ecd565b91505060018060a01b0383166040830152949350505050565b604081526000612f4a6040830185612ecd565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e19833603018112612f8e57600080fd5b9190910192915050565b6000808335601e19843603018112612faf57600080fd5b83018035915067ffffffffffffffff821115612fca57600080fd5b602001915036819003821315612fdf57600080fd5b9250929050565b8183823760009101908152919050565b60008282101561300857613008612e5a565b500390565b60006020828403121561301f57600080fd5b8151801515811461179257600080fd5b600063ffffffff80831681851680830382111561304e5761304e612e5a565b01949350505050565b6000806040838503121561306a57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006127176080830184612ecd565b80516020808301519190811015612b715760001960209190910360031b1b16919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526127176080830184612ecd565b83815282151560208201526060604082015260006123966060830184612ecd565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161315c81604c850160208701612ea1565b91909101604c01979650505050505050565b600060ff821660ff84168082101561318857613188612e5a565b90039392505050565b600060ff821660ff84168160ff04811182151516156131b2576131b2612e5a565b029392505050565b6020815260006117926020830184612ecd565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d8201612717565b60008160001904831182151516156132be576132be612e5a565b50029056fea264697066735822122001988e4b4c8c1d474ff9bc91d98c76198ba07b2e2b35eaaab4965b777dcccfc664736f6c634300080f0033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
