/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__acceptProposedOwner_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003a0f38038062003a0f8339810160408190526200003591620003ac565b89898989898989898989808a8a8a8a8a6200005033620002b2565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000311565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf850851015620001f35760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a98841015620002365760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002895760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004609f50505050505050505050505050505050565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200038f57600080fd5b919050565b80516001600160a01b03811681146200038f57600080fd5b6000806000806000806000806000806101408b8d031215620003cd57600080fd5b620003d88b6200037a565b9950620003e860208c016200037a565b9850620003f860408c0162000394565b97506200040860608c0162000394565b96506200041860808c0162000394565b955060a08b0151945060c08b0151935060e08b015192506200043e6101008c0162000394565b91506200044f6101208c0162000394565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516134f26200051d600039600081816103250152611cf501526000818161090101528181611d160152611d9d01526000818161072801528181610a3b01528181611069015261173e015260006102b501526000818161058601528181610be3015281816118dd01526119220152600081816108b70152610cef0152600081816104cd01528181610664015281816116e3015281816119490152611bf701526134f26000f3fe6080604052600436106102975760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d61146108a5578063d7d317b3146108d9578063d88beda2146108ef578063db1b765914610923578063e0fed01014610943578063fa31de011461096357600080fd5b8063b95a2001146107e0578063c5b350df14610813578063cc39428314610828578063d1851c9214610848578063d232c22014610866578063d2a3cc711461088557600080fd5b8063a01892a511610113578063a01892a514610716578063a792c29b1461074a578063ad9c0c2e1461076a578063b1f8100d14610780578063b2f87643146107a0578063b697f531146107c057600080fd5b80638456cb59146106405780638d3638f4146106555780638da5cb5b1461068857806398c9f2b9146106a65780639d3117c7146106d65780639fa92f9d1461070357600080fd5b80635190bc53116101fe5780635f61e3ec116101b75780635f61e3ec1461057457806365eaf11b146105c057806368742da6146105d55780636a42b8f8146105f55780636b04a9331461060b578063715018a61461062b57600080fd5b80635190bc531461049257806352a9674b146104bb578063572386ca146104ef578063579c16181461051f5780635bd11efc146105355780635c975abb1461055557600080fd5b8063301f07c311610250578063301f07c3146103e55780633cf52ffb146104155780633f4ba83a1461042a57806348e6fa231461043f5780634ff746f614610452578063508a109b1461047257600080fd5b806314168416146102a35780631eeaabea146102f157806325e3beda14610313578063272efc69146103555780632bb1ae7c146103955780632bbd59ca146103a857600080fd5b3661029e57005b600080fd5b3480156102af57600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102fd57600080fd5b5061031161030c366004612da3565b610983565b005b34801561031f57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102e8565b34801561036157600080fd5b50610385610370366004612dbc565b600d6020526000908152604090205460ff1681565b60405190151581526020016102e8565b6103116103a3366004612e88565b6109f8565b3480156103b457600080fd5b506103d86103c3366004612da3565b600f6020526000908152604090205460ff1681565b6040516102e89190612ed3565b3480156103f157600080fd5b50610385610400366004612da3565b600a6020526000908152604090205460ff1681565b34801561042157600080fd5b50600254610347565b34801561043657600080fd5b50610311610b9b565b61031161044d366004612efb565b610bd8565b34801561045e57600080fd5b5061031161046d366004612e88565b610ce4565b34801561047e57600080fd5b5061031161048d366004612f5f565b610d81565b34801561049e57600080fd5b506103856104ad366004612dbc565b6001600160a01b0316301490565b3480156104c757600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b3480156104fb57600080fd5b5061038561050a366004612da3565b600c6020526000908152604090205460ff1681565b34801561052b57600080fd5b5061034760055481565b34801561054157600080fd5b50610311610550366004612dbc565b61102e565b34801561056157600080fd5b50600354600160a01b900460ff16610385565b34801561058057600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102e8565b3480156105cc57600080fd5b50610347611065565b3480156105e157600080fd5b506103116105f0366004612dbc565b6110ee565b34801561060157600080fd5b5062093a80610347565b34801561061757600080fd5b50610311610626366004612da3565b61116b565b34801561063757600080fd5b50610311611236565b34801561064c57600080fd5b50610311611261565b34801561066157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561069457600080fd5b506000546001600160a01b03166105a8565b3480156106b257600080fd5b506103856106c1366004612da3565b600b6020526000908152604090205460ff1681565b3480156106e257600080fd5b506103476106f1366004612da3565b60096020526000908152604090205481565b34801561070f57600080fd5b50306105a8565b34801561072257600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b34801561075657600080fd5b506004546105a8906001600160a01b031681565b34801561077657600080fd5b5061034760085481565b34801561078c57600080fd5b5061031161079b366004612dbc565b611315565b3480156107ac57600080fd5b506103116107bb366004612dbc565b6113ba565b3480156107cc57600080fd5b506103116107db366004612dbc565b611436565b3480156107ec57600080fd5b506102d76107fb36600461300f565b600e6020526000908152604090205463ffffffff1681565b34801561081f57600080fd5b506103116114b5565b34801561083457600080fd5b506003546105a8906001600160a01b031681565b34801561085457600080fd5b506001546001600160a01b03166105a8565b34801561087257600080fd5b506000546001600160a01b031615610385565b34801561089157600080fd5b506103116108a0366004612dbc565b611525565b3480156108b157600080fd5b506105a87f000000000000000000000000000000000000000000000000000000000000000081565b3480156108e557600080fd5b5061034760065481565b3480156108fb57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b34801561092f57600080fd5b5061038561093e366004612dbc565b6115fc565b34801561094f57600080fd5b5061031161095e366004612da3565b611611565b34801561096f57600080fd5b5061034761097e36600461302a565b611645565b6000546001600160a01b031633146109ae576040516311a8a1bb60e31b815260040160405180910390fd5b60085481036109f35760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b600855565b610a0061180d565b43600554600654610a119190613097565b1115610a30576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abb91906130aa565b6000818152600c602052604090205490915060ff1615610b115760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109ea565b600081604051602001610b2691815260200190565b6040516020818303038152906040529050610b41818461185a565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610b8e90839086903390613113565b60405180910390a1505050565b6000546001600160a01b03163314610bc6576040516311a8a1bb60e31b815260040160405180910390fd5b610bce6119d1565b610bd6611a21565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c3f5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016109ea565b805115610c7d5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109ea565b610c96826040518060200160405280600081525061185a565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610cd893929190613113565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d455760405162461bcd60e51b81526004016109ea9060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d76929190613151565b60405180910390a150565b610d8961180d565b83610dc05760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109ea565b600085856000818110610dd557610dd561317b565b9050602002810190610de79190613191565b610df190806131b2565b604051610dff929190613200565b604051809103902090506000610e668288886000818110610e2257610e2261317b565b9050602002810190610e349190613191565b60200189896000818110610e4a57610e4a61317b565b9050602002810190610e5c9190613191565b6104200135611a76565b9050610e7481868686611b1b565b6000828152600f60205260409020805460ff191660019081179091555b63ffffffff8116871115610f985787878263ffffffff16818110610eb757610eb761317b565b9050602002810190610ec99190613191565b610ed390806131b2565b604051610ee1929190613200565b604051809103902092506000610f36848a8a8563ffffffff16818110610f0957610f0961317b565b9050602002810190610f1b9190613191565b6020018b8b8663ffffffff16818110610e4a57610e4a61317b565b9050828114610f755760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109ea565b506000838152600f60205260409020805460ff1916600190811790915501610e91565b5060005b63ffffffff81168711156110245761101b88888363ffffffff16818110610fc557610fc561317b565b9050602002810190610fd79190613191565b610fe190806131b2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bd892505050565b50600101610f9c565b5050505050505050565b6000546001600160a01b03163314611059576040516311a8a1bb60e31b815260040160405180910390fd5b61106281611ed4565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e991906130aa565b905090565b6000546001600160a01b03163314611119576040516311a8a1bb60e31b815260040160405180910390fd5b476111248282611f3d565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161115f91815260200190565b60405180910390a25050565b6000546001600160a01b03163314611196576040516311a8a1bb60e31b815260040160405180910390fd5b61119e6119d1565b60008181526009602052604081205490036111f35760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109ea565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610d769083815260200190565b6000546001600160a01b03163314610bd6576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa1580156112aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ce9190613210565b6113055760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109ea565b61130d61180d565b610bd661205b565b6000546001600160a01b03163314611340576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561136557506001600160a01b03811615155b15611383576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b038083169116036113b157604051634a2fb73f60e11b815260040160405180910390fd5b6110628161209e565b6000546001600160a01b031633146113e5576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610d76565b6000546001600160a01b03163314611461576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610d76565b6001546001600160a01b031633146114e0576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426114f29190613232565b116115105760405163d39c12bb60e01b815260040160405180910390fd5b600154610bd6906001600160a01b03166120ec565b6000546001600160a01b03163314611550576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036115ae5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109ea565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d76565b60006001600160a01b03821633145b92915050565b6000546001600160a01b0316331461163c576040516311a8a1bb60e31b815260040160405180910390fd5b6110628161214b565b336000908152600d602052604081205460ff166116935760405162461bcd60e51b815260206004820152600c60248201526b085dda1a5d195b1a5cdd195960a21b60448201526064016109ea565b63ffffffff8085166000908152600e60205260408120805491929190911690826116bc83613245565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006117187f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b031660001b848989896121c9565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af115801561178e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b29190613268565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836117e4600184613232565b84876040516117f6949392919061328c565b60405180910390a1509093505050505b9392505050565b600354600160a01b900460ff1615610bd65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109ea565b8051156118985760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109ea565b81516020146118d35760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109ea565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036119185761191461190f836132b1565b612201565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611971856132b1565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156119b557600080fd5b505af11580156119c9573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610bd65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109ea565b611a296119d1565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806000858152600f602052604090205460ff166002811115611a9c57611a9c612ebd565b14611adf5760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109ea565b611b1384846020806020026040519081016040528092919082602080028082843760009201919091525086915061232a9050565b949350505050565b6000848152600b602052604090205460ff16611bd257611b3a836123d0565b6000611b7085846020806020026040519081016040528092919082602080028082843760009201919091525086915061232a9050565b9050838114611bb75760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109ea565b506000848152600b60205260409020805460ff191660011790555b50505050565b6000611be2612505565b6000611bee838261255e565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611c2662ffffff198316612582565b63ffffffff1614611c685760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109ea565b6000611c7962ffffff198316612597565b905060016000828152600f602052604090205460ff166002811115611ca057611ca0612ebd565b14611cd75760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109ea565b6000818152600f60205260409020805460ff19166002179055611d3a7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613097565b5a1015611d725760405162461bcd60e51b81526004016109ea906020808252600490820152632167617360e01b604082015260600190565b6000611d8362ffffff1984166125e0565b6040805161010080825261012082019092529192506000917f0000000000000000000000000000000000000000000000000000000000000000908390836020820181803683370190505090506000611de062ffffff1989166125f1565b611def62ffffff198a16612605565b611dfe62ffffff198b1661261a565b611e1b611e1062ffffff198d1661262f565b62ffffff191661265d565b604051602401611e2e94939291906132d5565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17815281519192506000918291828a88f198503d945083851115611e77578394505b848252846000602084013e7fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48878a84604051611eb593929190613304565b60405180910390a15050505050505050611ecf6001600755565b919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015611f8d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109ea565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611fda576040519150601f19603f3d011682016040523d82523d6000602084013e611fdf565b606091505b50509050806120565760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109ea565b505050565b61206361180d565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611a593390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546001600160a01b038381166001600160a01b0319808416821785556002859055600180549091169055604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600554810361218e5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109ea565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d76565b60608686868686866040516020016121e696959493929190613325565b60405160208183030381529060405290509695505050505050565b8061223f5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109ea565b600081815260096020526040902054156122925760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109ea565b6000818152600a602052604090205460ff16156122e75760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109ea565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610d769083815260200190565b8260005b60208110156123c857600183821c1660008583602081106123515761235161317b565b60200201519050816001036123915760408051602081018390529081018590526060016040516020818303038152906040528051906020012093506123be565b60408051602081018690529081018290526060016040516020818303038152906040528051906020012093505b505060010161232e565b509392505050565b806124135760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109ea565b6000818152600a602052604090205460ff161561242d5750565b600081815260096020526040812054908190036124835760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109ea565b6008546124908243613232565b10156124de5760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109ea565b506000908152600a60209081526040808320805460ff191660011790556009909152812055565b6002600754036125575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109ea565b6002600755565b81516000906020840161257964ffffffffff851682846126a6565b95945050505050565b600061160b62ffffff198316602860046126ed565b6000806125ad8360781c6001600160601b031690565b6001600160601b0316905060006125cd8460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061160b6125ee8361271d565b90565b600061160b62ffffff1983168260046126ed565b600061160b62ffffff198316602460046126ed565b600061160b62ffffff1983166004602061272e565b600061160b604c61264d81601886901c6001600160601b0316613232565b62ffffff1985169190600061288a565b60606000806126758460181c6001600160601b031690565b6001600160601b0316905060405191508192506126958483602001612904565b508181016020016040529052919050565b6000806126b38385613097565b90506040518111156126c3575060005b806000036126d85762ffffff19915050611806565b5050606092831b9190911790911b1760181b90565b60006126fa82602061337f565b612705906008613398565b60ff1661271385858561272e565b901c949350505050565b600061160b62ffffff198316602c60205b60008160ff1660000361274357506000611806565b6127568460181c6001600160601b031690565b6001600160601b031661276c60ff841685613097565b11156127d0576127b76127888560781c6001600160601b031690565b6001600160601b03166127a48660181c6001600160601b031690565b6001600160601b0316858560ff16612aa4565b60405162461bcd60e51b81526004016109ea91906133bb565b60208260ff16111561284a5760405162461bcd60e51b815260206004820152603a60248201527f54797065644d656d566965772f696e646578202d20417474656d70746564207460448201527f6f20696e646578206d6f7265207468616e20333220627974657300000000000060648201526084016109ea565b6008820260006128638660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b6000806128a08660781c6001600160601b031690565b6001600160601b031690506128b486612b12565b846128bf8784613097565b6128c99190613097565b11156128dc5762ffffff19915050611b13565b6128e68582613097565b90506128fa8364ffffffffff1682866126a6565b9695505050505050565b600062ffffff198084160361296c5760405162461bcd60e51b815260206004820152602860248201527f54797065644d656d566965772f636f7079546f202d204e756c6c20706f696e7460448201526732b9103232b932b360c11b60648201526084016109ea565b61297583612b4b565b6129d55760405162461bcd60e51b815260206004820152602b60248201527f54797065644d656d566965772f636f7079546f202d20496e76616c696420706f60448201526a34b73a32b9103232b932b360a91b60648201526084016109ea565b60006129ea8460181c6001600160601b031690565b6001600160601b031690506000612a0a8560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612a2b5760206060fd5b8386858560045afa905080612a715760405162461bcd60e51b815260206004820152600c60248201526b6964656e74697479204f4f4760a01b60448201526064016109ea565b612a99612a7e8860d81c90565b64ffffffffff60601b606091821b168817901b851760181b90565b979650505050505050565b60606000612ab186612b88565b9150506000612abf86612b88565b9150506000612acd86612b88565b9150506000612adb86612b88565b91505083838383604051602001612af594939291906133ce565b604051602081830303815290604052945050505050949350505050565b6000612b278260181c6001600160601b031690565b612b3a8360781c6001600160601b031690565b016001600160601b03169050919050565b6000612b578260d81c90565b64ffffffffff1664ffffffffff03612b7157506000919050565b6000612b7c83612b12565b60405110199392505050565b600080601f5b600f811115612bd4576000612ba48260086134a5565b85901c9050612bb281612c24565b61ffff168417935081601014612bca57601084901b93505b5060001901612b8e565b50600f5b60ff811015612c1e576000612bee8260086134a5565b85901c9050612bfc81612c24565b61ffff168317925081600014612c1457601083901b92505b5060001901612bd8565b50915091565b6000612c3660048360ff16901c612c56565b60ff1661ffff919091161760081b612c4d82612c56565b60ff1617919050565b600060f08083179060ff82169003612c715750603092915050565b8060ff1660f103612c855750603192915050565b8060ff1660f203612c995750603292915050565b8060ff1660f303612cad5750603392915050565b8060ff1660f403612cc15750603492915050565b8060ff1660f503612cd55750603592915050565b8060ff1660f603612ce95750603692915050565b8060ff1660f703612cfd5750603792915050565b8060ff1660f803612d115750603892915050565b8060ff1660f903612d255750603992915050565b8060ff1660fa03612d395750606192915050565b8060ff1660fb03612d4d5750606292915050565b8060ff1660fc03612d615750606392915050565b8060ff1660fd03612d755750606492915050565b8060ff1660fe03612d895750606592915050565b8060ff1660ff03612d9d5750606692915050565b50919050565b600060208284031215612db557600080fd5b5035919050565b600060208284031215612dce57600080fd5b81356001600160a01b038116811461180657600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112612e0c57600080fd5b813567ffffffffffffffff80821115612e2757612e27612de5565b604051601f8301601f19908116603f01168101908282118183101715612e4f57612e4f612de5565b81604052838152866020858801011115612e6857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612e9a57600080fd5b813567ffffffffffffffff811115612eb157600080fd5b611b1384828501612dfb565b634e487b7160e01b600052602160045260246000fd5b6020810160038310612ef557634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215612f0e57600080fd5b823567ffffffffffffffff80821115612f2657600080fd5b612f3286838701612dfb565b93506020850135915080821115612f4857600080fd5b50612f5585828601612dfb565b9150509250929050565b60008060008060006104608688031215612f7857600080fd5b853567ffffffffffffffff80821115612f9057600080fd5b818801915088601f830112612fa457600080fd5b813581811115612fb357600080fd5b8960208260051b8501011115612fc857600080fd5b602092830197509550508601359250610440860187811115612fe957600080fd5b94979396509194604001933592915050565b803563ffffffff81168114611ecf57600080fd5b60006020828403121561302157600080fd5b61180682612ffb565b60008060006060848603121561303f57600080fd5b61304884612ffb565b925060208401359150604084013567ffffffffffffffff81111561306b57600080fd5b61307786828701612dfb565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b8082018082111561160b5761160b613081565b6000602082840312156130bc57600080fd5b5051919050565b60005b838110156130de5781810151838201526020016130c6565b50506000910152565b600081518084526130ff8160208601602086016130c3565b601f01601f19169290920160200192915050565b60608152600061312660608301866130e7565b828103602084015261313881866130e7565b91505060018060a01b0383166040830152949350505050565b60408152600061316460408301856130e7565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e198336030181126131a857600080fd5b9190910192915050565b6000808335601e198436030181126131c957600080fd5b83018035915067ffffffffffffffff8211156131e457600080fd5b6020019150368190038213156131f957600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561322257600080fd5b8151801515811461180657600080fd5b8181038181111561160b5761160b613081565b600063ffffffff80831681810361325e5761325e613081565b6001019392505050565b6000806040838503121561327b57600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006128fa60808301846130e7565b80516020808301519190811015612d9d5760001960209190910360031b1b16919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526128fa60808301846130e7565b838152821515602082015260606040820152600061257960608301846130e7565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161336d81604c8501602087016130c3565b91909101604c01979650505050505050565b60ff828116828216039081111561160b5761160b613081565b60ff81811683821602908116908181146133b4576133b4613081565b5092915050565b60208152600061180660208301846130e7565b7f54797065644d656d566965772f696e646578202d204f76657272616e20746865815274040ecd2caee5c40a6d8d2c6ca40d2e640c2e84060f605b1b60208201526001600160d01b031960d086811b821660358401526e040eed2e8d040d8cadccee8d04060f608b1b603b840181905286821b8316604a8501527f2e20417474656d7074656420746f20696e646578206174206f666673657420306050850152600f60fb1b607085015285821b83166071850152607784015283901b166086820152601760f91b608c8201526000608d82016128fa565b808202811582820484141761160b5761160b61308156fea2646970667358221220b9de6cb5d70c314151af7e5dadc35c906c6aee9a0c0b0c55440777e4bc2df8be64736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
