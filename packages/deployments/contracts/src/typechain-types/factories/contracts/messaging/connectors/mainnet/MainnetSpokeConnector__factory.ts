/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003b3938038062003b398339810160408190526200003591620003b0565b89898989898989898989808a8a8a8a8a6200005033620002b0565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000315565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004649f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039357600080fd5b919050565b80516001600160a01b03811681146200039357600080fd5b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b6200037e565b9950620003ec60208c016200037e565b9850620003fc60408c0162000398565b97506200040c60608c0162000398565b96506200041c60808c0162000398565b955060a08b0151945060c08b0151935060e08b01519250620004426101008c0162000398565b9150620004536101208c0162000398565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516135f5620005446000396000818161030f0152611f3c01526000818161087b01528181611f5d0152611fef0152600081816106d5015281816109f801528181610e2f01528181610f93015281816110df015281816117b10152818161187e01528181611c260152611ed40152600061029f01526000818161050301528181610b9e01528181611a1b0152611a600152600081816108310152610c8c01526000818161044a015281816106110152818161182f01528181611a870152611e3901526135f56000f3fe6080604052600436106102815760003560e01c80638456cb591161014f578063b697f531116100c1578063d69f9d611161007a578063d69f9d611461081f578063d7d317b314610853578063d88beda214610869578063db1b76591461089d578063e0fed010146108bd578063fa31de01146108dd57600080fd5b8063b697f5311461076d578063c5b350df1461078d578063cc394283146107a2578063d1851c92146107c2578063d232c220146107e0578063d2a3cc71146107ff57600080fd5b80639fa92f9d116101135780639fa92f9d146106b0578063a01892a5146106c3578063a792c29b146106f7578063ad9c0c2e14610717578063b1f8100d1461072d578063b2f876431461074d57600080fd5b80638456cb59146105ed5780638d3638f4146106025780638da5cb5b1461063557806398c9f2b9146106535780639d3117c71461068357600080fd5b806352a9674b116101f35780636159ada1116101ac5780636159ada11461053d57806365eaf11b1461056d57806368742da6146105825780636a42b8f8146105a25780636b04a933146105b8578063715018a6146105d857600080fd5b806352a9674b14610438578063572386ca1461046c578063579c16181461049c5780635bd11efc146104b25780635c975abb146104d25780635f61e3ec146104f157600080fd5b80633cf52ffb116102455780633cf52ffb146103925780633f4ba83a146103a757806348e6fa23146103bc5780634ff746f6146103cf578063508a109b146103ef5780635190bc531461040f57600080fd5b8063141684161461028d5780631eeaabea146102db57806325e3beda146102fd5780632bb1ae7c1461033f578063301f07c31461035257600080fd5b3661028857005b600080fd5b34801561029957600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102e757600080fd5b506102fb6102f6366004612fc1565b61090b565b005b34801561030957600080fd5b506103317f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102d2565b6102fb61034d36600461307d565b6109b5565b34801561035e57600080fd5b5061038261036d366004612fc1565b600a6020526000908152604090205460ff1681565b60405190151581526020016102d2565b34801561039e57600080fd5b50600254610331565b3480156103b357600080fd5b506102fb610b56565b6102fb6103ca3660046130b2565b610b93565b3480156103db57600080fd5b506102fb6103ea36600461307d565b610c81565b3480156103fb57600080fd5b506102fb61040a366004613116565b610d1e565b34801561041b57600080fd5b5061038261042a3660046131b2565b6001600160a01b0316301490565b34801561044457600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561047857600080fd5b50610382610487366004612fc1565b600c6020526000908152604090205460ff1681565b3480156104a857600080fd5b5061033160055481565b3480156104be57600080fd5b506102fb6104cd3660046131b2565b6110a4565b3480156104de57600080fd5b50600354600160a01b900460ff16610382565b3480156104fd57600080fd5b506105257f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d2565b34801561054957600080fd5b506103826105583660046131b2565b600d6020526000908152604090205460ff1681565b34801561057957600080fd5b506103316110db565b34801561058e57600080fd5b506102fb61059d3660046131b2565b611164565b3480156105ae57600080fd5b5062093a80610331565b3480156105c457600080fd5b506102fb6105d3366004612fc1565b6111e1565b3480156105e457600080fd5b506102fb6112a4565b3480156105f957600080fd5b506102fb6112cf565b34801561060e57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102c1565b34801561064157600080fd5b506000546001600160a01b0316610525565b34801561065f57600080fd5b5061038261066e366004612fc1565b600b6020526000908152604090205460ff1681565b34801561068f57600080fd5b5061033161069e366004612fc1565b60096020526000908152604090205481565b3480156106bc57600080fd5b5030610525565b3480156106cf57600080fd5b506105257f000000000000000000000000000000000000000000000000000000000000000081565b34801561070357600080fd5b50600454610525906001600160a01b031681565b34801561072357600080fd5b5061033160085481565b34801561073957600080fd5b506102fb6107483660046131b2565b611383565b34801561075957600080fd5b506102fb6107683660046131b2565b611421565b34801561077957600080fd5b506102fb6107883660046131b2565b6114e8565b34801561079957600080fd5b506102fb6115b2565b3480156107ae57600080fd5b50600354610525906001600160a01b031681565b3480156107ce57600080fd5b506001546001600160a01b0316610525565b3480156107ec57600080fd5b506000546001600160a01b031615610382565b34801561080b57600080fd5b506102fb61081a3660046131b2565b611622565b34801561082b57600080fd5b506105257f000000000000000000000000000000000000000000000000000000000000000081565b34801561085f57600080fd5b5061033160065481565b34801561087557600080fd5b506103317f000000000000000000000000000000000000000000000000000000000000000081565b3480156108a957600080fd5b506103826108b83660046131b2565b6116f9565b3480156108c957600080fd5b506102fb6108d8366004612fc1565b61170e565b3480156108e957600080fd5b506108fd6108f83660046131ed565b611742565b6040516102d2929190613296565b6000546001600160a01b03163314610936576040516311a8a1bb60e31b815260040160405180910390fd5b600854810361097b5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b6109bd61194b565b436005546006546109ce91906132c5565b11156109ed576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906132d8565b6000818152600c602052604090205490915060ff1615610ace5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610972565b6000818152600c60209081526040808320805460ff1916600117905551610afb9184910190815260200190565b6040516020818303038152906040529050610b168184611998565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077818433604051610b49939291906132f1565b60405180910390a1505050565b6000546001600160a01b03163314610b81576040516311a8a1bb60e31b815260040160405180910390fd5b610b89611b0f565b610b91611b5f565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bfa5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610972565b805115610c385760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610972565b610c428282611998565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077828233604051610c75939291906132f1565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ce25760405162461bcd60e51b81526004016109729060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610d1392919061332f565b60405180910390a150565b610d2661194b565b610d2e611bb4565b83610d655760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610972565b600085856000818110610d7a57610d7a613359565b9050602002810190610d8c919061336f565b610d969080613390565b604051610da49291906133de565b604051809103902090506000610e0b8288886000818110610dc757610dc7613359565b9050602002810190610dd9919061336f565b60200189896000818110610def57610def613359565b9050602002810190610e01919061336f565b6104200135611c0d565b9050610e1981868686611d28565b6040516398fae8e960e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610e7b57600080fd5b505af1158015610e8f573d6000803e3d6000fd5b5088925060019150505b818163ffffffff1610156110035788888263ffffffff16818110610ebf57610ebf613359565b9050602002810190610ed1919061336f565b610edb9080613390565b604051610ee99291906133de565b604051809103902093506000610f3e858b8b8563ffffffff16818110610f1157610f11613359565b9050602002810190610f23919061336f565b6020018c8c8663ffffffff16818110610def57610def613359565b9050838114610f7d5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610972565b6040516398fae8e960e01b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906398fae8e990602401600060405180830381600087803b158015610fdf57600080fd5b505af1158015610ff3573d6000803e3d6000fd5b5050505081600101915050610e99565b5060005b818163ffffffff16101561108f5761108689898363ffffffff1681811061103057611030613359565b9050602002810190611042919061336f565b61104c9080613390565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e2392505050565b50600101611007565b5050505061109d6001600755565b5050505050565b6000546001600160a01b031633146110cf576040516311a8a1bb60e31b815260040160405180910390fd5b6110d881612108565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561113b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061115f91906132d8565b905090565b6000546001600160a01b0316331461118f576040516311a8a1bb60e31b815260040160405180910390fd5b4761119a8282612171565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516111d591815260200190565b60405180910390a25050565b6000546001600160a01b0316331461120c576040516311a8a1bb60e31b815260040160405180910390fd5b611214611b0f565b60008181526009602052604081205490036112695760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610972565b6000818152600960205260408082208290555182917ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73991a250565b6000546001600160a01b03163314610b91576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa158015611318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133c91906133ee565b6113735760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610972565b61137b61194b565b610b9161228f565b6000546001600160a01b031633146113ae576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156113cc575060025415155b156113ea576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361141857604051634a2fb73f60e11b815260040160405180910390fd5b6110d8816122d2565b6000546001600160a01b0316331461144c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff1661149f5760405162461bcd60e51b815260206004820152600860248201526708585b1b1bddd95960c21b6044820152606401610972565b6001600160a01b0381166000818152600d6020526040808220805460ff19169055517f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9190a250565b6000546001600160a01b03163314611513576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff16156115665760405162461bcd60e51b8152602060048201526007602482015266185b1b1bddd95960ca1b6044820152606401610972565b6001600160a01b0381166000818152600d6020526040808220805460ff19166001179055517fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879190a250565b6001546001600160a01b031633146115dd576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115ef9190613410565b1161160d576040516324e0285f60e21b815260040160405180910390fd5b600154610b91906001600160a01b0316612320565b6000546001600160a01b0316331461164d576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116ab5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610972565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d13565b60006001600160a01b03821633145b92915050565b6000546001600160a01b03163314611739576040516311a8a1bb60e31b815260040160405180910390fd5b6110d881612385565b336000908152600d602052604081205460609060ff166117935760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610972565b604051630c132ab560e01b815263ffffffff861660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630c132ab5906024016020604051808303816000875af1158015611802573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118269190613423565b905060006118587f000000000000000000000000000000000000000000000000000000000000000033848a8a8a612403565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156118ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f29190613440565b909250905081611903600183613410565b847f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f876040516119339190613464565b60405180910390a45090989197509095505050505050565b600354600160a01b900460ff1615610b915760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610972565b8051156119d65760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610972565b8151602014611a115760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610972565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303611a5657611a52611a4d83613477565b61243b565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611aaf85613477565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015611af357600080fd5b505af1158015611b07573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610b915760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610972565b611b67611b0f565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260075403611c065760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610972565b6002600755565b600080604051630546f34b60e21b8152600481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063151bcd2c90602401602060405180830381865afa158015611c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c9991906134b4565b6002811115611caa57611caa61349e565b14611cea5760405162461bcd60e51b815260206004820152601060248201526f214c6561665374617475732e4e6f6e6560801b6044820152606401610972565b611d1e84846020806020026040519081016040528092919082602080028082843760009201919091525086915061255c9050565b90505b9392505050565b6000848152600b602052604090205460ff16611e1d57611d47836128aa565b6000611d7d85846020806020026040519081016040528092919082602080028082843760009201919091525086915061255c9050565b9050838114611dc45760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610972565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611e139086815260200190565b60405180910390a3505b50505050565b600080611e308382612a0a565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611e6862ffffff198316612a2e565b63ffffffff1614611eaa5760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610972565b6000611ebb62ffffff198316612a43565b604051630b61f10360e41b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b61f103090602401600060405180830381600087803b158015611f2057600080fd5b505af1158015611f34573d6000803e3d6000fd5b5050505060017f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611f8691906132c5565b611f909190613410565b5a11611fc75760405162461bcd60e51b8152600401610972906020808252600490820152632167617360e01b604082015260600190565b6000611fd862ffffff198416612a8c565b6040805161010080825261012082019092529192507f00000000000000000000000000000000000000000000000000000000000000009160009082602082018180368337019050509050600061203362ffffff198816612a9d565b61204262ffffff198916612ab1565b61205162ffffff198a16612ac6565b61206e61206362ffffff198c16612adb565b62ffffff1916612b09565b60405160240161208194939291906134d5565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b17905290506120bb858560008685612b52565b604051919950925086907fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48906120f4908b90869061350e565b60405180910390a250505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156121c15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610972565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461220e576040519150601f19603f3d011682016040523d82523d6000602084013e612213565b606091505b505090508061228a5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610972565b505050565b61229761194b565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b973390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60055481036123c85760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610972565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610d13565b606086868686868660405160200161242096959493929190613529565b60405160208183030381529060405290509695505050505050565b806124795760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610972565b600081815260096020526040902054156124cc5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610972565b6000818152600a602052604090205460ff16156125215760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610972565b6000818152600960205260408082204390555182917f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc891a250565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806128ed5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610972565b6000818152600a602052604090205460ff16156129075750565b6000818152600960205260408120549081900361295d5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610972565b60085461296a8243613410565b10156129b85760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610972565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612a2564ffffffffff85168284612bdd565b95945050505050565b600061170862ffffff19831660286004612c1a565b600080612a598360781c6001600160601b031690565b6001600160601b031690506000612a798460181c6001600160601b031690565b6001600160601b03169091209392505050565b6000611708612a9a83612c4a565b90565b600061170862ffffff198316826004612c1a565b600061170862ffffff19831660246004612c1a565b600061170862ffffff19831660046020612c5b565b6000611708604c612af981601886901c6001600160601b0316613410565b62ffffff19851691906000612d66565b6060600080612b218460181c6001600160601b031690565b6001600160601b031690506040519150819250612b418483602001612de2565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612b7857612b78612fda565b6040519080825280601f01601f191660200182016040528015612ba2576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612bc3578692505b828152826000602083013e90999098509650505050505050565b600080612bea83856132c5565b9050604051811115612bfa575060005b80600003612c0f5762ffffff19915050611d21565b612a25858585612ed5565b6000612c27826020613583565b612c3290600861359c565b60ff16612c40858585612c5b565b901c949350505050565b600061170862ffffff198316602c60205b60008160ff16600003612c7057506000611d21565b612c838460181c6001600160601b031690565b6001600160601b0316612c9960ff8416856132c5565b1115612d0157612cb28460781c6001600160601b031690565b612cc58560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610972565b60208260ff161115612d265760405163045df3f960e01b815260040160405180910390fd5b600882026000612d3f8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612d7c8660781c6001600160601b031690565b6001600160601b03169050612d9086612f4c565b84612d9b87846132c5565b612da591906132c5565b1115612db85762ffffff19915050612dda565b612dc285826132c5565b9050612dd68364ffffffffff168286612bdd565b9150505b949350505050565b600062ffffff1980841603612e0a5760405163148d513360e21b815260040160405180910390fd5b612e1383612f85565b15612e3157604051632ee0949160e11b815260040160405180910390fd5b6000612e468460181c6001600160601b031690565b6001600160601b031690506000612e668560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612e875760206060fd5b8386858560045afa905080612eaf57604051632af1bd9b60e21b815260040160405180910390fd5b612eca612ebc8860d81c90565b64ffffffffff168786612ed5565b979650505050505050565b60006060601883856001600160601b03821682148015612efd575086816001600160601b0316145b612f365760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610972565b96831b90961790911b90941790931b9392505050565b6000612f618260181c6001600160601b031690565b612f748360781c6001600160601b031690565b016001600160601b03169050919050565b6000612f918260d81c90565b64ffffffffff1664ffffffffff03612fab57506001919050565b6000612fb683612f4c565b604051109392505050565b600060208284031215612fd357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261300157600080fd5b813567ffffffffffffffff8082111561301c5761301c612fda565b604051601f8301601f19908116603f0116810190828211818310171561304457613044612fda565b8160405283815286602085880101111561305d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561308f57600080fd5b813567ffffffffffffffff8111156130a657600080fd5b612dda84828501612ff0565b600080604083850312156130c557600080fd5b823567ffffffffffffffff808211156130dd57600080fd5b6130e986838701612ff0565b935060208501359150808211156130ff57600080fd5b5061310c85828601612ff0565b9150509250929050565b6000806000806000610460868803121561312f57600080fd5b853567ffffffffffffffff8082111561314757600080fd5b818801915088601f83011261315b57600080fd5b81358181111561316a57600080fd5b8960208260051b850101111561317f57600080fd5b6020928301975095505086013592506104408601878111156131a057600080fd5b94979396509194604001933592915050565b6000602082840312156131c457600080fd5b81356001600160a01b0381168114611d2157600080fd5b63ffffffff811681146110d857600080fd5b60008060006060848603121561320257600080fd5b833561320d816131db565b925060208401359150604084013567ffffffffffffffff81111561323057600080fd5b61323c86828701612ff0565b9150509250925092565b60005b83811015613261578181015183820152602001613249565b50506000910152565b60008151808452613282816020860160208601613246565b601f01601f19169290920160200192915050565b828152604060208201526000611d1e604083018461326a565b634e487b7160e01b600052601160045260246000fd5b80820180821115611708576117086132af565b6000602082840312156132ea57600080fd5b5051919050565b606081526000613304606083018661326a565b8281036020840152613316818661326a565b91505060018060a01b0383166040830152949350505050565b604081526000613342604083018561326a565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261338657600080fd5b9190910192915050565b6000808335601e198436030181126133a757600080fd5b83018035915067ffffffffffffffff8211156133c257600080fd5b6020019150368190038213156133d757600080fd5b9250929050565b8183823760009101908152919050565b60006020828403121561340057600080fd5b81518015158114611d2157600080fd5b81810381811115611708576117086132af565b60006020828403121561343557600080fd5b8151611d21816131db565b6000806040838503121561345357600080fd5b505080516020909101519092909150565b602081526000611d21602083018461326a565b80516020808301519190811015613498576000198160200360031b1b821691505b50919050565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156134c657600080fd5b815160038110611d2157600080fd5b600063ffffffff808716835280861660208401525083604083015260806060830152613504608083018461326a565b9695505050505050565b8215158152604060208201526000611d1e604083018461326a565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161357181604c850160208701613246565b91909101604c01979650505050505050565b60ff8281168282160390811115611708576117086132af565b60ff81811683821602908116908181146135b8576135b86132af565b509291505056fea26469706673582212208b207967518af0ce2724f96df83e838b512e87e4b049285a303e5fbaf9da36ce64736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
