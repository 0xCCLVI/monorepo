/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003ac938038062003ac98339810160408190526200003591620003b0565b89898989898989898989808a8a8a8a8a6200005033620002b0565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000315565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004649f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039357600080fd5b919050565b80516001600160a01b03811681146200039357600080fd5b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b6200037e565b9950620003ec60208c016200037e565b9850620003fc60408c0162000398565b97506200040c60608c0162000398565b96506200041c60808c0162000398565b955060a08b0151945060c08b0151935060e08b01519250620004426101008c0162000398565b9150620004536101208c0162000398565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516135a862000521600039600081816103250152611ea701526000818161090101528181611ec80152611f5501526000818161072801528181610a7e015281816110ca0152611844015260006102b501526000818161055601528181610c26015281816119e40152611a290152600081816108b70152610d3201526000818161049d01528181610664015281816117e601528181611a500152611da701526135a86000f3fe6080604052600436106102975760003560e01c80638456cb591161015a578063b95a2001116100c1578063d69f9d611161007a578063d69f9d61146108a5578063d7d317b3146108d9578063d88beda2146108ef578063db1b765914610923578063e0fed01014610943578063fa31de011461096357600080fd5b8063b95a2001146107e0578063c5b350df14610813578063cc39428314610828578063d1851c9214610848578063d232c22014610866578063d2a3cc711461088557600080fd5b8063a01892a511610113578063a01892a514610716578063a792c29b1461074a578063ad9c0c2e1461076a578063b1f8100d14610780578063b2f87643146107a0578063b697f531146107c057600080fd5b80638456cb59146106405780638d3638f4146106555780638da5cb5b1461068857806398c9f2b9146106a65780639d3117c7146106d65780639fa92f9d1461070357600080fd5b806352a9674b116101fe5780636159ada1116101b75780636159ada11461059057806365eaf11b146105c057806368742da6146105d55780636a42b8f8146105f55780636b04a9331461060b578063715018a61461062b57600080fd5b806352a9674b1461048b578063572386ca146104bf578063579c1618146104ef5780635bd11efc146105055780635c975abb146105255780635f61e3ec1461054457600080fd5b80633cf52ffb116102505780633cf52ffb146103e55780633f4ba83a146103fa57806348e6fa231461040f5780634ff746f614610422578063508a109b146104425780635190bc531461046257600080fd5b806314168416146102a35780631eeaabea146102f157806325e3beda146103135780632bb1ae7c146103555780632bbd59ca14610368578063301f07c3146103a557600080fd5b3661029e57005b600080fd5b3480156102af57600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b3480156102fd57600080fd5b5061031161030c366004612f2f565b610991565b005b34801561031f57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102e8565b610311610363366004612feb565b610a3b565b34801561037457600080fd5b50610398610383366004612f2f565b600f6020526000908152604090205460ff1681565b6040516102e89190613036565b3480156103b157600080fd5b506103d56103c0366004612f2f565b600a6020526000908152604090205460ff1681565b60405190151581526020016102e8565b3480156103f157600080fd5b50600254610347565b34801561040657600080fd5b50610311610bde565b61031161041d36600461305e565b610c1b565b34801561042e57600080fd5b5061031161043d366004612feb565b610d27565b34801561044e57600080fd5b5061031161045d3660046130c2565b610dcd565b34801561046e57600080fd5b506103d561047d36600461315e565b6001600160a01b0316301490565b34801561049757600080fd5b506102d77f000000000000000000000000000000000000000000000000000000000000000081565b3480156104cb57600080fd5b506103d56104da366004612f2f565b600c6020526000908152604090205460ff1681565b3480156104fb57600080fd5b5061034760055481565b34801561051157600080fd5b5061031161052036600461315e565b61108f565b34801561053157600080fd5b50600354600160a01b900460ff166103d5565b34801561055057600080fd5b506105787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102e8565b34801561059c57600080fd5b506103d56105ab36600461315e565b600d6020526000908152604090205460ff1681565b3480156105cc57600080fd5b506103476110c6565b3480156105e157600080fd5b506103116105f036600461315e565b61114f565b34801561060157600080fd5b5062093a80610347565b34801561061757600080fd5b50610311610626366004612f2f565b6111cc565b34801561063757600080fd5b50610311611297565b34801561064c57600080fd5b506103116112c2565b34801561066157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561069457600080fd5b506000546001600160a01b0316610578565b3480156106b257600080fd5b506103d56106c1366004612f2f565b600b6020526000908152604090205460ff1681565b3480156106e257600080fd5b506103476106f1366004612f2f565b60096020526000908152604090205481565b34801561070f57600080fd5b5030610578565b34801561072257600080fd5b506105787f000000000000000000000000000000000000000000000000000000000000000081565b34801561075657600080fd5b50600454610578906001600160a01b031681565b34801561077657600080fd5b5061034760085481565b34801561078c57600080fd5b5061031161079b36600461315e565b611376565b3480156107ac57600080fd5b506103116107bb36600461315e565b611414565b3480156107cc57600080fd5b506103116107db36600461315e565b6114e3565b3480156107ec57600080fd5b506102d76107fb3660046131a0565b600e6020526000908152604090205463ffffffff1681565b34801561081f57600080fd5b506103116115b5565b34801561083457600080fd5b50600354610578906001600160a01b031681565b34801561085457600080fd5b506001546001600160a01b0316610578565b34801561087257600080fd5b506000546001600160a01b0316156103d5565b34801561089157600080fd5b506103116108a036600461315e565b611625565b3480156108b157600080fd5b506105787f000000000000000000000000000000000000000000000000000000000000000081565b3480156108e557600080fd5b5061034760065481565b3480156108fb57600080fd5b506103477f000000000000000000000000000000000000000000000000000000000000000081565b34801561092f57600080fd5b506103d561093e36600461315e565b6116fc565b34801561094f57600080fd5b5061031161095e366004612f2f565b611711565b34801561096f57600080fd5b5061098361097e3660046131bb565b611745565b6040516102e8929190613262565b6000546001600160a01b031633146109bc576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a015760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610a43611914565b43600554600654610a549190613291565b1115610a73576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe91906132a4565b6000818152600c602052604090205490915060ff1615610b545760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b60448201526064016109f8565b600081604051602001610b6991815260200190565b6040516020818303038152906040529050610b848184611961565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610bd1908390869033906132bd565b60405180910390a1505050565b6000546001600160a01b03163314610c09576040516311a8a1bb60e31b815260040160405180910390fd5b610c11611ad8565b610c19611b28565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c825760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064016109f8565b805115610cc05760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109f8565b610cd98260405180602001604052806000815250611961565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610d1b939291906132bd565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d885760405162461bcd60e51b81526004016109f89060208082526004908201526310a0a6a160e11b604082015260600190565b610d9181611b7d565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610dc29291906132fb565b60405180910390a150565b610dd5611914565b610ddd611b96565b83610e145760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b60448201526064016109f8565b600085856000818110610e2957610e29613325565b9050602002810190610e3b919061333b565b610e45908061335c565b604051610e539291906133aa565b604051809103902090506000610eba8288886000818110610e7657610e76613325565b9050602002810190610e88919061333b565b60200189896000818110610e9e57610e9e613325565b9050602002810190610eb0919061333b565b6104200135611bef565b9050610ec881868686611c96565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff161015610fee5788888263ffffffff16818110610f0d57610f0d613325565b9050602002810190610f1f919061333b565b610f29908061335c565b604051610f379291906133aa565b604051809103902093506000610f8c858b8b8563ffffffff16818110610f5f57610f5f613325565b9050602002810190610f71919061333b565b6020018c8c8663ffffffff16818110610e9e57610e9e613325565b9050838114610fcb5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b60448201526064016109f8565b506000848152600f60205260409020805460ff1916600190811790915501610ee7565b5060005b818163ffffffff16101561107a5761107189898363ffffffff1681811061101b5761101b613325565b905060200281019061102d919061333b565b611037908061335c565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d9192505050565b50600101610ff2565b505050506110886001600755565b5050505050565b6000546001600160a01b031633146110ba576040516311a8a1bb60e31b815260040160405180910390fd5b6110c38161206e565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611126573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114a91906132a4565b905090565b6000546001600160a01b0316331461117a576040516311a8a1bb60e31b815260040160405180910390fd5b4761118582826120d7565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d826040516111c091815260200190565b60405180910390a25050565b6000546001600160a01b031633146111f7576040516311a8a1bb60e31b815260040160405180910390fd5b6111ff611ad8565b60008181526009602052604081205490036112545760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b60448201526064016109f8565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610dc29083815260200190565b6000546001600160a01b03163314610c19576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561130b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132f91906133ba565b6113665760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b60448201526064016109f8565b61136e611914565b610c196121f5565b6000546001600160a01b031633146113a1576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156113bf575060025415155b156113dd576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361140b57604051634a2fb73f60e11b815260040160405180910390fd5b6110c381612238565b6000546001600160a01b0316331461143f576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff166114925760405162461bcd60e51b815260206004820152600860248201526708585b1b1bddd95960c21b60448201526064016109f8565b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610dc2565b6000546001600160a01b0316331461150e576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000908152600d602052604090205460ff16156115615760405162461bcd60e51b8152602060048201526007602482015266185b1b1bddd95960ca1b60448201526064016109f8565b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610dc2565b6001546001600160a01b031633146115e0576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115f291906133dc565b11611610576040516324e0285f60e21b815260040160405180910390fd5b600154610c19906001600160a01b0316612286565b6000546001600160a01b03163314611650576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116ae5760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e6167657200000000000000000060448201526064016109f8565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610dc2565b60006001600160a01b03821633145b92915050565b6000546001600160a01b0316331461173c576040516311a8a1bb60e31b815260040160405180910390fd5b6110c3816122eb565b336000908152600d602052604081205460609060ff166117965760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b60448201526064016109f8565b63ffffffff8086166000908152600e60205260408120805491929190911690826117bf836133ef565b91906101000a81548163ffffffff021916908363ffffffff1602179055509050600061181e7f0000000000000000000000000000000000000000000000000000000000000000611815336001600160a01b031690565b848a8a8a612369565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af1158015611894573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b89190613412565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f836118ea6001846133dc565b84876040516118fc9493929190613436565b60405180910390a15090989197509095505050505050565b600354600160a01b900460ff1615610c195760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016109f8565b80511561199f5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b60448201526064016109f8565b81516020146119da5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064016109f8565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303611a1f57611a1b611a1683613465565b6123a1565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611a7885613465565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015611abc57600080fd5b505af1158015611ad0573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610c195760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016109f8565b611b30611ad8565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6040516316c2fdb560e21b815260040160405180910390fd5b600260075403611be85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109f8565b6002600755565b6000806000858152600f602052604090205460ff166002811115611c1557611c15613020565b14611c585760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b60448201526064016109f8565b611c8c8484602080602002604051908101604052809291908260208002808284376000920191909152508691506124ca9050565b90505b9392505050565b6000848152600b602052604090205460ff16611d8b57611cb583612818565b6000611ceb8584602080602002604051908101604052809291908260208002808284376000920191909152508691506124ca9050565b9050838114611d325760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b60448201526064016109f8565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611d819086815260200190565b60405180910390a3505b50505050565b600080611d9e8382612978565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611dd662ffffff19831661299c565b63ffffffff1614611e185760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b60448201526064016109f8565b6000611e2962ffffff1983166129b1565b905060016000828152600f602052604090205460ff166002811115611e5057611e50613020565b14611e875760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b60448201526064016109f8565b6000818152600f60205260409020805460ff191660021790556001611eec7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000613291565b611ef691906133dc565b5a11611f2d5760405162461bcd60e51b81526004016109f8906020808252600490820152632167617360e01b604082015260600190565b6000611f3e62ffffff1984166129fa565b6040805161010080825261012082019092529192507f000000000000000000000000000000000000000000000000000000000000000091600090826020820181803683370190505090506000611f9962ffffff198816612a0b565b611fa862ffffff198916612a1f565b611fb762ffffff198a16612a34565b611fd4611fc962ffffff198c16612a49565b62ffffff1916612a77565b604051602401611fe7949392919061348c565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b1790529050612021858560008685612ac0565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe489061205a9088908b9086906134bb565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156121275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016109f8565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612174576040519150601f19603f3d011682016040523d82523d6000602084013e612179565b606091505b50509050806121f05760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109f8565b505050565b6121fd611914565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611b603390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600554810361232e5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b60448201526064016109f8565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610dc2565b6060868686868686604051602001612386969594939291906134dc565b60405160208183030381529060405290509695505050505050565b806123df5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b60448201526064016109f8565b600081815260096020526040902054156124325760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b60448201526064016109f8565b6000818152600a602052604090205460ff16156124875760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b60448201526064016109f8565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610dc29083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b8061285b5760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b60448201526064016109f8565b6000818152600a602052604090205460ff16156128755750565b600081815260096020526040812054908190036128cb5760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b60448201526064016109f8565b6008546128d882436133dc565b10156129265760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f742021766572696669656400000000000000000060448201526064016109f8565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b81516000906020840161299364ffffffffff85168284612b4b565b95945050505050565b600061170b62ffffff19831660286004612b88565b6000806129c78360781c6001600160601b031690565b6001600160601b0316905060006129e78460181c6001600160601b031690565b6001600160601b03169091209392505050565b600061170b612a0883612bb8565b90565b600061170b62ffffff198316826004612b88565b600061170b62ffffff19831660246004612b88565b600061170b62ffffff19831660046020612bc9565b600061170b604c612a6781601886901c6001600160601b03166133dc565b62ffffff19851691906000612cd4565b6060600080612a8f8460181c6001600160601b031690565b6001600160601b031690506040519150819250612aaf8483602001612d50565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612ae657612ae6612f48565b6040519080825280601f01601f191660200182016040528015612b10576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612b31578692505b828152826000602083013e90999098509650505050505050565b600080612b588385613291565b9050604051811115612b68575060005b80600003612b7d5762ffffff19915050611c8f565b612993858585612e43565b6000612b95826020613536565b612ba090600861354f565b60ff16612bae858585612bc9565b901c949350505050565b600061170b62ffffff198316602c60205b60008160ff16600003612bde57506000611c8f565b612bf18460181c6001600160601b031690565b6001600160601b0316612c0760ff841685613291565b1115612c6f57612c208460781c6001600160601b031690565b612c338560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff831660648201526084016109f8565b60208260ff161115612c945760405163045df3f960e01b815260040160405180910390fd5b600882026000612cad8660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612cea8660781c6001600160601b031690565b6001600160601b03169050612cfe86612eba565b84612d098784613291565b612d139190613291565b1115612d265762ffffff19915050612d48565b612d308582613291565b9050612d448364ffffffffff168286612b4b565b9150505b949350505050565b600062ffffff1980841603612d785760405163148d513360e21b815260040160405180910390fd5b612d8183612ef3565b15612d9f57604051632ee0949160e11b815260040160405180910390fd5b6000612db48460181c6001600160601b031690565b6001600160601b031690506000612dd48560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612df55760206060fd5b8386858560045afa905080612e1d57604051632af1bd9b60e21b815260040160405180910390fd5b612e38612e2a8860d81c90565b64ffffffffff168786612e43565b979650505050505050565b60006060601883856001600160601b03821682148015612e6b575086816001600160601b0316145b612ea45760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b60448201526064016109f8565b96831b90961790911b90941790931b9392505050565b6000612ecf8260181c6001600160601b031690565b612ee28360781c6001600160601b031690565b016001600160601b03169050919050565b6000612eff8260d81c90565b64ffffffffff1664ffffffffff03612f1957506001919050565b6000612f2483612eba565b604051109392505050565b600060208284031215612f4157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112612f6f57600080fd5b813567ffffffffffffffff80821115612f8a57612f8a612f48565b604051601f8301601f19908116603f01168101908282118183101715612fb257612fb2612f48565b81604052838152866020858801011115612fcb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215612ffd57600080fd5b813567ffffffffffffffff81111561301457600080fd5b612d4884828501612f5e565b634e487b7160e01b600052602160045260246000fd5b602081016003831061305857634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561307157600080fd5b823567ffffffffffffffff8082111561308957600080fd5b61309586838701612f5e565b935060208501359150808211156130ab57600080fd5b506130b885828601612f5e565b9150509250929050565b600080600080600061046086880312156130db57600080fd5b853567ffffffffffffffff808211156130f357600080fd5b818801915088601f83011261310757600080fd5b81358181111561311657600080fd5b8960208260051b850101111561312b57600080fd5b60209283019750955050860135925061044086018781111561314c57600080fd5b94979396509194604001933592915050565b60006020828403121561317057600080fd5b81356001600160a01b0381168114611c8f57600080fd5b803563ffffffff8116811461319b57600080fd5b919050565b6000602082840312156131b257600080fd5b611c8f82613187565b6000806000606084860312156131d057600080fd5b6131d984613187565b925060208401359150604084013567ffffffffffffffff8111156131fc57600080fd5b61320886828701612f5e565b9150509250925092565b60005b8381101561322d578181015183820152602001613215565b50506000910152565b6000815180845261324e816020860160208601613212565b601f01601f19169290920160200192915050565b828152604060208201526000611c8c6040830184613236565b634e487b7160e01b600052601160045260246000fd5b8082018082111561170b5761170b61327b565b6000602082840312156132b657600080fd5b5051919050565b6060815260006132d06060830186613236565b82810360208401526132e28186613236565b91505060018060a01b0383166040830152949350505050565b60408152600061330e6040830185613236565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261335257600080fd5b9190910192915050565b6000808335601e1984360301811261337357600080fd5b83018035915067ffffffffffffffff82111561338e57600080fd5b6020019150368190038213156133a357600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156133cc57600080fd5b81518015158114611c8f57600080fd5b8181038181111561170b5761170b61327b565b600063ffffffff8083168181036134085761340861327b565b6001019392505050565b6000806040838503121561342557600080fd5b505080516020909101519092909150565b84815283602082015282604082015260806060820152600061345b6080830184613236565b9695505050505050565b80516020808301519190811015613486576000198160200360031b1b821691505b50919050565b600063ffffffff80871683528086166020840152508360408301526080606083015261345b6080830184613236565b83815282151560208201526060604082015260006129936060830184613236565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161352481604c850160208701613212565b91909101604c01979650505050505050565b60ff828116828216039081111561170b5761170b61327b565b60ff818116838216029081169081811461356b5761356b61327b565b509291505056fea2646970667358221220c60be384c0d2d1cc7435083bd5008ab53354a43813435fa12b1527fb17b020f664736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
