/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MainnetSpokeConnector,
  MainnetSpokeConnectorInterface,
} from "../../../../../contracts/messaging/connectors/mainnet/MainnetSpokeConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_processGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_reserveGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RateLimited__rateLimited_messageSendRateExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_identityOOG",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_invalidPointer",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__unsafeCopyTo_nullPointer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "AggregateRootVerified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Dispatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "aggregateIndex",
        type: "uint256",
      },
    ],
    name: "MessageProven",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    name: "Process",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateLimit",
        type: "uint256",
      },
    ],
    name: "SendRateLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "SnapshotRootSaved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROCESS_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_GAS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_destinationDomain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_recipientAddress",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_messageBody",
        type: "bytes",
      },
    ],
    name: "dispatch",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastCompletedSnapshotId",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastCompletedSnapshotId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "home",
    outputs: [
      {
        internalType: "contract IOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_potentialReplica",
        type: "address",
      },
    ],
    name: "isReplica",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSentBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "localDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "enum SpokeConnector.MessageStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outboundRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "pendingAggregateRoots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct SpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenAggregateRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "provenMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateLimitBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "removePendingAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sentMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rateLimit",
        type: "uint256",
      },
    ],
    name: "setRateLimitBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snapshotRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162003bf338038062003bf38339810160408190526200003591620003b0565b89898989898989898989808a8a8a8a8a6200005033620002b0565b8463ffffffff166000036200009b5760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e75760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000092565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011f576200011f8162000315565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a350506003805460ff60a01b191690555050600480546001600160a01b0319166001600160a01b039390931692909217909155506001600755620cf84f8511620001f25760405162461bcd60e51b815260206004820152600c60248201526b2170726f636573732067617360a01b604482015260640162000092565b613a978411620002345760405162461bcd60e51b815260206004820152600c60248201526b21726573657276652067617360a01b604482015260640162000092565b6101208590526101408490526001600160a01b038216620002875760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640162000092565b506001600160a01b03166101005260085550620004649f50505050505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200039357600080fd5b919050565b80516001600160a01b03811681146200039357600080fd5b6000806000806000806000806000806101408b8d031215620003d157600080fd5b620003dc8b6200037e565b9950620003ec60208c016200037e565b9850620003fc60408c0162000398565b97506200040c60608c0162000398565b96506200041c60808c0162000398565b955060a08b0151945060c08b0151935060e08b01519250620004426101008c0162000398565b9150620004536101208c0162000398565b90509295989b9194979a5092959850565b60805160a05160c05160e0516101005161012051610140516136c46200052f6000396000818161035b0152611fc301526000818161097b01528181611fe4015261207101526000818161078b01528181610af80152818161113b0152818161177f0152818161181b0152611978015260006102eb0152600081816105b901528181610ca001528181611b190152611b5e0152600081816109310152610dac015260008181610500015281816106c70152818161191a01528181611b850152611ec301526136c46000f3fe6080604052600436106102cd5760003560e01c80638456cb5911610175578063b95a2001116100dc578063d2a3cc7111610095578063d88beda21161006f578063d88beda214610969578063db1b76591461099d578063e0fed010146109bd578063fa31de01146109dd57600080fd5b8063d2a3cc71146108ff578063d69f9d611461091f578063d7d317b31461095357600080fd5b8063b95a200114610843578063c5b350df14610876578063cc3942831461088b578063d1745e4f146108ab578063d1851c92146108c2578063d232c220146108e057600080fd5b8063a01892a51161012e578063a01892a514610779578063a792c29b146107ad578063ad9c0c2e146107cd578063b1f8100d146107e3578063b2f8764314610803578063b697f5311461082357600080fd5b80638456cb59146106a35780638d3638f4146106b85780638da5cb5b146106eb57806398c9f2b9146107095780639d3117c7146107395780639fa92f9d1461076657600080fd5b806351cc57cc116102345780635f61e3ec116101ed57806368742da6116101c757806368742da6146106385780636a42b8f8146106585780636b04a9331461066e578063715018a61461068e57600080fd5b80635f61e3ec146105a75780636159ada1146105f357806365eaf11b1461062357600080fd5b806351cc57cc146104c157806352a9674b146104ee578063572386ca14610522578063579c1618146105525780635bd11efc146105685780635c975abb1461058857600080fd5b80633cf52ffb116102865780633cf52ffb1461041b5780633f4ba83a1461043057806348e6fa23146104455780634ff746f614610458578063508a109b146104785780635190bc531461049857600080fd5b806314168416146102d95780631eeaabea1461032757806325e3beda146103495780632bb1ae7c1461038b5780632bbd59ca1461039e578063301f07c3146103db57600080fd5b366102d457005b600080fd5b3480156102e557600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561033357600080fd5b5061034761034236600461304b565b610a0b565b005b34801561035557600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161031e565b610347610399366004613107565b610ab5565b3480156103aa57600080fd5b506103ce6103b936600461304b565b600f6020526000908152604090205460ff1681565b60405161031e9190613152565b3480156103e757600080fd5b5061040b6103f636600461304b565b600a6020526000908152604090205460ff1681565b604051901515815260200161031e565b34801561042757600080fd5b5060025461037d565b34801561043c57600080fd5b50610347610c58565b61034761045336600461317a565b610c95565b34801561046457600080fd5b50610347610473366004613107565b610da1565b34801561048457600080fd5b506103476104933660046131de565b610e3e565b3480156104a457600080fd5b5061040b6104b336600461327a565b6001600160a01b0316301490565b3480156104cd57600080fd5b5061037d6104dc36600461304b565b60106020526000908152604090205481565b3480156104fa57600080fd5b5061030d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561052e57600080fd5b5061040b61053d36600461304b565b600c6020526000908152604090205460ff1681565b34801561055e57600080fd5b5061037d60055481565b34801561057457600080fd5b5061034761058336600461327a565b611100565b34801561059457600080fd5b50600354600160a01b900460ff1661040b565b3480156105b357600080fd5b506105db7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161031e565b3480156105ff57600080fd5b5061040b61060e36600461327a565b600d6020526000908152604090205460ff1681565b34801561062f57600080fd5b5061037d611137565b34801561064457600080fd5b5061034761065336600461327a565b6111c0565b34801561066457600080fd5b5062093a8061037d565b34801561067a57600080fd5b5061034761068936600461304b565b61123d565b34801561069a57600080fd5b50610347611308565b3480156106af57600080fd5b50610347611333565b3480156106c457600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061030d565b3480156106f757600080fd5b506000546001600160a01b03166105db565b34801561071557600080fd5b5061040b61072436600461304b565b600b6020526000908152604090205460ff1681565b34801561074557600080fd5b5061037d61075436600461304b565b60096020526000908152604090205481565b34801561077257600080fd5b50306105db565b34801561078557600080fd5b506105db7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107b957600080fd5b506004546105db906001600160a01b031681565b3480156107d957600080fd5b5061037d60085481565b3480156107ef57600080fd5b506103476107fe36600461327a565b6113e7565b34801561080f57600080fd5b5061034761081e36600461327a565b611485565b34801561082f57600080fd5b5061034761083e36600461327a565b611501565b34801561084f57600080fd5b5061030d61085e3660046132bc565b600e6020526000908152604090205463ffffffff1681565b34801561088257600080fd5b50610347611580565b34801561089757600080fd5b506003546105db906001600160a01b031681565b3480156108b757600080fd5b50610708420461037d565b3480156108ce57600080fd5b506001546001600160a01b03166105db565b3480156108ec57600080fd5b506000546001600160a01b03161561040b565b34801561090b57600080fd5b5061034761091a36600461327a565b6115f0565b34801561092b57600080fd5b506105db7f000000000000000000000000000000000000000000000000000000000000000081565b34801561095f57600080fd5b5061037d60065481565b34801561097557600080fd5b5061037d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156109a957600080fd5b5061040b6109b836600461327a565b6116c7565b3480156109c957600080fd5b506103476109d836600461304b565b6116dc565b3480156109e957600080fd5b506109fd6109f83660046132d7565b611710565b60405161031e92919061337e565b6000546001600160a01b03163314610a36576040516311a8a1bb60e31b815260040160405180910390fd5b6008548103610a7b5760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b60448201526064015b60405180910390fd5b60405133815281907f8bd16320f3b60336ed5fd2a770eb7453e7e71cfef4462addffd7ae9dfe201c8e9060200160405180910390a2600855565b610abd611a49565b43600554600654610ace91906133ad565b1115610aed576040516346cf2af160e11b815260040160405180910390fd5b4360068190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7891906133c0565b6000818152600c602052604090205490915060ff1615610bce5760405162461bcd60e51b81526020600482015260116024820152701c9bdbdd08185b1c9958591e481cd95b9d607a1b6044820152606401610a72565b600081604051602001610be391815260200190565b6040516020818303038152906040529050610bfe8184611a96565b6000828152600c602052604090819020805460ff19166001179055517fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507790610c4b908390869033906133d9565b60405180910390a1505050565b6000546001600160a01b03163314610c83576040516311a8a1bb60e31b815260040160405180910390fd5b610c8b611c0d565b610c93611c5d565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610cfc5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b6044820152606401610a72565b805115610d3a5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a72565b610d538260405180602001604052806000815250611a96565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077826040518060200160405280600081525033604051610d95939291906133d9565b60405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e025760405162461bcd60e51b8152600401610a729060208082526004908201526310a0a6a160e11b604082015260600190565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced8133604051610e33929190613417565b60405180910390a150565b610e46611a49565b610e4e611cb2565b83610e855760405162461bcd60e51b81526020600482015260076024820152662170726f6f667360c81b6044820152606401610a72565b600085856000818110610e9a57610e9a613441565b9050602002810190610eac9190613457565b610eb69080613478565b604051610ec49291906134c6565b604051809103902090506000610f2b8288886000818110610ee757610ee7613441565b9050602002810190610ef99190613457565b60200189896000818110610f0f57610f0f613441565b9050602002810190610f219190613457565b6104200135611d0b565b9050610f3981868686611db2565b6000828152600f60205260409020805460ff1916600190811790915586905b818163ffffffff16101561105f5788888263ffffffff16818110610f7e57610f7e613441565b9050602002810190610f909190613457565b610f9a9080613478565b604051610fa89291906134c6565b604051809103902093506000610ffd858b8b8563ffffffff16818110610fd057610fd0613441565b9050602002810190610fe29190613457565b6020018c8c8663ffffffff16818110610f0f57610f0f613441565b905083811461103c5760405162461bcd60e51b815260206004820152600b60248201526a085cda185c9959149bdbdd60aa1b6044820152606401610a72565b506000848152600f60205260409020805460ff1916600190811790915501610f58565b5060005b818163ffffffff1610156110eb576110e289898363ffffffff1681811061108c5761108c613441565b905060200281019061109e9190613457565b6110a89080613478565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ead92505050565b50600101611063565b505050506110f96001600755565b5050505050565b6000546001600160a01b0316331461112b576040516311a8a1bb60e31b815260040160405180910390fd5b6111348161218a565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015611197573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bb91906133c0565b905090565b6000546001600160a01b031633146111eb576040516311a8a1bb60e31b815260040160405180910390fd5b476111f682826121f3565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161123191815260200190565b60405180910390a25050565b6000546001600160a01b03163314611268576040516311a8a1bb60e31b815260040160405180910390fd5b611270611c0d565b60008181526009602052604081205490036112c55760405162461bcd60e51b8152602060048201526015602482015274616767726567617465526f6f74202165786973747360581b6044820152606401610a72565b60008181526009602052604080822091909155517ff51534ecf10a58db36ce4f5180f59deddf3b3eb7c5e7454e602c2f80a40cc73990610e339083815260200190565b6000546001600160a01b03163314610c93576040516311a8a1bb60e31b815260040160405180910390fd5b600480546040516384785ecd60e01b815233928101929092526001600160a01b0316906384785ecd90602401602060405180830381865afa15801561137c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a091906134d6565b6113d75760405162461bcd60e51b815260206004820152600860248201526710bbb0ba31b432b960c11b6044820152606401610a72565b6113df611a49565b610c93612311565b6000546001600160a01b03163314611412576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015611430575060025415155b1561144e576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361147c57604051634a2fb73f60e11b815260040160405180910390fd5b61113481612354565b6000546001600160a01b031633146114b0576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f384859c5ef5fafac31e8bc92ce7fb48b1f2c74c4dd5e212eb84ec202fa5d9fad9101610e33565b6000546001600160a01b0316331461152c576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527fd65eca5d561d3a4568c87b9b13ced4ab52a69edadfdfdb22d76bc595f36d7d879101610e33565b6001546001600160a01b031633146115ab576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426115bd91906134f8565b116115db576040516324e0285f60e21b815260040160405180910390fd5b600154610c93906001600160a01b03166123a2565b6000546001600160a01b0316331461161b576040516311a8a1bb60e31b815260040160405180910390fd5b6004546001600160a01b03908116908216036116795760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610a72565b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610e33565b60006001600160a01b03821633145b92915050565b6000546001600160a01b03163314611707576040516311a8a1bb60e31b815260040160405180910390fd5b61113481612407565b336000908152600d602052604081205460609060ff166117615760405162461bcd60e51b815260206004820152600c60248201526b08585b1b1bdddb1a5cdd195960a21b6044820152606401610a72565b610708420460008181526010602052604081205490036118ca5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ff91906133c0565b90508060106000848152602001908152602001600020819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166306661abd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189b91906133c0565b604051829084907f7ab06ac7a4d1b913d3302154561c33502bc3786196bf36757232034393d6143890600090a4505b63ffffffff8087166000908152600e60205260408120805491929190911690826118f38361350b565b91906101000a81548163ffffffff021916908363ffffffff160217905550905060006119527f0000000000000000000000000000000000000000000000000000000000000000611949336001600160a01b031690565b848b8b8b612485565b80516020820120604051632d287e4360e01b8152600481018290529192509060009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632d287e439060240160408051808303816000875af11580156119c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ec919061352e565b90925090507f40f08ee347fc927ae45902edc87debb024aab1a311943731968607f603f2152f83611a1e6001846134f8565b8487604051611a309493929190613552565b60405180910390a1509099919850909650505050505050565b600354600160a01b900460ff1615610c935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610a72565b805115611ad45760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610a72565b8151602014611b0f5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610a72565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303611b5457611b50611b4b83613581565b6124bd565b5050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000611bad85613581565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b158015611bf157600080fd5b505af1158015611c05573d6000803e3d6000fd5b505050505050565b600354600160a01b900460ff16610c935760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610a72565b611c65611c0d565b6003805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260075403611d045760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a72565b6002600755565b6000806000858152600f602052604090205460ff166002811115611d3157611d3161313c565b14611d745760405162461bcd60e51b8152602060048201526013602482015272214d6573736167655374617475732e4e6f6e6560681b6044820152606401610a72565b611da88484602080602002604051908101604052809291908260208002808284376000920191909152508691506125e69050565b90505b9392505050565b6000848152600b602052604090205460ff16611ea757611dd183612934565b6000611e078584602080602002604051908101604052809291908260208002808284376000920191909152508691506125e69050565b9050838114611e4e5760405162461bcd60e51b81526020600482015260136024820152721a5b9d985b1a59081a5b989bdd5b99149bdbdd606a1b6044820152606401610a72565b6000858152600b602052604090819020805460ff1916600117905551849086907f7ec1ea51fe3db53e55ed9d922854bc2156f467ff2f87d74e2086dae2c84a88a890611e9d9086815260200190565b60405180910390a3505b50505050565b600080611eba8382612a94565b905063ffffffff7f000000000000000000000000000000000000000000000000000000000000000016611ef262ffffff198316612ab8565b63ffffffff1614611f345760405162461bcd60e51b815260206004820152600c60248201526b10b232b9ba34b730ba34b7b760a11b6044820152606401610a72565b6000611f4562ffffff198316612acd565b905060016000828152600f602052604090205460ff166002811115611f6c57611f6c61313c565b14611fa35760405162461bcd60e51b815260206004820152600760248201526610b83937bb32b760c91b6044820152606401610a72565b6000818152600f60205260409020805460ff1916600217905560016120087f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006133ad565b61201291906134f8565b5a116120495760405162461bcd60e51b8152600401610a72906020808252600490820152632167617360e01b604082015260600190565b600061205a62ffffff198416612b16565b6040805161010080825261012082019092529192507f0000000000000000000000000000000000000000000000000000000000000000916000908260208201818036833701905050905060006120b562ffffff198816612b27565b6120c462ffffff198916612b3b565b6120d362ffffff198a16612b50565b6120f06120e562ffffff198c16612b65565b62ffffff1916612b93565b60405160240161210394939291906135a8565b60408051601f198184030181529190526020810180516001600160e01b031663ab2dc3f560e01b179052905061213d858560008685612bdc565b60405191995092507fd42de95a9b26f1be134c8ecce389dc4fcfa18753d01661b7b361233569e8fe48906121769088908b9086906135d7565b60405180910390a150505050505050919050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b804710156122435760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610a72565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612290576040519150601f19603f3d011682016040523d82523d6000602084013e612295565b606091505b505090508061230c5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610a72565b505050565b612319611a49565b6003805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c953390565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600554810361244a5760405162461bcd60e51b815260206004820152600f60248201526e085b995dc81c985d19481b1a5b5a5d608a1b6044820152606401610a72565b600581905560408051338152602081018390527f8e7fa5e406cb856aab05575e45ea011c6748376cc1b5229e3d67b92986406a159101610e33565b60608686868686866040516020016124a2969594939291906135f8565b60405160208183030381529060405290509695505050505050565b806124fb5760405162461bcd60e51b815260206004820152600e60248201526d6e657720726f6f7420656d70747960901b6044820152606401610a72565b6000818152600960205260409020541561254e5760405162461bcd60e51b8152602060048201526014602482015273726f6f7420616c72656164792070656e64696e6760601b6044820152606401610a72565b6000818152600a602052604090205460ff16156125a35760405162461bcd60e51b81526020600482015260136024820152723937b7ba1030b63932b0b23c90383937bb32b760691b6044820152606401610a72565b60008181526009602052604090819020439055517f84ef18531155afdb0e64ff905d67044ae3aac63a6fba4661cfd9c4c14f289bc890610e339083815260200190565b6020600582811b8216948552835194820394909452604060008181206002851615871b808503919091528386015190528181206004851615871b808503919091528286015190528181206008851615871b80850391909152606086015190528181206010851615871b8085039190915260808087015190915282822084861615881b8086039190915260a0870151905282822083861615881b8086039190915260c0870151905282822090851615871b8085039190915260e0860151905281812061010080861615881b80860392909252860151905281812061020080861615881b80860392909252610120870151909152828220610400861615881b808603919091526101408701519052828220610800861615881b808603919091526101608701519052828220611000861615881b808603919091526101808701519052828220612000861615881b808603919091526101a08701519052828220614000861615881b808603919091526101c08701519052828220618000861615881b808603919091526101e0870151905282822062010000861615881b8086039190915290860151905281812062020000851615871b80850391909152610220860151905281812062040000851615871b80850391909152610240860151905281812062080000851615871b80850391909152610260860151905281812062100000851615871b80850391909152610280860151905281812062200000851615871b808503919091526102a0860151905281812062400000851615871b808503919091526102c0860151905281812062800000851615871b808503919091526102e086015190528181206301000000851615871b8085039190915261030086015190528181206302000000851615871b8085039190915261032086015190528181206304000000851615871b8085039190915261034086015190528181206308000000851615871b8085039190915261036086015190528181206310000000851615871b8085039190915261038086015190528181206320000000851615871b808503919091526103a086015190528181206340000000851615871b808503919091526103c0860151905281812063800000009094161590951b91829003929092526103e090920151909152902090565b806129775760405162461bcd60e51b8152602060048201526013602482015272616767726567617465526f6f7420656d70747960681b6044820152606401610a72565b6000818152600a602052604090205460ff16156129915750565b600081815260096020526040812054908190036129e75760405162461bcd60e51b81526020600482015260146024820152731859d9dc9959d85d19549bdbdd0808595e1a5cdd60621b6044820152606401610a72565b6008546129f482436134f8565b1015612a425760405162461bcd60e51b815260206004820152601760248201527f616767726567617465526f6f74202176657269666965640000000000000000006044820152606401610a72565b6000828152600a6020526040808220805460ff191660011790555183917f36b314aba9f663b4d3ef3288ae489341cc5e6a2725a05fa2b72df7a27e03f42a91a250600090815260096020526040812055565b815160009060208401612aaf64ffffffffff85168284612c67565b95945050505050565b60006116d662ffffff19831660286004612ca4565b600080612ae38360781c6001600160601b031690565b6001600160601b031690506000612b038460181c6001600160601b031690565b6001600160601b03169091209392505050565b60006116d6612b2483612cd4565b90565b60006116d662ffffff198316826004612ca4565b60006116d662ffffff19831660246004612ca4565b60006116d662ffffff19831660046020612ce5565b60006116d6604c612b8381601886901c6001600160601b03166134f8565b62ffffff19851691906000612df0565b6060600080612bab8460181c6001600160601b031690565b6001600160601b031690506040519150819250612bcb8483602001612e6c565b508181016020016040529052919050565b6000606060008060008661ffff1667ffffffffffffffff811115612c0257612c02613064565b6040519080825280601f01601f191660200182016040528015612c2c576020820181803683370190505b5090506000808751602089018b8e8ef191503d925086831115612c4d578692505b828152826000602083013e90999098509650505050505050565b600080612c7483856133ad565b9050604051811115612c84575060005b80600003612c995762ffffff19915050611dab565b612aaf858585612f5f565b6000612cb1826020613652565b612cbc90600861366b565b60ff16612cca858585612ce5565b901c949350505050565b60006116d662ffffff198316602c60205b60008160ff16600003612cfa57506000611dab565b612d0d8460181c6001600160601b031690565b6001600160601b0316612d2360ff8416856133ad565b1115612d8b57612d3c8460781c6001600160601b031690565b612d4f8560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff83166064820152608401610a72565b60208260ff161115612db05760405163045df3f960e01b815260040160405180910390fd5b600882026000612dc98660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91909501511695945050505050565b600080612e068660781c6001600160601b031690565b6001600160601b03169050612e1a86612fd6565b84612e2587846133ad565b612e2f91906133ad565b1115612e425762ffffff19915050612e64565b612e4c85826133ad565b9050612e608364ffffffffff168286612c67565b9150505b949350505050565b600062ffffff1980841603612e945760405163148d513360e21b815260040160405180910390fd5b612e9d8361300f565b15612ebb57604051632ee0949160e11b815260040160405180910390fd5b6000612ed08460181c6001600160601b031690565b6001600160601b031690506000612ef08560781c6001600160601b031690565b6001600160601b03169050600080604051915085821115612f115760206060fd5b8386858560045afa905080612f3957604051632af1bd9b60e21b815260040160405180910390fd5b612f54612f468860d81c90565b64ffffffffff168786612f5f565b979650505050505050565b60006060601883856001600160601b03821682148015612f87575086816001600160601b0316145b612fc05760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b6044820152606401610a72565b96831b90961790911b90941790931b9392505050565b6000612feb8260181c6001600160601b031690565b612ffe8360781c6001600160601b031690565b016001600160601b03169050919050565b600061301b8260d81c90565b64ffffffffff1664ffffffffff0361303557506001919050565b600061304083612fd6565b604051109392505050565b60006020828403121561305d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261308b57600080fd5b813567ffffffffffffffff808211156130a6576130a6613064565b604051601f8301601f19908116603f011681019082821181831017156130ce576130ce613064565b816040528381528660208588010111156130e757600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561311957600080fd5b813567ffffffffffffffff81111561313057600080fd5b612e648482850161307a565b634e487b7160e01b600052602160045260246000fd5b602081016003831061317457634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561318d57600080fd5b823567ffffffffffffffff808211156131a557600080fd5b6131b18683870161307a565b935060208501359150808211156131c757600080fd5b506131d48582860161307a565b9150509250929050565b600080600080600061046086880312156131f757600080fd5b853567ffffffffffffffff8082111561320f57600080fd5b818801915088601f83011261322357600080fd5b81358181111561323257600080fd5b8960208260051b850101111561324757600080fd5b60209283019750955050860135925061044086018781111561326857600080fd5b94979396509194604001933592915050565b60006020828403121561328c57600080fd5b81356001600160a01b0381168114611dab57600080fd5b803563ffffffff811681146132b757600080fd5b919050565b6000602082840312156132ce57600080fd5b611dab826132a3565b6000806000606084860312156132ec57600080fd5b6132f5846132a3565b925060208401359150604084013567ffffffffffffffff81111561331857600080fd5b6133248682870161307a565b9150509250925092565b60005b83811015613349578181015183820152602001613331565b50506000910152565b6000815180845261336a81602086016020860161332e565b601f01601f19169290920160200192915050565b828152604060208201526000611da86040830184613352565b634e487b7160e01b600052601160045260246000fd5b808201808211156116d6576116d6613397565b6000602082840312156133d257600080fd5b5051919050565b6060815260006133ec6060830186613352565b82810360208401526133fe8186613352565b91505060018060a01b0383166040830152949350505050565b60408152600061342a6040830185613352565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b6000823561043e1983360301811261346e57600080fd5b9190910192915050565b6000808335601e1984360301811261348f57600080fd5b83018035915067ffffffffffffffff8211156134aa57600080fd5b6020019150368190038213156134bf57600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156134e857600080fd5b81518015158114611dab57600080fd5b818103818111156116d6576116d6613397565b600063ffffffff80831681810361352457613524613397565b6001019392505050565b6000806040838503121561354157600080fd5b505080516020909101519092909150565b8481528360208201528260408201526080606082015260006135776080830184613352565b9695505050505050565b805160208083015191908110156135a2576000198160200360031b1b821691505b50919050565b600063ffffffff8087168352808616602084015250836040830152608060608301526135776080830184613352565b8381528215156020820152606060408201526000612aaf6060830184613352565b600063ffffffff60e01b808960e01b168352876004840152808760e01b166024840152808660e01b1660288401525083602c830152825161364081604c85016020870161332e565b91909101604c01979650505050505050565b60ff82811682821603908111156116d6576116d6613397565b60ff818116838216029081169081811461368757613687613397565b509291505056fea2646970667358221220cfbaf12918d0f271225287a65900d8873dd8c8690504d7c549bf5e4d7021c6ef64736f6c63430008110033";

type MainnetSpokeConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainnetSpokeConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainnetSpokeConnector__factory extends ContractFactory {
  constructor(...args: MainnetSpokeConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainnetSpokeConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    ) as Promise<MainnetSpokeConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _processGas: PromiseOrValue<BigNumberish>,
    _reserveGas: PromiseOrValue<BigNumberish>,
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _processGas,
      _reserveGas,
      _delayBlocks,
      _merkle,
      _watcherManager,
      overrides || {}
    );
  }
  override attach(address: string): MainnetSpokeConnector {
    return super.attach(address) as MainnetSpokeConnector;
  }
  override connect(signer: Signer): MainnetSpokeConnector__factory {
    return super.connect(signer) as MainnetSpokeConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainnetSpokeConnectorInterface {
    return new utils.Interface(_abi) as MainnetSpokeConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainnetSpokeConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MainnetSpokeConnector;
  }
}
