/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UpgradeBeacon,
  UpgradeBeaconInterface,
} from "../../../../contracts/shared/upgrade/UpgradeBeacon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgrade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x00010000000000020004000000000002000000000001035500000001022001900000002c0000c13d0000005101000041000000000010043900000000010004120000000402000039000400000002001d00000000001204390000002401000039000000000001043900008005010000390000004402000039011200e60000040f00000048011001970000000002000411000000000112004b000000710000c13d0000000001000367000000000101043b000300000001001d0000000001000019011201100000040f000000030300002900000048023001970000004801100197000000000121004b000000780000c13d0000004f02000041000000800100003900000000002104350000002002000039000000840300003900000000002304350000000802000039000000a40300003900000000002304350000005002000041000000c40300003900000000002304350000006402000039011200fd0000040f00000060021002700000004601200197000000bf031000390000004703300197000000400800003900000000003804350000001f0220018f00000000030003670000000504100270000000000540004c000000400000613d00000000050000190000000506500210000000000763034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b000000380000413d000000000520004c0000004f0000613d0000000504400210000000000343034f0000000302200210000000a004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000003f0110008c000000e30000a13d000000a0010000390000000003010433000000480130009c000000e30000213d000000c0010000390000000002010433000000480120009c000000e30000213d000200000002001d000300000008001d0000000001000019000400000003001d011201100000040f00000004030000290000004802100197000000000232004b000000a80000c13d000000030100002900000000010104330000004402100039000000500300004100000000003204350000002402100039000000080300003900000000003204350000004f0200004100000000002104350000000402100039000000200300003900000000003204350000006402000039011200fd0000040f0000000001000019011201100000040f0000000000100435000000200200003900000000010000190000000003000019011200f80000040f000200000002001d000000490100004100000000001004390000000401000029000000000031043900008002010000390000002402000039011200e60000040f000000000110004c000000900000c13d0000004f02000041000000800100003900000000002104350000002002000039000000840300003900000000002304350000001802000039000000a40300003900000000002304350000004e02000041000000c40300003900000000002304350000006402000039011200fd0000040f0000000001000019011201100000040f0000004a011001970000000202000029000000000121019f00000000020000190112010e0000040f00000046010000410000000002000414000000460320009c0000000001024019000000c0011002100000004b011001c70000800d0200003900000002030000390000004c040000410000000205000029011201040000040f0000000101200190000000e30000613d000000000100001900000000020000190000000003000019011200f80000040f000100000001001d000000490100004100000000001004390000000401000039000000000031043900008002010000390000002402000039011200e60000040f000000000110004c000000c10000c13d0000000301000029000000000101043300000044021000390000004e0300004100000000003204350000002402100039000000180300003900000000003204350000004f0200004100000000002104350000000402100039000000200300003900000000003204350000006402000039011200fd0000040f00000001010000290000004a011001970000000402000029000000000121019f00000000020000190112010e0000040f00000046010000410000000002000414000000460320009c0000000001024019000000c0011002100000004b011001c70000800d0200003900000002030000390000004c040000410000000405000029011201040000040f00000001012001900000000203000029000000e30000613d0000008002000039000000000032043500000140010000390000000000010439000001600100003900000000003104390000002003000039000001000100003900000000003104390000000103000039000001200400003900000000003404390000004d03000041011200f80000040f00000000010000190000000002000019011200fd0000040f000000000301001900000046010000410000000004000414000000460540009c0000000001044019000000c0011002100000006002200210000000000112001900000052011000410000000002030019011201090000040f0000000102200190000000f50000613d000000000101043b000000000001042d00000000010000190000000002000019011200fd0000040f0000004001100210000000600220021000000000011200190000000001310019000001130001042e0000004603000041000000460410009c000000000103801900000040011002100000006002200210000000000121019f000001140001043000000107002104210000000102000039000000000001042d0000000002000019000000000001042d0000010c002104230000000102000039000000000001042d0000000002000019000000000001042d000000000012041b000000000001042d000000000101041a000000000001042d0000011200000432000001130001042e000001140001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff1806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b83ffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000f78721226efe9a1bb678189a16d1554928b9f2192e2cb93eeda83b79fa40007d0000000200000000000000000000000000000000000000000000000000000000696d706c656d656e746174696f6e2021636f6e7472616374000000000000000008c379a0000000000000000000000000000000000000000000000000000000002175706772616465000000000000000000000000000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e0200000200000000000000000000000000000000000000000000000000000000";

type UpgradeBeaconConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UpgradeBeaconConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UpgradeBeacon__factory extends ContractFactory {
  constructor(...args: UpgradeBeaconConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialImplementation: PromiseOrValue<string>,
    _controller: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<UpgradeBeacon> {
    return super.deploy(
      _initialImplementation,
      _controller,
      overrides || {}
    ) as Promise<UpgradeBeacon>;
  }
  override getDeployTransaction(
    _initialImplementation: PromiseOrValue<string>,
    _controller: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialImplementation,
      _controller,
      overrides || {}
    );
  }
  override attach(address: string): UpgradeBeacon {
    return super.attach(address) as UpgradeBeacon;
  }
  override connect(signer: Signer): UpgradeBeacon__factory {
    return super.connect(signer) as UpgradeBeacon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UpgradeBeaconInterface {
    return new utils.Interface(_abi) as UpgradeBeaconInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeBeacon {
    return new Contract(address, _abi, signerOrProvider) as UpgradeBeacon;
  }
}
