/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  MultiSend,
  MultiSendInterface,
} from "../../../../../contracts/shared/libraries/Multisend.sol/MultiSend";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "transactions",
        type: "bytes",
      },
    ],
    name: "multiSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000100000001035500000060011002700000005a0010019d0000000101200190000000450000c13d0000008001000039000000400200003900000000001204350000000005000031000000040350008c000000610000413d0000000103000367000000000403043b0000005c044001970000005d0440009c000000610000c13d000000040450008a0000005e06000041000000200740008c000000000700001900000000070640190000005e04400197000000000840004c000000000600a0190000005e0440009c00000000040700190000000004066019000000000440004c000000610000c13d0000000404300370000000000404043b0000005f0640009c000000610000213d00000023064000390000005e07000041000000000856004b000000000800001900000000080780190000005e055001970000005e06600197000000000956004b0000000007008019000000000556013f0000005e0550009c00000000050800190000000005076019000000000550004c000000610000c13d0000000405400039000000000353034f000000000303043b000000600530009c0000003d0000813d0000001f05300039000000200600008a000000000565016f000000bf05500039000000000565016f0000005f0650009c0000005a0000a13d0000006101000041000000000010043500000041010000390000000402000039000000000012043500000024020000390000000001000019016200e30000040f000000a001000039000000400200003900000000001204350000000001000416000000000110004c000000610000c13d00000000010004100000008002000039000000000012043500000140030000390000000000030439000001600300003900000000001304390000002003000039000001000100003900000000003104390000000103000039000001200400003900000000003404390000005b03000041016200d90000040f00000000005204350000000000310435000000240240003900000000012300190000000004000031000000000141004b000000640000a13d00000000010000190000000002000019016200e30000040f0000001f0130018f00000001022003670000000504300270000000000540004c000000720000613d00000000050000190000000506500210000000000762034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b0000006a0000413d000000000510004c000000810000613d0000000504400210000000000242034f0000000301100210000000a004400039000000000504043300000000051501cf000000000515022f000000000202043b0000010001100089000000000212022f00000000011201cf000000000151019f0000000000140435000000a00130003900000000000104350000008001000039016200ec0000040f000000000100001900000000020000190000000003000019016200d90000040f0002000000000002000200000006001d000100000005001d0000005a050000410000005a0630009c000000000305801900000040033002100000005a0640009c00000000040580190000006004400210000000000334019f0000005a0410009c0000000001058019000000c001100210000000000113019f016201530000040f000000010800002900000002040000290000001f0340018f0000000504400270000000000540004c000000a80000613d000000000500001900000005065002100000000007680019000000000661034f000000000606043b00000000006704350000000105500039000000000645004b000000a00000413d000000010220018f000000000530004c000000b80000613d0000000504400210000000000141034f00000000044800190000000303300210000000000504043300000000053501cf000000000535022f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f000000000014043500000000010200190000000200000005000000000001042d0000005a050000410000005a0630009c000000000305801900000040033002100000005a0640009c00000000040580190000006004400210000000000334019f0000005a0410009c0000000001058019000000c001100210000000000113019f0162015d0000040f000000010120018f000000000001042d0000005a0100004100000000020004140000005a0320009c0000000001024019000000c00110021000000062011001c70000800202000039016201580000040f0000000102200190000000d60000613d000000000101043b000000000001042d00000000010000190000000002000019016200e30000040f0000005a040000410000005a0510009c0000000001048019000000400110021000000000013100190000005a0320009c000000000204801900000060022002100000000001210019000001630001042e0000005a030000410000005a0420009c00000000020380190000005a0410009c000000000103801900000040011002100000006002200210000000000112019f00000164000104300004000000000002000200000001001d00000063010000410000000000100439000000000100041100000004020000390000000000120439016200ca0000040f000000000110004c000001410000c13d000000200800003900000002060000290000000007060433000100000007001d000000000178004b0000013c0000813d00000000016800190000005503100039000000350210003900000000040204330000000102100039000000000202043300000060092002700000000002010433000000f802200270000000000520004c000001110000613d000000010120008c0000013e0000c13d0000000001000414000000040290008c000001390000613d000400000008001d0000000002090019000300000004001d016200bb0000040f000001330000013d000000150110003900000000050104330000000001000414000000040290008c000001390000613d000400000008001d000000000250004c000300000004001d0000012f0000613d0000005a020000410000005a0630009c000000000302801900000040033002100000005a0640009c000000000602001900000000060440190000006006600210000000000336019f0000005a0610009c0000000001028019000000c001100210000000000131019f00000067011001c70000800902000039000000000305001900000000040900190000000005000019016201530000040f000000010120018f000001330000013d000000000209001900000000050000190000000006000019016200890000040f000000000110004c00000002060000290000000107000029000000040800002900000003040000290000013e0000613d00000000014800190000005508100039000000fa0000013d0000000400000005000000000001042d00000000010000190000000002000019016200e30000040f00000040010000390000000001010433000000640210003900000064030000410000000000320435000000440210003900000065030000410000000000320435000000240210003900000027030000390000000000320435000000660200004100000000002104350000000402100039000000200300003900000000003204350000008402000039016200e30000040f00000156002104210000000102000039000000000001042d0000000002000019000000000001042d0000015b002104230000000102000039000000000001042d0000000002000019000000000001042d00000160002104250000000102000039000000000001042d0000000002000019000000000001042d0000016200000432000001630001042e000001640001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000008d80ff0a000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000000000000100000000000000004e487b710000000000000000000000000000000000000000000000000000000002000002000000000000000000000000000000240000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b8376696120454f41000000000000000000000000000000000000000000000000004d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642008c379a00000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

type MultiSendConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSendConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSend__factory extends ContractFactory {
  constructor(...args: MultiSendConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSend> {
    return super.deploy(overrides || {}) as Promise<MultiSend>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MultiSend {
    return super.attach(address) as MultiSend;
  }
  override connect(signer: Signer): MultiSend__factory {
    return super.connect(signer) as MultiSend__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSendInterface {
    return new utils.Interface(_abi) as MultiSendInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSend {
    return new Contract(address, _abi, signerOrProvider) as MultiSend;
  }
}
