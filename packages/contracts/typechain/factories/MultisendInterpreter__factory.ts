/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MultisendInterpreter,
  MultisendInterpreterInterface,
} from "../MultisendInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_multisend",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "multisend",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161060338038061060383398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61055f6100a46000396000818160400152818161010c015281816101d00152610258015261055f6000f3fe6080604052600436106100295760003560e01c8063294402cc1461002e578063b61d27f61461007e575b600080fd5b34801561003a57600080fd5b506100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c36600461040b565b610093565b005b6001600160a01b03841661017c578234146100f55760405162461bcd60e51b815260206004820152601760248201527f657865637574653a2056414c55455f4d49534d4154434800000000000000000060448201526064015b60405180910390fd5b6040516346c07f8560e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d80ff0a90349061014590869086906004016104fa565b6000604051808303818588803b15801561015e57600080fd5b505af1158015610172573d6000803e3d6000fd5b50505050506102c2565b34156101ca5760405162461bcd60e51b815260206004820152601e60248201527f657865637574653a204554485f574954485f4552435f5452414e53464552000060448201526064016100ec565b6101f5847f0000000000000000000000000000000000000000000000000000000000000000856102c8565b6102415760405162461bcd60e51b815260206004820152601760248201527f657865637574653a20415050524f56455f4641494c454400000000000000000060448201526064016100ec565b6040516346c07f8560e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d80ff0a9061028f90859085906004016104fa565b600060405180830381600087803b1580156102a957600080fd5b505af11580156102bd573d6000803e3d6000fd5b505050505b50505050565b6040516001600160a01b03831660248201526044810182905260009061031c90859060640160408051601f198184030181529190526020810180516001600160e01b031663095ea7b360e01b179052610324565b949350505050565b6000823b6103685760405162461bcd60e51b81526020600482015260116024820152704c696245524332303a204e4f5f434f444560781b60448201526064016100ec565b600080846001600160a01b03168460405161038391906104c1565b6000604051808303816000865af19150503d80600081146103c0576040519150601f19603f3d011682016040523d82523d6000602084013e6103c5565b606091505b50915091506103d482826103fa565b805115806103f15750808060200190518101906103f1919061049a565b95945050505050565b8161040757805160208201fd5b5050565b60008060008060608587031215610420578384fd5b84356001600160a01b0381168114610436578485fd5b935060208501359250604085013567ffffffffffffffff80821115610459578384fd5b818701915087601f83011261046c578384fd5b81358181111561047a578485fd5b88602082850101111561048b578485fd5b95989497505060200194505050565b6000602082840312156104ab578081fd5b815180151581146104ba578182fd5b9392505050565b60008251815b818110156104e157602081860181015185830152016104c7565b818111156104ef5782828501525b509190910192915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea264697066735822122007f16f11248ff3083fe5bdff68a0ab0833951213265bf638479eeffb7d735acf64736f6c63430008040033";

export class MultisendInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _multisend: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MultisendInterpreter> {
    return super.deploy(
      _multisend,
      overrides || {}
    ) as Promise<MultisendInterpreter>;
  }
  getDeployTransaction(
    _multisend: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_multisend, overrides || {});
  }
  attach(address: string): MultisendInterpreter {
    return super.attach(address) as MultisendInterpreter;
  }
  connect(signer: Signer): MultisendInterpreter__factory {
    return super.connect(signer) as MultisendInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultisendInterpreterInterface {
    return new utils.Interface(_abi) as MultisendInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultisendInterpreter {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MultisendInterpreter;
  }
}
