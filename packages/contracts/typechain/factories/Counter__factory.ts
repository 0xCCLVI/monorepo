/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5060008060006101000a81548160ff0219169083151502179055506112108061003f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d7871461007a578063d09de08a146100a3578063d2eee78a146100ba578063d3072d82146100d6575b600080fd5b34801561005b57600080fd5b50610064610101565b6040516100719190610ea3565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610af9565b610107565b005b3480156100af57600080fd5b506100b8610123565b005b6100d460048036038101906100cf9190610aaa565b61018c565b005b3480156100e257600080fd5b506100eb610249565b6040516100f89190610d86565b60405180910390f35b60015481565b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1615610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016890610de3565b60405180910390fd5b60018060008282546101839190610ef0565b92505081905550565b6101958361025a565b156101e1578034146101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d390610dc3565b60405180910390fd5b610231565b60003414610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610e83565b60405180910390fd5b61023083333084610317565b5b610239610123565b6102448383836103ad565b505050565b60008054906101000a900460ff1681565b60006102887f6956b782f9304dfee0940bbe6d84a1059291916028027362eaa79bb3393baa8e60001b61045e565b6102b47f3b390444eeee15f8403fb254937d816cd8765f2dd691ff0344db8748dbdfa0c960001b61045e565b6102e07f7805234080dbcf05e867725fb98f004cb68ba0315f5d6e01958760184fad948460001b61045e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103437fe74d3bf5d343e3316beb207a38168ee59d74663e3a3fb0929f61dd5e8f24d6e360001b61045e565b61036f7fc6447d64bf0c80f184f71c923e77c9cc86f84c25ed2d208b05a862eda4eeea9560001b61045e565b61039b7f4ee1d7f77d6ba549754071140c254f86be7e035f2c4624c2dcd681660496d9ae60001b61045e565b6103a784848484610461565b50505050565b6103d97fa204dd2175f9bd0af6ff6c41f54dbaad7a8fe0452b52f38c08bad1dad42d23ad60001b61045e565b6104057ff798f16718148904f23b4a2c7f042f8be367883d38374c87e0d8fd44a20d825c60001b61045e565b6104317f1c4667e907fa81165cca71b1910cd3bb16fbb9acc22178d6c37b57ebcc305aa160001b61045e565b61043a8361025a565b61044e576104498383836104ea565b610459565b610458828261057e565b5b505050565b50565b6104e4846323b872dd60e01b85858560405160240161048293929190610d26565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610763565b50505050565b6105167f86d37e0858c4abc5478d359cb4362e7b0982d6501ee798c5065ddd0fab4e1e8560001b61045e565b6105427f86349478ce4795e49174ae35ad3a9b80499032692a5a6385f79c0cfc356779a760001b61045e565b61056e7f9955fc13e264956b12f35081dd139c3cb2a97a193b7a34baba7322e1b38a305e60001b61045e565b61057983838361082a565b505050565b6105aa7f98e15c717e8887b5b532976810656a2574094818fa21ca343d383c1c2f11f12360001b61045e565b6105d67fa689bff3e308d431a315f9f7894fee9045a19b7d6b85ae7c6e3efd0714a86dc460001b61045e565b6106027f61a2a98a398c98a7d30e5191bc9aac1ff384204235e03c48057d47b9d17a0d6060001b61045e565b60008273ffffffffffffffffffffffffffffffffffffffff168260405161062890610d11565b60006040518083038185875af1925050503d8060008114610665576040519150601f19603f3d011682016040523d82523d6000602084013e61066a565b606091505b5050905061069a7fdfbbfc24c4363805aee1a04161ccdde5df5d1f3b4dbab19c2839721361d2001d60001b61045e565b6106c67fe87c52fc420fa5060d4dc2b2fc3d46803189de3cba3f5520bd95c2d5abf95d7460001b61045e565b6106f27f0c1b49f94746d3fc8b6564b04ef9b56e95089398c4a13f4ef4e4017b2affca6460001b61045e565b80610732576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072990610e23565b60405180910390fd5b61075e7fa593329602996df54fb87f1acc7c3f3a94d0743020bb0893e0781a2a76be0d7f60001b61045e565b505050565b60006107c5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108b09092919063ffffffff16565b905060008151111561082557808060200190518101906107e59190610b22565b610824576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081b90610e63565b60405180910390fd5b5b505050565b6108ab8363a9059cbb60e01b8484604051602401610849929190610d5d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610763565b505050565b60606108bf84846000856108c8565b90509392505050565b60608247101561090d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090490610e03565b60405180910390fd5b610916856109dc565b610955576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094c90610e43565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161097e9190610cfa565b60006040518083038185875af1925050503d80600081146109bb576040519150601f19603f3d011682016040523d82523d6000602084013e6109c0565b606091505b50915091506109d08282866109ef565b92505050949350505050565b600080823b905060008111915050919050565b606083156109ff57829050610a4f565b600083511115610a125782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a469190610da1565b60405180910390fd5b9392505050565b600081359050610a6581611195565b92915050565b600081359050610a7a816111ac565b92915050565b600081519050610a8f816111ac565b92915050565b600081359050610aa4816111c3565b92915050565b600080600060608486031215610abf57600080fd5b6000610acd86828701610a56565b9350506020610ade86828701610a56565b9250506040610aef86828701610a95565b9150509250925092565b600060208284031215610b0b57600080fd5b6000610b1984828501610a6b565b91505092915050565b600060208284031215610b3457600080fd5b6000610b4284828501610a80565b91505092915050565b610b5481610f46565b82525050565b610b6381610f58565b82525050565b6000610b7482610ebe565b610b7e8185610ed4565b9350610b8e818560208601610f8e565b80840191505092915050565b6000610ba582610ec9565b610baf8185610edf565b9350610bbf818560208601610f8e565b610bc881610ff0565b840191505092915050565b6000610be0602483610edf565b9150610beb82611001565b604082019050919050565b6000610c03601f83610edf565b9150610c0e82611050565b602082019050919050565b6000610c26602683610edf565b9150610c3182611079565b604082019050919050565b6000610c49600783610edf565b9150610c54826110c8565b602082019050919050565b6000610c6c600083610ed4565b9150610c77826110f1565b600082019050919050565b6000610c8f601d83610edf565b9150610c9a826110f4565b602082019050919050565b6000610cb2602a83610edf565b9150610cbd8261111d565b604082019050919050565b6000610cd5601e83610edf565b9150610ce08261116c565b602082019050919050565b610cf481610f84565b82525050565b6000610d068284610b69565b915081905092915050565b6000610d1c82610c5f565b9150819050919050565b6000606082019050610d3b6000830186610b4b565b610d486020830185610b4b565b610d556040830184610ceb565b949350505050565b6000604082019050610d726000830185610b4b565b610d7f6020830184610ceb565b9392505050565b6000602082019050610d9b6000830184610b5a565b92915050565b60006020820190508181036000830152610dbb8184610b9a565b905092915050565b60006020820190508181036000830152610ddc81610bd3565b9050919050565b60006020820190508181036000830152610dfc81610bf6565b9050919050565b60006020820190508181036000830152610e1c81610c19565b9050919050565b60006020820190508181036000830152610e3c81610c3c565b9050919050565b60006020820190508181036000830152610e5c81610c82565b9050919050565b60006020820190508181036000830152610e7c81610ca5565b9050919050565b60006020820190508181036000830152610e9c81610cc8565b9050919050565b6000602082019050610eb86000830184610ceb565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610efb82610f84565b9150610f0683610f84565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f3b57610f3a610fc1565b5b828201905092915050565b6000610f5182610f64565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610fac578082015181840152602081019050610f91565b83811115610fbb576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e743a2073686f756c64526576657274206973207472756500600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2354453a30323800000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e74416e6453656e643a204554485f574954485f4552430000600082015250565b61119e81610f46565b81146111a957600080fd5b50565b6111b581610f58565b81146111c057600080fd5b50565b6111cc81610f84565b81146111d757600080fd5b5056fea2646970667358221220db62a725f9003caf57663dfc877825ebfa160e5111376c9964f11ce098e8ec5d64736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
