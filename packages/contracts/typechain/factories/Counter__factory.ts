/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5060008060006101000a81548160ff0219169083151502179055506112438061003f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d7871461007a578063d09de08a146100a3578063d2eee78a146100ba578063d3072d82146100d6575b600080fd5b34801561005b57600080fd5b50610064610101565b6040516100719190610e87565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610a9a565b610107565b005b3480156100af57600080fd5b506100b8610123565b005b6100d460048036038101906100cf9190610a4b565b61018c565b005b3480156100e257600080fd5b506100eb610249565b6040516100f89190610d4a565b60405180910390f35b60015481565b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1615610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016890610da7565b60405180910390fd5b60018060008282546101839190610ed4565b92505081905550565b6101958361025a565b156101e1578034146101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d390610d87565b60405180910390fd5b610231565b60003414610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610e67565b60405180910390fd5b61023083333084610317565b5b610239610123565b6102448383836103ad565b505050565b60008054906101000a900460ff1681565b60006102887f796feedc070ab3cd54b29fce355c726ec8e3e95d5023d19adc53874783154a5360001b61045e565b6102b47fd6974700048cb7e09e155591cd377b740144e3c86a4fe9a5326166781c595c1d60001b61045e565b6102e07f8c401940312ff5ec003ab93e129e357fe3b6999edcc6ef3cbe95fce27f13c11560001b61045e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103437fae615890efb301e797dd48cdb843a35dda2eee1d45d01e74f13e425ec63a397b60001b61045e565b61036f7f9a31ef727cc3f132b3329763e6a88b3f9d81e336f3eb137b71e823d94517348a60001b61045e565b61039b7fd7b612271675890cf5677aa8018f17c9a33c509cd7ae288b33dfd68be4b4164260001b61045e565b6103a784848484610461565b50505050565b6103d97fab33abee7a898a4ef3b9ab4c2d877b7289db2929b3e9a7f3ebf58e7aa8855e4060001b61045e565b6104057fd725f67317446cbc936ebfe7ef0616da93d647065b1b91ce8f1506c6a642187760001b61045e565b6104317f11ccace3f99ca49cafe9db27ce2c84b982abb048d05ec79968c1e5ce529315e060001b61045e565b61043a8361025a565b61044e576104498383836104ea565b610459565b610458828261057e565b5b505050565b50565b6104e4846323b872dd60e01b85858560405160240161048293929190610cea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610610565b50505050565b6105167fcb11a5d35babd3e7bb1e06d10866b2ed19bccb58f3a01b7af3805dfbb3936fa960001b61045e565b6105427fed61b998cd253cf3a4ac1b5bec5abf0515919b37c1898e778490a6be264c708560001b61045e565b61056e7f327ec84caa7c35ded650e80ad77fcab6a5e30f751f3ce4f5219a218305aedcfe60001b61045e565b6105798383836106d7565b505050565b6105aa7fcd18ca547cd6c3ec9eb456050dedec5a3775b721518c26040c4ce7e22d59d83560001b61045e565b6105d67fc7a46d19b160ed1a0a769fb4f0dc525c7572a609299791cfddb89512e7b94ddf60001b61045e565b6106027f49e621b8325ee796a8036b03f9121d064047c8281daa076b6e182be835f1137760001b61045e565b61060c828261075d565b5050565b6000610672826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108519092919063ffffffff16565b90506000815111156106d257808060200190518101906106929190610ac3565b6106d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c890610e47565b60405180910390fd5b5b505050565b6107588363a9059cbb60e01b84846040516024016106f6929190610d21565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610610565b505050565b804710156107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079790610de7565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516107c690610cd5565b60006040518083038185875af1925050503d8060008114610803576040519150601f19603f3d011682016040523d82523d6000602084013e610808565b606091505b505090508061084c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084390610dc7565b60405180910390fd5b505050565b60606108608484600085610869565b90509392505050565b6060824710156108ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a590610e07565b60405180910390fd5b6108b78561097d565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90610e27565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161091f9190610cbe565b60006040518083038185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b5091509150610971828286610990565b92505050949350505050565b600080823b905060008111915050919050565b606083156109a0578290506109f0565b6000835111156109b35782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e79190610d65565b60405180910390fd5b9392505050565b600081359050610a06816111c8565b92915050565b600081359050610a1b816111df565b92915050565b600081519050610a30816111df565b92915050565b600081359050610a45816111f6565b92915050565b600080600060608486031215610a6057600080fd5b6000610a6e868287016109f7565b9350506020610a7f868287016109f7565b9250506040610a9086828701610a36565b9150509250925092565b600060208284031215610aac57600080fd5b6000610aba84828501610a0c565b91505092915050565b600060208284031215610ad557600080fd5b6000610ae384828501610a21565b91505092915050565b610af581610f2a565b82525050565b610b0481610f3c565b82525050565b6000610b1582610ea2565b610b1f8185610eb8565b9350610b2f818560208601610f72565b80840191505092915050565b6000610b4682610ead565b610b508185610ec3565b9350610b60818560208601610f72565b610b6981610fd4565b840191505092915050565b6000610b81602483610ec3565b9150610b8c82610fe5565b604082019050919050565b6000610ba4601f83610ec3565b9150610baf82611034565b602082019050919050565b6000610bc7603a83610ec3565b9150610bd28261105d565b604082019050919050565b6000610bea601d83610ec3565b9150610bf5826110ac565b602082019050919050565b6000610c0d602683610ec3565b9150610c18826110d5565b604082019050919050565b6000610c30600083610eb8565b9150610c3b82611124565b600082019050919050565b6000610c53601d83610ec3565b9150610c5e82611127565b602082019050919050565b6000610c76602a83610ec3565b9150610c8182611150565b604082019050919050565b6000610c99601e83610ec3565b9150610ca48261119f565b602082019050919050565b610cb881610f68565b82525050565b6000610cca8284610b0a565b915081905092915050565b6000610ce082610c23565b9150819050919050565b6000606082019050610cff6000830186610aec565b610d0c6020830185610aec565b610d196040830184610caf565b949350505050565b6000604082019050610d366000830185610aec565b610d436020830184610caf565b9392505050565b6000602082019050610d5f6000830184610afb565b92915050565b60006020820190508181036000830152610d7f8184610b3b565b905092915050565b60006020820190508181036000830152610da081610b74565b9050919050565b60006020820190508181036000830152610dc081610b97565b9050919050565b60006020820190508181036000830152610de081610bba565b9050919050565b60006020820190508181036000830152610e0081610bdd565b9050919050565b60006020820190508181036000830152610e2081610c00565b9050919050565b60006020820190508181036000830152610e4081610c46565b9050919050565b60006020820190508181036000830152610e6081610c69565b9050919050565b60006020820190508181036000830152610e8081610c8c565b9050919050565b6000602082019050610e9c6000830184610caf565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610edf82610f68565b9150610eea83610f68565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1f57610f1e610fa5565b5b828201905092915050565b6000610f3582610f48565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610f90578082015181840152602081019050610f75565b83811115610f9f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e743a2073686f756c64526576657274206973207472756500600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e74416e6453656e643a204554485f574954485f4552430000600082015250565b6111d181610f2a565b81146111dc57600080fd5b50565b6111e881610f3c565b81146111f357600080fd5b50565b6111ff81610f68565b811461120a57600080fd5b5056fea264697066735822122079e040665e3b6f447285829f23c3b01330b2dff472a87729354d194acfc23f6364736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
