/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "incrementAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setShouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b5060008060006101000a81548160ff0219169083151502179055506112428061003f6000396000f3fe60806040526004361061004a5760003560e01c806306661abd1461004f5780636813d7871461007a578063d09de08a146100a3578063d2eee78a146100ba578063d3072d82146100d6575b600080fd5b34801561005b57600080fd5b50610064610101565b6040516100719190610e86565b60405180910390f35b34801561008657600080fd5b506100a1600480360381019061009c9190610a99565b610107565b005b3480156100af57600080fd5b506100b8610123565b005b6100d460048036038101906100cf9190610a4a565b61018c565b005b3480156100e257600080fd5b506100eb610249565b6040516100f89190610d49565b60405180910390f35b60015481565b806000806101000a81548160ff02191690831515021790555050565b60008054906101000a900460ff1615610171576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016890610da6565b60405180910390fd5b60018060008282546101839190610ed3565b92505081905550565b6101958361025a565b156101e1578034146101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d390610d86565b60405180910390fd5b610231565b60003414610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610e66565b60405180910390fd5b61023083333084610317565b5b610239610123565b6102448383836103ad565b505050565b60008054906101000a900460ff1681565b60006102887ffbe1ba188a75dbe04f2fde56077d4f5213bd0f2bb6c738479357fa5b0048629160001b61045e565b6102b47fb89df1e783f4673fdae863076f2a16e1ae380badb3084092fd04960b63b4daa960001b61045e565b6102e07fb64d0510fde801c21dc83a2070539d097559c492ae072f723d8d53959f5cc69960001b61045e565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103437fac920e3578ec8df9f38bd1a13592b05189f5daae394a5785d0f373b376ee494160001b61045e565b61036f7f3ccb5be04ea0a479d6329726573c55258937c25e1070c728a1d3ff54ea5ddd9760001b61045e565b61039b7fd68f09dcb609a898fc56be1271287825e83182ab17d45959514fd309e70429e960001b61045e565b6103a784848484610461565b50505050565b6103d97f0c1b49f94746d3fc8b6564b04ef9b56e95089398c4a13f4ef4e4017b2affca6460001b61045e565b6104057fa593329602996df54fb87f1acc7c3f3a94d0743020bb0893e0781a2a76be0d7f60001b61045e565b6104317f86d37e0858c4abc5478d359cb4362e7b0982d6501ee798c5065ddd0fab4e1e8560001b61045e565b61043a8361025a565b61044e576104498383836104ea565b610459565b610458828261057d565b5b505050565b50565b6104e4846323b872dd60e01b85858560405160240161048293929190610ce9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061060f565b50505050565b6105167fcfff6d2fd9e9bc05241a9198151fc0ece49c3ae594d3867f452c7dd53ea88adb60001b61045e565b6105417eee8207d0669b1ec180a758a00014e4a46a350552aa6325ef7900344554420660001b61045e565b61056d7f6178c63d1985a8af5ca2381b4c9f745df2e3388bcff890d133707aedb8dda15f60001b61045e565b6105788383836106d6565b505050565b6105a97f6f9fe0d82ba97ee337236bd7ef93cb07a74c9ebcfe4ec3908db6e1c7afe93c1660001b61045e565b6105d57f5022497f2f7499f29c2f40885e4fe04afb1f85d587554e069c55e40f4eab593660001b61045e565b6106017fcb357cda1f674df9cb3fed6507467737f6e9ea78e1feccb3ba32900026ce4a1860001b61045e565b61060b828261075c565b5050565b6000610671826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166108509092919063ffffffff16565b90506000815111156106d157808060200190518101906106919190610ac2565b6106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790610e46565b60405180910390fd5b5b505050565b6107578363a9059cbb60e01b84846040516024016106f5929190610d20565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061060f565b505050565b8047101561079f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079690610de6565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516107c590610cd4565b60006040518083038185875af1925050503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b505090508061084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290610dc6565b60405180910390fd5b505050565b606061085f8484600085610868565b90509392505050565b6060824710156108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a490610e06565b60405180910390fd5b6108b68561097c565b6108f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ec90610e26565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161091e9190610cbd565b60006040518083038185875af1925050503d806000811461095b576040519150601f19603f3d011682016040523d82523d6000602084013e610960565b606091505b509150915061097082828661098f565b92505050949350505050565b600080823b905060008111915050919050565b6060831561099f578290506109ef565b6000835111156109b25782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e69190610d64565b60405180910390fd5b9392505050565b600081359050610a05816111c7565b92915050565b600081359050610a1a816111de565b92915050565b600081519050610a2f816111de565b92915050565b600081359050610a44816111f5565b92915050565b600080600060608486031215610a5f57600080fd5b6000610a6d868287016109f6565b9350506020610a7e868287016109f6565b9250506040610a8f86828701610a35565b9150509250925092565b600060208284031215610aab57600080fd5b6000610ab984828501610a0b565b91505092915050565b600060208284031215610ad457600080fd5b6000610ae284828501610a20565b91505092915050565b610af481610f29565b82525050565b610b0381610f3b565b82525050565b6000610b1482610ea1565b610b1e8185610eb7565b9350610b2e818560208601610f71565b80840191505092915050565b6000610b4582610eac565b610b4f8185610ec2565b9350610b5f818560208601610f71565b610b6881610fd3565b840191505092915050565b6000610b80602483610ec2565b9150610b8b82610fe4565b604082019050919050565b6000610ba3601f83610ec2565b9150610bae82611033565b602082019050919050565b6000610bc6603a83610ec2565b9150610bd18261105c565b604082019050919050565b6000610be9601d83610ec2565b9150610bf4826110ab565b602082019050919050565b6000610c0c602683610ec2565b9150610c17826110d4565b604082019050919050565b6000610c2f600083610eb7565b9150610c3a82611123565b600082019050919050565b6000610c52601d83610ec2565b9150610c5d82611126565b602082019050919050565b6000610c75602a83610ec2565b9150610c808261114f565b604082019050919050565b6000610c98601e83610ec2565b9150610ca38261119e565b602082019050919050565b610cb781610f67565b82525050565b6000610cc98284610b09565b915081905092915050565b6000610cdf82610c22565b9150819050919050565b6000606082019050610cfe6000830186610aeb565b610d0b6020830185610aeb565b610d186040830184610cae565b949350505050565b6000604082019050610d356000830185610aeb565b610d426020830184610cae565b9392505050565b6000602082019050610d5e6000830184610afa565b92915050565b60006020820190508181036000830152610d7e8184610b3a565b905092915050565b60006020820190508181036000830152610d9f81610b73565b9050919050565b60006020820190508181036000830152610dbf81610b96565b9050919050565b60006020820190508181036000830152610ddf81610bb9565b9050919050565b60006020820190508181036000830152610dff81610bdc565b9050919050565b60006020820190508181036000830152610e1f81610bff565b9050919050565b60006020820190508181036000830152610e3f81610c45565b9050919050565b60006020820190508181036000830152610e5f81610c68565b9050919050565b60006020820190508181036000830152610e7f81610c8b565b9050919050565b6000602082019050610e9b6000830184610cae565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610ede82610f67565b9150610ee983610f67565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f1e57610f1d610fa4565b5b828201905092915050565b6000610f3482610f47565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610f8f578082015181840152602081019050610f74565b83811115610f9e576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f696e6372656d656e74416e6453656e643a20494e56414c49445f4554485f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e743a2073686f756c64526576657274206973207472756500600082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f696e6372656d656e74416e6453656e643a204554485f574954485f4552430000600082015250565b6111d081610f29565b81146111db57600080fd5b50565b6111e781610f3b565b81146111f257600080fd5b50565b6111fe81610f67565b811461120957600080fd5b5056fea2646970667358221220dea7024c3f4b7de19d65fd86c3a2bd48eb9332e46c1e1fc8c89bd2b34dba9a5764736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
