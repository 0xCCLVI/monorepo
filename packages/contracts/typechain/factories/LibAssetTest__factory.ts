/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118c7806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe41461010f578063a7d2fdf614610138578063b29fd85914610175578063cad1b1131461019e5761007b565b806305e9686314610080578063439e2e45146100bd5780637f0128b2146100e65761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610fe5565b6101c7565b6040516100b491906113a5565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df919061104a565b6101d9565b005b3480156100f257600080fd5b5061010d6004803603810190610108919061100e565b6101e9565b005b34801561011b57600080fd5b5061013660048036038101906101319190611099565b6101f7565b005b34801561014457600080fd5b5061015f600480360381019061015a9190610fe5565b610207565b60405161016c91906114e2565b60405180910390f35b34801561018157600080fd5b5061019c60048036038101906101979190611099565b610219565b005b3480156101aa57600080fd5b506101c560048036038101906101c09190611099565b610229565b005b60006101d282610239565b9050919050565b6101e48383836102f6565b505050565b6101f382826103a7565b5050565b610202838383610438565b505050565b6000610212826104cc565b9050919050565b6102248383836105f6565b505050565b610234838383610783565b505050565b60006102677fb64d0510fde801c21dc83a2070539d097559c492ae072f723d8d53959f5cc69960001b610910565b6102937ff39a22af469eeb42b8d6831b70d35a066517d59aaa673eb7a108c8da04bea26760001b610910565b6102bf7f9a499abcb57371525438ab84eaca9b59318fa462e16ebb094288e081ee34922260001b610910565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103227f86d37e0858c4abc5478d359cb4362e7b0982d6501ee798c5065ddd0fab4e1e8560001b610910565b61034e7f86349478ce4795e49174ae35ad3a9b80499032692a5a6385f79c0cfc356779a760001b610910565b61037a7f9955fc13e264956b12f35081dd139c3cb2a97a193b7a34baba7322e1b38a305e60001b610910565b61038383610239565b61039757610392838383610438565b6103a2565b6103a182826103a7565b5b505050565b6103d37fcb357cda1f674df9cb3fed6507467737f6e9ea78e1feccb3ba32900026ce4a1860001b610910565b6103ff7fcfff6d2fd9e9bc05241a9198151fc0ece49c3ae594d3867f452c7dd53ea88adb60001b610910565b61042a7eee8207d0669b1ec180a758a00014e4a46a350552aa6325ef7900344554420660001b610910565b6104348282610913565b5050565b6104647f6178c63d1985a8af5ca2381b4c9f745df2e3388bcff890d133707aedb8dda15f60001b610910565b6104907fac920e3578ec8df9f38bd1a13592b05189f5daae394a5785d0f373b376ee494160001b610910565b6104bc7f3ccb5be04ea0a479d6329726573c55258937c25e1070c728a1d3ff54ea5ddd9760001b610910565b6104c7838383610a07565b505050565b60006104fa7f1c5ab1777a098c744f93c4f9414b2a0ca9a20d12c8ba92905f38b641a017db3d60001b610910565b6105267f6f9fe0d82ba97ee337236bd7ef93cb07a74c9ebcfe4ec3908db6e1c7afe93c1660001b610910565b6105527f5022497f2f7499f29c2f40885e4fe04afb1f85d587554e069c55e40f4eab593660001b610910565b61055b82610239565b6105ed578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105989190611338565b60206040518083038186803b1580156105b057600080fd5b505afa1580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e89190611111565b6105ef565b475b9050919050565b6106227f03336fb919a878568e5a496b95e7b8757ec5cb202073a466816f8e8d24f86c5460001b610910565b61064e7f6956b782f9304dfee0940bbe6d84a1059291916028027362eaa79bb3393baa8e60001b610910565b61067a7f3b390444eeee15f8403fb254937d816cd8765f2dd691ff0344db8748dbdfa0c960001b610910565b6106a67f7805234080dbcf05e867725fb98f004cb68ba0315f5d6e01958760184fad948460001b610910565b6106af83610239565b156106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611462565b60405180910390fd5b61071b7f68fa0bfcd39801e86c4265ca5a0c40b8ef44277c656b22d2bb2005a1c1afc3e560001b610910565b6107477f418f3b0c514b774d2a6026761b9df6f6721ee61eea837091afc469437cc3553f60001b610910565b6107737fd2874bd3dff4f9fdba2c4194bca428a7ca2e842df1685d89fb5f64a651360eed60001b610910565b61077e838383610a8d565b505050565b6107af7f98e15c717e8887b5b532976810656a2574094818fa21ca343d383c1c2f11f12360001b610910565b6107db7fa689bff3e308d431a315f9f7894fee9045a19b7d6b85ae7c6e3efd0714a86dc460001b610910565b6108077f61a2a98a398c98a7d30e5191bc9aac1ff384204235e03c48057d47b9d17a0d6060001b610910565b6108337fdfbbfc24c4363805aee1a04161ccdde5df5d1f3b4dbab19c2839721361d2001d60001b610910565b61083c83610239565b1561087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087390611482565b60405180910390fd5b6108a87fe87c52fc420fa5060d4dc2b2fc3d46803189de3cba3f5520bd95c2d5abf95d7460001b610910565b6108d47f0c1b49f94746d3fc8b6564b04ef9b56e95089398c4a13f4ef4e4017b2affca6460001b610910565b6109007fa593329602996df54fb87f1acc7c3f3a94d0743020bb0893e0781a2a76be0d7f60001b610910565b61090b838383610bae565b505050565b50565b80471015610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d90611422565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161097c90611323565b60006040518083038185875af1925050503d80600081146109b9576040519150601f19603f3d011682016040523d82523d6000602084013e6109be565b606091505b5050905080610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611402565b60405180910390fd5b505050565b610a888363a9059cbb60e01b8484604051602401610a2692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610acb929190611353565b60206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611111565b610b25919061152f565b9050610ba88463095ea7b360e01b8584604051602401610b4692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610beb929190611353565b60206040518083038186803b158015610c0357600080fd5b505afa158015610c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3b9190611111565b905081811015610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c77906113e2565b60405180910390fd5b60008282039050610d088563095ea7b360e01b8684604051602401610ca692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b5050505050565b6000610d71826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dd69092919063ffffffff16565b9050600081511115610dd15780806020019051810190610d9191906110e8565b610dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc7906114c2565b60405180910390fd5b5b505050565b6060610de58484600085610dee565b90509392505050565b606082471015610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90611442565b60405180910390fd5b610e3c85610f02565b610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e72906114a2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ea4919061130c565b60006040518083038185875af1925050503d8060008114610ee1576040519150601f19603f3d011682016040523d82523d6000602084013e610ee6565b606091505b5091509150610ef6828286610f15565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f2557829050610f75565b600083511115610f385782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6c91906113c0565b60405180910390fd5b9392505050565b600081359050610f8b81611835565b92915050565b600081359050610fa08161184c565b92915050565b600081519050610fb581611863565b92915050565b600081359050610fca8161187a565b92915050565b600081519050610fdf8161187a565b92915050565b600060208284031215610ff757600080fd5b600061100584828501610f7c565b91505092915050565b6000806040838503121561102157600080fd5b600061102f85828601610f91565b925050602061104085828601610fbb565b9150509250929050565b60008060006060848603121561105f57600080fd5b600061106d86828701610f7c565b935050602061107e86828701610f91565b925050604061108f86828701610fbb565b9150509250925092565b6000806000606084860312156110ae57600080fd5b60006110bc86828701610f7c565b93505060206110cd86828701610f7c565b92505060406110de86828701610fbb565b9150509250925092565b6000602082840312156110fa57600080fd5b600061110884828501610fa6565b91505092915050565b60006020828403121561112357600080fd5b600061113184828501610fd0565b91505092915050565b61114381611585565b82525050565b611152816115a9565b82525050565b6000611163826114fd565b61116d8185611513565b935061117d8185602086016115df565b80840191505092915050565b600061119482611508565b61119e818561151e565b93506111ae8185602086016115df565b6111b781611641565b840191505092915050565b60006111cf60298361151e565b91506111da82611652565b604082019050919050565b60006111f2603a8361151e565b91506111fd826116a1565b604082019050919050565b6000611215601d8361151e565b9150611220826116f0565b602082019050919050565b600061123860268361151e565b915061124382611719565b604082019050919050565b600061125b60078361151e565b915061126682611768565b602082019050919050565b600061127e60078361151e565b915061128982611791565b602082019050919050565b60006112a1600083611513565b91506112ac826117ba565b600082019050919050565b60006112c4601d8361151e565b91506112cf826117bd565b602082019050919050565b60006112e7602a8361151e565b91506112f2826117e6565b604082019050919050565b611306816115d5565b82525050565b60006113188284611158565b915081905092915050565b600061132e82611294565b9150819050919050565b600060208201905061134d600083018461113a565b92915050565b6000604082019050611368600083018561113a565b611375602083018461113a565b9392505050565b6000604082019050611391600083018561113a565b61139e60208301846112fd565b9392505050565b60006020820190506113ba6000830184611149565b92915050565b600060208201905081810360008301526113da8184611189565b905092915050565b600060208201905081810360008301526113fb816111c2565b9050919050565b6000602082019050818103600083015261141b816111e5565b9050919050565b6000602082019050818103600083015261143b81611208565b9050919050565b6000602082019050818103600083015261145b8161122b565b9050919050565b6000602082019050818103600083015261147b8161124e565b9050919050565b6000602082019050818103600083015261149b81611271565b9050919050565b600060208201905081810360008301526114bb816112b7565b9050919050565b600060208201905081810360008301526114db816112da565b9050919050565b60006020820190506114f760008301846112fd565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061153a826115d5565b9150611545836115d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561157a57611579611612565b5b828201905092915050565b6000611590826115b5565b9050919050565b60006115a2826115b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156115fd5780820151818401526020810190506115e2565b8381111561160c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61183e81611585565b811461184957600080fd5b50565b61185581611597565b811461186057600080fd5b50565b61186c816115a9565b811461187757600080fd5b50565b611883816115d5565b811461188e57600080fd5b5056fea264697066735822122018fabe12019c72cc781e57f3fe96a1b47d3b76a6370f00d53c7a31f7a07432e864736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
