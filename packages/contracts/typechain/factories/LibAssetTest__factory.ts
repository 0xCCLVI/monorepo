/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118c8806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe41461010f578063a7d2fdf614610138578063b29fd85914610175578063cad1b1131461019e5761007b565b806305e9686314610080578063439e2e45146100bd5780637f0128b2146100e65761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610fe6565b6101c7565b6040516100b491906113a6565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df919061104b565b6101d9565b005b3480156100f257600080fd5b5061010d6004803603810190610108919061100f565b6101e9565b005b34801561011b57600080fd5b506101366004803603810190610131919061109a565b6101f7565b005b34801561014457600080fd5b5061015f600480360381019061015a9190610fe6565b610207565b60405161016c91906114e3565b60405180910390f35b34801561018157600080fd5b5061019c6004803603810190610197919061109a565b610219565b005b3480156101aa57600080fd5b506101c560048036038101906101c0919061109a565b610229565b005b60006101d282610239565b9050919050565b6101e48383836102f6565b505050565b6101f382826103a7565b5050565b610202838383610439565b505050565b6000610212826104cd565b9050919050565b6102248383836105f7565b505050565b610234838383610784565b505050565b60006102677f796feedc070ab3cd54b29fce355c726ec8e3e95d5023d19adc53874783154a5360001b610911565b6102937fd6974700048cb7e09e155591cd377b740144e3c86a4fe9a5326166781c595c1d60001b610911565b6102bf7f8c401940312ff5ec003ab93e129e357fe3b6999edcc6ef3cbe95fce27f13c11560001b610911565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103227fab33abee7a898a4ef3b9ab4c2d877b7289db2929b3e9a7f3ebf58e7aa8855e4060001b610911565b61034e7fd725f67317446cbc936ebfe7ef0616da93d647065b1b91ce8f1506c6a642187760001b610911565b61037a7f11ccace3f99ca49cafe9db27ce2c84b982abb048d05ec79968c1e5ce529315e060001b610911565b61038383610239565b61039757610392838383610439565b6103a2565b6103a182826103a7565b5b505050565b6103d37fcd18ca547cd6c3ec9eb456050dedec5a3775b721518c26040c4ce7e22d59d83560001b610911565b6103ff7fc7a46d19b160ed1a0a769fb4f0dc525c7572a609299791cfddb89512e7b94ddf60001b610911565b61042b7f49e621b8325ee796a8036b03f9121d064047c8281daa076b6e182be835f1137760001b610911565b6104358282610914565b5050565b6104657fcb11a5d35babd3e7bb1e06d10866b2ed19bccb58f3a01b7af3805dfbb3936fa960001b610911565b6104917fed61b998cd253cf3a4ac1b5bec5abf0515919b37c1898e778490a6be264c708560001b610911565b6104bd7f327ec84caa7c35ded650e80ad77fcab6a5e30f751f3ce4f5219a218305aedcfe60001b610911565b6104c8838383610a08565b505050565b60006104fb7f0201569b0a7fd301ad993cf5be61eb91e4781bfb4db0613ecd75650b82d5285160001b610911565b6105277fa64adea509b4dbcb5d5ef842ed2eeceacda97628bec88586c6fd06a68b85973160001b610911565b6105537f4390acc01b07f0ddc041a8ec4d148bb2e5a06dbb6501c97b64a3050b6655787260001b610911565b61055c82610239565b6105ee578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105999190611339565b60206040518083038186803b1580156105b157600080fd5b505afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611112565b6105f0565b475b9050919050565b6106237fd27455587b01248aae8e7081e81307c205c3ae7f6bdf53345d1e87bc9df25eb960001b610911565b61064f7f174f5563b5c93d63776e8e2cf4ba9fb9306ff571963a4c06773907a07c0e760960001b610911565b61067b7f40e8ed53ca8e33e63380561ead8c2364e5ce258ea96d08ff48a18b10d7609aa260001b610911565b6106a77f903434b6e6ededcd744505798b905b0e9394d79e2fa9ae7c31edf69107d6846160001b610911565b6106b083610239565b156106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790611463565b60405180910390fd5b61071c7f54c8a11da6fa6e234ee1b4354084da64a0442ee858c5a9c716b065153cca22b460001b610911565b6107487fa22390100d03a20dc1344726ee1ffd95ec9bf2915f66d033fda120f073dbc97a60001b610911565b6107747fbb3dea0842ea4ea4522f98f24e4da424b80a107b0d92c95e2045725c0ed4c33a60001b610911565b61077f838383610a8e565b505050565b6107b07f545baa9be8dedfd2ec92350dfda7eff5269e309662a67d71d8a9dc256c1947e560001b610911565b6107dc7f3b93899ced7fb4eb53f86b4f7da0087f9d1b89a2df1c4eefaada374492bbb98c60001b610911565b6108087f277a3ba20d1dc70e1cfd09371c13100c7420297f6f78ce7825bc77e5bb54454660001b610911565b6108347fd7705acb67e76f15032891d06bab8f1b047df96176bf18e81f85d4eed811441760001b610911565b61083d83610239565b1561087d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087490611483565b60405180910390fd5b6108a97f8d0e59965a6d274cbda2d2f5ad982f1eb5d4bc30a8aa42c84266e5ca6ca50a7960001b610911565b6108d57f08b1af0f2108f73029b518716094ac07699d530e7c2aaf263b06cd7b591033fa60001b610911565b6109017f3275043f6827e820a878fbe55848b8eee7dfac18e2ac63c2162a50fa149415b960001b610911565b61090c838383610baf565b505050565b50565b80471015610957576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094e90611423565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161097d90611324565b60006040518083038185875af1925050503d80600081146109ba576040519150601f19603f3d011682016040523d82523d6000602084013e6109bf565b606091505b5050905080610a03576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fa90611403565b60405180910390fd5b505050565b610a898363a9059cbb60e01b8484604051602401610a2792919061137d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d10565b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610acc929190611354565b60206040518083038186803b158015610ae457600080fd5b505afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190611112565b610b269190611530565b9050610ba98463095ea7b360e01b8584604051602401610b4792919061137d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d10565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610bec929190611354565b60206040518083038186803b158015610c0457600080fd5b505afa158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611112565b905081811015610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c78906113e3565b60405180910390fd5b60008282039050610d098563095ea7b360e01b8684604051602401610ca792919061137d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d10565b5050505050565b6000610d72826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dd79092919063ffffffff16565b9050600081511115610dd25780806020019051810190610d9291906110e9565b610dd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc8906114c3565b60405180910390fd5b5b505050565b6060610de68484600085610def565b90509392505050565b606082471015610e34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2b90611443565b60405180910390fd5b610e3d85610f03565b610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e73906114a3565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ea5919061130d565b60006040518083038185875af1925050503d8060008114610ee2576040519150601f19603f3d011682016040523d82523d6000602084013e610ee7565b606091505b5091509150610ef7828286610f16565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f2657829050610f76565b600083511115610f395782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d91906113c1565b60405180910390fd5b9392505050565b600081359050610f8c81611836565b92915050565b600081359050610fa18161184d565b92915050565b600081519050610fb681611864565b92915050565b600081359050610fcb8161187b565b92915050565b600081519050610fe08161187b565b92915050565b600060208284031215610ff857600080fd5b600061100684828501610f7d565b91505092915050565b6000806040838503121561102257600080fd5b600061103085828601610f92565b925050602061104185828601610fbc565b9150509250929050565b60008060006060848603121561106057600080fd5b600061106e86828701610f7d565b935050602061107f86828701610f92565b925050604061109086828701610fbc565b9150509250925092565b6000806000606084860312156110af57600080fd5b60006110bd86828701610f7d565b93505060206110ce86828701610f7d565b92505060406110df86828701610fbc565b9150509250925092565b6000602082840312156110fb57600080fd5b600061110984828501610fa7565b91505092915050565b60006020828403121561112457600080fd5b600061113284828501610fd1565b91505092915050565b61114481611586565b82525050565b611153816115aa565b82525050565b6000611164826114fe565b61116e8185611514565b935061117e8185602086016115e0565b80840191505092915050565b600061119582611509565b61119f818561151f565b93506111af8185602086016115e0565b6111b881611642565b840191505092915050565b60006111d060298361151f565b91506111db82611653565b604082019050919050565b60006111f3603a8361151f565b91506111fe826116a2565b604082019050919050565b6000611216601d8361151f565b9150611221826116f1565b602082019050919050565b600061123960268361151f565b91506112448261171a565b604082019050919050565b600061125c60078361151f565b915061126782611769565b602082019050919050565b600061127f60078361151f565b915061128a82611792565b602082019050919050565b60006112a2600083611514565b91506112ad826117bb565b600082019050919050565b60006112c5601d8361151f565b91506112d0826117be565b602082019050919050565b60006112e8602a8361151f565b91506112f3826117e7565b604082019050919050565b611307816115d6565b82525050565b60006113198284611159565b915081905092915050565b600061132f82611295565b9150819050919050565b600060208201905061134e600083018461113b565b92915050565b6000604082019050611369600083018561113b565b611376602083018461113b565b9392505050565b6000604082019050611392600083018561113b565b61139f60208301846112fe565b9392505050565b60006020820190506113bb600083018461114a565b92915050565b600060208201905081810360008301526113db818461118a565b905092915050565b600060208201905081810360008301526113fc816111c3565b9050919050565b6000602082019050818103600083015261141c816111e6565b9050919050565b6000602082019050818103600083015261143c81611209565b9050919050565b6000602082019050818103600083015261145c8161122c565b9050919050565b6000602082019050818103600083015261147c8161124f565b9050919050565b6000602082019050818103600083015261149c81611272565b9050919050565b600060208201905081810360008301526114bc816112b8565b9050919050565b600060208201905081810360008301526114dc816112db565b9050919050565b60006020820190506114f860008301846112fe565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061153b826115d6565b9150611546836115d6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561157b5761157a611613565b5b828201905092915050565b6000611591826115b6565b9050919050565b60006115a3826115b6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156115fe5780820151818401526020810190506115e3565b8381111561160d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61183f81611586565b811461184a57600080fd5b50565b61185681611598565b811461186157600080fd5b50565b61186d816115aa565b811461187857600080fd5b50565b611884816115d6565b811461188f57600080fd5b5056fea26469706673582212202a7d6faa2cbcff7c8405086b9192c7b0b6b1c25203f90c4de5429af5dfda867d64736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
