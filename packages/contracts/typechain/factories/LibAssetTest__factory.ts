/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isEther",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611894806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe41461010f578063a7d2fdf614610138578063b29fd85914610175578063cad1b1131461019e5761007b565b806305b1137b14610080578063439e2e45146100a95780634b93c875146100d25761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061106d565b6101c7565b005b3480156100b557600080fd5b506100d060048036038101906100cb91906110a9565b6101d5565b005b3480156100de57600080fd5b506100f960048036038101906100f49190611044565b6101e5565b60405161010691906113e1565b60405180910390f35b34801561011b57600080fd5b50610136600480360381019061013191906110f8565b6101f7565b005b34801561014457600080fd5b5061015f600480360381019061015a9190611044565b610207565b60405161016c91906114fe565b60405180910390f35b34801561018157600080fd5b5061019c600480360381019061019791906110f8565b610219565b005b3480156101aa57600080fd5b506101c560048036038101906101c091906110f8565b610229565b005b6101d18282610239565b5050565b6101e083838361041e565b505050565b60006101f0826104cf565b9050919050565b61020283838361058b565b505050565b60006102128261061f565b9050919050565b610224838383610749565b505050565b6102348383836108d6565b505050565b6102657fd68f09dcb609a898fc56be1271287825e83182ab17d45959514fd309e70429e960001b610a63565b6102917f8c2e4cd8dc2f0c2321d02a24041ca1050ae062f6a5400f85d9fea3a343ed6ae760001b610a63565b6102bd7f073a0f07183d847071bbf6df5f52bbb37d8a3f8aa24cbdb0538c4632d4152a7760001b610a63565b60008273ffffffffffffffffffffffffffffffffffffffff16826040516102e39061135f565b60006040518083038185875af1925050503d8060008114610320576040519150601f19603f3d011682016040523d82523d6000602084013e610325565b606091505b505090506103557f03336fb919a878568e5a496b95e7b8757ec5cb202073a466816f8e8d24f86c5460001b610a63565b6103817f6956b782f9304dfee0940bbe6d84a1059291916028027362eaa79bb3393baa8e60001b610a63565b6103ad7f3b390444eeee15f8403fb254937d816cd8765f2dd691ff0344db8748dbdfa0c960001b610a63565b806103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e49061145e565b60405180910390fd5b6104197f7805234080dbcf05e867725fb98f004cb68ba0315f5d6e01958760184fad948460001b610a63565b505050565b61044a7faeff790d8746aeae5c96cf16007aa1d3c0a3310cfdf0dbf222029f3750f58fbf60001b610a63565b6104767f7cbbc28866cd9cc6e9fdd8ad3ac8348b4042ed2cd22991fad1352d8bfacbed2e60001b610a63565b6104a27fa204dd2175f9bd0af6ff6c41f54dbaad7a8fe0452b52f38c08bad1dad42d23ad60001b610a63565b6104ab836104cf565b6104bf576104ba83838361058b565b6104ca565b6104c98282610239565b5b505050565b60006104fd7fcb357cda1f674df9cb3fed6507467737f6e9ea78e1feccb3ba32900026ce4a1860001b610a63565b6105297fcfff6d2fd9e9bc05241a9198151fc0ece49c3ae594d3867f452c7dd53ea88adb60001b610a63565b6105547eee8207d0669b1ec180a758a00014e4a46a350552aa6325ef7900344554420660001b610a63565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6105b77f68fa0bfcd39801e86c4265ca5a0c40b8ef44277c656b22d2bb2005a1c1afc3e560001b610a63565b6105e37f418f3b0c514b774d2a6026761b9df6f6721ee61eea837091afc469437cc3553f60001b610a63565b61060f7fd2874bd3dff4f9fdba2c4194bca428a7ca2e842df1685d89fb5f64a651360eed60001b610a63565b61061a838383610a66565b505050565b600061064d7f6178c63d1985a8af5ca2381b4c9f745df2e3388bcff890d133707aedb8dda15f60001b610a63565b6106797fac920e3578ec8df9f38bd1a13592b05189f5daae394a5785d0f373b376ee494160001b610a63565b6106a57f3ccb5be04ea0a479d6329726573c55258937c25e1070c728a1d3ff54ea5ddd9760001b610a63565b6106ae826104cf565b610740578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106eb9190611374565b60206040518083038186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b9190611170565b610742565b475b9050919050565b6107757fdfbbfc24c4363805aee1a04161ccdde5df5d1f3b4dbab19c2839721361d2001d60001b610a63565b6107a17fe87c52fc420fa5060d4dc2b2fc3d46803189de3cba3f5520bd95c2d5abf95d7460001b610a63565b6107cd7f0c1b49f94746d3fc8b6564b04ef9b56e95089398c4a13f4ef4e4017b2affca6460001b610a63565b6107f97fa593329602996df54fb87f1acc7c3f3a94d0743020bb0893e0781a2a76be0d7f60001b610a63565b610802836104cf565b15610842576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108399061147e565b60405180910390fd5b61086e7f86d37e0858c4abc5478d359cb4362e7b0982d6501ee798c5065ddd0fab4e1e8560001b610a63565b61089a7f86349478ce4795e49174ae35ad3a9b80499032692a5a6385f79c0cfc356779a760001b610a63565b6108c67f9955fc13e264956b12f35081dd139c3cb2a97a193b7a34baba7322e1b38a305e60001b610a63565b6108d1838383610aec565b505050565b6109027fe74d3bf5d343e3316beb207a38168ee59d74663e3a3fb0929f61dd5e8f24d6e360001b610a63565b61092e7fc6447d64bf0c80f184f71c923e77c9cc86f84c25ed2d208b05a862eda4eeea9560001b610a63565b61095a7f4ee1d7f77d6ba549754071140c254f86be7e035f2c4624c2dcd681660496d9ae60001b610a63565b6109867fc58e81f724a156e4fd3753192f754822d1472162fcc07737b16ded3943ae886360001b610a63565b61098f836104cf565b156109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c69061149e565b60405180910390fd5b6109fb7fb9f9d7b8fa71d13bc93820bc857e679d0e4ca147c1b7f64b2066dd8c0fc87daf60001b610a63565b610a277f4a23f53b885284ea56e13d740c006bd7a6023b10c12e5068bcc36908ddbb7fa760001b610a63565b610a537fd7351ce214b1feb59e7ef5eb05925a06330c27e57f3e1350dbc336bcc5bba12960001b610a63565b610a5e838383610c0d565b505050565b50565b610ae78363a9059cbb60e01b8484604051602401610a859291906113b8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d6e565b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610b2a92919061138f565b60206040518083038186803b158015610b4257600080fd5b505afa158015610b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7a9190611170565b610b84919061154b565b9050610c078463095ea7b360e01b8584604051602401610ba59291906113b8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d6e565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610c4a92919061138f565b60206040518083038186803b158015610c6257600080fd5b505afa158015610c76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9a9190611170565b905081811015610cdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd69061141e565b60405180910390fd5b60008282039050610d678563095ea7b360e01b8684604051602401610d059291906113b8565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d6e565b5050505050565b6000610dd0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e359092919063ffffffff16565b9050600081511115610e305780806020019051810190610df09190611147565b610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e26906114de565b60405180910390fd5b5b505050565b6060610e448484600085610e4d565b90509392505050565b606082471015610e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e899061143e565b60405180910390fd5b610e9b85610f61565b610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed1906114be565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f039190611348565b60006040518083038185875af1925050503d8060008114610f40576040519150601f19603f3d011682016040523d82523d6000602084013e610f45565b606091505b5091509150610f55828286610f74565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f8457829050610fd4565b600083511115610f975782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcb91906113fc565b60405180910390fd5b9392505050565b600081359050610fea81611802565b92915050565b600081359050610fff81611819565b92915050565b60008151905061101481611830565b92915050565b60008135905061102981611847565b92915050565b60008151905061103e81611847565b92915050565b60006020828403121561105657600080fd5b600061106484828501610fdb565b91505092915050565b6000806040838503121561108057600080fd5b600061108e85828601610ff0565b925050602061109f8582860161101a565b9150509250929050565b6000806000606084860312156110be57600080fd5b60006110cc86828701610fdb565b93505060206110dd86828701610ff0565b92505060406110ee8682870161101a565b9150509250925092565b60008060006060848603121561110d57600080fd5b600061111b86828701610fdb565b935050602061112c86828701610fdb565b925050604061113d8682870161101a565b9150509250925092565b60006020828403121561115957600080fd5b600061116784828501611005565b91505092915050565b60006020828403121561118257600080fd5b60006111908482850161102f565b91505092915050565b6111a2816115a1565b82525050565b6111b1816115c5565b82525050565b60006111c282611519565b6111cc818561152f565b93506111dc8185602086016115fb565b80840191505092915050565b60006111f382611524565b6111fd818561153a565b935061120d8185602086016115fb565b6112168161165d565b840191505092915050565b600061122e60298361153a565b91506112398261166e565b604082019050919050565b600061125160268361153a565b915061125c826116bd565b604082019050919050565b600061127460078361153a565b915061127f8261170c565b602082019050919050565b600061129760078361153a565b91506112a282611735565b602082019050919050565b60006112ba60078361153a565b91506112c58261175e565b602082019050919050565b60006112dd60008361152f565b91506112e882611787565b600082019050919050565b6000611300601d8361153a565b915061130b8261178a565b602082019050919050565b6000611323602a8361153a565b915061132e826117b3565b604082019050919050565b611342816115f1565b82525050565b600061135482846111b7565b915081905092915050565b600061136a826112d0565b9150819050919050565b60006020820190506113896000830184611199565b92915050565b60006040820190506113a46000830185611199565b6113b16020830184611199565b9392505050565b60006040820190506113cd6000830185611199565b6113da6020830184611339565b9392505050565b60006020820190506113f660008301846111a8565b92915050565b6000602082019050818103600083015261141681846111e8565b905092915050565b6000602082019050818103600083015261143781611221565b9050919050565b6000602082019050818103600083015261145781611244565b9050919050565b6000602082019050818103600083015261147781611267565b9050919050565b600060208201905081810360008301526114978161128a565b9050919050565b600060208201905081810360008301526114b7816112ad565b9050919050565b600060208201905081810360008301526114d7816112f3565b9050919050565b600060208201905081810360008301526114f781611316565b9050919050565b60006020820190506115136000830184611339565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000611556826115f1565b9150611561836115f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115965761159561162e565b5b828201905092915050565b60006115ac826115d1565b9050919050565b60006115be826115d1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156116195780820151818401526020810190506115fe565b83811115611628576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2354453a30323800000000000000000000000000000000000000000000000000600082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61180b816115a1565b811461181657600080fd5b50565b611822816115b3565b811461182d57600080fd5b50565b611839816115c5565b811461184457600080fd5b50565b611850816115f1565b811461185b57600080fd5b5056fea2646970667358221220c41dcd04c66df71d0e342fb28f263db388cc58bd77f58cda0f9e4347465e500764736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
