/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isEther",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e4d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806305b1137b1461005c578063439e2e45146100785780634b93c875146100945780639db5dbe4146100c4578063a7d2fdf6146100e0575b600080fd5b610076600480360381019061007191906108e5565b610110565b005b610092600480360381019061008d9190610921565b61011e565b005b6100ae60048036038101906100a991906108bc565b61012e565b6040516100bb9190610b6c565b60405180910390f35b6100de60048036038101906100d99190610970565b610140565b005b6100fa60048036038101906100f591906108bc565b610150565b6040516101079190610c09565b60405180910390f35b61011a8282610162565b5050565b610129838383610231565b505050565b6000610139826102e2565b9050919050565b61014b83838361039f565b505050565b600061015b82610433565b9050919050565b61018e7fe87c52fc420fa5060d4dc2b2fc3d46803189de3cba3f5520bd95c2d5abf95d7460001b61055d565b6101ba7f0c1b49f94746d3fc8b6564b04ef9b56e95089398c4a13f4ef4e4017b2affca6460001b61055d565b6101e67fa593329602996df54fb87f1acc7c3f3a94d0743020bb0893e0781a2a76be0d7f60001b61055d565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561022c573d6000803e3d6000fd5b505050565b61025d7fa204dd2175f9bd0af6ff6c41f54dbaad7a8fe0452b52f38c08bad1dad42d23ad60001b61055d565b6102897ff798f16718148904f23b4a2c7f042f8be367883d38374c87e0d8fd44a20d825c60001b61055d565b6102b57f1c4667e907fa81165cca71b1910cd3bb16fbb9acc22178d6c37b57ebcc305aa160001b61055d565b6102be836102e2565b6102d2576102cd83838361039f565b6102dd565b6102dc8282610162565b5b505050565b60006103107f418f3b0c514b774d2a6026761b9df6f6721ee61eea837091afc469437cc3553f60001b61055d565b61033c7fd2874bd3dff4f9fdba2c4194bca428a7ca2e842df1685d89fb5f64a651360eed60001b61055d565b6103687f98e15c717e8887b5b532976810656a2574094818fa21ca343d383c1c2f11f12360001b61055d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103cb7f86d37e0858c4abc5478d359cb4362e7b0982d6501ee798c5065ddd0fab4e1e8560001b61055d565b6103f77f86349478ce4795e49174ae35ad3a9b80499032692a5a6385f79c0cfc356779a760001b61055d565b6104237f9955fc13e264956b12f35081dd139c3cb2a97a193b7a34baba7322e1b38a305e60001b61055d565b61042e838383610560565b505050565b60006104617fa689bff3e308d431a315f9f7894fee9045a19b7d6b85ae7c6e3efd0714a86dc460001b61055d565b61048d7f61a2a98a398c98a7d30e5191bc9aac1ff384204235e03c48057d47b9d17a0d6060001b61055d565b6104b97fdfbbfc24c4363805aee1a04161ccdde5df5d1f3b4dbab19c2839721361d2001d60001b61055d565b6104c2826102e2565b610554578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104ff9190610b28565b60206040518083038186803b15801561051757600080fd5b505afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f91906109e8565b610556565b475b9050919050565b50565b6105e18363a9059cbb60e01b848460405160240161057f929190610b43565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105e6565b505050565b6000610648826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106ad9092919063ffffffff16565b90506000815111156106a8578080602001905181019061066891906109bf565b6106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e90610be9565b60405180910390fd5b5b505050565b60606106bc84846000856106c5565b90509392505050565b60608247101561070a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070190610ba9565b60405180910390fd5b610713856107d9565b610752576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074990610bc9565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161077b9190610b11565b60006040518083038185875af1925050503d80600081146107b8576040519150601f19603f3d011682016040523d82523d6000602084013e6107bd565b606091505b50915091506107cd8282866107ec565b92505050949350505050565b600080823b905060008111915050919050565b606083156107fc5782905061084c565b60008351111561080f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108439190610b87565b60405180910390fd5b9392505050565b60008135905061086281610dbb565b92915050565b60008135905061087781610dd2565b92915050565b60008151905061088c81610de9565b92915050565b6000813590506108a181610e00565b92915050565b6000815190506108b681610e00565b92915050565b6000602082840312156108ce57600080fd5b60006108dc84828501610853565b91505092915050565b600080604083850312156108f857600080fd5b600061090685828601610868565b925050602061091785828601610892565b9150509250929050565b60008060006060848603121561093657600080fd5b600061094486828701610853565b935050602061095586828701610868565b925050604061096686828701610892565b9150509250925092565b60008060006060848603121561098557600080fd5b600061099386828701610853565b93505060206109a486828701610853565b92505060406109b586828701610892565b9150509250925092565b6000602082840312156109d157600080fd5b60006109df8482850161087d565b91505092915050565b6000602082840312156109fa57600080fd5b6000610a08848285016108a7565b91505092915050565b610a1a81610c56565b82525050565b610a2981610c7a565b82525050565b6000610a3a82610c24565b610a448185610c3a565b9350610a54818560208601610cb0565b80840191505092915050565b6000610a6b82610c2f565b610a758185610c45565b9350610a85818560208601610cb0565b610a8e81610ce3565b840191505092915050565b6000610aa6602683610c45565b9150610ab182610cf4565b604082019050919050565b6000610ac9601d83610c45565b9150610ad482610d43565b602082019050919050565b6000610aec602a83610c45565b9150610af782610d6c565b604082019050919050565b610b0b81610ca6565b82525050565b6000610b1d8284610a2f565b915081905092915050565b6000602082019050610b3d6000830184610a11565b92915050565b6000604082019050610b586000830185610a11565b610b656020830184610b02565b9392505050565b6000602082019050610b816000830184610a20565b92915050565b60006020820190508181036000830152610ba18184610a60565b905092915050565b60006020820190508181036000830152610bc281610a99565b9050919050565b60006020820190508181036000830152610be281610abc565b9050919050565b60006020820190508181036000830152610c0281610adf565b9050919050565b6000602082019050610c1e6000830184610b02565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000610c6182610c86565b9050919050565b6000610c7382610c86565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610cce578082015181840152602081019050610cb3565b83811115610cdd576000848401525b50505050565b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b610dc481610c56565b8114610dcf57600080fd5b50565b610ddb81610c68565b8114610de657600080fd5b50565b610df281610c7a565b8114610dfd57600080fd5b50565b610e0981610ca6565b8114610e1457600080fd5b5056fea2646970667358221220ed0de4dae5fa8ec7cd0c0ceece9b4cb61912efcb3bfeefd1fd74cbbb7ba6911564736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
