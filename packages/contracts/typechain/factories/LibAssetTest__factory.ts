/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LibAssetTest, LibAssetTestInterface } from "../LibAssetTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "getOwnBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseERC20Allowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
    ],
    name: "isNativeAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNativeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118c7806100206000396000f3fe6080604052600436106100745760003560e01c80639db5dbe41161004e5780639db5dbe41461010f578063a7d2fdf614610138578063b29fd85914610175578063cad1b1131461019e5761007b565b806305e9686314610080578063439e2e45146100bd5780637f0128b2146100e65761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610fe5565b6101c7565b6040516100b491906113a5565b60405180910390f35b3480156100c957600080fd5b506100e460048036038101906100df919061104a565b6101d9565b005b3480156100f257600080fd5b5061010d6004803603810190610108919061100e565b6101e9565b005b34801561011b57600080fd5b5061013660048036038101906101319190611099565b6101f7565b005b34801561014457600080fd5b5061015f600480360381019061015a9190610fe5565b610207565b60405161016c91906114e2565b60405180910390f35b34801561018157600080fd5b5061019c60048036038101906101979190611099565b610219565b005b3480156101aa57600080fd5b506101c560048036038101906101c09190611099565b610229565b005b60006101d282610239565b9050919050565b6101e48383836102f6565b505050565b6101f382826103a7565b5050565b610202838383610439565b505050565b6000610212826104cd565b9050919050565b6102248383836105f7565b505050565b610234838383610784565b505050565b60006102677fb3ab0fd29525aa6d47be05ecca461b324b90fab99486115b61b2170a0812eb8260001b610910565b6102937f290ea3849dc8ae4a2034ce65d5cac6d2fa20f140019006dab1e0e1deeeb5fa9460001b610910565b6102bf7fe167fb1ea6b5c822a858dd848f0f0f12de27250930d40fc9d1987222b30cec9960001b610910565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6103227f6c297937993d9fc2ae1274b814c65be2673036707bcb5a4430a3fd94d81672c660001b610910565b61034e7f7f83fecc65bfb90e884f9d4d4586d28279751b0abebb5ac5aa2c04ae73e3200b60001b610910565b61037a7f6d22fc7c0920caf368c2fb277ea8b7f6c3bebb2980e1420dec5e149b2ed426c660001b610910565b61038383610239565b61039757610392838383610439565b6103a2565b6103a182826103a7565b5b505050565b6103d37f03726f877c0bfac8e40c67233e702981ee5734eb72501c26673a15d0ff3ac68a60001b610910565b6103ff7fc9d4c07f8bd2e7128ba53aba41b36f6b876898bb37a4ed57e7d1ff0893d62e2c60001b610910565b61042b7f344429a208d7d186b5ac8df38e7af561c982adf2bc7d1639b8e6ce02698d14f860001b610910565b6104358282610913565b5050565b6104657f4c98f7dfeab084bdb3e7ec25ae64db41b39196635b39e87bc14152e0bc9d4ec060001b610910565b6104917fdc6c99306d0b71f1ece8752419438092ca17ea1fd26a6825743f22d11fad8bac60001b610910565b6104bd7f2cc3a860bf2e4e4f0de1bbf39a4e3c2e294f365fe1a55dc7d54b5a4e567448f260001b610910565b6104c8838383610a07565b505050565b60006104fb7fdc38025ebd2f6e10725c59781e6751a2d93f94c1ce6f178e4ef55eb707b595fa60001b610910565b6105277fe76bd06862d3fa5eae79b49df32d78583280b0270d233907f1d99521d75ca9a460001b610910565b6105537fc59a5baba54379177f6b67ec6b403fd6e8feb78f8e45bde1b073b1fdac13060260001b610910565b61055c82610239565b6105ee578173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105999190611338565b60206040518083038186803b1580156105b157600080fd5b505afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190611111565b6105f0565b475b9050919050565b6106237f88531a7b4cef17eac9f40b3745aeef83247c3451bd6908558020024b85e21a9f60001b610910565b61064f7fe0c60eb8bd77fa19b9761a5aafbd3cf7c4e7b7ca65fc402d47e621541db8539b60001b610910565b61067b7f4def5aa3065f7b64068e41306d0f3f2585105bfb1a48f5f7a105d2a3cd2ab50a60001b610910565b6106a77fba85a8411c04e0f33d16acdfc1a6563182d58d7026c797f8e7619538e1536ea460001b610910565b6106b083610239565b156106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e790611462565b60405180910390fd5b61071c7ffa5820c4a62dc662b2f0bd3cd6eeb66381055a9aa2a0e4864b1e6fc18261169f60001b610910565b6107487f0361bc3cfe3e9bcadc64d187a1d3fbd06766d28be4f6b3c8c0465a29db6e21c160001b610910565b6107747f9c261609e22f2b2694170a2f19e32891e275a3243604d56d79bfec9123c0511d60001b610910565b61077f838383610a8d565b505050565b6107b07faa80ec501b71eac9f1f97ad19807a884efc30ea9afda5afbb4ca0e638a5c8a4d60001b610910565b6107dc7f9ba8757127756d47970c2b41d5d9743876d2339d1ccf2f0515025c9e389ba89260001b610910565b6108077ee18b09bcef2348d360595697aaad03a2f84e39db3251694ee8084b1825cf5960001b610910565b6108337f0389a9d1caa07142f258162511f832eee07d99d37a01fb6b3ffe795d4bb546c960001b610910565b61083c83610239565b1561087c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087390611482565b60405180910390fd5b6108a87f9288fbb920b277df1a9d8ccae0430e2d40c7ca930768a207e7e35d81f179dc6560001b610910565b6108d47fff6eba2f0b5d5d9069e4f762ba5ddd9fdb32def867c2bdaba049861fccb7514860001b610910565b6109007ff490cd139eaa740bc69995775768e6fed9ab0265d8f0e8533a2fa694073aabc460001b610910565b61090b838383610bae565b505050565b50565b80471015610956576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094d90611422565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405161097c90611323565b60006040518083038185875af1925050503d80600081146109b9576040519150601f19603f3d011682016040523d82523d6000602084013e6109be565b606091505b5050905080610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611402565b60405180910390fd5b505050565b610a888363a9059cbb60e01b8484604051602401610a2692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b505050565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610acb929190611353565b60206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b9190611111565b610b25919061152f565b9050610ba88463095ea7b360e01b8584604051602401610b4692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b50505050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610beb929190611353565b60206040518083038186803b158015610c0357600080fd5b505afa158015610c17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3b9190611111565b905081811015610c80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c77906113e2565b60405180910390fd5b60008282039050610d088563095ea7b360e01b8684604051602401610ca692919061137c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d0f565b5050505050565b6000610d71826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610dd69092919063ffffffff16565b9050600081511115610dd15780806020019051810190610d9191906110e8565b610dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc7906114c2565b60405180910390fd5b5b505050565b6060610de58484600085610dee565b90509392505050565b606082471015610e33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2a90611442565b60405180910390fd5b610e3c85610f02565b610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e72906114a2565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ea4919061130c565b60006040518083038185875af1925050503d8060008114610ee1576040519150601f19603f3d011682016040523d82523d6000602084013e610ee6565b606091505b5091509150610ef6828286610f15565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f2557829050610f75565b600083511115610f385782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6c91906113c0565b60405180910390fd5b9392505050565b600081359050610f8b81611835565b92915050565b600081359050610fa08161184c565b92915050565b600081519050610fb581611863565b92915050565b600081359050610fca8161187a565b92915050565b600081519050610fdf8161187a565b92915050565b600060208284031215610ff757600080fd5b600061100584828501610f7c565b91505092915050565b6000806040838503121561102157600080fd5b600061102f85828601610f91565b925050602061104085828601610fbb565b9150509250929050565b60008060006060848603121561105f57600080fd5b600061106d86828701610f7c565b935050602061107e86828701610f91565b925050604061108f86828701610fbb565b9150509250925092565b6000806000606084860312156110ae57600080fd5b60006110bc86828701610f7c565b93505060206110cd86828701610f7c565b92505060406110de86828701610fbb565b9150509250925092565b6000602082840312156110fa57600080fd5b600061110884828501610fa6565b91505092915050565b60006020828403121561112357600080fd5b600061113184828501610fd0565b91505092915050565b61114381611585565b82525050565b611152816115a9565b82525050565b6000611163826114fd565b61116d8185611513565b935061117d8185602086016115df565b80840191505092915050565b600061119482611508565b61119e818561151e565b93506111ae8185602086016115df565b6111b781611641565b840191505092915050565b60006111cf60298361151e565b91506111da82611652565b604082019050919050565b60006111f2603a8361151e565b91506111fd826116a1565b604082019050919050565b6000611215601d8361151e565b9150611220826116f0565b602082019050919050565b600061123860268361151e565b915061124382611719565b604082019050919050565b600061125b60078361151e565b915061126682611768565b602082019050919050565b600061127e60078361151e565b915061128982611791565b602082019050919050565b60006112a1600083611513565b91506112ac826117ba565b600082019050919050565b60006112c4601d8361151e565b91506112cf826117bd565b602082019050919050565b60006112e7602a8361151e565b91506112f2826117e6565b604082019050919050565b611306816115d5565b82525050565b60006113188284611158565b915081905092915050565b600061132e82611294565b9150819050919050565b600060208201905061134d600083018461113a565b92915050565b6000604082019050611368600083018561113a565b611375602083018461113a565b9392505050565b6000604082019050611391600083018561113a565b61139e60208301846112fd565b9392505050565b60006020820190506113ba6000830184611149565b92915050565b600060208201905081810360008301526113da8184611189565b905092915050565b600060208201905081810360008301526113fb816111c2565b9050919050565b6000602082019050818103600083015261141b816111e5565b9050919050565b6000602082019050818103600083015261143b81611208565b9050919050565b6000602082019050818103600083015261145b8161122b565b9050919050565b6000602082019050818103600083015261147b8161124e565b9050919050565b6000602082019050818103600083015261149b81611271565b9050919050565b600060208201905081810360008301526114bb816112b7565b9050919050565b600060208201905081810360008301526114db816112da565b9050919050565b60006020820190506114f760008301846112fd565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061153a826115d5565b9150611545836115d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561157a57611579611612565b5b828201905092915050565b6000611590826115b5565b9050919050565b60006115a2826115b5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156115fd5780820151818401526020810190506115e2565b8381111561160c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61183e81611585565b811461184957600080fd5b50565b61185581611597565b811461186057600080fd5b50565b61186c816115a9565b811461187757600080fd5b50565b611883816115d5565b811461188e57600080fd5b5056fea26469706673582212206e81de0080708ae8426a6df1600aa24468fd5cced8a5a6168f7ab70d6097eed564736f6c63430008040033";

export class LibAssetTest__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibAssetTest> {
    return super.deploy(overrides || {}) as Promise<LibAssetTest>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibAssetTest {
    return super.attach(address) as LibAssetTest;
  }
  connect(signer: Signer): LibAssetTest__factory {
    return super.connect(signer) as LibAssetTest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibAssetTestInterface {
    return new utils.Interface(_abi) as LibAssetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibAssetTest {
    return new Contract(address, _abi, signerOrProvider) as LibAssetTest;
  }
}
