/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FulfillInterpreter, FulfillInterpreterInterface } from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c28380380610c2883398101604081905261002f916100b4565b600160005561003d33610062565b600280546001600160a01b0319166001600160a01b03929092169190911790556100e2565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100c5578081fd5b81516001600160a01b03811681146100db578182fd5b9392505050565b610b37806100f16000396000f3fe60806040526004361061004a5760003560e01c80635b5120f71461004f578063715018a6146100645780638da5cb5b1461007957806396f32fb8146100af578063f2fde38b146100cd575b600080fd5b61006261005d366004610957565b6100ed565b005b34801561007057600080fd5b50610062610249565b34801561008557600080fd5b506001546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b3480156100bb57600080fd5b506002546001600160a01b0316610093565b3480156100d957600080fd5b506100626100e836600461093b565b6102af565b600260005414156101455760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000819055546001600160a01b0316331461018f5760405162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b604482015260640161013c565b6001600160a01b03851615806101aa576101aa86888661037a565b6000876001600160a01b0316826101c25760006101c4565b855b85856040516101d4929190610a3d565b60006040518083038185875af1925050503d8060008114610211576040519150601f19603f3d011682016040523d82523d6000602084013e610216565b606091505b505090508061023a5761022a87878761038a565b8161023a5761023a8789876103ae565b50506001600055505050505050565b6001546001600160a01b031633146102a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013c565b6102ad60006103b9565b565b6001546001600160a01b031633146103095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013c565b6001600160a01b03811661036e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013c565b610377816103b9565b50565b61038583838361040b565b505050565b6001600160a01b038316156103a457610385838383610505565b6103858282610510565b61038583838361059d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561045757600080fd5b505afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f9190610a25565b6104999190610a9c565b6040516001600160a01b0385166024820152604481018290529091506104ff90859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106bf565b50505050565b610385838383610791565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461055d576040519150601f19603f3d011682016040523d82523d6000602084013e610562565b606091505b50509050806103855760405162461bcd60e51b8152602060048201526007602482015266046a88a746064760cb1b604482015260640161013c565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156105e857600080fd5b505afa1580156105fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106209190610a25565b9050818110156106845760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b606482015260840161013c565b6040516001600160a01b038416602482015282820360448201819052906106b890869063095ea7b360e01b906064016104c8565b5050505050565b6000610714826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107c19092919063ffffffff16565b80519091501561038557808060200190518101906107329190610a05565b6103855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161013c565b6040516001600160a01b03831660248201526044810182905261038590849063a9059cbb60e01b906064016104c8565b60606107d084846000856107da565b90505b9392505050565b60608247101561083b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161013c565b843b6108895760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161013c565b600080866001600160a01b031685876040516108a59190610a4d565b60006040518083038185875af1925050503d80600081146108e2576040519150601f19603f3d011682016040523d82523d6000602084013e6108e7565b606091505b50915091506108f7828286610902565b979650505050505050565b606083156109115750816107d3565b8251156109215782518084602001fd5b8160405162461bcd60e51b815260040161013c9190610a69565b60006020828403121561094c578081fd5b81356107d381610aec565b60008060008060008060a0878903121561096f578182fd5b863561097a81610aec565b9550602087013561098a81610aec565b9450604087013561099a81610aec565b935060608701359250608087013567ffffffffffffffff808211156109bd578384fd5b818901915089601f8301126109d0578384fd5b8135818111156109de578485fd5b8a60208285010111156109ef578485fd5b6020830194508093505050509295509295509295565b600060208284031215610a16578081fd5b815180151581146107d3578182fd5b600060208284031215610a36578081fd5b5051919050565b8183823760009101908152919050565b60008251610a5f818460208701610ac0565b9190910192915050565b6020815260008251806020840152610a88816040850160208701610ac0565b601f01601f19169190910160400192915050565b60008219821115610abb57634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610adb578181015183820152602001610ac3565b838111156104ff5750506000910152565b6001600160a01b038116811461037757600080fdfea26469706673582212209bb024743202b5b1501c870247df45fbbfbf484889e94b06d718c8702bb0397464736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<FulfillInterpreter> {
    return super.deploy(transactionManager, overrides || {}) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
