/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isContract",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x96d668da",
        type: "bytes32",
      },
    ],
    name: "c_0x96d668da",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200240b3803806200240b833981810160405281019062000037919062000133565b6001600081905550620000737ff8e8cf6a560465397ec2a16530da4a131378e2771aa445d12a31cb9eb47b708b60001b6200011960201b60201c565b620000a77fa891692810329d60ab352ab4cfdd802af9118a71f512b8f9f3080a88d938bca860001b6200011960201b60201c565b620000db7fe3b82530b64e1adbbc592033e78bb040c4a8a4e36f825c08d536dd852016a4d460001b6200011960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050620001ad565b50565b6000815190506200012d8162000193565b92915050565b6000602082840312156200014657600080fd5b600062000156848285016200011c565b91505092915050565b60006200016c8262000173565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200019e816200015f565b8114620001aa57600080fd5b50565b60805160601c612238620001d36000396000818161014a015261022501526122386000f3fe6080604052600436106100345760003560e01c80635c19b1711461003957806396f32fb814610062578063cf9a36041461008d575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906117bc565b6100bf565b005b34801561006e57600080fd5b506100776100c2565b6040516100849190611b89565b60405180910390f35b6100a760048036038101906100a291906117e5565b61016e565b6040516100b693929190611c84565b60405180910390f35b50565b60006100f07f6e24637692fe4f5ce2272a86abe06fc6b2dd69aaf1c3be1b8f0733c3e5d0f07160001b6100bf565b61011c7f4269639f8ff57e431279898577818d340ca4599e964cdcb39a520fd6fea8818d60001b6100bf565b6101487f5b27a682fff605deaf3b8168624d16c44e86ae695490f48f467b6d842fe97a4e60001b6100bf565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b600080606061019f7f12fe67f8a22e3ac8c9022dc78807551ffb43e2c3a3438b7b0662290023542ce560001b6100bf565b6101cb7fad0c48f5aec29bbde2981ec7a02bc2a7c27fcd820c62884c835ed43b8ece6f9060001b6100bf565b6101f77f1bc90ae7631c70a64950e3be9ec6b7a14187503c0f63b6c7265f1df802712ccc60001b6100bf565b6102237f0c6d5c0773033e5e3e7782b623e2f6fb3708798ddb606e0d17f5657b08cdbb9460001b6100bf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a890611da4565b60405180910390fd5b6102dd7fbae27066f3a93b309edc4df5f8563cb0e55a6884d21aa950df74cb259b45673e60001b6100bf565b6103097f715d395902316d045eb5a98de0c876ed0f3060cdd7c53e8297d9db0c60f9c91e60001b6100bf565b6103357f3b9ca21411f4d535548f3a2b9168ab045280bdd0ad57b15cdb8a5b398244293b60001b6100bf565b6103617fddcb183a903eb8c6f16ddf3afa8779cd93c69948c51daa449a1f85169fb0cb3660001b6100bf565b61038d7f072d2b556db8e805a89d9be9c2c3036530db6bf33e2b759aaf37ca73586e574160001b6100bf565b600061039889610ab2565b90506103c67febf9eec699949ef9cddf8199a262c3cd7f7a7a8f6df394b5207eec47b3439cc860001b6100bf565b6103f27f5d5818de48849d96e8e201409f1ca152dee438e057d4829f80672b6fe0c149b160001b6100bf565b8061048b576104237f7b1ed84babafc695b3428d8f17dbad2cfaebe75d0ab069ba719e90fdd1bd277360001b6100bf565b61044f7fd325f2c67e2e03bb2d852d63e7914f7012f6781fb56ee53c6c039fdb36afb8c460001b6100bf565b61047b7f8b8d20cd11a4a49eeca561f053c5ef78ef531f29cb3522330981b24eb0702d1160001b6100bf565b610486898b89610b6f565b6104b8565b6104b77ff134840b16d811230e2c5fef7e78daa327d6a46b126734d95845425730be17fb60001b6100bf565b5b6104e47f31247c9633685c565a9502b5932bf34f12f4ee9f8df3f8f0b4b5020e5d1bc3e260001b6100bf565b6105107ff4cfc40db74b5902792ab597bab3655249040b89ae606de2cc62610c236847c460001b6100bf565b600061053e7f7eb69315e57918d9410424586ce564091958c33c97b56e6c456ef4ca440f7c1060001b6100bf565b61056a7fa1e07482541b34745b73468f45e1ea4a5cdf416874fa51ff1c5019ce2faecd8e60001b6100bf565b60606105977eee9f36f130d79d8c1a2b536efd0ac84f813bf6ac3259aac90150c62e5ff39360001b6100bf565b6105c37fdd7ae1d5c659538a3a7eeb47aa024e68155d4225f2168b2beb594d40a9ec516860001b6100bf565b60006105ce8d610cfc565b90506105fc7f2b895ee0db62c76ed0f4feb624e038eb73d898b1de6657ea9f2cf3aacd344ea360001b6100bf565b6106287f5ce4a4132d64fc5af4649b54fa8aa8ea745f5e03488a5e40b07d8cd95508841a60001b6100bf565b80156107375761065a7f28baad57b07e462f28e5d8469f594d1e8021cbcb3d21c79b13b10cc9b1af76bc60001b6100bf565b6106867fdf86ba282d2c628f74ac3c9ee45a69034a7b4f6d6f2bdbc9c3a3dc2671e7183c60001b6100bf565b6106b27f394e2a131b558f71ca1d5908f607a8b67bbd83a589c68018d5b5ef4aed6aa72860001b6100bf565b8c73ffffffffffffffffffffffffffffffffffffffff16846106d55760006106d7565b8a5b8a8a6040516106e7929190611b44565b60006040518083038185875af1925050503d8060008114610724576040519150601f19603f3d011682016040523d82523d6000602084013e610729565b606091505b508093508194505050610764565b6107637f3517575fddedd2ba44e2f3b7b3f6937992dfcd4b905939e8cfeebacfcaa8199a60001b6100bf565b5b6107907f822c46f161a8ab5f17500ecb057265308c2f61d2de64f56c937b9308ef354f0960001b6100bf565b6107bc7fdd9b443da27b9b140d34af130b09fe3626b6b47d1c03282d1c5face0e46373ca60001b6100bf565b82610973576107ed7fd377b5cceec64927bb52c84cb5a900be3795afc4252bbb981f9aedb88a74317560001b6100bf565b6108197fc64b362b512a1989da6cf0f6315a9c50d85a70d005e72767a2d125b3f46b2b6b60001b6100bf565b6108457f18d9ea10d2ac4f9ef2a47c4aa6db41f9c7e6d09b7a32e1cdbf4b5b8f833ce46160001b6100bf565b6108508c8c8c610d0f565b61087c7fe7c2376ef0cd553172fc146a9e40ed913e844cdb8d819a33efa09371e1dd705760001b6100bf565b6108a87ff00ec9bb645d7a3abe3db45952380561aa015ffeb00fbc935dbb0ff1d76a861b60001b6100bf565b83610941576108d97f175c6ac5f2b7707eed8a6bc39bbfa3ab29efa4ba452cbfa388076bf7602bc59260001b6100bf565b6109057fabc11a964d1f3be9f81efe2323761e9b8e8d415b1a50478efe8352de3f0ebdb160001b6100bf565b6109317f600e9c9edd740e3ffd1802210c1dc3fd9afef6096412cc6f052ab87a7cfafeb960001b6100bf565b61093c8c8e8c610dc0565b61096e565b61096d7f327471a17357f64060089bf7297ca472e49f42b74bfc1cee803c87d332e1af4d60001b6100bf565b5b6109a0565b61099f7f20e838df38ed8c481a03af7710a277688a1670209e33413e51a7ad421b0e13e160001b6100bf565b5b6109cc7f8c97fa1328182c76eb48dd92f82c6aba1886e7579d78d7601337a86b4d0e158560001b6100bf565b6109f87f9c93f533288d96c5b41c19f3d05eeb6b2782f4100c6b43675e527f951b3bc69b60001b6100bf565b8d7f03196b76502b81bbf14393f8b5ed67dff323f1f86667b064820f1fdf293686a18e8e8e8e8e8e898b8a604051610a3899989796959493929190611ba4565b60405180910390a2610a6c7fa9666af21a8daf50d2a9834c0ef7dd81941b585022cd2a2906833e819daf1dca60001b6100bf565b610a987fb9d26b7825754f5fb0c13d747a20df1aa4fba7777fa4efbc4a874eba4362c4ee60001b6100bf565b828183965096509650505050509750975097945050505050565b6000610ae07fb3ab0fd29525aa6d47be05ecca461b324b90fab99486115b61b2170a0812eb8260001b610f4c565b610b0c7f290ea3849dc8ae4a2034ce65d5cac6d2fa20f140019006dab1e0e1deeeb5fa9460001b610f4c565b610b387fe167fb1ea6b5c822a858dd848f0f0f12de27250930d40fc9d1987222b30cec9960001b610f4c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610b9b7f88531a7b4cef17eac9f40b3745aeef83247c3451bd6908558020024b85e21a9f60001b610f4c565b610bc77fe0c60eb8bd77fa19b9761a5aafbd3cf7c4e7b7ca65fc402d47e621541db8539b60001b610f4c565b610bf37f4def5aa3065f7b64068e41306d0f3f2585105bfb1a48f5f7a105d2a3cd2ab50a60001b610f4c565b610c1f7fba85a8411c04e0f33d16acdfc1a6563182d58d7026c797f8e7619538e1536ea460001b610f4c565b610c2883610ab2565b15610c68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5f90611d64565b60405180910390fd5b610c947ffa5820c4a62dc662b2f0bd3cd6eeb66381055a9aa2a0e4864b1e6fc18261169f60001b610f4c565b610cc07f0361bc3cfe3e9bcadc64d187a1d3fbd06766d28be4f6b3c8c0465a29db6e21c160001b610f4c565b610cec7f9c261609e22f2b2694170a2f19e32891e275a3243604d56d79bfec9123c0511d60001b610f4c565b610cf7838383610f4f565b505050565b600080823b905060008111915050919050565b610d3b7f6c297937993d9fc2ae1274b814c65be2673036707bcb5a4430a3fd94d81672c660001b610f4c565b610d677f7f83fecc65bfb90e884f9d4d4586d28279751b0abebb5ac5aa2c04ae73e3200b60001b610f4c565b610d937f6d22fc7c0920caf368c2fb277ea8b7f6c3bebb2980e1420dec5e149b2ed426c660001b610f4c565b610d9c83610ab2565b610db057610dab838383611070565b610dbb565b610dba8282611104565b5b505050565b610dec7faa80ec501b71eac9f1f97ad19807a884efc30ea9afda5afbb4ca0e638a5c8a4d60001b610f4c565b610e187f9ba8757127756d47970c2b41d5d9743876d2339d1ccf2f0515025c9e389ba89260001b610f4c565b610e437ee18b09bcef2348d360595697aaad03a2f84e39db3251694ee8084b1825cf5960001b610f4c565b610e6f7f0389a9d1caa07142f258162511f832eee07d99d37a01fb6b3ffe795d4bb546c960001b610f4c565b610e7883610ab2565b15610eb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaf90611d84565b60405180910390fd5b610ee47f9288fbb920b277df1a9d8ccae0430e2d40c7ca930768a207e7e35d81f179dc6560001b610f4c565b610f107fff6eba2f0b5d5d9069e4f762ba5ddd9fdb32def867c2bdaba049861fccb7514860001b610f4c565b610f3c7ff490cd139eaa740bc69995775768e6fed9ab0265d8f0e8533a2fa694073aabc460001b610f4c565b610f47838383611196565b505050565b50565b6000818473ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30866040518363ffffffff1660e01b8152600401610f8d929190611c32565b60206040518083038186803b158015610fa557600080fd5b505afa158015610fb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdd919061188c565b610fe79190611e47565b905061106a8463095ea7b360e01b8584604051602401611008929190611c5b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f7565b50505050565b61109c7f4c98f7dfeab084bdb3e7ec25ae64db41b39196635b39e87bc14152e0bc9d4ec060001b610f4c565b6110c87fdc6c99306d0b71f1ece8752419438092ca17ea1fd26a6825743f22d11fad8bac60001b610f4c565b6110f47f2cc3a860bf2e4e4f0de1bbf39a4e3c2e294f365fe1a55dc7d54b5a4e567448f260001b610f4c565b6110ff8383836113be565b505050565b6111307f03726f877c0bfac8e40c67233e702981ee5734eb72501c26673a15d0ff3ac68a60001b610f4c565b61115c7fc9d4c07f8bd2e7128ba53aba41b36f6b876898bb37a4ed57e7d1ff0893d62e2c60001b610f4c565b6111887f344429a208d7d186b5ac8df38e7af561c982adf2bc7d1639b8e6ce02698d14f860001b610f4c565b6111928282611444565b5050565b60008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b81526004016111d3929190611c32565b60206040518083038186803b1580156111eb57600080fd5b505afa1580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611223919061188c565b905081811015611268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125f90611ce4565b60405180910390fd5b600082820390506112f08563095ea7b360e01b868460405160240161128e929190611c5b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f7565b5050505050565b6000611359826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166115389092919063ffffffff16565b90506000815111156113b957808060200190518101906113799190611793565b6113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113af90611de4565b60405180910390fd5b5b505050565b61143f8363a9059cbb60e01b84846040516024016113dd929190611c5b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112f7565b505050565b80471015611487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147e90611d24565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516114ad90611b74565b60006040518083038185875af1925050503d80600081146114ea576040519150601f19603f3d011682016040523d82523d6000602084013e6114ef565b606091505b5050905080611533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152a90611d04565b60405180910390fd5b505050565b60606115478484600085611550565b90509392505050565b606082471015611595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158c90611d44565b60405180910390fd5b61159e85610cfc565b6115dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d490611dc4565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516116069190611b5d565b60006040518083038185875af1925050503d8060008114611643576040519150601f19603f3d011682016040523d82523d6000602084013e611648565b606091505b5091509150611658828286611664565b92505050949350505050565b60608315611674578290506116c4565b6000835111156116875782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bb9190611cc2565b60405180910390fd5b9392505050565b6000813590506116da8161218f565b92915050565b6000813590506116ef816121a6565b92915050565b600081519050611704816121bd565b92915050565b600081359050611719816121d4565b92915050565b60008083601f84011261173157600080fd5b8235905067ffffffffffffffff81111561174a57600080fd5b60208301915083600182028301111561176257600080fd5b9250929050565b600081359050611778816121eb565b92915050565b60008151905061178d816121eb565b92915050565b6000602082840312156117a557600080fd5b60006117b3848285016116f5565b91505092915050565b6000602082840312156117ce57600080fd5b60006117dc8482850161170a565b91505092915050565b600080600080600080600060c0888a03121561180057600080fd5b600061180e8a828b0161170a565b975050602061181f8a828b016116e0565b96505060406118308a828b016116cb565b95505060606118418a828b016116e0565b94505060806118528a828b01611769565b93505060a088013567ffffffffffffffff81111561186f57600080fd5b61187b8a828b0161171f565b925092505092959891949750929550565b60006020828403121561189e57600080fd5b60006118ac8482850161177e565b91505092915050565b6118be81611eaf565b82525050565b6118cd81611e9d565b82525050565b6118dc81611ec1565b82525050565b60006118ee8385611e1a565b93506118fb838584611f01565b61190483611f72565b840190509392505050565b600061191b8385611e2b565b9350611928838584611f01565b82840190509392505050565b600061193f82611e04565b6119498185611e1a565b9350611959818560208601611f10565b61196281611f72565b840191505092915050565b600061197882611e04565b6119828185611e2b565b9350611992818560208601611f10565b80840191505092915050565b60006119a982611e0f565b6119b38185611e36565b93506119c3818560208601611f10565b6119cc81611f72565b840191505092915050565b60006119e4602983611e36565b91506119ef82611f83565b604082019050919050565b6000611a07603a83611e36565b9150611a1282611fd2565b604082019050919050565b6000611a2a601d83611e36565b9150611a3582612021565b602082019050919050565b6000611a4d602683611e36565b9150611a588261204a565b604082019050919050565b6000611a70600783611e36565b9150611a7b82612099565b602082019050919050565b6000611a93600783611e36565b9150611a9e826120c2565b602082019050919050565b6000611ab6600883611e36565b9150611ac1826120eb565b602082019050919050565b6000611ad9600083611e2b565b9150611ae482612114565b600082019050919050565b6000611afc601d83611e36565b9150611b0782612117565b602082019050919050565b6000611b1f602a83611e36565b9150611b2a82612140565b604082019050919050565b611b3e81611ef7565b82525050565b6000611b5182848661190f565b91508190509392505050565b6000611b69828461196d565b915081905092915050565b6000611b7f82611acc565b9150819050919050565b6000602082019050611b9e60008301846118c4565b92915050565b600061010082019050611bba600083018c6118b5565b611bc7602083018b6118c4565b611bd4604083018a6118b5565b611be16060830189611b35565b8181036080830152611bf48187896118e2565b905081810360a0830152611c088186611934565b9050611c1760c08301856118d3565b611c2460e08301846118d3565b9a9950505050505050505050565b6000604082019050611c4760008301856118c4565b611c5460208301846118c4565b9392505050565b6000604082019050611c7060008301856118c4565b611c7d6020830184611b35565b9392505050565b6000606082019050611c9960008301866118d3565b611ca660208301856118d3565b8181036040830152611cb88184611934565b9050949350505050565b60006020820190508181036000830152611cdc818461199e565b905092915050565b60006020820190508181036000830152611cfd816119d7565b9050919050565b60006020820190508181036000830152611d1d816119fa565b9050919050565b60006020820190508181036000830152611d3d81611a1d565b9050919050565b60006020820190508181036000830152611d5d81611a40565b9050919050565b60006020820190508181036000830152611d7d81611a63565b9050919050565b60006020820190508181036000830152611d9d81611a86565b9050919050565b60006020820190508181036000830152611dbd81611aa9565b9050919050565b60006020820190508181036000830152611ddd81611aef565b9050919050565b60006020820190508181036000830152611dfd81611b12565b9050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611e5282611ef7565b9150611e5d83611ef7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e9257611e91611f43565b5b828201905092915050565b6000611ea882611ed7565b9050919050565b6000611eba82611ed7565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611f2e578082015181840152602081019050611f13565b83811115611f3d576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f5361666545524332303a2064656372656173656420616c6c6f77616e6365206260008201527f656c6f77207a65726f0000000000000000000000000000000000000000000000602082015250565b7f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260008201527f6563697069656e74206d61792068617665207265766572746564000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e6365000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f2349413a30333400000000000000000000000000000000000000000000000000600082015250565b7f2344413a30333400000000000000000000000000000000000000000000000000600082015250565b7f234f544d3a303237000000000000000000000000000000000000000000000000600082015250565b50565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61219881611e9d565b81146121a357600080fd5b50565b6121af81611eaf565b81146121ba57600080fd5b50565b6121c681611ec1565b81146121d157600080fd5b50565b6121dd81611ecd565b81146121e857600080fd5b50565b6121f481611ef7565b81146121ff57600080fd5b5056fea2646970667358221220f846f935dfbd470e4ccc90b54a57e0b872b8420f22581a46d111df8fd79f1a7c64736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
