/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b2c380380610b2c83398101604081905261002f91610049565b600160005560601b6001600160601b031916608052610077565b60006020828403121561005a578081fd5b81516001600160a01b0381168114610070578182fd5b9392505050565b60805160601c610a9261009a600039600081816048015260a70152610a926000f3fe6080604052600436106100295760003560e01c806396f32fb81461002e578063cf9a360414610077575b600080fd5b34801561003a57600080fd5b506040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001681526020015b60405180910390f35b61008a610085366004610821565b610098565b60405161006e9291906109c6565b60006060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101045760405162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b60448201526064015b60405180910390fd5b6001600160a01b038716158061011f5761011f888a88610212565b600060608a3b1561019b578a6001600160a01b031683610140576000610142565b885b888860405161015292919061091e565b60006040518083038185875af1925050503d806000811461018f576040519150601f19603f3d011682016040523d82523d6000602084013e610194565b606091505b5090925090505b816101bb576101ab8a8a8a610262565b826101bb576101bb8a8c8a610286565b8b7fbf49bd2de448d90a19e0510ab1030fead50ebfc64a4f112ca42535ae79fbab798c8c8c8c8c8c888a6040516101f998979695949392919061094a565b60405180910390a2909b909a5098505050505050505050565b6001600160a01b0383166102525760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b60448201526064016100fb565b61025d8383836102d1565b505050565b6001600160a01b0383161561027c5761025d8383836103cb565b61025d82826103d6565b6001600160a01b0383166102c65760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b60448201526064016100fb565b61025d838383610463565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906108da565b61035f91906109f4565b6040516001600160a01b0385166024820152604481018290529091506103c590859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610585565b50505050565b61025d838383610657565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610423576040519150601f19603f3d011682016040523d82523d6000602084013e610428565b606091505b505090508061025d5760405162461bcd60e51b8152602060048201526007602482015266046a88a746064760cb1b60448201526064016100fb565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e691906108da565b90508181101561054a5760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016100fb565b6040516001600160a01b0384166024820152828203604482018190529061057e90869063095ea7b360e01b9060640161038e565b5050505050565b60006105da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106879092919063ffffffff16565b80519091501561025d57808060200190518101906105f89190610801565b61025d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100fb565b6040516001600160a01b03831660248201526044810182905261025d90849063a9059cbb60e01b9060640161038e565b606061069684846000856106a0565b90505b9392505050565b6060824710156107015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100fb565b843b61074f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100fb565b600080866001600160a01b0316858760405161076b919061092e565b60006040518083038185875af1925050503d80600081146107a8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ad565b606091505b50915091506107bd8282866107c8565b979650505050505050565b606083156107d7575081610699565b8251156107e75782518084602001fd5b8160405162461bcd60e51b81526004016100fb91906109e1565b600060208284031215610812578081fd5b81518015158114610699578182fd5b600080600080600080600060c0888a03121561083b578283fd5b87359650602088013561084d81610a44565b9550604088013561085d81610a44565b9450606088013561086d81610a44565b93506080880135925060a088013567ffffffffffffffff80821115610890578384fd5b818a0191508a601f8301126108a3578384fd5b8135818111156108b1578485fd5b8b60208285010111156108c2578485fd5b60208301945080935050505092959891949750929550565b6000602082840312156108eb578081fd5b5051919050565b6000815180845261090a816020860160208601610a18565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b60008251610940818460208701610a18565b9190910192915050565b6001600160a01b0389811682528881166020830152871660408201526060810186905260e0608082018190528101849052600061010085878285013781818785010152601f19601f8701168301818482030160a08501526109ad828201876108f2565b9250505082151560c08301529998505050505050505050565b821515815260406020820152600061069660408301846108f2565b60208152600061069960208301846108f2565b60008219821115610a1357634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610a33578181015183820152602001610a1b565b838111156103c55750506000910152565b6001600160a01b0381168114610a5957600080fd5b5056fea26469706673582212207dcb6d25582175aa0de0bf19a5491df08cef8c3fb69816a9b1ea42f7e568f36664736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
