/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FulfillInterpreter, FulfillInterpreterInterface } from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b50380380610b5083398101604081905261002f91610049565b600160005560601b6001600160601b031916608052610077565b60006020828403121561005a578081fd5b81516001600160a01b0381168114610070578182fd5b9392505050565b60805160601c610ab661009a60003960008181603d015260f50152610ab66000f3fe6080604052600436106100295760003560e01c806396f32fb81461002e578063cf9a360414610078575b600080fd5b34801561003a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006040516001600160a01b03909116815260200160405180910390f35b61008b610086366004610860565b61008d565b005b600260005414156100e55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600055336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461014d5760405162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b60448201526064016100dc565b6001600160a01b038516158061016857610168868886610251565b600080886001600160a01b031683610181576000610183565b865b868660405161019392919061095d565b60006040518083038185875af1925050503d80600081146101d0576040519150601f19603f3d011682016040523d82523d6000602084013e6101d5565b606091505b5091509150816101fa576101ea8888886102a1565b826101fa576101fa888a886102c5565b897fbf49bd2de448d90a19e0510ab1030fead50ebfc64a4f112ca42535ae79fbab798a8a8a8a8a8a888a604051610238989796959493929190610989565b60405180910390a2505060016000555050505050505050565b6001600160a01b0383166102915760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b60448201526064016100dc565b61029c838383610310565b505050565b6001600160a01b038316156102bb5761029c83838361040a565b61029c8282610415565b6001600160a01b0383166103055760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b60448201526064016100dc565b61029c8383836104a2565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561035c57600080fd5b505afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610919565b61039e9190610a18565b6040516001600160a01b03851660248201526044810182905290915061040490859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526105c4565b50505050565b61029c838383610696565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610462576040519150601f19603f3d011682016040523d82523d6000602084013e610467565b606091505b505090508061029c5760405162461bcd60e51b8152602060048201526007602482015266046a88a746064760cb1b60448201526064016100dc565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156104ed57600080fd5b505afa158015610501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105259190610919565b9050818110156105895760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016100dc565b6040516001600160a01b038416602482015282820360448201819052906105bd90869063095ea7b360e01b906064016103cd565b5050505050565b6000610619826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106c69092919063ffffffff16565b80519091501561029c57808060200190518101906106379190610840565b61029c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100dc565b6040516001600160a01b03831660248201526044810182905261029c90849063a9059cbb60e01b906064016103cd565b60606106d584846000856106df565b90505b9392505050565b6060824710156107405760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100dc565b843b61078e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100dc565b600080866001600160a01b031685876040516107aa919061096d565b60006040518083038185875af1925050503d80600081146107e7576040519150601f19603f3d011682016040523d82523d6000602084013e6107ec565b606091505b50915091506107fc828286610807565b979650505050505050565b606083156108165750816106d8565b8251156108265782518084602001fd5b8160405162461bcd60e51b81526004016100dc9190610a05565b600060208284031215610851578081fd5b815180151581146106d8578182fd5b600080600080600080600060c0888a03121561087a578283fd5b87359650602088013561088c81610a68565b9550604088013561089c81610a68565b945060608801356108ac81610a68565b93506080880135925060a088013567ffffffffffffffff808211156108cf578384fd5b818a0191508a601f8301126108e2578384fd5b8135818111156108f0578485fd5b8b6020828501011115610901578485fd5b60208301945080935050505092959891949750929550565b60006020828403121561092a578081fd5b5051919050565b60008151808452610949816020860160208601610a3c565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b6000825161097f818460208701610a3c565b9190910192915050565b6001600160a01b0389811682528881166020830152871660408201526060810186905260e0608082018190528101849052600061010085878285013781818785010152601f19601f8701168301818482030160a08501526109ec82820187610931565b9250505082151560c08301529998505050505050505050565b6020815260006106d86020830184610931565b60008219821115610a3757634e487b7160e01b81526011600452602481fd5b500190565b60005b83811015610a57578181015183820152602001610a3f565b838111156104045750506000910152565b6001600160a01b0381168114610a7d57600080fd5b5056fea26469706673582212201349838c946c3372a6f902d5ce4c3de4da0e53a424473c0fcffa9d46c1e1c59c64736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<FulfillInterpreter> {
    return super.deploy(transactionManager, overrides || {}) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
