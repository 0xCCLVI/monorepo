/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FulfillInterpreter,
  FulfillInterpreterInterface,
} from "../FulfillInterpreter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "transactionManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "transactionId",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "callTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetId",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "fallbackAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610af3380380610af383398101604081905261002f91610049565b600160005560601b6001600160601b031916608052610077565b60006020828403121561005a578081fd5b81516001600160a01b0381168114610070578182fd5b9392505050565b60805160601c610a5961009a60003960008181603d015260980152610a596000f3fe6080604052600436106100295760003560e01c806396f32fb81461002e578063cf9a360414610078575b600080fd5b34801561003a57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006040516001600160a01b03909116815260200160405180910390f35b61008b610086366004610803565b61008d565b005b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100f55760405162461bcd60e51b8152602060048201526008602482015267234f544d3a30323760c01b60448201526064015b60405180910390fd5b6001600160a01b0385161580610110576101108688866101f4565b600080886001600160a01b03168361012957600061012b565b865b868660405161013b929190610900565b60006040518083038185875af1925050503d8060008114610178576040519150601f19603f3d011682016040523d82523d6000602084013e61017d565b606091505b5091509150816101a257610192888888610244565b826101a2576101a2888a88610268565b897fbf49bd2de448d90a19e0510ab1030fead50ebfc64a4f112ca42535ae79fbab798a8a8a8a8a8a888a6040516101e098979695949392919061092c565b60405180910390a250505050505050505050565b6001600160a01b0383166102345760405162461bcd60e51b815260206004820152600760248201526608d2504e8c0ccd60ca1b60448201526064016100ec565b61023f8383836102b3565b505050565b6001600160a01b0383161561025e5761023f8383836103ad565b61023f82826103b8565b6001600160a01b0383166102a85760405162461bcd60e51b815260206004820152600760248201526608d1104e8c0ccd60ca1b60448201526064016100ec565b61023f838383610445565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156102ff57600080fd5b505afa158015610313573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033791906108bc565b61034191906109bb565b6040516001600160a01b0385166024820152604481018290529091506103a790859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610567565b50505050565b61023f838383610639565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610405576040519150601f19603f3d011682016040523d82523d6000602084013e61040a565b606091505b505090508061023f5760405162461bcd60e51b8152602060048201526007602482015266046a88a746064760cb1b60448201526064016100ec565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561049057600080fd5b505afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c891906108bc565b90508181101561052c5760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016100ec565b6040516001600160a01b0384166024820152828203604482018190529061056090869063095ea7b360e01b90606401610370565b5050505050565b60006105bc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106699092919063ffffffff16565b80519091501561023f57808060200190518101906105da91906107e3565b61023f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100ec565b6040516001600160a01b03831660248201526044810182905261023f90849063a9059cbb60e01b90606401610370565b60606106788484600085610682565b90505b9392505050565b6060824710156106e35760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100ec565b843b6107315760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100ec565b600080866001600160a01b0316858760405161074d9190610910565b60006040518083038185875af1925050503d806000811461078a576040519150601f19603f3d011682016040523d82523d6000602084013e61078f565b606091505b509150915061079f8282866107aa565b979650505050505050565b606083156107b957508161067b565b8251156107c95782518084602001fd5b8160405162461bcd60e51b81526004016100ec91906109a8565b6000602082840312156107f4578081fd5b8151801515811461067b578182fd5b600080600080600080600060c0888a03121561081d578283fd5b87359650602088013561082f81610a0b565b9550604088013561083f81610a0b565b9450606088013561084f81610a0b565b93506080880135925060a088013567ffffffffffffffff80821115610872578384fd5b818a0191508a601f830112610885578384fd5b813581811115610893578485fd5b8b60208285010111156108a4578485fd5b60208301945080935050505092959891949750929550565b6000602082840312156108cd578081fd5b5051919050565b600081518084526108ec8160208601602086016109df565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b600082516109228184602087016109df565b9190910192915050565b6001600160a01b0389811682528881166020830152871660408201526060810186905260e0608082018190528101849052600061010085878285013781818785010152601f19601f8701168301818482030160a085015261098f828201876108d4565b9250505082151560c08301529998505050505050505050565b60208152600061067b60208301846108d4565b600082198211156109da57634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156109fa5781810151838201526020016109e2565b838111156103a75750506000910152565b6001600160a01b0381168114610a2057600080fd5b5056fea26469706673582212202a558bc19ac2f8613baf0c76b8b457e8dad53775ecdfd0f3891e674bdc93e2cc64736f6c63430008040033";

export class FulfillInterpreter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FulfillInterpreter> {
    return super.deploy(
      transactionManager,
      overrides || {}
    ) as Promise<FulfillInterpreter>;
  }
  getDeployTransaction(
    transactionManager: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(transactionManager, overrides || {});
  }
  attach(address: string): FulfillInterpreter {
    return super.attach(address) as FulfillInterpreter;
  }
  connect(signer: Signer): FulfillInterpreter__factory {
    return super.connect(signer) as FulfillInterpreter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FulfillInterpreterInterface {
    return new utils.Interface(_abi) as FulfillInterpreterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FulfillInterpreter {
    return new Contract(address, _abi, signerOrProvider) as FulfillInterpreter;
  }
}
