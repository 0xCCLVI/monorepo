/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestStableSwap,
  TestStableSwapInterface,
} from "../TestStableSwap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "assetA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seedA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seedB",
        type: "uint256",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "Swapped",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "assetA",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "seedA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "seedB",
        type: "uint256",
      },
    ],
    name: "setupPool",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetOut",
        type: "address",
      },
    ],
    name: "swapExact",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061095e806100206000396000f3fe60806040526004361061002a5760003560e01c8063c05b327514610033578063d5914c451461004657005b3661003157005b005b6100316100413660046107f4565b61006b565b610059610054366004610836565b6101aa565b60405190815260200160405180910390f35b6001600160a01b0380851660008181526020819052604080822080549488166001600160a01b0319958616811790915582529020805490921681179091556100ef578134146100ea5760405162461bcd60e51b815260206004820152600660248201526521736565644160d01b60448201526064015b60405180910390fd5b6100fb565b6100fb843330856103c6565b6001600160a01b038316610146578034146101415760405162461bcd60e51b815260206004820152600660248201526510b9b2b2b22160d11b60448201526064016100e1565b610152565b610152833330846103c6565b604080516001600160a01b03808716825285166020820152908101839052606081018290527fd569a23a8cff45c641c5d5e4fb55b5e15e918f9acf0fc42b4909adc31f5f806c9060800160405180910390a150505050565b6001600160a01b0382811660009081526020819052604081205490918381169116146102015760405162461bcd60e51b815260206004820152600660248201526502173657475760d41b60448201526064016100e1565b6001600160a01b038216158015610250578447101561024b5760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6102f1565b6040516370a0823160e01b815230600482015285906001600160a01b038516906370a0823190602401602060405180830381865afa158015610296573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ba9190610872565b10156102f15760405162461bcd60e51b81526004016100e1906020808252600490820152630858985b60e21b604082015260600190565b6001600160a01b03841661033c578434146103375760405162461bcd60e51b81526004016100e190602080825260049082015263085d985b60e21b604082015260600190565b610348565b610348843330886103c6565b801561035d576103583386610437565b610368565b610368833387610555565b604080516001600160a01b03808716825285166020820152908101869052606081018690527fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb9060800160405180910390a1849150505b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104319085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610585565b50505050565b804710156104875760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016100e1565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b50509050806105505760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016100e1565b505050565b6040516001600160a01b03831660248201526044810182905261055090849063a9059cbb60e01b906064016103fa565b60006105da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106579092919063ffffffff16565b80519091501561055057808060200190518101906105f8919061088b565b6105505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016100e1565b6060610666848460008561066e565b949350505050565b6060824710156106cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016100e1565b6001600160a01b0385163b6107265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100e1565b600080866001600160a01b0316858760405161074291906108d9565b60006040518083038185875af1925050503d806000811461077f576040519150601f19603f3d011682016040523d82523d6000602084013e610784565b606091505b509150915061079482828661079f565b979650505050505050565b606083156107ae5750816103bf565b8251156107be5782518084602001fd5b8160405162461bcd60e51b81526004016100e191906108f5565b80356001600160a01b03811681146107ef57600080fd5b919050565b6000806000806080858703121561080a57600080fd5b610813856107d8565b9350610821602086016107d8565b93969395505050506040820135916060013590565b60008060006060848603121561084b57600080fd5b8335925061085b602085016107d8565b9150610869604085016107d8565b90509250925092565b60006020828403121561088457600080fd5b5051919050565b60006020828403121561089d57600080fd5b815180151581146103bf57600080fd5b60005b838110156108c85781810151838201526020016108b0565b838111156104315750506000910152565b600082516108eb8184602087016108ad565b9190910192915050565b60208152600082518060208401526109148160408501602087016108ad565b601f01601f1916919091016040019291505056fea26469706673582212209381edb5260df5480e9c37ea900968db9a53d45f6aece144dca734248717e86f64736f6c634300080b0033";

type TestStableSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestStableSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestStableSwap__factory extends ContractFactory {
  constructor(...args: TestStableSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestStableSwap";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestStableSwap> {
    return super.deploy(overrides || {}) as Promise<TestStableSwap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestStableSwap {
    return super.attach(address) as TestStableSwap;
  }
  connect(signer: Signer): TestStableSwap__factory {
    return super.connect(signer) as TestStableSwap__factory;
  }
  static readonly contractName: "TestStableSwap";
  public readonly contractName: "TestStableSwap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestStableSwapInterface {
    return new utils.Interface(_abi) as TestStableSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestStableSwap {
    return new Contract(address, _abi, signerOrProvider) as TestStableSwap;
  }
}
