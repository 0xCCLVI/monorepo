/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ConnextPriceOracle,
  ConnextPriceOracleInterface,
} from "../ConnextPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wrapped",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "AggregatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "DirectPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "PriceRecordUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "aggregators",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromChainlink",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromDex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getPriceFromOracle",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getTokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceRecords",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "sources",
        type: "address[]",
      },
    ],
    name: "setAggregators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_active",
        type: "bool",
      },
    ],
    name: "setDexPriceInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setDirectPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapped",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161104138038061104183398101604081905261002f9161005d565b600180546001600160a01b039092166001600160a01b0319928316179055600080549091163317905561008d565b60006020828403121561006f57600080fd5b81516001600160a01b038116811461008657600080fd5b9392505050565b610fa58061009c6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80635e9a523c1161008c578063856d562d11610066578063856d562d14610202578063a2a870a914610215578063d02641a014610292578063f851a440146102a557600080fd5b80635e9a523c146101b757806366331bba146101d7578063704b6c02146101ef57600080fd5b80633f9fb505116100c85780633f9fb5051461015d5780634c8e42a11461017057806350e70d4814610191578063538e573c146101a457600080fd5b806309a8acb0146100ef578063112cdab9146101045780631994b4fd1461014a575b600080fd5b6101026100fd366004610be2565b6102b8565b005b61012d610112366004610c0c565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b610102610158366004610c27565b61038b565b61010261016b366004610cce565b6104f6565b61018361017e366004610c0c565b610698565b604051908152602001610141565b60015461012d906001600160a01b031681565b6101836101b2366004610c0c565b610942565b6101836101c5366004610c0c565b60046020526000908152604090205481565b6101df600181565b6040519015158152602001610141565b6101026101fd366004610c0c565b610955565b610183610210366004610c0c565b610a10565b61025d610223366004610c0c565b6003602052600090815260409020805460018201546002909201546001600160a01b0391821692821691811690600160a01b900460ff1684565b60405161014194939291906001600160a01b039485168152928416602084015292166040820152901515606082015260800190565b6101836102a0366004610c0c565b610b46565b60005461012d906001600160a01b031681565b6000546001600160a01b031633146103175760405162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061646d696e2063616e20736574206469726563742070726963650060448201526064015b60405180910390fd5b6001600160a01b0382166000818152600460209081526040918290205482519384529083015281018290527fe2c8fb681c257e4e8df5ef1c464cff10ce6b072837628c9b6de5e7239a483e5d9060600160405180910390a16001600160a01b03909116600090815260046020526040902055565b6000546001600160a01b031633146103e55760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c792061646d696e2063616e207365742044455820707269636500000000604482015260640161030e565b6001600160a01b03841660009081526003602052604081209061040785610942565b90506000811161044e5760405162461bcd60e51b815260206004820152601260248201527134b73b30b634b2103130b9b2903a37b5b2b760711b604482015260640161030e565b81546001600160a01b038781166001600160a01b031992831681178555600185018054898416941684179055600285018054871515600160a01b81026001600160a81b0319909216948a16948517919091179091556040805192835260208301949094529281019190915260608101919091527f896c992bf7fd70df3a83c741812b6b20c1da89e5efeaefa1fde40987c7e91a129060800160405180910390a1505050505050565b6000546001600160a01b0316331461055f5760405162461bcd60e51b815260206004820152602660248201527f6f6e6c79207468652061646d696e206d617920736574207468652061676772656044820152656761746f727360d01b606482015260840161030e565b60005b838110156106915782828281811061057c5761057c610d3a565b90506020020160208101906105919190610c0c565b600260008787858181106105a7576105a7610d3a565b90506020020160208101906105bc9190610c0c565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b031916929091169190911790557f89baabef7dfd0683c0ac16fd2a8431c51b49fbe654c3f7b5ef19763e2ccd88f285858381811061062057610620610d3a565b90506020020160208101906106359190610c0c565b84848481811061064757610647610d3a565b905060200201602081019061065c9190610c0c565b604080516001600160a01b0393841681529290911660208301520160405180910390a18061068981610d66565b915050610562565b5050505050565b6001600160a01b03811660009081526003602052604081206002810154600160a01b900460ff161561093957805460028201546040516370a0823160e01b81526001600160a01b03918216600482015260009291909116906370a0823190602401602060405180830381865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610d81565b905060008260000160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610793573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b79190610d9a565b6107c59060ff166012610dbd565b905060006107de6107d783600a610eb8565b8490610ba5565b600185015460028601546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190610d81565b905060008560010160009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d59190610d9a565b6108e39060ff166012610dbd565b905060006108f56107d783600a610eb8565b6001880154909150600090610912906001600160a01b0316610942565b9050600061092a866109248486610ba5565b90610bba565b9b9a5050505050505050505050565b50600092915050565b60008061094e83610a10565b9392505050565b6000546001600160a01b031633146109af5760405162461bcd60e51b815260206004820152601c60248201527f6f6e6c792061646d696e2063616e20736574206e65772061646d696e00000000604482015260640161030e565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a15050565b6001600160a01b038082166000908152600260205260408120549091168015610939576000816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610a73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a979190610ede565b5050509150508060001415610ab0575060009392505050565b60008190506000610b3c846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c9190610d9a565b610b2a9060ff166012610dbd565b610b3590600a610eb8565b8390610ba5565b9695505050505050565b6000816001600160a01b038116610b6557506001546001600160a01b03165b6001600160a01b03811660009081526004602052604090205480610b8f57610b8c82610942565b90505b8061094e57610b9d82610698565b949350505050565b6000610bb18284610f2e565b90505b92915050565b6000610bb18284610f4d565b80356001600160a01b0381168114610bdd57600080fd5b919050565b60008060408385031215610bf557600080fd5b610bfe83610bc6565b946020939093013593505050565b600060208284031215610c1e57600080fd5b610bb182610bc6565b60008060008060808587031215610c3d57600080fd5b610c4685610bc6565b9350610c5460208601610bc6565b9250610c6260408601610bc6565b915060608501358015158114610c7757600080fd5b939692955090935050565b60008083601f840112610c9457600080fd5b50813567ffffffffffffffff811115610cac57600080fd5b6020830191508360208260051b8501011115610cc757600080fd5b9250929050565b60008060008060408587031215610ce457600080fd5b843567ffffffffffffffff80821115610cfc57600080fd5b610d0888838901610c82565b90965094506020870135915080821115610d2157600080fd5b50610d2e87828801610c82565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610d7a57610d7a610d50565b5060010190565b600060208284031215610d9357600080fd5b5051919050565b600060208284031215610dac57600080fd5b815160ff8116811461094e57600080fd5b600082821015610dcf57610dcf610d50565b500390565b600181815b80851115610e0f578160001904821115610df557610df5610d50565b80851615610e0257918102915b93841c9390800290610dd9565b509250929050565b600082610e2657506001610bb4565b81610e3357506000610bb4565b8160018114610e495760028114610e5357610e6f565b6001915050610bb4565b60ff841115610e6457610e64610d50565b50506001821b610bb4565b5060208310610133831016604e8410600b8410161715610e92575081810a610bb4565b610e9c8383610dd4565b8060001904821115610eb057610eb0610d50565b029392505050565b6000610bb18383610e17565b805169ffffffffffffffffffff81168114610bdd57600080fd5b600080600080600060a08688031215610ef657600080fd5b610eff86610ec4565b9450602086015193506040860151925060608601519150610f2260808701610ec4565b90509295509295909350565b6000816000190483118215151615610f4857610f48610d50565b500290565b600082610f6a57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204a4162f0fd6722008d578b84375431c06f1acd031ad1cd60a5f5253d111d63a364736f6c634300080b0033";

type ConnextPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnextPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnextPriceOracle__factory extends ContractFactory {
  constructor(...args: ConnextPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ConnextPriceOracle";
  }

  deploy(
    _wrapped: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnextPriceOracle> {
    return super.deploy(
      _wrapped,
      overrides || {}
    ) as Promise<ConnextPriceOracle>;
  }
  getDeployTransaction(
    _wrapped: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_wrapped, overrides || {});
  }
  attach(address: string): ConnextPriceOracle {
    return super.attach(address) as ConnextPriceOracle;
  }
  connect(signer: Signer): ConnextPriceOracle__factory {
    return super.connect(signer) as ConnextPriceOracle__factory;
  }
  static readonly contractName: "ConnextPriceOracle";
  public readonly contractName: "ConnextPriceOracle";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnextPriceOracleInterface {
    return new utils.Interface(_abi) as ConnextPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnextPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as ConnextPriceOracle;
  }
}
